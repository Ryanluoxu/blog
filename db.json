{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/BC_showcase_1.jpeg","path":"images/BC_showcase_1.jpeg","modified":0,"renderable":0},{"_id":"source/images/Git 周期.png","path":"images/Git 周期.png","modified":0,"renderable":0},{"_id":"source/images/IO-stream.jpg","path":"images/IO-stream.jpg","modified":0,"renderable":0},{"_id":"source/images/get-uses.png","path":"images/get-uses.png","modified":0,"renderable":0},{"_id":"source/images/ng-model.png","path":"images/ng-model.png","modified":0,"renderable":0},{"_id":"source/images/ngspringboot-structure.png","path":"images/ngspringboot-structure.png","modified":0,"renderable":0},{"_id":"source/images/post-add-user.png","path":"images/post-add-user.png","modified":0,"renderable":0},{"_id":"source/images/post-result.png","path":"images/post-result.png","modified":0,"renderable":0},{"_id":"source/images/put-result.png","path":"images/put-result.png","modified":0,"renderable":0},{"_id":"source/images/put-update-user.png","path":"images/put-update-user.png","modified":0,"renderable":0},{"_id":"source/images/random-image.jpeg","path":"images/random-image.jpeg","modified":0,"renderable":0},{"_id":"source/images/smart_contract_demo1.png","path":"images/smart_contract_demo1.png","modified":0,"renderable":0},{"_id":"source/images/smart_contract_demo2.png","path":"images/smart_contract_demo2.png","modified":0,"renderable":0},{"_id":"source/images/spring-init.png","path":"images/spring-init.png","modified":0,"renderable":0},{"_id":"source/images/springboot-structure.png","path":"images/springboot-structure.png","modified":0,"renderable":0},{"_id":"source/images/users-table.png","path":"images/users-table.png","modified":0,"renderable":0},{"_id":"source/images/博客主页下方访问量.png","path":"images/博客主页下方访问量.png","modified":0,"renderable":0},{"_id":"source/images/文章页面访问量.png","path":"images/文章页面访问量.png","modified":0,"renderable":0},{"_id":"source/images/本地修改-github的流程图.jpg","path":"images/本地修改-github的流程图.jpg","modified":0,"renderable":0},{"_id":"source/images/添加页面之前.png","path":"images/添加页面之前.png","modified":0,"renderable":0},{"_id":"source/images/tsp_flow.jpeg","path":"images/tsp_flow.jpeg","modified":0,"renderable":0},{"_id":"source/images/添加页面之后.png","path":"images/添加页面之后.png","modified":0,"renderable":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"source/images/SQuirreL-SQL-Client.png","path":"images/SQuirreL-SQL-Client.png","modified":0,"renderable":0},{"_id":"source/images/微信打赏.png","path":"images/微信打赏.png","modified":0,"renderable":0},{"_id":"source/images/Git introduction for CVS_SVN_TFS users.png","path":"images/Git introduction for CVS_SVN_TFS users.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar1.JPG","path":"images/avatar1.JPG","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"32b8dc37627feb2117e5f8ab7c6303ce397d807d","modified":1591445348055},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1588238599560},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1588238599561},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1588238599561},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1588238599561},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1588238599561},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1588238599561},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1588238599561},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1588238599561},{"_id":"themes/next/README.cn.md","hash":"419b60d064a4ac66565ddeec1be55802acf68c8b","modified":1588238599562},{"_id":"themes/next/README.md","hash":"631d68e9cbced2f11cd976bf883b7d8b08b9b365","modified":1588238599562},{"_id":"themes/next/_config.yml","hash":"86324046c763596906f47bf212a70cb4bf04f15f","modified":1588238599562},{"_id":"themes/next/bower.json","hash":"47471a8f13528dc4052b746db5b4be2375682173","modified":1588238599562},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1588238599562},{"_id":"themes/next/package.json","hash":"39370e2aadf1f9a7c105edff064c6e47682b3932","modified":1588238599581},{"_id":"source/_posts/AngularJS-Learning.md","hash":"190ebeb3b05be9bc39ab8f9f72022505bf44f49f","modified":1588238599524},{"_id":"source/_posts/BlockChain-1-Smart-Contract.md","hash":"7bbcda01e8231d02792cdffccca37d7b5e5df6e4","modified":1588238599525},{"_id":"source/_posts/Array-Vector-Set-Map.md","hash":"62a7db9a0fb8d0381abf2d246609c62370beb15d","modified":1588242934459},{"_id":"source/_posts/AWS-Lambda-Pyhton-GMail-API.md","hash":"f395b8d507edef4547b4b6fc8b697b35e81989ad","modified":1589818514610},{"_id":"source/_posts/Clone-Blog-to-Ubuntu.md","hash":"b200f1f734d1b69e06760857ab8868db0a438022","modified":1588238599525},{"_id":"source/_posts/Blockchain-Demo-using-Java.md","hash":"804cff6ae1c9771b7ba39b0edd9c126bdbc52c3c","modified":1588239854521},{"_id":"source/_posts/Bootstrap-CheatSheet.md","hash":"821af4164ffb6624c25e9bf8a44f9a3592bcc8ed","modified":1588238599525},{"_id":"source/_posts/Database-PostgreSQL.md","hash":"633e7f010b961c9803fe288324463b71d8440a76","modified":1588238599526},{"_id":"source/_posts/Docker-Notes.md","hash":"adaaed4f6ec28366c057db62cffed4d207a967ae","modified":1588238599526},{"_id":"source/_posts/Date-Demo.md","hash":"91a05a85e31db9cee29a604cd6de8e35971b8448","modified":1588238599526},{"_id":"source/_posts/GC-垃圾回收机制.md","hash":"d48dd37e257ff96b31fa03d7c61ce9aef3dcde4e","modified":1588238599526},{"_id":"source/_posts/Git-学习笔记.md","hash":"d24799f54732459a4cb69ad1c24dd7140f287bc4","modified":1588238599527},{"_id":"source/_posts/Github-Learning.md","hash":"5fca60cf541e812c7850a277f39cfa8e99bd4bd9","modified":1588238599527},{"_id":"source/_posts/Hexo-Next-添加-Gitment-评论系统.md","hash":"b18dce76b253df9f2d9d59ac81ae5870fbfeda7f","modified":1588238599528},{"_id":"source/_posts/IO-Stream.md","hash":"4e96deeb2cd517e0ffc32c649ff9f49a0bd511e3","modified":1588238599528},{"_id":"source/_posts/JVM内存分析-stack-heap-and-method-area.md","hash":"4851db9c99a144620affdd84d0d938012931dbae","modified":1588238599528},{"_id":"source/_posts/JUnit-Beginner.md","hash":"b766e71a879ba6f9ce450487ea3c8cafcb1f6361","modified":1588238599528},{"_id":"source/_posts/Hexo-的-Next-主题优化.md","hash":"b65abb10b083eef0fcf018d46b7f5205ed501f07","modified":1588241745266},{"_id":"source/_posts/Java-Master-S10-AbstractClass.md","hash":"10862665707eda172a4502f224f65c2b7d19331d","modified":1588238599529},{"_id":"source/_posts/Java-Master-S10-Interface.md","hash":"7780d0203b0d66e4105f7e80490036a5f8821208","modified":1588238599529},{"_id":"source/_posts/Hanoi-Tower-汉诺塔-Python-示例.md","hash":"635feb8969dcbeb342e1b6daba83285af6b152b6","modified":1591273867010},{"_id":"source/_posts/Java-Master-S11-GenericsClass.md","hash":"99ce8576870ae9c9f87180767c2c9ef53c0221b7","modified":1588238599529},{"_id":"source/_posts/Java-Master-S9-LinkedList.md","hash":"b8ae4107a8eaaffc723926be5316790f8d84fe24","modified":1588238599529},{"_id":"source/_posts/Linux-Command.md","hash":"3e6eaab1f793601bb4e83d6f1459145c17bf11ef","modified":1588238599529},{"_id":"source/_posts/Linux-SSH-or-SCP-without-password.md","hash":"17a66ea0c0d25ad0dbcd07312fdb126d02b3107a","modified":1588238599530},{"_id":"source/_posts/Linux-vi-basic.md","hash":"1043be3244fc45d89f58c6a56a0f81a4ff1e5784","modified":1588238599530},{"_id":"source/_posts/Linux-Script-Menu-Template.md","hash":"b69eb21518533b30588d1619e2ab5490ab588803","modified":1588238599530},{"_id":"source/_posts/Ohm-0-Promo-Code-OHMREF5F498F.md","hash":"8caf9b4c53a8cb5990d76a7cd9c5b2410ee2d07a","modified":1588238599530},{"_id":"source/_posts/Notes-LinuxShellScriptsCookBook.md","hash":"92ed3abc02471b885f8f50dac4d33114db9ef05b","modified":1588238599530},{"_id":"source/_posts/Play-XML-with-Dom4j.md","hash":"e95aa6003d02f0a5968d7d9305b686990d7ed3de","modified":1588238599531},{"_id":"source/_posts/PostgreSQL-10-Windows-使用记录.md","hash":"74c59e71e246db907d305a72c6a042e3d8867f78","modified":1588238599531},{"_id":"source/_posts/Selenium-Simple-URL-Ping.md","hash":"cfec088760ad9914391c110013db2940129ba61d","modified":1588238599531},{"_id":"source/_posts/Servlet-Generate-Random-Image.md","hash":"9cad960fab8a70b91bbbcf61c936f5dc0f6fb47b","modified":1588238599531},{"_id":"source/_posts/hello-world.md","hash":"57ae3836fa45cc8413cab6e75a17533181e1c497","modified":1588238599531},{"_id":"source/_posts/编程入门指南.md","hash":"2de49c58fce9e35cb980985d59e10a2224a3a10c","modified":1588238599531},{"_id":"source/_posts/TSP问题-贪心算法-Python实现-算法分析.md","hash":"de953e9f610a8eb84f589ccef675ed0ad40515a8","modified":1591454423549},{"_id":"source/_posts/学习-Spring-Boot-1.md","hash":"39ed3847fcb37c6ee546060650115684e4eee304","modified":1588238599532},{"_id":"source/_posts/学习-Spring-Boot-2.md","hash":"39c21d5ba62c16563ab2428eff6a244abe2a0cfb","modified":1588238599532},{"_id":"source/_posts/数据结构01.md","hash":"914a68f60bfc08c9ac5e84a7c627666279d0558d","modified":1588238599532},{"_id":"source/_posts/简单的辅助程序.md","hash":"4c5e9a3553896e160426b1f6ecfc85dd462f0d1a","modified":1588238599532},{"_id":"source/_posts/用-Hexo-和-GitHub-Pages-搭建博客.md","hash":"a31b8360f1b6e16fee4bf361984fb16c4b656c2b","modified":1588238599532},{"_id":"source/_posts/黑马教程-Java-Web-Basic.md","hash":"b37ca1d4e717b69978b831b9904b5887f250a50c","modified":1588238599533},{"_id":"source/categories/index.md","hash":"869d3686dfdb5b31ebbcfb276bfc86dbceabfe47","modified":1588238599533},{"_id":"source/images/BC_showcase_1.jpeg","hash":"7c94b0e0d7ba918624136e195b3bb23ec3818c32","modified":1588238599533},{"_id":"source/about/index.md","hash":"35eb1782d1fb6a3a09af483f687d02fbb49096b7","modified":1588242706811},{"_id":"source/images/Git 周期.png","hash":"555d38cbe559ca7c25fa3aa7632b4ae7aaa803d8","modified":1588238599535},{"_id":"source/images/IO-stream.jpg","hash":"17daf614a896aaff5cbb7ea7acdae4d365d15680","modified":1588238599535},{"_id":"source/images/get-uses.png","hash":"8d2d33bf3803ed830ec7c5d962e4f25125d4b5a5","modified":1588238599536},{"_id":"source/images/ng-model.png","hash":"2bdc1bcc83eb9bda7595ea62d29419d862140275","modified":1588238599536},{"_id":"source/images/ngspringboot-structure.png","hash":"379743cb36b99804da67b5270db444cbb28cf220","modified":1588238599536},{"_id":"source/images/post-add-user.png","hash":"edf886a4569ca4401cd67d0b8e3800e8e2e8a011","modified":1588238599537},{"_id":"source/images/post-result.png","hash":"e74415cfbf74598d08f84298e151ec15f8d958fe","modified":1588238599537},{"_id":"source/images/put-result.png","hash":"c36dd22715e4944e5dbb622b4da78f2316394dad","modified":1588238599538},{"_id":"source/images/put-update-user.png","hash":"6e896fb54a9a522c3b0ddb8c7ab4bbb9c981ddc3","modified":1588238599538},{"_id":"source/images/random-image.jpeg","hash":"d47bf147fd356bfb27185eda2ec5e457a2f83638","modified":1588238599538},{"_id":"source/images/smart_contract_demo1.png","hash":"a080246eceda6a8c91bc4f94d046c0bc3a9c76c5","modified":1588238599539},{"_id":"source/images/smart_contract_demo2.png","hash":"5650bcf037e5ed665255b332a273b2c6e1ecfee3","modified":1588238599539},{"_id":"source/images/spring-init.png","hash":"59c50b73eb650c4ae6f69ed34046f1d737c6e469","modified":1588238599539},{"_id":"source/images/springboot-structure.png","hash":"5c53c21b0935da8956197af16f3e6d1c1a3c83d3","modified":1588238599540},{"_id":"source/images/users-table.png","hash":"fed43330de802b82229b09708695cbc6e43ac7d4","modified":1588238599540},{"_id":"source/images/博客主页下方访问量.png","hash":"3bf48207e8bb2d9d06c9419c6e2fd4286d39654b","modified":1588238599540},{"_id":"source/images/文章页面访问量.png","hash":"8048fe8990b0f8d2986ea12c773afa3ad2730bf1","modified":1588238599542},{"_id":"source/images/本地修改-github的流程图.jpg","hash":"31b712b04e9d9fce49a9410ffa3af9f4c438968b","modified":1588238599542},{"_id":"source/images/添加页面之前.png","hash":"20770002c8cb58c7d13f5a2dba421a86eafac261","modified":1588238599543},{"_id":"source/images/tsp_flow.jpeg","hash":"74de4245437b2d8aa552484f2fc65f483b24e781","modified":1591431453274},{"_id":"source/images/添加页面之后.png","hash":"476878b18ed681edad287402ebf5e914a8b58d04","modified":1588238599543},{"_id":"source/tags/index.md","hash":"2fdeb21af6d2c93eb0d44c5b89203f7fdb693201","modified":1588238599543},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1588238599562},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1588238599563},{"_id":"themes/next/languages/en.yml","hash":"ef2087ea9763d59a8df80aff38b81c1690ca59c4","modified":1588238599563},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1588238599563},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1588238599563},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1588238599563},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1588238599563},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1588238599563},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1588238599563},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1588238599564},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1588238599564},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1588238599564},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1588238599564},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1588238599564},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1588238599564},{"_id":"themes/next/layout/_layout.swig","hash":"fda8e25908c39d4654615cb3f1c67c2357e5927b","modified":1588238599565},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1588238599580},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1588238599580},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1588238599580},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1588238599580},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1588238599580},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1588238599580},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1588238599581},{"_id":"themes/next/scripts/merge-configs.js","hash":"5758f8f3f12d17bc80da65bb808a20b3a8aae186","modified":1588238599581},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1588238599582},{"_id":"themes/next/source/404.html","hash":"9eb955271b03c72a4bb23a06b60e4ecb4070a880","modified":1588238599583},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1588238599665},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1588238599665},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1588238599665},{"_id":"source/images/SQuirreL-SQL-Client.png","hash":"057f16503ac74ef7796c8904d393a048985539c5","modified":1588238599536},{"_id":"source/images/微信打赏.png","hash":"c5654874f5ac216552605ca02bdbbe206d16ae4a","modified":1588238599541},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588238599610},{"_id":"source/images/Git introduction for CVS_SVN_TFS users.png","hash":"d037a3f66532f01e087d870d0e6196027b1e4f8e","modified":1588238599534},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1588238599564},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1588238599565},{"_id":"themes/next/layout/_macro/my-copyright.swig","hash":"8fdea44ab659ec20227c002e5d3f1cc17197cc99","modified":1588238599565},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1588238599565},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1588238599565},{"_id":"themes/next/layout/_macro/post.swig","hash":"5eb134d1142d37cfe1ec41aab2efb900ae75a9f7","modified":1588238599565},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1588238599566},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"549060bb8d506271ddbe2ab050ed9dbb00d409ff","modified":1588238599566},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1588238599566},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1588238599566},{"_id":"themes/next/layout/_partials/footer.swig","hash":"26e93336dc57a39590ba8dc80564a1d2ad5ff93b","modified":1588241265229},{"_id":"themes/next/layout/_partials/head.swig","hash":"f14a39dad1ddd98e6d3ceb25dda092ba80d391b5","modified":1588238599566},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1588238599567},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1588238599567},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1588238599567},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1588238599567},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1588238599569},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1588238599569},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1588238599570},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1588238599577},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1588238599578},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1588238599578},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1588238599578},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1588238599578},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1588238599578},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1588238599579},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1588238599582},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1588238599582},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1588238599582},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1588238599582},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1588238599582},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1588238599582},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1588238599583},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1588238599583},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1588238599583},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1588238599610},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1588238599611},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1588238599610},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1588238599611},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1588238599614},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1588238599615},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1588238599615},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1588238599616},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1588238599616},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1588238599616},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1588238599616},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1588238599616},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1588238599617},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1588238599617},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1588238599617},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1588238599617},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1588238599617},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1588238599617},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588238599569},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588238599569},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588238599602},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588238599602},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588238599603},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588238599609},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588238599610},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1588238599616},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1588238599567},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1588238599567},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1588238599567},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1588238599567},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1588238599568},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1588238599568},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1588238599568},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1588238599568},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1588238599568},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1588238599569},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1588238599569},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1588238599569},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1588238599570},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1588238599570},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1588238599570},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1588238599570},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1588238599571},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1588238599571},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1588238599571},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1588238599573},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1588238599574},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1588238599574},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1588238599575},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1588238599575},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1588238599575},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1588238599576},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1588238599576},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1588238599576},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1588238599577},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1588238599577},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1588238599577},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1588238599577},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1588238599577},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1588238599579},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1588238599579},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1588238599580},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1588238599579},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"f2391fbe33abddff32ee42d01c99b6b572e977cc","modified":1588241510342},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1588238599602},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1588238599602},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1588238599602},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1588238599603},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1588238599609},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1588238599609},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1588238599610},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1588238599610},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1588238599618},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1588238599618},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1588238599618},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1588238599618},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1588238599618},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1588238599618},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1588238599619},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1588238599619},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1588238599619},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1588238599619},{"_id":"themes/next/source/js/src/utils.js","hash":"b7ddc240208d57596a67c78a04a11b0f0bdecc97","modified":1588238599620},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1588238599624},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1588238599626},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1588238599626},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1588238599627},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1588238599627},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1588238599631},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1588238599631},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1588238599632},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1588238599632},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1588238599634},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1588238599633},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1588238599634},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1588238599634},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1588238599635},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1588238599652},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1588238599654},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1588238599654},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1588238599655},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1588238599654},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1588238599655},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1588238599655},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1588238599656},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1588238599656},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1588238599656},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1588238599656},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1588238599656},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1588238599657},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1588238599657},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1588238599657},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1588238599657},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1588238599657},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1588238599657},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1588238599657},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1588238599657},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1588238599658},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1588238599658},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1588238599658},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1588238599658},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1588238599659},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1588238599658},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1588238599659},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1588238599662},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1588238599662},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1588238599663},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1588238599664},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1588238599665},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1588238599579},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1588238599579},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1588238599583},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1588238599584},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1588238599584},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1588238599584},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"769a10b7ba0c832aa374cb9a96052d8894274be9","modified":1588238599584},{"_id":"themes/next/source/css/_common/components/gitment.styl","hash":"854c4002af8a1fab99754ba9f552acc7cd7c4772","modified":1588238599584},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1588238599588},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1588238599595},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1588238599600},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1588238599601},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1588238599601},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1588238599601},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1588238599601},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1588238599601},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1588238599602},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1588238599603},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1588238599604},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1588238599603},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1588238599604},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1588238599604},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1588238599605},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1588238599605},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1588238599603},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1588238599605},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1588238599606},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"a98ad885ee4f48d85b2578a0b9c2bbf166e96733","modified":1588238599606},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1588238599606},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1588238599606},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1588238599607},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1588238599608},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1588238599608},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1588238599608},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1588238599609},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"30561ed60fc64f3e4ce85143bdb55faa814743a6","modified":1588238599608},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1588238599619},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1588238599621},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1588238599623},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1588238599627},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1588238599627},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1588238599628},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1588238599627},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1588238599628},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1588238599628},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1588238599630},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1588238599630},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1588238599630},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1588238599633},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1588238599637},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1588238599638},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1588238599641},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1588238599653},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1588238599661},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1588238599662},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1588238599622},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1588238599633},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1588238599651},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1588238599663},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1588238599584},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1588238599585},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1588238599585},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1588238599585},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1588238599586},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1588238599586},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1588238599586},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1588238599587},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1588238599587},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1588238599586},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1588238599587},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1588238599587},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1588238599587},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1588238599588},{"_id":"themes/next/source/css/_common/components/post/my-post-copyright.styl","hash":"2d3682e711f6d625507af8b209ec3a913a955443","modified":1588238599589},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1588238599589},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1588238599589},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1588238599589},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1588238599589},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1588238599589},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1588238599590},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1588238599590},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1588238599591},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1588238599591},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1588238599591},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1588238599592},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1588238599592},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1588238599592},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1588238599593},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"d031dfc1bb56bfaab6fd0f6e1b25da6036d0e693","modified":1588238599593},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1588238599623},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1588238599593},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1588238599594},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1588238599594},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1588238599594},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1588238599594},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"28a8737c090fbffd188d73a00b42e90b9ee57df2","modified":1588238599595},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1588238599595},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1588238599595},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1588238599595},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1588238599598},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1588238599598},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1588238599598},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1588238599599},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1588238599599},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1588238599599},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1588238599599},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1588238599599},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1588238599600},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1588238599600},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1588238599596},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1588238599596},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1588238599596},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1588238599596},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1588238599597},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1588238599597},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1588238599597},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1588238599597},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1588238599597},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1588238599605},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1588238599605},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1588238599593},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1588238599607},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1588238599620},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1588238599620},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1588238599621},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1588238599621},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1588238599621},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1588238599628},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1588238599629},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1588238599629},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1588238599629},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1588238599629},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1588238599630},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1588238599650},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1588238599645},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1588238599644},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1588238599650},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1588238599626},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1588238599661},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1588238599646},{"_id":"themes/next/source/images/avatar1.JPG","hash":"3943789667803530d4deab7f5be86c7bb63ee0a2","modified":1588238599613},{"_id":"public/categories/index.html","hash":"e9a54b1dcce03e26d891f3a957e800d7e0143328","modified":1591454615573},{"_id":"public/about/index.html","hash":"c7ef0ccf0afff55e719795143333ec28e02c20b9","modified":1591454615574},{"_id":"public/categories/AngularJS/index.html","hash":"f6c5529bbb0303aa2c60a311847c569b876a858b","modified":1591454615574},{"_id":"public/categories/BlockChain/index.html","hash":"659fc73b5df4c8d6539bf44bffc6dc9c7c6643c1","modified":1591454615574},{"_id":"public/categories/Java-Basic/index.html","hash":"e71dbdbf222095e090f6594ff1d394a33b765e56","modified":1591454615574},{"_id":"public/categories/AWS/index.html","hash":"f0358e3612dfed40dddcab24a69572f3fa7119bc","modified":1591454615574},{"_id":"public/categories/搭建博客/index.html","hash":"025289c5bcbd30f4d8471f5bfe4ee73ee8477c26","modified":1591454615574},{"_id":"public/categories/FrontEnd/index.html","hash":"48f10dd3e36e8c8dfabf10c9a98e4e5d414acb88","modified":1591454615575},{"_id":"public/categories/Database/index.html","hash":"65d895d709050980c785c4e25eddfd278fff5cab","modified":1591454615575},{"_id":"public/categories/CICD/index.html","hash":"a24ff3ed84af3ca85455e9c3f0d680bc525d3995","modified":1591454615575},{"_id":"public/categories/Java/index.html","hash":"8f406268ae9655ff89e3ddf522f01a7fec0976cb","modified":1591454615575},{"_id":"public/categories/Git/index.html","hash":"a69e4981a6bedf5eda6c539c5805a5c7e611849a","modified":1591454615575},{"_id":"public/categories/JUnit/index.html","hash":"2e679a9fce6adc7def4f7bfb3282911c4bab0279","modified":1591454615575},{"_id":"public/categories/Java-Master-Course/index.html","hash":"f10f8d86bebe849b4950dcdd0be76f93c168b2f9","modified":1591454615575},{"_id":"public/categories/Python/index.html","hash":"a2771aefc885a9f543f4a07d2028ad3c477f87b5","modified":1591454615575},{"_id":"public/categories/Linux/index.html","hash":"7c2cdb0d8781af5e71a1e8694cd63543acbb14b8","modified":1591454615575},{"_id":"public/categories/others/index.html","hash":"fc457f3ccc65c1d241a483cbb2570331270173ef","modified":1591454615575},{"_id":"public/categories/JavaWeb/index.html","hash":"2ec274bc8de47d3616f62f8f9041f9427bc19b0e","modified":1591454615575},{"_id":"public/categories/使用记录/index.html","hash":"b3212e4b579a1af9096a053529023203ce788346","modified":1591454615575},{"_id":"public/categories/Selenium/index.html","hash":"cffc20aa9b2e100ea7ca64f13e3c4bffa24feb05","modified":1591454615575},{"_id":"public/categories/Note/index.html","hash":"6be843d5bdc8ba71a7aaad8ef049af87a68a3a1c","modified":1591454615575},{"_id":"public/categories/指南-Guide/index.html","hash":"d5b6457b5d0321308e34d459bbbf0a499aa4ff66","modified":1591454615575},{"_id":"public/categories/SpringBoot/index.html","hash":"1a146077e03ddb3fa5094aab0df8a91c1d534fc6","modified":1591454615576},{"_id":"public/categories/数据结构/index.html","hash":"0f2f0c7f82759fe651c664bc1ff3c66b3b5425be","modified":1591454615576},{"_id":"public/categories/小程序/index.html","hash":"6ca647958a5c25c89ff0372bed6578c3bd221466","modified":1591454615576},{"_id":"public/archives/page/5/index.html","hash":"d83e6a035727f783be29cccb89499a652b6dcd73","modified":1591454615576},{"_id":"public/archives/2017/04/index.html","hash":"8c784c3e83cea2f4c2458089d3cff5cd4b75427b","modified":1591454615576},{"_id":"public/archives/2018/01/index.html","hash":"9223052cd294f0035c4bb92ee4077cff566ef833","modified":1591454615576},{"_id":"public/archives/2018/05/index.html","hash":"c03601c0f82e965474561329c599d2419a8546fa","modified":1591454615576},{"_id":"public/archives/2018/07/index.html","hash":"3b5fc1228e86d44cb180e3773a8d5876d54dd812","modified":1591454615576},{"_id":"public/archives/2018/08/index.html","hash":"de195fce912301bdc62391cd835bab953e4b5fa9","modified":1591454615576},{"_id":"public/archives/2018/11/index.html","hash":"97d0caa1a3cc75050cc2dfb0494a5a194157b228","modified":1591454615576},{"_id":"public/archives/2019/index.html","hash":"025aca3cad72ff350bb7ef2b4eea322914fec47d","modified":1591454615576},{"_id":"public/archives/2019/02/index.html","hash":"a53fafc40d0a5553774fa6dc52816f4efaeff684","modified":1591454615576},{"_id":"public/archives/2019/03/index.html","hash":"c3969a2d4c16648d98bde6cb31ab7d90c4f7b9af","modified":1591454615576},{"_id":"public/archives/2019/04/index.html","hash":"0a474593f7d12811300630b1730140ce8d6631ed","modified":1591454615576},{"_id":"public/archives/2019/07/index.html","hash":"2513dad89aa0deaaf5f93a263c9e3ad4202b1422","modified":1591454615576},{"_id":"public/archives/2020/index.html","hash":"2a1796fdecf7a6ef97d363858c32dccfe0b88ed5","modified":1591454615577},{"_id":"public/archives/2020/05/index.html","hash":"89554f51dd4956cce9efd56786a5c2886817eb13","modified":1591454615577},{"_id":"public/archives/2020/06/index.html","hash":"e03f967786c0c550219f3d27311db750059ff8c5","modified":1591454615577},{"_id":"public/tags/AngularJS/index.html","hash":"273b0c177b705b44640821333430a809561d6b76","modified":1591454615577},{"_id":"public/tags/notes/index.html","hash":"fe1a181c0389d4da007923a411713f839733f041","modified":1591454615577},{"_id":"public/tags/BlockChain/index.html","hash":"9c9a893ea8b402a1d739538ed2528ff28329fc42","modified":1591454615577},{"_id":"public/tags/Smart-Contract/index.html","hash":"8f838bb053d0d1d42fc6abf3a00b0baa86df4852","modified":1591454615577},{"_id":"public/tags/ETH/index.html","hash":"8b4eef2d2c8a736b489e08b163c27b2e4e8b4148","modified":1591454615577},{"_id":"public/tags/Java/index.html","hash":"45f194f933d1852aa53045f8b6c30adb7c135243","modified":1591454615577},{"_id":"public/tags/basic/index.html","hash":"704dab13613505129aef59a073ccbcf53a8c1084","modified":1591454615577},{"_id":"public/tags/Array/index.html","hash":"7f5964b9c86d868b1d9f9cb55b4ed1e9a5fe8934","modified":1591454615577},{"_id":"public/tags/Vector/index.html","hash":"59f7828d2057e0da4e56bc87d59a0d0d775dc488","modified":1591454615577},{"_id":"public/tags/Set/index.html","hash":"efb1124f93ad974d8dd5f18df06baa4e60c69614","modified":1591454615577},{"_id":"public/tags/Map/index.html","hash":"ceb487fa150a3e27014cf830e68ec82451a37e24","modified":1591454615577},{"_id":"public/tags/AWS/index.html","hash":"874984c999937c026df4ebd5d466f2f0bb1c23f1","modified":1591454615577},{"_id":"public/tags/lambda/index.html","hash":"3fb0267e5b840f99f928063fa465ac6febdf08d0","modified":1591454615578},{"_id":"public/tags/python/index.html","hash":"8bd3ed2a9d102e1a073164135965423d189e9a61","modified":1591454615578},{"_id":"public/tags/gmail-API/index.html","hash":"2baa9a6986944c78381e243931df82e3e89292fe","modified":1591454615578},{"_id":"public/tags/blog/index.html","hash":"9d43025eb94fd82f4c0a5733b913dfb4c607bee5","modified":1591454615578},{"_id":"public/tags/hexo/index.html","hash":"3ebc1d1edfd6bbd75d965fdc6d7f0463661ca2db","modified":1591454615578},{"_id":"public/tags/ubuntu/index.html","hash":"ee4c8d15df0d4bf7af2dc48c344f51fa37332c90","modified":1591454615578},{"_id":"public/tags/migrate/index.html","hash":"679614aa95674e5a73dbee2be5f759ef005599ce","modified":1591454615578},{"_id":"public/tags/demo/index.html","hash":"e42fb754a9906ae0e53c8199d370d31ca7f1c39f","modified":1591454615578},{"_id":"public/tags/Bootstrap/index.html","hash":"f4f7c002553e28f1017382bf56c7953c77ddad51","modified":1591454615578},{"_id":"public/tags/CheatSheet/index.html","hash":"ec55e2d8ab3eb2635680f2769a814c87d2a19253","modified":1591454615578},{"_id":"public/tags/FrontEnd/index.html","hash":"e22fdfce2e103be88673609af9ea6629d481de97","modified":1591454615578},{"_id":"public/tags/database/index.html","hash":"ef32e42a1eb4ddfd9ebf7b5a758c79819f1dba4b","modified":1591454615578},{"_id":"public/tags/Postgres/index.html","hash":"c367daabbf5b9c1e397d1b64d18d2c481d8f46f2","modified":1591454615578},{"_id":"public/tags/install/index.html","hash":"28adb5511437cb1eee15b7b3fd5ff85fd335ca4e","modified":1591454615578},{"_id":"public/tags/setup/index.html","hash":"72fb95897964df80e4b1ce77e05dd174760647bc","modified":1591454615578},{"_id":"public/tags/docker/index.html","hash":"bb601183e72d528ccffb4322f14aff305f99293f","modified":1591454615578},{"_id":"public/tags/CICD/index.html","hash":"494ebec8771e3e18fe4dced1fa722efec5ae51d1","modified":1591454615578},{"_id":"public/tags/Java-300集/index.html","hash":"60adfc6f5a493771001d1eb1c4a5fe07407c85d8","modified":1591454615579},{"_id":"public/tags/DateFormat/index.html","hash":"122d1e9689d53ddce90ac0c5ee55ec37e95a8c76","modified":1591454615579},{"_id":"public/tags/Date/index.html","hash":"8ec557c0db0bae4841f4244be2af9a3989f56fae","modified":1591454615579},{"_id":"public/tags/Calendar/index.html","hash":"9542b116faf2af5d12901f909696324e5847c83b","modified":1591454615579},{"_id":"public/tags/GC/index.html","hash":"f2005869bb8fcc0413719599fb509cda46018caf","modified":1591454615579},{"_id":"public/tags/Git/index.html","hash":"eb0e2543e832853d978b1b3d421002b62c3703f1","modified":1591454615579},{"_id":"public/tags/学习笔记/index.html","hash":"c07ae38cca18aa68b13d81f332a4cb571bc04beb","modified":1591454615579},{"_id":"public/tags/github/index.html","hash":"10af31c85bc55bce101587b3525fb5d5d5c5a50f","modified":1591454615579},{"_id":"public/tags/git/index.html","hash":"5bbace886ba75efad2420cf171bad1cf0d23c550","modified":1591454615579},{"_id":"public/tags/Hexo/index.html","hash":"f0f89319fec75fef0f7e1695f2aae2b13ef8d4c5","modified":1591454615579},{"_id":"public/tags/Next/index.html","hash":"cf3de15debdd288c20b71dab46f472240e388cb0","modified":1591454615580},{"_id":"public/tags/博客/index.html","hash":"7fb798e541becaf1a2bd0317cae5dc1a0fb355d2","modified":1591454615580},{"_id":"public/tags/主题优化/index.html","hash":"99ae0bff79a26571c7f79236e486b4be407db82f","modified":1591454615580},{"_id":"public/tags/评论/index.html","hash":"d3a4b8905e9741c32dd2113081215e0e7b119759","modified":1591454615580},{"_id":"public/tags/Gitment/index.html","hash":"3d5ba1dae951db73d911f6927de47f7458472b44","modified":1591454615580},{"_id":"public/tags/IO/index.html","hash":"08255e736a90206be4d27d609e6cd8156834eb8c","modified":1591454615580},{"_id":"public/tags/copy/index.html","hash":"a0faae1a2ef715c94d328c9577b89f4eb665df0e","modified":1591454615580},{"_id":"public/tags/序列化/index.html","hash":"a0632fdd8883c8e59c5dee8b2701542bb6c4d86e","modified":1591454615581},{"_id":"public/tags/装饰设计模式/index.html","hash":"83b2c9688618fd2156dd216768d070db97954336","modified":1591454615581},{"_id":"public/tags/JVM/index.html","hash":"f1dc868112372640f36b1a075933fcc749a9f78d","modified":1591454615581},{"_id":"public/tags/stack/index.html","hash":"3f7bfd2c180d9cb66573565fa50305530f30f607","modified":1591454615581},{"_id":"public/tags/head/index.html","hash":"81883840b0385318a3417233c7928f7cea931670","modified":1591454615581},{"_id":"public/tags/内存分析/index.html","hash":"a3a31c85a841c933fb7efbe9353c80c8d25c6b6b","modified":1591454615581},{"_id":"public/tags/JUnit/index.html","hash":"e048b82b521c53c0d669541e969da376edcf5436","modified":1591454615581},{"_id":"public/tags/test/index.html","hash":"9a4a642c86c34d8f3d649f16bea939a975ae6266","modified":1591454615581},{"_id":"public/tags/unit/index.html","hash":"dd439f9022a84b6de42f2aec372c36a3bdd6311c","modified":1591454615581},{"_id":"public/tags/beginner/index.html","hash":"3e6b5982e097823a4a55b6758edeca0186230a8d","modified":1591454615581},{"_id":"public/tags/automation/index.html","hash":"80fb1ef24f1d97c53e36eef6ae9e8b1ceb594098","modified":1591454615582},{"_id":"public/tags/course/index.html","hash":"2010680c1e513cdd8d120c3fc081f9ad576fee8c","modified":1591454615582},{"_id":"public/tags/note/index.html","hash":"0ed41212d45d55dbcc502733214877ce87615d16","modified":1591454615582},{"_id":"public/tags/Abstract，Abstract-Class/index.html","hash":"8fa2e9998ad939b4121f504563ef791b865c8b5c","modified":1591454615582},{"_id":"public/tags/Interface/index.html","hash":"4e327d31f8d28341e40a65066fb140341501087a","modified":1591454615583},{"_id":"public/tags/Python/index.html","hash":"0e4a33e6d9a7cbe88c6ef6fc9950493a5442a7d4","modified":1591454615583},{"_id":"public/tags/algorithm/index.html","hash":"945cdd39151898590418464923eb048b33c1d525","modified":1591454615583},{"_id":"public/tags/hanoi/index.html","hash":"a1a3a8e7313888ac46706cda28e782ea794a6ca6","modified":1591454615583},{"_id":"public/tags/generics/index.html","hash":"593d3085bcdb023475afdb5138b883a40c814e6c","modified":1591454615583},{"_id":"public/tags/LinkedList/index.html","hash":"54815658058894f05e97e2c5451d20d074622bf8","modified":1591454615583},{"_id":"public/tags/Linux/index.html","hash":"ad377ff86f049c17bdf8c15b3b96d5f9b524197b","modified":1591454615583},{"_id":"public/tags/command/index.html","hash":"a364b62123b7c39691badf246a44a5f471b41161","modified":1591454615583},{"_id":"public/tags/shell/index.html","hash":"dd4b741b569d1e96abf035c937d1b5513ecec78b","modified":1591454615583},{"_id":"public/tags/SSH/index.html","hash":"3d0448771b81d5251225db44cdee793d6f89bdf6","modified":1591454615583},{"_id":"public/tags/SCP/index.html","hash":"608e6109586dc35809ddcd7ac555baa4c48d6ad5","modified":1591454615583},{"_id":"public/tags/password/index.html","hash":"2e9b61c598004f07b094fea066af8f0b1f4c2320","modified":1591454615583},{"_id":"public/tags/server/index.html","hash":"720c2638f11326573d86213090665e4cc8531305","modified":1591454615583},{"_id":"public/tags/vi/index.html","hash":"cdd0d14c4cf7cd535458a65d35b7e4f662493d56","modified":1591454615583},{"_id":"public/tags/sh/index.html","hash":"95f8534b71e550e8572d35cd175f7ae719c9120f","modified":1591454615583},{"_id":"public/tags/script/index.html","hash":"f9b929743abfb31fec16f06a1287b44ffe55614d","modified":1591454615583},{"_id":"public/tags/template/index.html","hash":"d234f45a945cfea16a26119ee30ad2953fbdc271","modified":1591454615583},{"_id":"public/tags/index.html","hash":"65ce8ff7e20f0c60091c5e00a13ef13fecbd133e","modified":1591454615584},{"_id":"public/2020/06/04/Hanoi-Tower-汉诺塔-Python-示例/index.html","hash":"b98a1dcabd9760fd867bccf404e8d5498b980213","modified":1591454615584},{"_id":"public/2020/05/18/AWS-Lambda-Pyhton-GMail-API/index.html","hash":"03c55dc1c7e5b1b7e78e57566588bedfc304b171","modified":1591454615584},{"_id":"public/2019/07/14/数据结构01/index.html","hash":"2505791eab7648d2e945acec9e97e6a8804340b5","modified":1591454615584},{"_id":"public/2019/04/14/IO-Stream/index.html","hash":"d2fb0439346ec389b49119d7baf37aaa9a50be24","modified":1591454615584},{"_id":"public/2019/03/05/Date-Demo/index.html","hash":"1b3a0ff6f6500d11013bf05f352618dc47c5a7e7","modified":1591454615584},{"_id":"public/2019/02/24/GC-垃圾回收机制/index.html","hash":"ad287f6af9fa5a5f4061c607ee7f2c283a10390d","modified":1591454615584},{"_id":"public/2019/02/24/JVM内存分析-stack-heap-and-method-area/index.html","hash":"38049550bc1fe5a849d0d474e414c4599dee0ee6","modified":1591454615584},{"_id":"public/2018/11/10/Array-Vector-Set-Map/index.html","hash":"73a89e79c4baa84d12b35eca27218579ceb4db87","modified":1591454615584},{"_id":"public/2018/08/12/Servlet-Generate-Random-Image/index.html","hash":"f8e9bc91e9bbb85f27c66ae3464ef4a55d7297ae","modified":1591454615584},{"_id":"public/2018/08/09/Play-XML-with-Dom4j/index.html","hash":"fe14addebb2f7b25f47ae88539d12ea75ad848f9","modified":1591454615584},{"_id":"public/2018/07/07/黑马教程-Java-Web-Basic/index.html","hash":"1b00f0fb0488dc0f745b62eb3e46c68949e0dde5","modified":1591454615584},{"_id":"public/2018/05/21/Notes-LinuxShellScriptsCookBook/index.html","hash":"681f7f0402684cfc98dc7b81db09aae11a3e88ee","modified":1591454615584},{"_id":"public/2018/05/13/Docker-Notes/index.html","hash":"9db83b1ce1e09d6cc23d4082e8472fb8b92813a6","modified":1591454615584},{"_id":"public/2018/02/25/Java-Master-S11-GenericsClass/index.html","hash":"ff4815464799492477109130e5b87e6d676e059b","modified":1591454615585},{"_id":"public/2018/02/22/PostgreSQL-10-Windows-使用记录/index.html","hash":"4745dfe271992ef4033dcadc5e13b08e21ed2a23","modified":1591454615585},{"_id":"public/2018/02/14/JUnit-Beginner/index.html","hash":"18a4f4696f879e09f5158e0743305bdbf5eb278d","modified":1591454615585},{"_id":"public/2018/02/12/Selenium-Simple-URL-Ping/index.html","hash":"301e8f7a24720950a30dd4e13fc01dceb96696c5","modified":1591454615585},{"_id":"public/2018/02/12/Java-Master-S10-AbstractClass/index.html","hash":"987556e7adcc06cfa56219b3f5d6cbd2bca05ac6","modified":1591454615585},{"_id":"public/2018/02/11/Java-Master-S10-Interface/index.html","hash":"ec648519bf3de61f21d1852936e8c76f603d1de4","modified":1591454615585},{"_id":"public/2018/02/07/简单的辅助程序/index.html","hash":"82b73cd34a72c4aaa795517e2d1a57be9cc0ed4c","modified":1591454615585},{"_id":"public/2018/02/01/Java-Master-S9-LinkedList/index.html","hash":"c06447af071da4b2286ddb7c626c31e03856402f","modified":1591454615585},{"_id":"public/2018/01/20/Bootstrap-CheatSheet/index.html","hash":"84638ab6be8352bb5933d24a13ea52efeeb990a8","modified":1591454615585},{"_id":"public/2018/01/16/编程入门指南/index.html","hash":"fce3f75ae4955a8a27fbcda21dd7356225b872dc","modified":1591454615585},{"_id":"public/2018/01/11/BlockChain-1-Smart-Contract/index.html","hash":"943484edad26e6004b0f04c6c1bc085068da2caa","modified":1591454615585},{"_id":"public/2017/12/25/学习-Spring-Boot-2/index.html","hash":"e0e37746fd492aa89c0425d13b61f0967da8b3a4","modified":1591454615586},{"_id":"public/2017/12/23/学习-Spring-Boot-1/index.html","hash":"a8c9feb58a00e1193ae658c4d119c93dac87dcc0","modified":1591454615586},{"_id":"public/2017/12/16/Database-PostgreSQL/index.html","hash":"c6b668d69c1d74c1502a81e090dae1cac88c5bcc","modified":1591454615586},{"_id":"public/2017/12/10/AngularJS-Learning/index.html","hash":"a27363db51dc92682ef70c7096aa14ed27559269","modified":1591454615586},{"_id":"public/2017/12/09/Linux-Script-Menu-Template/index.html","hash":"b7c7f56b5fa7471a7fd51c480c16d0876e6fd2d3","modified":1591454615586},{"_id":"public/2017/12/07/Github-Learning/index.html","hash":"faa2f7eaf7b08e1c4cce48f4a85576d4a9849d3c","modified":1591454615586},{"_id":"public/2017/12/07/Clone-Blog-to-Ubuntu/index.html","hash":"c0b465b64e1908f2f98eb802f927ec3be873f6b6","modified":1591454615586},{"_id":"public/2017/12/05/Linux-Command/index.html","hash":"1b6b6d8171f263f9a60453bb2ff06edd0dcee95e","modified":1591454615586},{"_id":"public/2017/12/02/Linux-vi-basic/index.html","hash":"9bd8ccba247bdc6501f5d90fd8115b4b2883683f","modified":1591454615586},{"_id":"public/2017/11/28/Linux-SSH-or-SCP-without-password/index.html","hash":"a8b89c90e434c1601cedf88d263d17216fd924fc","modified":1591454615586},{"_id":"public/2017/11/27/Hexo-Next-添加-Gitment-评论系统/index.html","hash":"8b8f3ffa5db3ada1aa1f0c630dc3aa8cc4fe1003","modified":1591454615586},{"_id":"public/2017/11/26/Hexo-的-Next-主题优化/index.html","hash":"a213c79a7a1cea0e630eb93c7f1de91ce335350b","modified":1591454615586},{"_id":"public/2017/11/24/Git-学习笔记/index.html","hash":"1561c7fc538cde3432511723e92eb7a82d1d6514","modified":1591454615586},{"_id":"public/2017/11/24/用-Hexo-和-GitHub-Pages-搭建博客/index.html","hash":"19ab8ac80ce25c098ddf889b3c52fd991b5deadb","modified":1591454615587},{"_id":"public/2017/11/24/hello-world/index.html","hash":"8b3cd3e254eec571e76638abf4dfaa3a80090246","modified":1591454615587},{"_id":"public/2017/11/14/Ohm-0-Promo-Code-OHMREF5F498F/index.html","hash":"1349ad4deaa627684b03391d8f6f7e42345e7cb8","modified":1591454615587},{"_id":"public/2017/04/15/Blockchain-Demo-using-Java/index.html","hash":"c233e954d9bf1e0bcd60b93216ca02839e9d3bd9","modified":1591454615587},{"_id":"public/archives/index.html","hash":"71f7d2cdacbf2a89079e5bf78bed1cf4ea9b6988","modified":1591454615587},{"_id":"public/archives/page/2/index.html","hash":"6ed1197cda2ef47161e846cdd92490f625c4267c","modified":1591454615587},{"_id":"public/archives/page/3/index.html","hash":"3b4703d7f80a1e7882d090df8502421c048349f4","modified":1591454615587},{"_id":"public/archives/page/4/index.html","hash":"989f28261671767ad2c1b9f932de8e6ca67d7bc0","modified":1591454615587},{"_id":"public/archives/2017/index.html","hash":"1b20c54938aed0c67413b6f7eca8c97cbdb003ba","modified":1591454615587},{"_id":"public/archives/2017/page/2/index.html","hash":"c1fb28173a460f8d80694410e6640eeb0fe525b8","modified":1591454615587},{"_id":"public/archives/2017/11/index.html","hash":"781c579fd75473112c7e72dce6396e1cb7131710","modified":1591454615588},{"_id":"public/archives/2017/12/index.html","hash":"98ffc35d2b5934e18155eb6a0fdd9a3168527190","modified":1591454615588},{"_id":"public/archives/2018/index.html","hash":"b09082c21b3f60429f3e264125e3c4996aaa53c2","modified":1591454615588},{"_id":"public/archives/2018/page/2/index.html","hash":"fe267e2692a9cc8a0ba2e61f7653e40ae8162910","modified":1591454615588},{"_id":"public/archives/2018/02/index.html","hash":"8d8c2e1d72be5f30ce864b07234609dac90a7833","modified":1591454615588},{"_id":"public/index.html","hash":"3377049bcdbf8884358d7bdba548bafb79a1ca60","modified":1591454615588},{"_id":"public/page/2/index.html","hash":"43e8149914b85838d7d12892a8a5989fc4e63795","modified":1591454615588},{"_id":"public/page/3/index.html","hash":"6da83e987f6e37b091835cfcdac3fffa5ee365a5","modified":1591454615588},{"_id":"public/page/4/index.html","hash":"6094792a9c756e8eb82b08e6f2331319416b251b","modified":1591454615588},{"_id":"public/page/5/index.html","hash":"774326ff57380ed95d6058a11c06e9f9ca8c39da","modified":1591454615588},{"_id":"public/categories/algorithm/index.html","hash":"cdd824810db6bd7d57973d774d42422b03dcdbd3","modified":1591454615594},{"_id":"public/tags/menu/index.html","hash":"abd64d9fa23e98a5c870db1232d612c37db249b9","modified":1591454615594},{"_id":"public/tags/center/index.html","hash":"f8e909d68c670f53878c432b0090e9c377d83b3f","modified":1591454615594},{"_id":"public/tags/ohm/index.html","hash":"948daf69b96f9b5f77a061967ba61b9746149083","modified":1591454615594},{"_id":"public/tags/promote/index.html","hash":"3f75bb7d4e0a2a3e59aba2f52e1dd26483e3b52e","modified":1591454615594},{"_id":"public/tags/code/index.html","hash":"a2b93f7e3960d4d7ce73743516008986cb997d15","modified":1591454615594},{"_id":"public/tags/XML/index.html","hash":"ad4e6c758e51b7be25363937bae284ec0e579db8","modified":1591454615595},{"_id":"public/tags/dom4j/index.html","hash":"d81cd5c6bb8979766e0a23fe8668d69316218107","modified":1591454615595},{"_id":"public/tags/PostgreSQL/index.html","hash":"39b6bab46fa32fa2023795c5822b3013bb9df878","modified":1591454615595},{"_id":"public/tags/10/index.html","hash":"b264e12202f4a3408b1570228a2a3c6038b8579c","modified":1591454615595},{"_id":"public/tags/Windows/index.html","hash":"6564ec5827323e24bffa4933d55076ce725fdb24","modified":1591454615595},{"_id":"public/tags/使用记录/index.html","hash":"ee26304dccca58647be1ed91ff26430a51c2929d","modified":1591454615595},{"_id":"public/tags/Selenium/index.html","hash":"c3490b88971c8f288cb94b9197d29584c9c9ec5f","modified":1591454615595},{"_id":"public/tags/Ping/index.html","hash":"e60aefc3379c46bcef052ff35ff55c0a98ce4dd5","modified":1591454615595},{"_id":"public/tags/URL/index.html","hash":"40e28034bb7a4bd00e734e56010b4ee30ea2def6","modified":1591454615595},{"_id":"public/tags/Login/index.html","hash":"fb4e30a8d1c8fb85523073a48a9c814b4b43e002","modified":1591454615595},{"_id":"public/tags/Servlet/index.html","hash":"f557512a23f75fb5fafb6f09de96d525ac1ef882","modified":1591454615595},{"_id":"public/tags/image/index.html","hash":"3265da0093a3c6261b642a16178abbf8d5871735","modified":1591454615595},{"_id":"public/tags/random/index.html","hash":"37e91b27f74ef4ce304bd57e91481a07e8945848","modified":1591454615595},{"_id":"public/tags/程序员/index.html","hash":"95d8f8b7ba7a9e474569b2a199f74792eb2fc509","modified":1591454615595},{"_id":"public/tags/指南/index.html","hash":"3365eccf2b9295948b0466a1192a9c6fa7f517e4","modified":1591454615595},{"_id":"public/tags/入门/index.html","hash":"be3967407bebbd56ff7a0050a5999a8411a8a2ed","modified":1591454615595},{"_id":"public/tags/Spring/index.html","hash":"72cab581bc345a92a835692cb0d29eba85f6b11d","modified":1591454615595},{"_id":"public/tags/Spring-Boot/index.html","hash":"45104b8f4a0ae6ea72f7b32f13562a8bfbafbdbd","modified":1591454615596},{"_id":"public/tags/Maven/index.html","hash":"1a91c32679fcf2bc3ceb2beb2a736269ff6c9e12","modified":1591454615597},{"_id":"public/tags/Rest/index.html","hash":"95ad82feae24e879fbda0aa2373c82d7a69d0244","modified":1591454615597},{"_id":"public/tags/JPA/index.html","hash":"eb5cc5de97b73ceb8fc50decef18e79281feb305","modified":1591454615597},{"_id":"public/tags/Spring-Data-JPA/index.html","hash":"d3e38535697bcdb2b37294a079f642757c8b0368","modified":1591454615597},{"_id":"public/tags/数据结构/index.html","hash":"d15e5a68ba8e4c3f948733ab22efa253812adec8","modified":1591454615597},{"_id":"public/tags/算法/index.html","hash":"157ec5f73963890bbcb128595e71ec47289df730","modified":1591454615597},{"_id":"public/tags/辅助/index.html","hash":"2354d7104bb5e1b6a2b2e57ed55f0ee661969f47","modified":1591454615597},{"_id":"public/tags/小程序/index.html","hash":"b82f03a4057cc417bb190936c8015e68ddf9d68d","modified":1591454615597},{"_id":"public/tags/GitHub-Pages/index.html","hash":"c68e2d0d0b6c3c31af01e2477222085c218d22ab","modified":1591454615597},{"_id":"public/tags/next/index.html","hash":"c36d21c470901b5c9ebaac86880deb656d42bf00","modified":1591454615597},{"_id":"public/tags/java/index.html","hash":"74c68de573532ffc87a5b8d1fd45e7aa884e14c5","modified":1591454615597},{"_id":"public/tags/web/index.html","hash":"b1303188ee23a48b2f5af7aed2090c8149e45a20","modified":1591454615597},{"_id":"public/tags/heima/index.html","hash":"9f73e57c9c8ecb51ca55528b69a8978642b78fa6","modified":1591454615598},{"_id":"public/tags/tutorial/index.html","hash":"597203e72f4d381be01ca70e2ca77c08374a3249","modified":1591454615598},{"_id":"public/2020/06/06/TSP问题-贪心算法-Python实现-算法分析/index.html","hash":"c342a50af13893431931255495e08ae901348e40","modified":1591454615598},{"_id":"public/tags/TSP/index.html","hash":"3b4e1ef967c0d9fd5819eebb151e750363782aa5","modified":1591454615599},{"_id":"public/tags/贪心/index.html","hash":"5284d7e009f1d26dca7896a3b354b978932f1d7d","modified":1591454615599},{"_id":"public/images/tsp_flow.jpeg","hash":"74de4245437b2d8aa552484f2fc65f483b24e781","modified":1591454615599}],"Category":[{"name":"AngularJS","_id":"ckb3dedjn0019sd5tpr9rfu0u"},{"name":"BlockChain","_id":"ckb3dedjx001bsd5to647b3g7"},{"name":"Java Basic","_id":"ckb3dedjy001dsd5t1brkj0xl"},{"name":"AWS","_id":"ckb3dedjy001fsd5ty9jymgln"},{"name":"搭建博客","_id":"ckb3dedjz001hsd5tpx53zrqq"},{"name":"FrontEnd","_id":"ckb3dedk1001lsd5tfuhrjb98"},{"name":"Database","_id":"ckb3dedk2001nsd5tazbxnd0q"},{"name":"CICD","_id":"ckb3dedk2001psd5to2pl02s1"},{"name":"Java","_id":"ckb3dedk3001rsd5tmtdz7vt4"},{"name":"Git","_id":"ckb3dedk4001vsd5ty41tcocw"},{"name":"JUnit","_id":"ckb3dedk80025sd5tk7dmpy0p"},{"name":"Java Master Course","_id":"ckb3dedk90029sd5tea3s6mvi"},{"name":"Python","_id":"ckb3dedka002dsd5ty01pfvgc"},{"name":"Linux","_id":"ckb3dedkd002jsd5t27mm9mo3"},{"name":"others","_id":"ckb3dedkf002qsd5thpyhcky9"},{"name":"JavaWeb","_id":"ckb3dedkf002ssd5tmfoyi2aq"},{"name":"使用记录","_id":"ckb3dedkg002wsd5tik80jb87"},{"name":"Selenium","_id":"ckb3dedkh002ysd5t7a981mkn"},{"name":"Note","_id":"ckb3dedki0032sd5tyhu3i4mu"},{"name":"指南-Guide","_id":"ckb3dedkj0034sd5t292ff4xv"},{"name":"algorithm","_id":"ckb3dedkk0036sd5ttmodbc05"},{"name":"SpringBoot","_id":"ckb3dedkk0038sd5tkuhz441j"},{"name":"数据结构","_id":"ckb3dedkn003csd5tnp58ip06"},{"name":"小程序","_id":"ckb3dedko003esd5tdyyvouur"}],"Data":[],"Page":[{"title":"categories","date":"2017-11-26T10:38:13.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-11-26 18:38:13\ntype: \"categories\"\ncomments: false\n---\n","updated":"2020-04-30T09:23:19.533Z","path":"categories/index.html","layout":"page","_id":"ckb3dedhk0000sd5th6opphpr","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"About","date":"2017-11-26T07:52:49.000Z","_content":"\n- 曾经就读于 Nanyang Polytechnic 和 National University of Singapore。机械工程专业。\n- 5-6年的机械相关的生产制造和设计经验。\n- 2017年开始从事 Java 相关的后端开发。\n\n\n联系方式：luoxu2011@gmail.com\n\nDeveloper Story: https://stackoverflow.com/story/ryanluoxu\n\nDeveloper CV: https://stackoverflow.com/cv/ryanluoxu\n","source":"about/index.md","raw":"---\ntitle: About\ndate: 2017-11-26 15:52:49\n---\n\n- 曾经就读于 Nanyang Polytechnic 和 National University of Singapore。机械工程专业。\n- 5-6年的机械相关的生产制造和设计经验。\n- 2017年开始从事 Java 相关的后端开发。\n\n\n联系方式：luoxu2011@gmail.com\n\nDeveloper Story: https://stackoverflow.com/story/ryanluoxu\n\nDeveloper CV: https://stackoverflow.com/cv/ryanluoxu\n","updated":"2020-04-30T10:31:46.811Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckb3dedho0002sd5t5h4bkgyy","content":"<ul>\n<li>曾经就读于 Nanyang Polytechnic 和 National University of Singapore。机械工程专业。</li>\n<li>5-6年的机械相关的生产制造和设计经验。</li>\n<li>2017年开始从事 Java 相关的后端开发。</li>\n</ul>\n<p>联系方式：<a href=\"mailto:luoxu2011@gmail.com\" target=\"_blank\" rel=\"noopener\">luoxu2011@gmail.com</a></p>\n<p>Developer Story: <a href=\"https://stackoverflow.com/story/ryanluoxu\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/story/ryanluoxu</a></p>\n<p>Developer CV: <a href=\"https://stackoverflow.com/cv/ryanluoxu\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/cv/ryanluoxu</a></p>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>曾经就读于 Nanyang Polytechnic 和 National University of Singapore。机械工程专业。</li>\n<li>5-6年的机械相关的生产制造和设计经验。</li>\n<li>2017年开始从事 Java 相关的后端开发。</li>\n</ul>\n<p>联系方式：<a href=\"mailto:luoxu2011@gmail.com\" target=\"_blank\" rel=\"noopener\">luoxu2011@gmail.com</a></p>\n<p>Developer Story: <a href=\"https://stackoverflow.com/story/ryanluoxu\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/story/ryanluoxu</a></p>\n<p>Developer CV: <a href=\"https://stackoverflow.com/cv/ryanluoxu\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/cv/ryanluoxu</a></p>\n"},{"title":"tags","date":"2017-11-26T10:38:23.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-11-26 18:38:23\ntype: \"tags\"\ncomments: false\n---\n","updated":"2020-04-30T09:23:19.543Z","path":"tags/index.html","layout":"page","_id":"ckb3dedhq0004sd5tarsxmrxx","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"AngularJS Learning","date":"2017-12-10T12:52:45.000Z","_content":"\nLearning Material: [AngularJS tutorial for beginners](https://www.youtube.com/watch?v=zKkUN-mJtPQ&list=PL6n9fhu94yhWKHkcL7RJmmXyxkuFB3KSl)\n\n## 1. What is AngularJS\n\n- JavaScript framework\n- Help to build web application\n- MVC\n\n<!--more-->\n\n### Two requirements to start using AngularJS\n1. Copy `angular.min.js` in and insert to html\n```\n<head>\n\t<script src=\"scripts/angular.min.js\"></script>\t<!-- 1st requirement -->\n</head>\n```\n2. insert `ng-app` to activate angular\n```\n<body ng-app>\t<!-- 2nd requirement: activate angular -->\n\t<div>\n\t\t10+20={{10+20}}\n\t</div>\n</body>\n```\n\n### Demo\n```\n10+20={{10+20}}\n{{1==2}}\n{{ {name: 'Ryan', age: '30'}.name }}\n{{ ['David','Lucy','Shell'][2] }}\t#Shell\n\n```\n\n## 2. Modules and Controllers\n\n### Intro\n1. Module\n\t- a container: controller, service, directive, filter..\n\t- as a main() method\n2. Create a module\n\t```\n\tvar myApp = angular.module(\"myModule\",[]);\t# ModuleName & its dependency\n\t```\n3. Controller\n\t- a JS function\n\t- to build a model for the view to display\n\t- model is data\n4. Create a controller\n\t```\n\tvar myController = function ($scope) {\n\t\t$scope.message = \"Hello world..\";\n\t}\n\t```\n\n!! $scope is NOT model. The data attached is the model.\n\n### Demo\n\n- script.js\n\t```\n\tvar myApp = angular.module(\"myModule\",[]);\t// 1. create module\n\n\tmyApp.controller(\"myController\", function ($scope) {\t// 2. create controller\n\t\t$scope.message = \"Hello world..\";\n\t}); \n\n\t```\n- index.html\n\t```\n\t<head>\n\t\t<script src=\"scripts/script.js\"></script>\n\t</head>\n\n\t<body ng-app=\"myModule\">\n\t\t<div ng-controller=\"myController\">\n\t\t\t{{ message }}\n\t\t</div>\n\t</body>\n\t```\n\n## 3. Controllers - cont\n\n### Attach a complex object to the scope\n```\nmyApp.controller(\"myController\", function ($scope) {\n\t\n\tvar customer = {\n\t\tfirstName: \"ryan\",\n\t\tlastName: \"luo\",\n\t\tgender: \"male\"\n\t};\t\t\t\t// create object\n\t\n\t$scope.customer = customer;\t// attach object to scope\n\n}); \n```\n\n### In the view:\n```\n<body ng-app=\"myModule\">\n\t<div ng-controller=\"myController\">\n\t\t\n\t\t<div>first name: {{ customer.firstName }}</div>\n\t\t<div>last name: {{ customer.lastName }}</div>\n\t\t<div>gender: {{ customer.gender }}</div>\n\t\t\n\t</div>\n</body>\n```\n\n- misspell controller -> Error\n- misspell object property -> Null\n\n### Method chaining to combine controller into module:\n- Module:\n\t```\n\tvar myApp = angular.module(\"myModule\",[]);\n\t```\n- Controller:\n\t```\n\tmyApp.controller(\"myController\", function ($scope) {\n\t\n\t\tvar customer = {\n\t\t\tfirstName: \"ryan\",\n\t\t\tlastName: \"luo\",\n\t\t\tgender: \"male\"\n\t\t};\n\t\t$scope.customer = customer;\n\n\t}); \n\t```\n- Combine:\n\t```\n\tvar myApp = angular\n\t\t\t.module(\"myModule\",[])\n\t\t\t.controller(\"myController\", function ($scope) {\n\t\t\t\tvar customer = {\t\t\n\t\t\t\t\tfirstName: \"ryan\",\n\t\t\t\t\tlastName: \"luo\",\n\t\t\t\t\tgender: \"male\"\n\t\t\t\t};\n\t\t\t\t$scope.customer = customer;\n\t\t\t}); \n\t```\n\n## 4. Directive: ng-src\n\n- add `image` folder to project with an image\n- use `ng-scr` to ensure a request is issued only after NG has evaluated.\n- no 404 error\n\n### JS\n```\nvar myApp = angular\n\t\t.module(\"myModule\",[])\n\t\t.controller(\"myController\", function ($scope) {\n\t\t\tvar topic = {\t\t\n\t\t\t\tname: \"Git\",\t\t\t\t\n\t\t\t\tpicture: \"image/Git-Cycle1.png\"\t\t#source-path\n\t\t\t};\n\t\t\t$scope.topic = topic;\n\t\t}); \n```\n\n### HTML\n```\n<div ng-controller=\"myController\">\n\t\n\t<div>\n\t\tTopic : {{ topic.name }}\n\t</div>\n\t\n\t<img ng-src=\"{{ topic.picture }}\" \t\t#dynamic\n\t\talt=\"{{ topic.name + ' picture' }}\"\t\t\t\n\t\tstyle=\"height:300px; width:400px\"/>\n\t\n</div>\n```\n\n\n## 5. Two-way DataBinding & ng-model\n\n### Two-way data binding\n- keep model and view in sync at all time\n- `$scope.message` won't change\n- `ng-model=\"message\"` and `{{ message }}` will keep the same\n- model takes value from js initially. Once change, model value changes. \n\n```\nvar myApp = angular\n\t\t.module(\"myModule\",[])\n\t\t.controller(\"myController\", function ($scope) {\n\t\t\n\t\t\t$scope.message = \"Hello World..\"\n\t\t\n\t\t}); \n\n<div ng-controller=\"myController\">\n\t\n\t<input type=\"text\" ng-model=\"message\"/>\n\t<br/><br/>\t\n\t{{ message }}\n\t\n</div>\n\n```\n\n### ng-model\nused for\n- input\n- select\n- textarea\n\n### Demo\n\n```\n# JS\nvar myApp = angular\n\t\t.module(\"myModule\",[])\n\t\t.controller(\"myController\", function ($scope) {\n\t\t\t\n\t\t\tvar customer = {\n\t\t\t\t\tname: \"ryan\",\n\t\t\t\t\tage: \"29\"\n\t\t\t};\n\t\t\t\n\t\t\t$scope.customer = customer;\n\t\t}); \n\n\n# HTML\n<div ng-controller=\"myController\">\n\t<table>\n\t\t<tr>\n\t\t\t<td>Name</td>\n\t\t\t<td><input type=\"text\" ng-model=\"customer.name\"/></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Age</td>\n\t\t\t<td><input type=\"text\" ng-model=\"customer.age\"/></td>\n\t\t</tr>\n\t</table>\n\t<br/>\n\t<table>\n\t\t<tr>\n\t\t\t<td>Name</td>\n\t\t\t<td>{{ customer.name }}</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Age</td>\n\t\t\t<td>{{ customer.age }}</td>\n\t\t</tr>\n\t</table>\n</div>\n```\n\nResult:\n![ng-model](/images/ng-model.png)\n\n\n\n\n\n","source":"_posts/AngularJS-Learning.md","raw":"---\ntitle: AngularJS Learning\ndate: 2017-12-10 20:52:45\ncategories: AngularJS\ntags: [AngularJS, notes]\n---\n\nLearning Material: [AngularJS tutorial for beginners](https://www.youtube.com/watch?v=zKkUN-mJtPQ&list=PL6n9fhu94yhWKHkcL7RJmmXyxkuFB3KSl)\n\n## 1. What is AngularJS\n\n- JavaScript framework\n- Help to build web application\n- MVC\n\n<!--more-->\n\n### Two requirements to start using AngularJS\n1. Copy `angular.min.js` in and insert to html\n```\n<head>\n\t<script src=\"scripts/angular.min.js\"></script>\t<!-- 1st requirement -->\n</head>\n```\n2. insert `ng-app` to activate angular\n```\n<body ng-app>\t<!-- 2nd requirement: activate angular -->\n\t<div>\n\t\t10+20={{10+20}}\n\t</div>\n</body>\n```\n\n### Demo\n```\n10+20={{10+20}}\n{{1==2}}\n{{ {name: 'Ryan', age: '30'}.name }}\n{{ ['David','Lucy','Shell'][2] }}\t#Shell\n\n```\n\n## 2. Modules and Controllers\n\n### Intro\n1. Module\n\t- a container: controller, service, directive, filter..\n\t- as a main() method\n2. Create a module\n\t```\n\tvar myApp = angular.module(\"myModule\",[]);\t# ModuleName & its dependency\n\t```\n3. Controller\n\t- a JS function\n\t- to build a model for the view to display\n\t- model is data\n4. Create a controller\n\t```\n\tvar myController = function ($scope) {\n\t\t$scope.message = \"Hello world..\";\n\t}\n\t```\n\n!! $scope is NOT model. The data attached is the model.\n\n### Demo\n\n- script.js\n\t```\n\tvar myApp = angular.module(\"myModule\",[]);\t// 1. create module\n\n\tmyApp.controller(\"myController\", function ($scope) {\t// 2. create controller\n\t\t$scope.message = \"Hello world..\";\n\t}); \n\n\t```\n- index.html\n\t```\n\t<head>\n\t\t<script src=\"scripts/script.js\"></script>\n\t</head>\n\n\t<body ng-app=\"myModule\">\n\t\t<div ng-controller=\"myController\">\n\t\t\t{{ message }}\n\t\t</div>\n\t</body>\n\t```\n\n## 3. Controllers - cont\n\n### Attach a complex object to the scope\n```\nmyApp.controller(\"myController\", function ($scope) {\n\t\n\tvar customer = {\n\t\tfirstName: \"ryan\",\n\t\tlastName: \"luo\",\n\t\tgender: \"male\"\n\t};\t\t\t\t// create object\n\t\n\t$scope.customer = customer;\t// attach object to scope\n\n}); \n```\n\n### In the view:\n```\n<body ng-app=\"myModule\">\n\t<div ng-controller=\"myController\">\n\t\t\n\t\t<div>first name: {{ customer.firstName }}</div>\n\t\t<div>last name: {{ customer.lastName }}</div>\n\t\t<div>gender: {{ customer.gender }}</div>\n\t\t\n\t</div>\n</body>\n```\n\n- misspell controller -> Error\n- misspell object property -> Null\n\n### Method chaining to combine controller into module:\n- Module:\n\t```\n\tvar myApp = angular.module(\"myModule\",[]);\n\t```\n- Controller:\n\t```\n\tmyApp.controller(\"myController\", function ($scope) {\n\t\n\t\tvar customer = {\n\t\t\tfirstName: \"ryan\",\n\t\t\tlastName: \"luo\",\n\t\t\tgender: \"male\"\n\t\t};\n\t\t$scope.customer = customer;\n\n\t}); \n\t```\n- Combine:\n\t```\n\tvar myApp = angular\n\t\t\t.module(\"myModule\",[])\n\t\t\t.controller(\"myController\", function ($scope) {\n\t\t\t\tvar customer = {\t\t\n\t\t\t\t\tfirstName: \"ryan\",\n\t\t\t\t\tlastName: \"luo\",\n\t\t\t\t\tgender: \"male\"\n\t\t\t\t};\n\t\t\t\t$scope.customer = customer;\n\t\t\t}); \n\t```\n\n## 4. Directive: ng-src\n\n- add `image` folder to project with an image\n- use `ng-scr` to ensure a request is issued only after NG has evaluated.\n- no 404 error\n\n### JS\n```\nvar myApp = angular\n\t\t.module(\"myModule\",[])\n\t\t.controller(\"myController\", function ($scope) {\n\t\t\tvar topic = {\t\t\n\t\t\t\tname: \"Git\",\t\t\t\t\n\t\t\t\tpicture: \"image/Git-Cycle1.png\"\t\t#source-path\n\t\t\t};\n\t\t\t$scope.topic = topic;\n\t\t}); \n```\n\n### HTML\n```\n<div ng-controller=\"myController\">\n\t\n\t<div>\n\t\tTopic : {{ topic.name }}\n\t</div>\n\t\n\t<img ng-src=\"{{ topic.picture }}\" \t\t#dynamic\n\t\talt=\"{{ topic.name + ' picture' }}\"\t\t\t\n\t\tstyle=\"height:300px; width:400px\"/>\n\t\n</div>\n```\n\n\n## 5. Two-way DataBinding & ng-model\n\n### Two-way data binding\n- keep model and view in sync at all time\n- `$scope.message` won't change\n- `ng-model=\"message\"` and `{{ message }}` will keep the same\n- model takes value from js initially. Once change, model value changes. \n\n```\nvar myApp = angular\n\t\t.module(\"myModule\",[])\n\t\t.controller(\"myController\", function ($scope) {\n\t\t\n\t\t\t$scope.message = \"Hello World..\"\n\t\t\n\t\t}); \n\n<div ng-controller=\"myController\">\n\t\n\t<input type=\"text\" ng-model=\"message\"/>\n\t<br/><br/>\t\n\t{{ message }}\n\t\n</div>\n\n```\n\n### ng-model\nused for\n- input\n- select\n- textarea\n\n### Demo\n\n```\n# JS\nvar myApp = angular\n\t\t.module(\"myModule\",[])\n\t\t.controller(\"myController\", function ($scope) {\n\t\t\t\n\t\t\tvar customer = {\n\t\t\t\t\tname: \"ryan\",\n\t\t\t\t\tage: \"29\"\n\t\t\t};\n\t\t\t\n\t\t\t$scope.customer = customer;\n\t\t}); \n\n\n# HTML\n<div ng-controller=\"myController\">\n\t<table>\n\t\t<tr>\n\t\t\t<td>Name</td>\n\t\t\t<td><input type=\"text\" ng-model=\"customer.name\"/></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Age</td>\n\t\t\t<td><input type=\"text\" ng-model=\"customer.age\"/></td>\n\t\t</tr>\n\t</table>\n\t<br/>\n\t<table>\n\t\t<tr>\n\t\t\t<td>Name</td>\n\t\t\t<td>{{ customer.name }}</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Age</td>\n\t\t\t<td>{{ customer.age }}</td>\n\t\t</tr>\n\t</table>\n</div>\n```\n\nResult:\n![ng-model](/images/ng-model.png)\n\n\n\n\n\n","slug":"AngularJS-Learning","published":1,"updated":"2020-04-30T09:23:19.524Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedhl0001sd5t9azb49ny","content":"<p>Learning Material: <a href=\"https://www.youtube.com/watch?v=zKkUN-mJtPQ&list=PL6n9fhu94yhWKHkcL7RJmmXyxkuFB3KSl\" target=\"_blank\" rel=\"noopener\">AngularJS tutorial for beginners</a></p>\n<h2 id=\"1-What-is-AngularJS\"><a href=\"#1-What-is-AngularJS\" class=\"headerlink\" title=\"1. What is AngularJS\"></a>1. What is AngularJS</h2><ul>\n<li>JavaScript framework</li>\n<li>Help to build web application</li>\n<li>MVC</li>\n</ul>\n<a id=\"more\"></a>\n\n<h3 id=\"Two-requirements-to-start-using-AngularJS\"><a href=\"#Two-requirements-to-start-using-AngularJS\" class=\"headerlink\" title=\"Two requirements to start using AngularJS\"></a>Two requirements to start using AngularJS</h3><ol>\n<li><p>Copy <code>angular.min.js</code> in and insert to html</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">\t&lt;script src=&quot;scripts/angular.min.js&quot;&gt;&lt;/script&gt;\t&lt;!-- 1st requirement --&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>insert <code>ng-app</code> to activate angular</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body ng-app&gt;\t&lt;!-- 2nd requirement: activate angular --&gt;</span><br><span class=\"line\">\t&lt;div&gt;</span><br><span class=\"line\">\t\t10+20=&#123;&#123;10+20&#125;&#125;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h3 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10+20=&#123;&#123;10+20&#125;&#125;</span><br><span class=\"line\">&#123;&#123;1==2&#125;&#125;</span><br><span class=\"line\">&#123;&#123; &#123;name: &apos;Ryan&apos;, age: &apos;30&apos;&#125;.name &#125;&#125;</span><br><span class=\"line\">&#123;&#123; [&apos;David&apos;,&apos;Lucy&apos;,&apos;Shell&apos;][2] &#125;&#125;\t#Shell</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-Modules-and-Controllers\"><a href=\"#2-Modules-and-Controllers\" class=\"headerlink\" title=\"2. Modules and Controllers\"></a>2. Modules and Controllers</h2><h3 id=\"Intro\"><a href=\"#Intro\" class=\"headerlink\" title=\"Intro\"></a>Intro</h3><ol>\n<li><p>Module</p>\n<ul>\n<li>a container: controller, service, directive, filter..</li>\n<li>as a main() method</li>\n</ul>\n</li>\n<li><p>Create a module</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular.module(&quot;myModule&quot;,[]);\t# ModuleName &amp; its dependency</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Controller</p>\n<ul>\n<li>a JS function</li>\n<li>to build a model for the view to display</li>\n<li>model is data</li>\n</ul>\n</li>\n<li><p>Create a controller</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myController = function ($scope) &#123;</span><br><span class=\"line\">\t$scope.message = &quot;Hello world..&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>!! $scope is NOT model. The data attached is the model.</p>\n<h3 id=\"Demo-1\"><a href=\"#Demo-1\" class=\"headerlink\" title=\"Demo\"></a>Demo</h3><ul>\n<li><p>script.js</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular.module(&quot;myModule&quot;,[]);\t// 1. create module</span><br><span class=\"line\"></span><br><span class=\"line\">myApp.controller(&quot;myController&quot;, function ($scope) &#123;\t// 2. create controller</span><br><span class=\"line\">\t$scope.message = &quot;Hello world..&quot;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>index.html</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">\t&lt;script src=&quot;scripts/script.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body ng-app=&quot;myModule&quot;&gt;</span><br><span class=\"line\">\t&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t\t&#123;&#123; message &#125;&#125;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"3-Controllers-cont\"><a href=\"#3-Controllers-cont\" class=\"headerlink\" title=\"3. Controllers - cont\"></a>3. Controllers - cont</h2><h3 id=\"Attach-a-complex-object-to-the-scope\"><a href=\"#Attach-a-complex-object-to-the-scope\" class=\"headerlink\" title=\"Attach a complex object to the scope\"></a>Attach a complex object to the scope</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myApp.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tvar customer = &#123;</span><br><span class=\"line\">\t\tfirstName: &quot;ryan&quot;,</span><br><span class=\"line\">\t\tlastName: &quot;luo&quot;,</span><br><span class=\"line\">\t\tgender: &quot;male&quot;</span><br><span class=\"line\">\t&#125;;\t\t\t\t// create object</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t$scope.customer = customer;\t// attach object to scope</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"In-the-view\"><a href=\"#In-the-view\" class=\"headerlink\" title=\"In the view:\"></a>In the view:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body ng-app=&quot;myModule&quot;&gt;</span><br><span class=\"line\">\t&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;div&gt;first name: &#123;&#123; customer.firstName &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div&gt;last name: &#123;&#123; customer.lastName &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div&gt;gender: &#123;&#123; customer.gender &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>misspell controller -&gt; Error</li>\n<li>misspell object property -&gt; Null</li>\n</ul>\n<h3 id=\"Method-chaining-to-combine-controller-into-module\"><a href=\"#Method-chaining-to-combine-controller-into-module\" class=\"headerlink\" title=\"Method chaining to combine controller into module:\"></a>Method chaining to combine controller into module:</h3><ul>\n<li><p>Module:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular.module(&quot;myModule&quot;,[]);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Controller:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myApp.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvar customer = &#123;</span><br><span class=\"line\">\t\tfirstName: &quot;ryan&quot;,</span><br><span class=\"line\">\t\tlastName: &quot;luo&quot;,</span><br><span class=\"line\">\t\tgender: &quot;male&quot;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\t$scope.customer = customer;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Combine:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular</span><br><span class=\"line\">\t\t.module(&quot;myModule&quot;,[])</span><br><span class=\"line\">\t\t.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t\t\tvar customer = &#123;\t\t</span><br><span class=\"line\">\t\t\t\tfirstName: &quot;ryan&quot;,</span><br><span class=\"line\">\t\t\t\tlastName: &quot;luo&quot;,</span><br><span class=\"line\">\t\t\t\tgender: &quot;male&quot;</span><br><span class=\"line\">\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t$scope.customer = customer;</span><br><span class=\"line\">\t\t&#125;);</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"4-Directive-ng-src\"><a href=\"#4-Directive-ng-src\" class=\"headerlink\" title=\"4. Directive: ng-src\"></a>4. Directive: ng-src</h2><ul>\n<li>add <code>image</code> folder to project with an image</li>\n<li>use <code>ng-scr</code> to ensure a request is issued only after NG has evaluated.</li>\n<li>no 404 error</li>\n</ul>\n<h3 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular</span><br><span class=\"line\">\t\t.module(&quot;myModule&quot;,[])</span><br><span class=\"line\">\t\t.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t\t\tvar topic = &#123;\t\t</span><br><span class=\"line\">\t\t\t\tname: &quot;Git&quot;,\t\t\t\t</span><br><span class=\"line\">\t\t\t\tpicture: &quot;image/Git-Cycle1.png&quot;\t\t#source-path</span><br><span class=\"line\">\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t$scope.topic = topic;</span><br><span class=\"line\">\t\t&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;div&gt;</span><br><span class=\"line\">\t\tTopic : &#123;&#123; topic.name &#125;&#125;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;img ng-src=&quot;&#123;&#123; topic.picture &#125;&#125;&quot; \t\t#dynamic</span><br><span class=\"line\">\t\talt=&quot;&#123;&#123; topic.name + &apos; picture&apos; &#125;&#125;&quot;\t\t\t</span><br><span class=\"line\">\t\tstyle=&quot;height:300px; width:400px&quot;/&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-Two-way-DataBinding-amp-ng-model\"><a href=\"#5-Two-way-DataBinding-amp-ng-model\" class=\"headerlink\" title=\"5. Two-way DataBinding &amp; ng-model\"></a>5. Two-way DataBinding &amp; ng-model</h2><h3 id=\"Two-way-data-binding\"><a href=\"#Two-way-data-binding\" class=\"headerlink\" title=\"Two-way data binding\"></a>Two-way data binding</h3><ul>\n<li>keep model and view in sync at all time</li>\n<li><code>$scope.message</code> won’t change</li>\n<li><code>ng-model=&quot;message&quot;</code> and <code></code> will keep the same</li>\n<li>model takes value from js initially. Once change, model value changes. </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular</span><br><span class=\"line\">\t\t.module(&quot;myModule&quot;,[])</span><br><span class=\"line\">\t\t.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t\t$scope.message = &quot;Hello World..&quot;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&#125;); </span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;input type=&quot;text&quot; ng-model=&quot;message&quot;/&gt;</span><br><span class=\"line\">\t&lt;br/&gt;&lt;br/&gt;\t</span><br><span class=\"line\">\t&#123;&#123; message &#125;&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"ng-model\"><a href=\"#ng-model\" class=\"headerlink\" title=\"ng-model\"></a>ng-model</h3><p>used for</p>\n<ul>\n<li>input</li>\n<li>select</li>\n<li>textarea</li>\n</ul>\n<h3 id=\"Demo-2\"><a href=\"#Demo-2\" class=\"headerlink\" title=\"Demo\"></a>Demo</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># JS</span><br><span class=\"line\">var myApp = angular</span><br><span class=\"line\">\t\t.module(&quot;myModule&quot;,[])</span><br><span class=\"line\">\t\t.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\tvar customer = &#123;</span><br><span class=\"line\">\t\t\t\t\tname: &quot;ryan&quot;,</span><br><span class=\"line\">\t\t\t\t\tage: &quot;29&quot;</span><br><span class=\"line\">\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t$scope.customer = customer;</span><br><span class=\"line\">\t\t&#125;); </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># HTML</span><br><span class=\"line\">&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t&lt;table&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;Name&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;&lt;input type=&quot;text&quot; ng-model=&quot;customer.name&quot;/&gt;&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;Age&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;&lt;input type=&quot;text&quot; ng-model=&quot;customer.age&quot;/&gt;&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;/table&gt;</span><br><span class=\"line\">\t&lt;br/&gt;</span><br><span class=\"line\">\t&lt;table&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;Name&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;&#123;&#123; customer.name &#125;&#125;&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;Age&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;&#123;&#123; customer.age &#125;&#125;&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;/table&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>Result:<br><img src=\"/images/ng-model.png\" alt=\"ng-model\"></p>\n","site":{"data":{}},"excerpt":"<p>Learning Material: <a href=\"https://www.youtube.com/watch?v=zKkUN-mJtPQ&list=PL6n9fhu94yhWKHkcL7RJmmXyxkuFB3KSl\" target=\"_blank\" rel=\"noopener\">AngularJS tutorial for beginners</a></p>\n<h2 id=\"1-What-is-AngularJS\"><a href=\"#1-What-is-AngularJS\" class=\"headerlink\" title=\"1. What is AngularJS\"></a>1. What is AngularJS</h2><ul>\n<li>JavaScript framework</li>\n<li>Help to build web application</li>\n<li>MVC</li>\n</ul>","more":"<h3 id=\"Two-requirements-to-start-using-AngularJS\"><a href=\"#Two-requirements-to-start-using-AngularJS\" class=\"headerlink\" title=\"Two requirements to start using AngularJS\"></a>Two requirements to start using AngularJS</h3><ol>\n<li><p>Copy <code>angular.min.js</code> in and insert to html</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">\t&lt;script src=&quot;scripts/angular.min.js&quot;&gt;&lt;/script&gt;\t&lt;!-- 1st requirement --&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>insert <code>ng-app</code> to activate angular</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body ng-app&gt;\t&lt;!-- 2nd requirement: activate angular --&gt;</span><br><span class=\"line\">\t&lt;div&gt;</span><br><span class=\"line\">\t\t10+20=&#123;&#123;10+20&#125;&#125;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h3 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10+20=&#123;&#123;10+20&#125;&#125;</span><br><span class=\"line\">&#123;&#123;1==2&#125;&#125;</span><br><span class=\"line\">&#123;&#123; &#123;name: &apos;Ryan&apos;, age: &apos;30&apos;&#125;.name &#125;&#125;</span><br><span class=\"line\">&#123;&#123; [&apos;David&apos;,&apos;Lucy&apos;,&apos;Shell&apos;][2] &#125;&#125;\t#Shell</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-Modules-and-Controllers\"><a href=\"#2-Modules-and-Controllers\" class=\"headerlink\" title=\"2. Modules and Controllers\"></a>2. Modules and Controllers</h2><h3 id=\"Intro\"><a href=\"#Intro\" class=\"headerlink\" title=\"Intro\"></a>Intro</h3><ol>\n<li><p>Module</p>\n<ul>\n<li>a container: controller, service, directive, filter..</li>\n<li>as a main() method</li>\n</ul>\n</li>\n<li><p>Create a module</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular.module(&quot;myModule&quot;,[]);\t# ModuleName &amp; its dependency</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Controller</p>\n<ul>\n<li>a JS function</li>\n<li>to build a model for the view to display</li>\n<li>model is data</li>\n</ul>\n</li>\n<li><p>Create a controller</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myController = function ($scope) &#123;</span><br><span class=\"line\">\t$scope.message = &quot;Hello world..&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>!! $scope is NOT model. The data attached is the model.</p>\n<h3 id=\"Demo-1\"><a href=\"#Demo-1\" class=\"headerlink\" title=\"Demo\"></a>Demo</h3><ul>\n<li><p>script.js</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular.module(&quot;myModule&quot;,[]);\t// 1. create module</span><br><span class=\"line\"></span><br><span class=\"line\">myApp.controller(&quot;myController&quot;, function ($scope) &#123;\t// 2. create controller</span><br><span class=\"line\">\t$scope.message = &quot;Hello world..&quot;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>index.html</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">\t&lt;script src=&quot;scripts/script.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body ng-app=&quot;myModule&quot;&gt;</span><br><span class=\"line\">\t&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t\t&#123;&#123; message &#125;&#125;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"3-Controllers-cont\"><a href=\"#3-Controllers-cont\" class=\"headerlink\" title=\"3. Controllers - cont\"></a>3. Controllers - cont</h2><h3 id=\"Attach-a-complex-object-to-the-scope\"><a href=\"#Attach-a-complex-object-to-the-scope\" class=\"headerlink\" title=\"Attach a complex object to the scope\"></a>Attach a complex object to the scope</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myApp.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tvar customer = &#123;</span><br><span class=\"line\">\t\tfirstName: &quot;ryan&quot;,</span><br><span class=\"line\">\t\tlastName: &quot;luo&quot;,</span><br><span class=\"line\">\t\tgender: &quot;male&quot;</span><br><span class=\"line\">\t&#125;;\t\t\t\t// create object</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t$scope.customer = customer;\t// attach object to scope</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"In-the-view\"><a href=\"#In-the-view\" class=\"headerlink\" title=\"In the view:\"></a>In the view:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body ng-app=&quot;myModule&quot;&gt;</span><br><span class=\"line\">\t&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;div&gt;first name: &#123;&#123; customer.firstName &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div&gt;last name: &#123;&#123; customer.lastName &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div&gt;gender: &#123;&#123; customer.gender &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>misspell controller -&gt; Error</li>\n<li>misspell object property -&gt; Null</li>\n</ul>\n<h3 id=\"Method-chaining-to-combine-controller-into-module\"><a href=\"#Method-chaining-to-combine-controller-into-module\" class=\"headerlink\" title=\"Method chaining to combine controller into module:\"></a>Method chaining to combine controller into module:</h3><ul>\n<li><p>Module:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular.module(&quot;myModule&quot;,[]);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Controller:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myApp.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvar customer = &#123;</span><br><span class=\"line\">\t\tfirstName: &quot;ryan&quot;,</span><br><span class=\"line\">\t\tlastName: &quot;luo&quot;,</span><br><span class=\"line\">\t\tgender: &quot;male&quot;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\t$scope.customer = customer;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Combine:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular</span><br><span class=\"line\">\t\t.module(&quot;myModule&quot;,[])</span><br><span class=\"line\">\t\t.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t\t\tvar customer = &#123;\t\t</span><br><span class=\"line\">\t\t\t\tfirstName: &quot;ryan&quot;,</span><br><span class=\"line\">\t\t\t\tlastName: &quot;luo&quot;,</span><br><span class=\"line\">\t\t\t\tgender: &quot;male&quot;</span><br><span class=\"line\">\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t$scope.customer = customer;</span><br><span class=\"line\">\t\t&#125;);</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"4-Directive-ng-src\"><a href=\"#4-Directive-ng-src\" class=\"headerlink\" title=\"4. Directive: ng-src\"></a>4. Directive: ng-src</h2><ul>\n<li>add <code>image</code> folder to project with an image</li>\n<li>use <code>ng-scr</code> to ensure a request is issued only after NG has evaluated.</li>\n<li>no 404 error</li>\n</ul>\n<h3 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular</span><br><span class=\"line\">\t\t.module(&quot;myModule&quot;,[])</span><br><span class=\"line\">\t\t.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t\t\tvar topic = &#123;\t\t</span><br><span class=\"line\">\t\t\t\tname: &quot;Git&quot;,\t\t\t\t</span><br><span class=\"line\">\t\t\t\tpicture: &quot;image/Git-Cycle1.png&quot;\t\t#source-path</span><br><span class=\"line\">\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t$scope.topic = topic;</span><br><span class=\"line\">\t\t&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;div&gt;</span><br><span class=\"line\">\t\tTopic : &#123;&#123; topic.name &#125;&#125;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;img ng-src=&quot;&#123;&#123; topic.picture &#125;&#125;&quot; \t\t#dynamic</span><br><span class=\"line\">\t\talt=&quot;&#123;&#123; topic.name + &apos; picture&apos; &#125;&#125;&quot;\t\t\t</span><br><span class=\"line\">\t\tstyle=&quot;height:300px; width:400px&quot;/&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-Two-way-DataBinding-amp-ng-model\"><a href=\"#5-Two-way-DataBinding-amp-ng-model\" class=\"headerlink\" title=\"5. Two-way DataBinding &amp; ng-model\"></a>5. Two-way DataBinding &amp; ng-model</h2><h3 id=\"Two-way-data-binding\"><a href=\"#Two-way-data-binding\" class=\"headerlink\" title=\"Two-way data binding\"></a>Two-way data binding</h3><ul>\n<li>keep model and view in sync at all time</li>\n<li><code>$scope.message</code> won’t change</li>\n<li><code>ng-model=&quot;message&quot;</code> and <code></code> will keep the same</li>\n<li>model takes value from js initially. Once change, model value changes. </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular</span><br><span class=\"line\">\t\t.module(&quot;myModule&quot;,[])</span><br><span class=\"line\">\t\t.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t\t$scope.message = &quot;Hello World..&quot;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&#125;); </span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;input type=&quot;text&quot; ng-model=&quot;message&quot;/&gt;</span><br><span class=\"line\">\t&lt;br/&gt;&lt;br/&gt;\t</span><br><span class=\"line\">\t&#123;&#123; message &#125;&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"ng-model\"><a href=\"#ng-model\" class=\"headerlink\" title=\"ng-model\"></a>ng-model</h3><p>used for</p>\n<ul>\n<li>input</li>\n<li>select</li>\n<li>textarea</li>\n</ul>\n<h3 id=\"Demo-2\"><a href=\"#Demo-2\" class=\"headerlink\" title=\"Demo\"></a>Demo</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># JS</span><br><span class=\"line\">var myApp = angular</span><br><span class=\"line\">\t\t.module(&quot;myModule&quot;,[])</span><br><span class=\"line\">\t\t.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\tvar customer = &#123;</span><br><span class=\"line\">\t\t\t\t\tname: &quot;ryan&quot;,</span><br><span class=\"line\">\t\t\t\t\tage: &quot;29&quot;</span><br><span class=\"line\">\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t$scope.customer = customer;</span><br><span class=\"line\">\t\t&#125;); </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># HTML</span><br><span class=\"line\">&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t&lt;table&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;Name&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;&lt;input type=&quot;text&quot; ng-model=&quot;customer.name&quot;/&gt;&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;Age&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;&lt;input type=&quot;text&quot; ng-model=&quot;customer.age&quot;/&gt;&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;/table&gt;</span><br><span class=\"line\">\t&lt;br/&gt;</span><br><span class=\"line\">\t&lt;table&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;Name&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;&#123;&#123; customer.name &#125;&#125;&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;Age&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;&#123;&#123; customer.age &#125;&#125;&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;/table&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>Result:<br><img src=\"/images/ng-model.png\" alt=\"ng-model\"></p>"},{"title":"BlockChain -1- Smart Contract","date":"2018-01-11T07:15:13.000Z","_content":"\n# Basic\n## What\n- contract itself has an address and balance\n- contains some functions for its logic\n- the output will be post to blockchain \n- made by `Solidity`\n\n<!-- more -->\n\n## Editor\n[Remix - Solidity IDE](https://remix.ethereum.org/)\n\n# Sample\n## RyanCoin.sol\n```\npragma solidity ^0.4.0;\ncontract RyanCoin {\n    address public creator; \n    mapping (address => uint) public balances;\n    \n    /**\n     * - msg is global attribute.\n     * - This constructor is 'create' button\n     */\n    function RyanCoin(){\n        creator = msg.sender;\n    }\n    \n    /**\n     * - creator use this function to give other people coins\n     * - make sure it is the creator running this function\n     */\n     function setCoin(address receiver, uint amount){\n         if(msg.sender != creator) throw;\n         balances[receiver] += amount;\n     }\n     \n     /**\n      * - other participants use this function to transfer coins\n      */\n      function transfer(address receiver, uint amount){\n          if(amount > balances[msg.sender]) throw;\n          balances[msg.sender] -= amount;\n          balances[receiver] += amount;\n      }\n}\n```\n\n## Run\n1. `Run`\n2. Choose one of account as creator\n3. `Create`\n\n![smart_contract_demo1](/images/smart_contract_demo1.png)\n\nNow RyanCoin is created with its own address.\n\n## Test\n\n### Give 1st account 10, 2nd account(self) 5\n1. make sure select creator as account\n2. input `\"0xca35b7d915458ef540ade6068dfe2f44e8fa733c\",10`\n3. `setCoin`\n\n![smart_contract_demo2](/images/smart_contract_demo2.png)\n\n### Check balance\n1. give `\"0x14723a09acff6d2a60dcdf7aa4aff308fddc160c\"`\n2. `balances`\n\n```\n\"0\": \"uint256: 5\"\n```\n\n### Tranfer 2 coins to 2nd from 1st\n1. select 1st account\n2. give `\"2nd address\",2`\n3. `transfer`\n\n```\n\"address receiver\": \"0x14723a09acff6d2a60dcdf7aa4aff308fddc160c\",\n\"uint256 amount\": \"2\"\n```\n\n# Buy RyanCoin using ETH\n## Code\n```\npragma solidity ^0.4.0;\ncontract RyanCoin {\n    mapping (address => uint) public balances;\n    uint constant public PRICE = 2000000000000000000; // 2 ETH as PRICE\n    \n    function RyanCoin(){\n    }\n    \n    function buyCoin() payable{     // pay ETH to create coin\n        require(msg.value > 0 && msg.value % PRICE == 0);\n        balances[msg.sender] += (msg.value / PRICE);\n    }        \n}\n```\n1. Set price.\n2. Anyone can buy coin by paying ETH\n3. `require` instead of `if`\n4. `uint` require integer number of coin\n\n## Run\n1. Use 1st user to create contract\n2. Choose 2nd user\n3. Enter `10 ether` as value\n4. `buyCoin`\n5. 2nd user receive 5 RyanCoin\n\n\n\n# Escrow.sol\n\n```\npragma solidity ^0.4.0;\n\n// temperature account where store money during transaction\n\ncontract Escrow {\n    \n    address public buyer;\n    address public seller;\n    address public arbiter;    // settle any dispute\n    \n    function Escrow(address _buyer, address _seller, address _arbiter){\n        buyer = _buyer;\n        seller = _seller;\n        arbiter = _arbiter;\n    }\n    \n    // we have different stages in this contract\n    \n    function confirmPayment() payable {\n        require (msg.sender == buyer);\n    }\n}\n```\n\n\n# Auction.sol\n```\npragma solidity ^0.4.0;\n\ncontract Auction {\n    \n    string public description;\n    address public owner;\n    address public maxBidder;\n    uint public maxBid;\n    uint public autionEnd;\n    mapping(address => uint) pendingWithdrawals;\n    \n    event BidAccepted(address bidder, uint bidAmount);\n    event AuctionCompleted(address winner, uint bidAmount);\n    \n    function Auction(uint durationMinutes, string _description){\n        description = _description;\n        autionEnd = now + (durationMinutes * 1 minutes); // `now` is global var\n        owner = msg.sender;\n    }\n    \n    // rollback function\n    function() payable {\n        // fire some log, invoke other function\n        throw;\n    }\n    \n    function bid() payable {\n        require(msg.value > maxBid);\n        require(now < autionEnd);\n        \n        if(maxBidder != 0){\n            pendingWithdrawals[maxBidder] += maxBid;\n        }\n        \n        maxBid = msg.value;\n        maxBidder =  msg.sender;\n        BidAccepted(maxBidder, maxBid);\n    }\n    \n    function end(){\n        require(msg.sender == owner);\n        require(now >= autionEnd);\n        \n        pendingWithdrawals[owner] = maxBid;\n        AuctionCompleted(maxBidder, maxBid);\n    }\n    \n    function withdraw() returns (bool){\n        uint amount = pendingWithdrawals[msg.sender];\n        if(amount > 0){\n            pendingWithdrawals[msg.sender] = 0;\n            if(!msg.sender.send(amount)){\n                pendingWithdrawals[msg.sender] = amount;\n                return false;\n            }\n        }\n        return true;\n    }\n}\n```","source":"_posts/BlockChain-1-Smart-Contract.md","raw":"---\ntitle: BlockChain -1- Smart Contract\ndate: 2018-01-11 15:15:13\ncategories: BlockChain\ntags: [BlockChain, Smart Contract, ETH]\n---\n\n# Basic\n## What\n- contract itself has an address and balance\n- contains some functions for its logic\n- the output will be post to blockchain \n- made by `Solidity`\n\n<!-- more -->\n\n## Editor\n[Remix - Solidity IDE](https://remix.ethereum.org/)\n\n# Sample\n## RyanCoin.sol\n```\npragma solidity ^0.4.0;\ncontract RyanCoin {\n    address public creator; \n    mapping (address => uint) public balances;\n    \n    /**\n     * - msg is global attribute.\n     * - This constructor is 'create' button\n     */\n    function RyanCoin(){\n        creator = msg.sender;\n    }\n    \n    /**\n     * - creator use this function to give other people coins\n     * - make sure it is the creator running this function\n     */\n     function setCoin(address receiver, uint amount){\n         if(msg.sender != creator) throw;\n         balances[receiver] += amount;\n     }\n     \n     /**\n      * - other participants use this function to transfer coins\n      */\n      function transfer(address receiver, uint amount){\n          if(amount > balances[msg.sender]) throw;\n          balances[msg.sender] -= amount;\n          balances[receiver] += amount;\n      }\n}\n```\n\n## Run\n1. `Run`\n2. Choose one of account as creator\n3. `Create`\n\n![smart_contract_demo1](/images/smart_contract_demo1.png)\n\nNow RyanCoin is created with its own address.\n\n## Test\n\n### Give 1st account 10, 2nd account(self) 5\n1. make sure select creator as account\n2. input `\"0xca35b7d915458ef540ade6068dfe2f44e8fa733c\",10`\n3. `setCoin`\n\n![smart_contract_demo2](/images/smart_contract_demo2.png)\n\n### Check balance\n1. give `\"0x14723a09acff6d2a60dcdf7aa4aff308fddc160c\"`\n2. `balances`\n\n```\n\"0\": \"uint256: 5\"\n```\n\n### Tranfer 2 coins to 2nd from 1st\n1. select 1st account\n2. give `\"2nd address\",2`\n3. `transfer`\n\n```\n\"address receiver\": \"0x14723a09acff6d2a60dcdf7aa4aff308fddc160c\",\n\"uint256 amount\": \"2\"\n```\n\n# Buy RyanCoin using ETH\n## Code\n```\npragma solidity ^0.4.0;\ncontract RyanCoin {\n    mapping (address => uint) public balances;\n    uint constant public PRICE = 2000000000000000000; // 2 ETH as PRICE\n    \n    function RyanCoin(){\n    }\n    \n    function buyCoin() payable{     // pay ETH to create coin\n        require(msg.value > 0 && msg.value % PRICE == 0);\n        balances[msg.sender] += (msg.value / PRICE);\n    }        \n}\n```\n1. Set price.\n2. Anyone can buy coin by paying ETH\n3. `require` instead of `if`\n4. `uint` require integer number of coin\n\n## Run\n1. Use 1st user to create contract\n2. Choose 2nd user\n3. Enter `10 ether` as value\n4. `buyCoin`\n5. 2nd user receive 5 RyanCoin\n\n\n\n# Escrow.sol\n\n```\npragma solidity ^0.4.0;\n\n// temperature account where store money during transaction\n\ncontract Escrow {\n    \n    address public buyer;\n    address public seller;\n    address public arbiter;    // settle any dispute\n    \n    function Escrow(address _buyer, address _seller, address _arbiter){\n        buyer = _buyer;\n        seller = _seller;\n        arbiter = _arbiter;\n    }\n    \n    // we have different stages in this contract\n    \n    function confirmPayment() payable {\n        require (msg.sender == buyer);\n    }\n}\n```\n\n\n# Auction.sol\n```\npragma solidity ^0.4.0;\n\ncontract Auction {\n    \n    string public description;\n    address public owner;\n    address public maxBidder;\n    uint public maxBid;\n    uint public autionEnd;\n    mapping(address => uint) pendingWithdrawals;\n    \n    event BidAccepted(address bidder, uint bidAmount);\n    event AuctionCompleted(address winner, uint bidAmount);\n    \n    function Auction(uint durationMinutes, string _description){\n        description = _description;\n        autionEnd = now + (durationMinutes * 1 minutes); // `now` is global var\n        owner = msg.sender;\n    }\n    \n    // rollback function\n    function() payable {\n        // fire some log, invoke other function\n        throw;\n    }\n    \n    function bid() payable {\n        require(msg.value > maxBid);\n        require(now < autionEnd);\n        \n        if(maxBidder != 0){\n            pendingWithdrawals[maxBidder] += maxBid;\n        }\n        \n        maxBid = msg.value;\n        maxBidder =  msg.sender;\n        BidAccepted(maxBidder, maxBid);\n    }\n    \n    function end(){\n        require(msg.sender == owner);\n        require(now >= autionEnd);\n        \n        pendingWithdrawals[owner] = maxBid;\n        AuctionCompleted(maxBidder, maxBid);\n    }\n    \n    function withdraw() returns (bool){\n        uint amount = pendingWithdrawals[msg.sender];\n        if(amount > 0){\n            pendingWithdrawals[msg.sender] = 0;\n            if(!msg.sender.send(amount)){\n                pendingWithdrawals[msg.sender] = amount;\n                return false;\n            }\n        }\n        return true;\n    }\n}\n```","slug":"BlockChain-1-Smart-Contract","published":1,"updated":"2020-04-30T09:23:19.525Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedhp0003sd5ta4bx5w94","content":"<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1><h2 id=\"What\"><a href=\"#What\" class=\"headerlink\" title=\"What\"></a>What</h2><ul>\n<li>contract itself has an address and balance</li>\n<li>contains some functions for its logic</li>\n<li>the output will be post to blockchain </li>\n<li>made by <code>Solidity</code></li>\n</ul>\n<a id=\"more\"></a>\n\n<h2 id=\"Editor\"><a href=\"#Editor\" class=\"headerlink\" title=\"Editor\"></a>Editor</h2><p><a href=\"https://remix.ethereum.org/\" target=\"_blank\" rel=\"noopener\">Remix - Solidity IDE</a></p>\n<h1 id=\"Sample\"><a href=\"#Sample\" class=\"headerlink\" title=\"Sample\"></a>Sample</h1><h2 id=\"RyanCoin-sol\"><a href=\"#RyanCoin-sol\" class=\"headerlink\" title=\"RyanCoin.sol\"></a>RyanCoin.sol</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pragma solidity ^0.4.0;</span><br><span class=\"line\">contract RyanCoin &#123;</span><br><span class=\"line\">    address public creator; </span><br><span class=\"line\">    mapping (address =&gt; uint) public balances;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * - msg is global attribute.</span><br><span class=\"line\">     * - This constructor is &apos;create&apos; button</span><br><span class=\"line\">     */</span><br><span class=\"line\">    function RyanCoin()&#123;</span><br><span class=\"line\">        creator = msg.sender;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * - creator use this function to give other people coins</span><br><span class=\"line\">     * - make sure it is the creator running this function</span><br><span class=\"line\">     */</span><br><span class=\"line\">     function setCoin(address receiver, uint amount)&#123;</span><br><span class=\"line\">         if(msg.sender != creator) throw;</span><br><span class=\"line\">         balances[receiver] += amount;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">     /**</span><br><span class=\"line\">      * - other participants use this function to transfer coins</span><br><span class=\"line\">      */</span><br><span class=\"line\">      function transfer(address receiver, uint amount)&#123;</span><br><span class=\"line\">          if(amount &gt; balances[msg.sender]) throw;</span><br><span class=\"line\">          balances[msg.sender] -= amount;</span><br><span class=\"line\">          balances[receiver] += amount;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Run\"><a href=\"#Run\" class=\"headerlink\" title=\"Run\"></a>Run</h2><ol>\n<li><code>Run</code></li>\n<li>Choose one of account as creator</li>\n<li><code>Create</code></li>\n</ol>\n<p><img src=\"/images/smart_contract_demo1.png\" alt=\"smart_contract_demo1\"></p>\n<p>Now RyanCoin is created with its own address.</p>\n<h2 id=\"Test\"><a href=\"#Test\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h3 id=\"Give-1st-account-10-2nd-account-self-5\"><a href=\"#Give-1st-account-10-2nd-account-self-5\" class=\"headerlink\" title=\"Give 1st account 10, 2nd account(self) 5\"></a>Give 1st account 10, 2nd account(self) 5</h3><ol>\n<li>make sure select creator as account</li>\n<li>input <code>&quot;0xca35b7d915458ef540ade6068dfe2f44e8fa733c&quot;,10</code></li>\n<li><code>setCoin</code></li>\n</ol>\n<p><img src=\"/images/smart_contract_demo2.png\" alt=\"smart_contract_demo2\"></p>\n<h3 id=\"Check-balance\"><a href=\"#Check-balance\" class=\"headerlink\" title=\"Check balance\"></a>Check balance</h3><ol>\n<li>give <code>&quot;0x14723a09acff6d2a60dcdf7aa4aff308fddc160c&quot;</code></li>\n<li><code>balances</code></li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;0&quot;: &quot;uint256: 5&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Tranfer-2-coins-to-2nd-from-1st\"><a href=\"#Tranfer-2-coins-to-2nd-from-1st\" class=\"headerlink\" title=\"Tranfer 2 coins to 2nd from 1st\"></a>Tranfer 2 coins to 2nd from 1st</h3><ol>\n<li>select 1st account</li>\n<li>give <code>&quot;2nd address&quot;,2</code></li>\n<li><code>transfer</code></li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;address receiver&quot;: &quot;0x14723a09acff6d2a60dcdf7aa4aff308fddc160c&quot;,</span><br><span class=\"line\">&quot;uint256 amount&quot;: &quot;2&quot;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Buy-RyanCoin-using-ETH\"><a href=\"#Buy-RyanCoin-using-ETH\" class=\"headerlink\" title=\"Buy RyanCoin using ETH\"></a>Buy RyanCoin using ETH</h1><h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pragma solidity ^0.4.0;</span><br><span class=\"line\">contract RyanCoin &#123;</span><br><span class=\"line\">    mapping (address =&gt; uint) public balances;</span><br><span class=\"line\">    uint constant public PRICE = 2000000000000000000; // 2 ETH as PRICE</span><br><span class=\"line\">    </span><br><span class=\"line\">    function RyanCoin()&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    function buyCoin() payable&#123;     // pay ETH to create coin</span><br><span class=\"line\">        require(msg.value &gt; 0 &amp;&amp; msg.value % PRICE == 0);</span><br><span class=\"line\">        balances[msg.sender] += (msg.value / PRICE);</span><br><span class=\"line\">    &#125;        </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>Set price.</li>\n<li>Anyone can buy coin by paying ETH</li>\n<li><code>require</code> instead of <code>if</code></li>\n<li><code>uint</code> require integer number of coin</li>\n</ol>\n<h2 id=\"Run-1\"><a href=\"#Run-1\" class=\"headerlink\" title=\"Run\"></a>Run</h2><ol>\n<li>Use 1st user to create contract</li>\n<li>Choose 2nd user</li>\n<li>Enter <code>10 ether</code> as value</li>\n<li><code>buyCoin</code></li>\n<li>2nd user receive 5 RyanCoin</li>\n</ol>\n<h1 id=\"Escrow-sol\"><a href=\"#Escrow-sol\" class=\"headerlink\" title=\"Escrow.sol\"></a>Escrow.sol</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pragma solidity ^0.4.0;</span><br><span class=\"line\"></span><br><span class=\"line\">// temperature account where store money during transaction</span><br><span class=\"line\"></span><br><span class=\"line\">contract Escrow &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    address public buyer;</span><br><span class=\"line\">    address public seller;</span><br><span class=\"line\">    address public arbiter;    // settle any dispute</span><br><span class=\"line\">    </span><br><span class=\"line\">    function Escrow(address _buyer, address _seller, address _arbiter)&#123;</span><br><span class=\"line\">        buyer = _buyer;</span><br><span class=\"line\">        seller = _seller;</span><br><span class=\"line\">        arbiter = _arbiter;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    // we have different stages in this contract</span><br><span class=\"line\">    </span><br><span class=\"line\">    function confirmPayment() payable &#123;</span><br><span class=\"line\">        require (msg.sender == buyer);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Auction-sol\"><a href=\"#Auction-sol\" class=\"headerlink\" title=\"Auction.sol\"></a>Auction.sol</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pragma solidity ^0.4.0;</span><br><span class=\"line\"></span><br><span class=\"line\">contract Auction &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    string public description;</span><br><span class=\"line\">    address public owner;</span><br><span class=\"line\">    address public maxBidder;</span><br><span class=\"line\">    uint public maxBid;</span><br><span class=\"line\">    uint public autionEnd;</span><br><span class=\"line\">    mapping(address =&gt; uint) pendingWithdrawals;</span><br><span class=\"line\">    </span><br><span class=\"line\">    event BidAccepted(address bidder, uint bidAmount);</span><br><span class=\"line\">    event AuctionCompleted(address winner, uint bidAmount);</span><br><span class=\"line\">    </span><br><span class=\"line\">    function Auction(uint durationMinutes, string _description)&#123;</span><br><span class=\"line\">        description = _description;</span><br><span class=\"line\">        autionEnd = now + (durationMinutes * 1 minutes); // `now` is global var</span><br><span class=\"line\">        owner = msg.sender;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    // rollback function</span><br><span class=\"line\">    function() payable &#123;</span><br><span class=\"line\">        // fire some log, invoke other function</span><br><span class=\"line\">        throw;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    function bid() payable &#123;</span><br><span class=\"line\">        require(msg.value &gt; maxBid);</span><br><span class=\"line\">        require(now &lt; autionEnd);</span><br><span class=\"line\">        </span><br><span class=\"line\">        if(maxBidder != 0)&#123;</span><br><span class=\"line\">            pendingWithdrawals[maxBidder] += maxBid;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        maxBid = msg.value;</span><br><span class=\"line\">        maxBidder =  msg.sender;</span><br><span class=\"line\">        BidAccepted(maxBidder, maxBid);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    function end()&#123;</span><br><span class=\"line\">        require(msg.sender == owner);</span><br><span class=\"line\">        require(now &gt;= autionEnd);</span><br><span class=\"line\">        </span><br><span class=\"line\">        pendingWithdrawals[owner] = maxBid;</span><br><span class=\"line\">        AuctionCompleted(maxBidder, maxBid);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    function withdraw() returns (bool)&#123;</span><br><span class=\"line\">        uint amount = pendingWithdrawals[msg.sender];</span><br><span class=\"line\">        if(amount &gt; 0)&#123;</span><br><span class=\"line\">            pendingWithdrawals[msg.sender] = 0;</span><br><span class=\"line\">            if(!msg.sender.send(amount))&#123;</span><br><span class=\"line\">                pendingWithdrawals[msg.sender] = amount;</span><br><span class=\"line\">                return false;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return true;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1><h2 id=\"What\"><a href=\"#What\" class=\"headerlink\" title=\"What\"></a>What</h2><ul>\n<li>contract itself has an address and balance</li>\n<li>contains some functions for its logic</li>\n<li>the output will be post to blockchain </li>\n<li>made by <code>Solidity</code></li>\n</ul>","more":"<h2 id=\"Editor\"><a href=\"#Editor\" class=\"headerlink\" title=\"Editor\"></a>Editor</h2><p><a href=\"https://remix.ethereum.org/\" target=\"_blank\" rel=\"noopener\">Remix - Solidity IDE</a></p>\n<h1 id=\"Sample\"><a href=\"#Sample\" class=\"headerlink\" title=\"Sample\"></a>Sample</h1><h2 id=\"RyanCoin-sol\"><a href=\"#RyanCoin-sol\" class=\"headerlink\" title=\"RyanCoin.sol\"></a>RyanCoin.sol</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pragma solidity ^0.4.0;</span><br><span class=\"line\">contract RyanCoin &#123;</span><br><span class=\"line\">    address public creator; </span><br><span class=\"line\">    mapping (address =&gt; uint) public balances;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * - msg is global attribute.</span><br><span class=\"line\">     * - This constructor is &apos;create&apos; button</span><br><span class=\"line\">     */</span><br><span class=\"line\">    function RyanCoin()&#123;</span><br><span class=\"line\">        creator = msg.sender;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * - creator use this function to give other people coins</span><br><span class=\"line\">     * - make sure it is the creator running this function</span><br><span class=\"line\">     */</span><br><span class=\"line\">     function setCoin(address receiver, uint amount)&#123;</span><br><span class=\"line\">         if(msg.sender != creator) throw;</span><br><span class=\"line\">         balances[receiver] += amount;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">     /**</span><br><span class=\"line\">      * - other participants use this function to transfer coins</span><br><span class=\"line\">      */</span><br><span class=\"line\">      function transfer(address receiver, uint amount)&#123;</span><br><span class=\"line\">          if(amount &gt; balances[msg.sender]) throw;</span><br><span class=\"line\">          balances[msg.sender] -= amount;</span><br><span class=\"line\">          balances[receiver] += amount;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Run\"><a href=\"#Run\" class=\"headerlink\" title=\"Run\"></a>Run</h2><ol>\n<li><code>Run</code></li>\n<li>Choose one of account as creator</li>\n<li><code>Create</code></li>\n</ol>\n<p><img src=\"/images/smart_contract_demo1.png\" alt=\"smart_contract_demo1\"></p>\n<p>Now RyanCoin is created with its own address.</p>\n<h2 id=\"Test\"><a href=\"#Test\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h3 id=\"Give-1st-account-10-2nd-account-self-5\"><a href=\"#Give-1st-account-10-2nd-account-self-5\" class=\"headerlink\" title=\"Give 1st account 10, 2nd account(self) 5\"></a>Give 1st account 10, 2nd account(self) 5</h3><ol>\n<li>make sure select creator as account</li>\n<li>input <code>&quot;0xca35b7d915458ef540ade6068dfe2f44e8fa733c&quot;,10</code></li>\n<li><code>setCoin</code></li>\n</ol>\n<p><img src=\"/images/smart_contract_demo2.png\" alt=\"smart_contract_demo2\"></p>\n<h3 id=\"Check-balance\"><a href=\"#Check-balance\" class=\"headerlink\" title=\"Check balance\"></a>Check balance</h3><ol>\n<li>give <code>&quot;0x14723a09acff6d2a60dcdf7aa4aff308fddc160c&quot;</code></li>\n<li><code>balances</code></li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;0&quot;: &quot;uint256: 5&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Tranfer-2-coins-to-2nd-from-1st\"><a href=\"#Tranfer-2-coins-to-2nd-from-1st\" class=\"headerlink\" title=\"Tranfer 2 coins to 2nd from 1st\"></a>Tranfer 2 coins to 2nd from 1st</h3><ol>\n<li>select 1st account</li>\n<li>give <code>&quot;2nd address&quot;,2</code></li>\n<li><code>transfer</code></li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;address receiver&quot;: &quot;0x14723a09acff6d2a60dcdf7aa4aff308fddc160c&quot;,</span><br><span class=\"line\">&quot;uint256 amount&quot;: &quot;2&quot;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Buy-RyanCoin-using-ETH\"><a href=\"#Buy-RyanCoin-using-ETH\" class=\"headerlink\" title=\"Buy RyanCoin using ETH\"></a>Buy RyanCoin using ETH</h1><h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pragma solidity ^0.4.0;</span><br><span class=\"line\">contract RyanCoin &#123;</span><br><span class=\"line\">    mapping (address =&gt; uint) public balances;</span><br><span class=\"line\">    uint constant public PRICE = 2000000000000000000; // 2 ETH as PRICE</span><br><span class=\"line\">    </span><br><span class=\"line\">    function RyanCoin()&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    function buyCoin() payable&#123;     // pay ETH to create coin</span><br><span class=\"line\">        require(msg.value &gt; 0 &amp;&amp; msg.value % PRICE == 0);</span><br><span class=\"line\">        balances[msg.sender] += (msg.value / PRICE);</span><br><span class=\"line\">    &#125;        </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>Set price.</li>\n<li>Anyone can buy coin by paying ETH</li>\n<li><code>require</code> instead of <code>if</code></li>\n<li><code>uint</code> require integer number of coin</li>\n</ol>\n<h2 id=\"Run-1\"><a href=\"#Run-1\" class=\"headerlink\" title=\"Run\"></a>Run</h2><ol>\n<li>Use 1st user to create contract</li>\n<li>Choose 2nd user</li>\n<li>Enter <code>10 ether</code> as value</li>\n<li><code>buyCoin</code></li>\n<li>2nd user receive 5 RyanCoin</li>\n</ol>\n<h1 id=\"Escrow-sol\"><a href=\"#Escrow-sol\" class=\"headerlink\" title=\"Escrow.sol\"></a>Escrow.sol</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pragma solidity ^0.4.0;</span><br><span class=\"line\"></span><br><span class=\"line\">// temperature account where store money during transaction</span><br><span class=\"line\"></span><br><span class=\"line\">contract Escrow &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    address public buyer;</span><br><span class=\"line\">    address public seller;</span><br><span class=\"line\">    address public arbiter;    // settle any dispute</span><br><span class=\"line\">    </span><br><span class=\"line\">    function Escrow(address _buyer, address _seller, address _arbiter)&#123;</span><br><span class=\"line\">        buyer = _buyer;</span><br><span class=\"line\">        seller = _seller;</span><br><span class=\"line\">        arbiter = _arbiter;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    // we have different stages in this contract</span><br><span class=\"line\">    </span><br><span class=\"line\">    function confirmPayment() payable &#123;</span><br><span class=\"line\">        require (msg.sender == buyer);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Auction-sol\"><a href=\"#Auction-sol\" class=\"headerlink\" title=\"Auction.sol\"></a>Auction.sol</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pragma solidity ^0.4.0;</span><br><span class=\"line\"></span><br><span class=\"line\">contract Auction &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    string public description;</span><br><span class=\"line\">    address public owner;</span><br><span class=\"line\">    address public maxBidder;</span><br><span class=\"line\">    uint public maxBid;</span><br><span class=\"line\">    uint public autionEnd;</span><br><span class=\"line\">    mapping(address =&gt; uint) pendingWithdrawals;</span><br><span class=\"line\">    </span><br><span class=\"line\">    event BidAccepted(address bidder, uint bidAmount);</span><br><span class=\"line\">    event AuctionCompleted(address winner, uint bidAmount);</span><br><span class=\"line\">    </span><br><span class=\"line\">    function Auction(uint durationMinutes, string _description)&#123;</span><br><span class=\"line\">        description = _description;</span><br><span class=\"line\">        autionEnd = now + (durationMinutes * 1 minutes); // `now` is global var</span><br><span class=\"line\">        owner = msg.sender;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    // rollback function</span><br><span class=\"line\">    function() payable &#123;</span><br><span class=\"line\">        // fire some log, invoke other function</span><br><span class=\"line\">        throw;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    function bid() payable &#123;</span><br><span class=\"line\">        require(msg.value &gt; maxBid);</span><br><span class=\"line\">        require(now &lt; autionEnd);</span><br><span class=\"line\">        </span><br><span class=\"line\">        if(maxBidder != 0)&#123;</span><br><span class=\"line\">            pendingWithdrawals[maxBidder] += maxBid;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        maxBid = msg.value;</span><br><span class=\"line\">        maxBidder =  msg.sender;</span><br><span class=\"line\">        BidAccepted(maxBidder, maxBid);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    function end()&#123;</span><br><span class=\"line\">        require(msg.sender == owner);</span><br><span class=\"line\">        require(now &gt;= autionEnd);</span><br><span class=\"line\">        </span><br><span class=\"line\">        pendingWithdrawals[owner] = maxBid;</span><br><span class=\"line\">        AuctionCompleted(maxBidder, maxBid);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    function withdraw() returns (bool)&#123;</span><br><span class=\"line\">        uint amount = pendingWithdrawals[msg.sender];</span><br><span class=\"line\">        if(amount &gt; 0)&#123;</span><br><span class=\"line\">            pendingWithdrawals[msg.sender] = 0;</span><br><span class=\"line\">            if(!msg.sender.send(amount))&#123;</span><br><span class=\"line\">                pendingWithdrawals[msg.sender] = amount;</span><br><span class=\"line\">                return false;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return true;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Array Vector Set & Map","date":"2018-11-10T03:55:40.000Z","_content":"\nJava集合的一些基础知识。\n\n# Array\n\nAn array stores a sequence of values\n\n- same type\n- primary type and String\n- fixed size\n\n<!--more-->\n\n3 steps to create an array:\n\n\tint[] a;\t\t\t\t\t\t// 1. declare\n\ta = new int[9];\t\t\t\t\t// 2. create\n\tfor (int i = 0; i < 9; i++) {\t// 3. store values\n\t\ta[i] = i*10;\n\t}\n\nexample:\n\n\tString[] b = new String[]{\"1\", \"2\", \"3\"};\n\tString[] c = {\"1\", \"2\", \"3\"};\n\nTwo-dimensional arrays, e[1][2] = 23:\n\n\tint[][] e = {\t{11,12,13},\n\t\t\t\t\t{21,22,23},\n\t\t\t\t\t{31,32,33}\t};\n\n# Vector\n\n- can grow or shrink\n- access its data using index\n- **similar to ArrayList** but it is synchronised\n- implements List\n\n```\nVector<String> v = new Vector<>();\t// initial capacity is 10.\n```\n\n## Vector VS ArrayList\n\n### Synchronization\n\n- Vector is synchronized, only one thread at a time can access the code (thread-safe)\n- ArrayList is not synchronized, multiple threads can work on arrayList at the same time. (not thread-safe)\n\n### Size\n - ArrayList increments 50% of the current array size\n - Vector increments 100%.\n\n### Traversal\n - Vector: Enumeration and Iterator\n - ArrayList: Iterator\n\n### Usage\nArrayList is newer and faster. usually choose ArrayList\n\n# Set\n\n- unordered collection of objects\n- duplicate values cannot be stored\n\n\t\tSet<String> s = new HashSet<>();\n\t\ts.add(\"1\");\n\t\ts.add(\"2\");\n\t\ts.add(\"3\");\n\t\ts.add(\"3\");\n\t\tSystem.out.println(s);\t// [1, 2, 3]\n\t\ts.get(0)\t// error\n\n\n# Map\n\nNot a subtype of Collection\n\n- mapping between key and value\n- no duplicate keys allowed\n- HashMap had no order, while TreeMap and LinkedHashMap have\n","source":"_posts/Array-Vector-Set-Map.md","raw":"---\ntitle: Array Vector Set & Map\ndate: 2018-11-10 11:55:40\ncategories: Java Basic\ntags: [Java, basic, Array, Vector, Set, Map]\n---\n\nJava集合的一些基础知识。\n\n# Array\n\nAn array stores a sequence of values\n\n- same type\n- primary type and String\n- fixed size\n\n<!--more-->\n\n3 steps to create an array:\n\n\tint[] a;\t\t\t\t\t\t// 1. declare\n\ta = new int[9];\t\t\t\t\t// 2. create\n\tfor (int i = 0; i < 9; i++) {\t// 3. store values\n\t\ta[i] = i*10;\n\t}\n\nexample:\n\n\tString[] b = new String[]{\"1\", \"2\", \"3\"};\n\tString[] c = {\"1\", \"2\", \"3\"};\n\nTwo-dimensional arrays, e[1][2] = 23:\n\n\tint[][] e = {\t{11,12,13},\n\t\t\t\t\t{21,22,23},\n\t\t\t\t\t{31,32,33}\t};\n\n# Vector\n\n- can grow or shrink\n- access its data using index\n- **similar to ArrayList** but it is synchronised\n- implements List\n\n```\nVector<String> v = new Vector<>();\t// initial capacity is 10.\n```\n\n## Vector VS ArrayList\n\n### Synchronization\n\n- Vector is synchronized, only one thread at a time can access the code (thread-safe)\n- ArrayList is not synchronized, multiple threads can work on arrayList at the same time. (not thread-safe)\n\n### Size\n - ArrayList increments 50% of the current array size\n - Vector increments 100%.\n\n### Traversal\n - Vector: Enumeration and Iterator\n - ArrayList: Iterator\n\n### Usage\nArrayList is newer and faster. usually choose ArrayList\n\n# Set\n\n- unordered collection of objects\n- duplicate values cannot be stored\n\n\t\tSet<String> s = new HashSet<>();\n\t\ts.add(\"1\");\n\t\ts.add(\"2\");\n\t\ts.add(\"3\");\n\t\ts.add(\"3\");\n\t\tSystem.out.println(s);\t// [1, 2, 3]\n\t\ts.get(0)\t// error\n\n\n# Map\n\nNot a subtype of Collection\n\n- mapping between key and value\n- no duplicate keys allowed\n- HashMap had no order, while TreeMap and LinkedHashMap have\n","slug":"Array-Vector-Set-Map","published":1,"updated":"2020-04-30T10:35:34.459Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedhr0005sd5tm4l3q7gf","content":"<p>Java集合的一些基础知识。</p>\n<h1 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h1><p>An array stores a sequence of values</p>\n<ul>\n<li>same type</li>\n<li>primary type and String</li>\n<li>fixed size</li>\n</ul>\n<a id=\"more\"></a>\n\n<p>3 steps to create an array:</p>\n<pre><code>int[] a;                        // 1. declare\na = new int[9];                    // 2. create\nfor (int i = 0; i &lt; 9; i++) {    // 3. store values\n    a[i] = i*10;\n}</code></pre><p>example:</p>\n<pre><code>String[] b = new String[]{&quot;1&quot;, &quot;2&quot;, &quot;3&quot;};\nString[] c = {&quot;1&quot;, &quot;2&quot;, &quot;3&quot;};</code></pre><p>Two-dimensional arrays, e[1][2] = 23:</p>\n<pre><code>int[][] e = {    {11,12,13},\n                {21,22,23},\n                {31,32,33}    };</code></pre><h1 id=\"Vector\"><a href=\"#Vector\" class=\"headerlink\" title=\"Vector\"></a>Vector</h1><ul>\n<li>can grow or shrink</li>\n<li>access its data using index</li>\n<li><strong>similar to ArrayList</strong> but it is synchronised</li>\n<li>implements List</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vector&lt;String&gt; v = new Vector&lt;&gt;();\t// initial capacity is 10.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Vector-VS-ArrayList\"><a href=\"#Vector-VS-ArrayList\" class=\"headerlink\" title=\"Vector VS ArrayList\"></a>Vector VS ArrayList</h2><h3 id=\"Synchronization\"><a href=\"#Synchronization\" class=\"headerlink\" title=\"Synchronization\"></a>Synchronization</h3><ul>\n<li>Vector is synchronized, only one thread at a time can access the code (thread-safe)</li>\n<li>ArrayList is not synchronized, multiple threads can work on arrayList at the same time. (not thread-safe)</li>\n</ul>\n<h3 id=\"Size\"><a href=\"#Size\" class=\"headerlink\" title=\"Size\"></a>Size</h3><ul>\n<li>ArrayList increments 50% of the current array size</li>\n<li>Vector increments 100%.</li>\n</ul>\n<h3 id=\"Traversal\"><a href=\"#Traversal\" class=\"headerlink\" title=\"Traversal\"></a>Traversal</h3><ul>\n<li>Vector: Enumeration and Iterator</li>\n<li>ArrayList: Iterator</li>\n</ul>\n<h3 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h3><p>ArrayList is newer and faster. usually choose ArrayList</p>\n<h1 id=\"Set\"><a href=\"#Set\" class=\"headerlink\" title=\"Set\"></a>Set</h1><ul>\n<li><p>unordered collection of objects</p>\n</li>\n<li><p>duplicate values cannot be stored</p>\n<pre><code>Set&lt;String&gt; s = new HashSet&lt;&gt;();\ns.add(&quot;1&quot;);\ns.add(&quot;2&quot;);\ns.add(&quot;3&quot;);\ns.add(&quot;3&quot;);\nSystem.out.println(s);    // [1, 2, 3]\ns.get(0)    // error</code></pre></li>\n</ul>\n<h1 id=\"Map\"><a href=\"#Map\" class=\"headerlink\" title=\"Map\"></a>Map</h1><p>Not a subtype of Collection</p>\n<ul>\n<li>mapping between key and value</li>\n<li>no duplicate keys allowed</li>\n<li>HashMap had no order, while TreeMap and LinkedHashMap have</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>Java集合的一些基础知识。</p>\n<h1 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h1><p>An array stores a sequence of values</p>\n<ul>\n<li>same type</li>\n<li>primary type and String</li>\n<li>fixed size</li>\n</ul>","more":"<p>3 steps to create an array:</p>\n<pre><code>int[] a;                        // 1. declare\na = new int[9];                    // 2. create\nfor (int i = 0; i &lt; 9; i++) {    // 3. store values\n    a[i] = i*10;\n}</code></pre><p>example:</p>\n<pre><code>String[] b = new String[]{&quot;1&quot;, &quot;2&quot;, &quot;3&quot;};\nString[] c = {&quot;1&quot;, &quot;2&quot;, &quot;3&quot;};</code></pre><p>Two-dimensional arrays, e[1][2] = 23:</p>\n<pre><code>int[][] e = {    {11,12,13},\n                {21,22,23},\n                {31,32,33}    };</code></pre><h1 id=\"Vector\"><a href=\"#Vector\" class=\"headerlink\" title=\"Vector\"></a>Vector</h1><ul>\n<li>can grow or shrink</li>\n<li>access its data using index</li>\n<li><strong>similar to ArrayList</strong> but it is synchronised</li>\n<li>implements List</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vector&lt;String&gt; v = new Vector&lt;&gt;();\t// initial capacity is 10.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Vector-VS-ArrayList\"><a href=\"#Vector-VS-ArrayList\" class=\"headerlink\" title=\"Vector VS ArrayList\"></a>Vector VS ArrayList</h2><h3 id=\"Synchronization\"><a href=\"#Synchronization\" class=\"headerlink\" title=\"Synchronization\"></a>Synchronization</h3><ul>\n<li>Vector is synchronized, only one thread at a time can access the code (thread-safe)</li>\n<li>ArrayList is not synchronized, multiple threads can work on arrayList at the same time. (not thread-safe)</li>\n</ul>\n<h3 id=\"Size\"><a href=\"#Size\" class=\"headerlink\" title=\"Size\"></a>Size</h3><ul>\n<li>ArrayList increments 50% of the current array size</li>\n<li>Vector increments 100%.</li>\n</ul>\n<h3 id=\"Traversal\"><a href=\"#Traversal\" class=\"headerlink\" title=\"Traversal\"></a>Traversal</h3><ul>\n<li>Vector: Enumeration and Iterator</li>\n<li>ArrayList: Iterator</li>\n</ul>\n<h3 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h3><p>ArrayList is newer and faster. usually choose ArrayList</p>\n<h1 id=\"Set\"><a href=\"#Set\" class=\"headerlink\" title=\"Set\"></a>Set</h1><ul>\n<li><p>unordered collection of objects</p>\n</li>\n<li><p>duplicate values cannot be stored</p>\n<pre><code>Set&lt;String&gt; s = new HashSet&lt;&gt;();\ns.add(&quot;1&quot;);\ns.add(&quot;2&quot;);\ns.add(&quot;3&quot;);\ns.add(&quot;3&quot;);\nSystem.out.println(s);    // [1, 2, 3]\ns.get(0)    // error</code></pre></li>\n</ul>\n<h1 id=\"Map\"><a href=\"#Map\" class=\"headerlink\" title=\"Map\"></a>Map</h1><p>Not a subtype of Collection</p>\n<ul>\n<li>mapping between key and value</li>\n<li>no duplicate keys allowed</li>\n<li>HashMap had no order, while TreeMap and LinkedHashMap have</li>\n</ul>"},{"title":"AWS Lambda - Pyhton - GMail API","date":"2020-05-18T10:56:52.000Z","_content":"\nThis post includes:\n- use python to get labels from GMail API\n- deploy python package to AWS Lambda\n- setup a AWS gateway API to get labels\n\n<!--more-->\n\n# Get Labels from GMail API using Python\n\nReference: https://developers.google.com/gmail/api/quickstart/python\n\nCreate a working directory: `~/gmail-labels`.\nFollow the reference for `credentials.json` and install library.\nCopy and Edit the code sample to become: `~/gmail-labels/main.py`.\n\n## main.py\n```Python\nimport pickle\nimport os.path\nfrom googleapiclient.discovery import build\nfrom google_auth_oauthlib.flow import InstalledAppFlow\nfrom google.auth.transport.requests import Request\n\n# If modifying these scopes, delete the file token.pickle.\nSCOPES = ['https://www.googleapis.com/auth/gmail.labels']\n\ndef get_creds():\n    creds = None\n    # The file token.pickle stores the user's access and refresh tokens, and is\n    # created automatically when the authorization flow completes for the first time.\n    if os.path.exists('token.pickle'):\n        with open('token.pickle', 'rb') as token:\n            creds = pickle.load(token)\n    # If there are no (valid) credentials available, let the user log in.\n    if not creds or not creds.valid:\n        if creds and creds.expired and creds.refresh_token:\n            creds.refresh(Request())\n        else:\n            flow = InstalledAppFlow.from_client_secrets_file('credentials.json', SCOPES)\n            creds = flow.run_local_server(port=0)\n        # Save the credentials for the next run\n        with open('token.pickle', 'wb') as token:\n            pickle.dump(creds, token)\n    return creds\n\ndef get_service():\n    creds = get_creds()\n    service = build('gmail', 'v1', credentials=creds)\n    return service\n\ndef list(event, context):\n    # Call the Gmail API\n    service = get_service()\n    results = service.users().labels().list(userId='me').execute()\n    labels = results.get('labels', [])\n    #\n    # if not labels:\n    #     print('No labels found.')\n    # else:\n    #     print('Labels:')\n    #     for label in labels:\n    #         print(label)\n    # print(\"======= END of list =======\")\n    return labels\n\ndef get_unreads(event, context):\n    service = get_service()\n    labels = list(None,None)[0:5]\n    labelToUnreadMessage = {}\n    for label in labels:\n        label_details = service.users().labels().get(userId='me', id=label['id']).execute();\n        labelToUnreadMessage[label['id']] = label_details['messagesUnread']\n        # print(\"label:\", label_details)\n    print('labelToUnreadMessage: ', labelToUnreadMessage)\n    return labelToUnreadMessage\n\ndef get_unread(event, context):\n    id = event['id']\n    service = get_service()\n    label_details = service.users().labels().get(userId='me', id=id).execute();\n    result = {}\n    result['id'] = id\n    result['messagesUnread'] = label_details['messagesUnread']\n    print('result: ', result)\n    return result\n\n# get_unread({'id':'INBOX'}, None)\n```\n\n\n# Deploy python package to AWS Lambda\n\nInstall dependencies in the working directory:\n```shell\ncd ~/gmail-labels\npip3 install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib -t .\n```\n\nin `~/gmail-labels`, select all files(55) and compress to a `Archive.zip` (6M).\n\n## AWS Lambda Console\n- upload `Archive.zip`\n- change handler to : `main.get_unread`\n- save\n\n## test event\n```\n{\n  \"id\": \"INBOX\"\n}\n```\n\n\n# AWS Gateway API\n- add resource\n- add method\n- in Method Request, change API key required to true\n- in Integration Request, set mapping:  \n  - When there are no templates defined (recommended)\n  - application/json\n    ```\n    #set($inputRoot = $input.path('$'))\n    {\n      \"id\": \"$input.params('id')\"\n    }\n    ```\n- test\n- deploy API to test stage, get URL\n\n## create a usage plan\nAPI(test) <-> Usage Plan <-> API key(a customer)\n\n\n# PostMan\nGET: https://xxtqwmuo0i.execute-api.us-east-2.amazonaws.com/test/labels?id=INBOX\n\nPut API key to header: `x-api-key`\n\n\n# issues\n\n## Read-only file system: 'token.pickle'\n```\n[Errno 30] Read-only file system: 'token.pickle'\nwith open('token.pickle', 'wb') as token\n```\nmake change:\n```Python\ntoken_path = '/tmp/token.pickle'\n\n# for offline use, token must put into tmp dir first\nif not os.path.exists(token_path):\n    copyfile('token.pickle',token_path)\n\n# The file token.pickle stores the user's access and refresh tokens, and is\n# created automatically when the authorization flow completes for the first time.\nwith open(token_path, 'rb') as token:\n    creds = pickle.load(token)\n```\n","source":"_posts/AWS-Lambda-Pyhton-GMail-API.md","raw":"---\ntitle: AWS Lambda - Pyhton - GMail API\ndate: 2020-05-18 18:56:52\ncategories: AWS\ntags: [AWS, lambda, python, gmail API]\n---\n\nThis post includes:\n- use python to get labels from GMail API\n- deploy python package to AWS Lambda\n- setup a AWS gateway API to get labels\n\n<!--more-->\n\n# Get Labels from GMail API using Python\n\nReference: https://developers.google.com/gmail/api/quickstart/python\n\nCreate a working directory: `~/gmail-labels`.\nFollow the reference for `credentials.json` and install library.\nCopy and Edit the code sample to become: `~/gmail-labels/main.py`.\n\n## main.py\n```Python\nimport pickle\nimport os.path\nfrom googleapiclient.discovery import build\nfrom google_auth_oauthlib.flow import InstalledAppFlow\nfrom google.auth.transport.requests import Request\n\n# If modifying these scopes, delete the file token.pickle.\nSCOPES = ['https://www.googleapis.com/auth/gmail.labels']\n\ndef get_creds():\n    creds = None\n    # The file token.pickle stores the user's access and refresh tokens, and is\n    # created automatically when the authorization flow completes for the first time.\n    if os.path.exists('token.pickle'):\n        with open('token.pickle', 'rb') as token:\n            creds = pickle.load(token)\n    # If there are no (valid) credentials available, let the user log in.\n    if not creds or not creds.valid:\n        if creds and creds.expired and creds.refresh_token:\n            creds.refresh(Request())\n        else:\n            flow = InstalledAppFlow.from_client_secrets_file('credentials.json', SCOPES)\n            creds = flow.run_local_server(port=0)\n        # Save the credentials for the next run\n        with open('token.pickle', 'wb') as token:\n            pickle.dump(creds, token)\n    return creds\n\ndef get_service():\n    creds = get_creds()\n    service = build('gmail', 'v1', credentials=creds)\n    return service\n\ndef list(event, context):\n    # Call the Gmail API\n    service = get_service()\n    results = service.users().labels().list(userId='me').execute()\n    labels = results.get('labels', [])\n    #\n    # if not labels:\n    #     print('No labels found.')\n    # else:\n    #     print('Labels:')\n    #     for label in labels:\n    #         print(label)\n    # print(\"======= END of list =======\")\n    return labels\n\ndef get_unreads(event, context):\n    service = get_service()\n    labels = list(None,None)[0:5]\n    labelToUnreadMessage = {}\n    for label in labels:\n        label_details = service.users().labels().get(userId='me', id=label['id']).execute();\n        labelToUnreadMessage[label['id']] = label_details['messagesUnread']\n        # print(\"label:\", label_details)\n    print('labelToUnreadMessage: ', labelToUnreadMessage)\n    return labelToUnreadMessage\n\ndef get_unread(event, context):\n    id = event['id']\n    service = get_service()\n    label_details = service.users().labels().get(userId='me', id=id).execute();\n    result = {}\n    result['id'] = id\n    result['messagesUnread'] = label_details['messagesUnread']\n    print('result: ', result)\n    return result\n\n# get_unread({'id':'INBOX'}, None)\n```\n\n\n# Deploy python package to AWS Lambda\n\nInstall dependencies in the working directory:\n```shell\ncd ~/gmail-labels\npip3 install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib -t .\n```\n\nin `~/gmail-labels`, select all files(55) and compress to a `Archive.zip` (6M).\n\n## AWS Lambda Console\n- upload `Archive.zip`\n- change handler to : `main.get_unread`\n- save\n\n## test event\n```\n{\n  \"id\": \"INBOX\"\n}\n```\n\n\n# AWS Gateway API\n- add resource\n- add method\n- in Method Request, change API key required to true\n- in Integration Request, set mapping:  \n  - When there are no templates defined (recommended)\n  - application/json\n    ```\n    #set($inputRoot = $input.path('$'))\n    {\n      \"id\": \"$input.params('id')\"\n    }\n    ```\n- test\n- deploy API to test stage, get URL\n\n## create a usage plan\nAPI(test) <-> Usage Plan <-> API key(a customer)\n\n\n# PostMan\nGET: https://xxtqwmuo0i.execute-api.us-east-2.amazonaws.com/test/labels?id=INBOX\n\nPut API key to header: `x-api-key`\n\n\n# issues\n\n## Read-only file system: 'token.pickle'\n```\n[Errno 30] Read-only file system: 'token.pickle'\nwith open('token.pickle', 'wb') as token\n```\nmake change:\n```Python\ntoken_path = '/tmp/token.pickle'\n\n# for offline use, token must put into tmp dir first\nif not os.path.exists(token_path):\n    copyfile('token.pickle',token_path)\n\n# The file token.pickle stores the user's access and refresh tokens, and is\n# created automatically when the authorization flow completes for the first time.\nwith open(token_path, 'rb') as token:\n    creds = pickle.load(token)\n```\n","slug":"AWS-Lambda-Pyhton-GMail-API","published":1,"updated":"2020-05-18T16:15:14.610Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedhs0006sd5tc0m66oim","content":"<p>This post includes:</p>\n<ul>\n<li>use python to get labels from GMail API</li>\n<li>deploy python package to AWS Lambda</li>\n<li>setup a AWS gateway API to get labels</li>\n</ul>\n<a id=\"more\"></a>\n\n<h1 id=\"Get-Labels-from-GMail-API-using-Python\"><a href=\"#Get-Labels-from-GMail-API-using-Python\" class=\"headerlink\" title=\"Get Labels from GMail API using Python\"></a>Get Labels from GMail API using Python</h1><p>Reference: <a href=\"https://developers.google.com/gmail/api/quickstart/python\" target=\"_blank\" rel=\"noopener\">https://developers.google.com/gmail/api/quickstart/python</a></p>\n<p>Create a working directory: <code>~/gmail-labels</code>.<br>Follow the reference for <code>credentials.json</code> and install library.<br>Copy and Edit the code sample to become: <code>~/gmail-labels/main.py</code>.</p>\n<h2 id=\"main-py\"><a href=\"#main-py\" class=\"headerlink\" title=\"main.py\"></a>main.py</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pickle</span><br><span class=\"line\"><span class=\"keyword\">import</span> os.path</span><br><span class=\"line\"><span class=\"keyword\">from</span> googleapiclient.discovery <span class=\"keyword\">import</span> build</span><br><span class=\"line\"><span class=\"keyword\">from</span> google_auth_oauthlib.flow <span class=\"keyword\">import</span> InstalledAppFlow</span><br><span class=\"line\"><span class=\"keyword\">from</span> google.auth.transport.requests <span class=\"keyword\">import</span> Request</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># If modifying these scopes, delete the file token.pickle.</span></span><br><span class=\"line\">SCOPES = [<span class=\"string\">'https://www.googleapis.com/auth/gmail.labels'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_creds</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    creds = <span class=\"keyword\">None</span></span><br><span class=\"line\">    <span class=\"comment\"># The file token.pickle stores the user's access and refresh tokens, and is</span></span><br><span class=\"line\">    <span class=\"comment\"># created automatically when the authorization flow completes for the first time.</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> os.path.exists(<span class=\"string\">'token.pickle'</span>):</span><br><span class=\"line\">        <span class=\"keyword\">with</span> open(<span class=\"string\">'token.pickle'</span>, <span class=\"string\">'rb'</span>) <span class=\"keyword\">as</span> token:</span><br><span class=\"line\">            creds = pickle.load(token)</span><br><span class=\"line\">    <span class=\"comment\"># If there are no (valid) credentials available, let the user log in.</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> creds <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> creds.valid:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> creds <span class=\"keyword\">and</span> creds.expired <span class=\"keyword\">and</span> creds.refresh_token:</span><br><span class=\"line\">            creds.refresh(Request())</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            flow = InstalledAppFlow.from_client_secrets_file(<span class=\"string\">'credentials.json'</span>, SCOPES)</span><br><span class=\"line\">            creds = flow.run_local_server(port=<span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"comment\"># Save the credentials for the next run</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> open(<span class=\"string\">'token.pickle'</span>, <span class=\"string\">'wb'</span>) <span class=\"keyword\">as</span> token:</span><br><span class=\"line\">            pickle.dump(creds, token)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> creds</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_service</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    creds = get_creds()</span><br><span class=\"line\">    service = build(<span class=\"string\">'gmail'</span>, <span class=\"string\">'v1'</span>, credentials=creds)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> service</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">list</span><span class=\"params\">(event, context)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># Call the Gmail API</span></span><br><span class=\"line\">    service = get_service()</span><br><span class=\"line\">    results = service.users().labels().list(userId=<span class=\"string\">'me'</span>).execute()</span><br><span class=\"line\">    labels = results.get(<span class=\"string\">'labels'</span>, [])</span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"comment\"># if not labels:</span></span><br><span class=\"line\">    <span class=\"comment\">#     print('No labels found.')</span></span><br><span class=\"line\">    <span class=\"comment\"># else:</span></span><br><span class=\"line\">    <span class=\"comment\">#     print('Labels:')</span></span><br><span class=\"line\">    <span class=\"comment\">#     for label in labels:</span></span><br><span class=\"line\">    <span class=\"comment\">#         print(label)</span></span><br><span class=\"line\">    <span class=\"comment\"># print(\"======= END of list =======\")</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> labels</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_unreads</span><span class=\"params\">(event, context)</span>:</span></span><br><span class=\"line\">    service = get_service()</span><br><span class=\"line\">    labels = list(<span class=\"keyword\">None</span>,<span class=\"keyword\">None</span>)[<span class=\"number\">0</span>:<span class=\"number\">5</span>]</span><br><span class=\"line\">    labelToUnreadMessage = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> label <span class=\"keyword\">in</span> labels:</span><br><span class=\"line\">        label_details = service.users().labels().get(userId=<span class=\"string\">'me'</span>, id=label[<span class=\"string\">'id'</span>]).execute();</span><br><span class=\"line\">        labelToUnreadMessage[label[<span class=\"string\">'id'</span>]] = label_details[<span class=\"string\">'messagesUnread'</span>]</span><br><span class=\"line\">        <span class=\"comment\"># print(\"label:\", label_details)</span></span><br><span class=\"line\">    print(<span class=\"string\">'labelToUnreadMessage: '</span>, labelToUnreadMessage)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> labelToUnreadMessage</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_unread</span><span class=\"params\">(event, context)</span>:</span></span><br><span class=\"line\">    id = event[<span class=\"string\">'id'</span>]</span><br><span class=\"line\">    service = get_service()</span><br><span class=\"line\">    label_details = service.users().labels().get(userId=<span class=\"string\">'me'</span>, id=id).execute();</span><br><span class=\"line\">    result = &#123;&#125;</span><br><span class=\"line\">    result[<span class=\"string\">'id'</span>] = id</span><br><span class=\"line\">    result[<span class=\"string\">'messagesUnread'</span>] = label_details[<span class=\"string\">'messagesUnread'</span>]</span><br><span class=\"line\">    print(<span class=\"string\">'result: '</span>, result)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># get_unread(&#123;'id':'INBOX'&#125;, None)</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Deploy-python-package-to-AWS-Lambda\"><a href=\"#Deploy-python-package-to-AWS-Lambda\" class=\"headerlink\" title=\"Deploy python package to AWS Lambda\"></a>Deploy python package to AWS Lambda</h1><p>Install dependencies in the working directory:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/gmail-labels</span><br><span class=\"line\">pip3 install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib -t .</span><br></pre></td></tr></table></figure>\n\n<p>in <code>~/gmail-labels</code>, select all files(55) and compress to a <code>Archive.zip</code> (6M).</p>\n<h2 id=\"AWS-Lambda-Console\"><a href=\"#AWS-Lambda-Console\" class=\"headerlink\" title=\"AWS Lambda Console\"></a>AWS Lambda Console</h2><ul>\n<li>upload <code>Archive.zip</code></li>\n<li>change handler to : <code>main.get_unread</code></li>\n<li>save</li>\n</ul>\n<h2 id=\"test-event\"><a href=\"#test-event\" class=\"headerlink\" title=\"test event\"></a>test event</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;id&quot;: &quot;INBOX&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"AWS-Gateway-API\"><a href=\"#AWS-Gateway-API\" class=\"headerlink\" title=\"AWS Gateway API\"></a>AWS Gateway API</h1><ul>\n<li><p>add resource</p>\n</li>\n<li><p>add method</p>\n</li>\n<li><p>in Method Request, change API key required to true</p>\n</li>\n<li><p>in Integration Request, set mapping:  </p>\n<ul>\n<li>When there are no templates defined (recommended)</li>\n<li>application/json<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#set($inputRoot = $input.path(&apos;$&apos;))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;id&quot;: &quot;$input.params(&apos;id&apos;)&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>test</p>\n</li>\n<li><p>deploy API to test stage, get URL</p>\n</li>\n</ul>\n<h2 id=\"create-a-usage-plan\"><a href=\"#create-a-usage-plan\" class=\"headerlink\" title=\"create a usage plan\"></a>create a usage plan</h2><p>API(test) &lt;-&gt; Usage Plan &lt;-&gt; API key(a customer)</p>\n<h1 id=\"PostMan\"><a href=\"#PostMan\" class=\"headerlink\" title=\"PostMan\"></a>PostMan</h1><p>GET: <a href=\"https://xxtqwmuo0i.execute-api.us-east-2.amazonaws.com/test/labels?id=INBOX\" target=\"_blank\" rel=\"noopener\">https://xxtqwmuo0i.execute-api.us-east-2.amazonaws.com/test/labels?id=INBOX</a></p>\n<p>Put API key to header: <code>x-api-key</code></p>\n<h1 id=\"issues\"><a href=\"#issues\" class=\"headerlink\" title=\"issues\"></a>issues</h1><h2 id=\"Read-only-file-system-‘token-pickle’\"><a href=\"#Read-only-file-system-‘token-pickle’\" class=\"headerlink\" title=\"Read-only file system: ‘token.pickle’\"></a>Read-only file system: ‘token.pickle’</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Errno 30] Read-only file system: &apos;token.pickle&apos;</span><br><span class=\"line\">with open(&apos;token.pickle&apos;, &apos;wb&apos;) as token</span><br></pre></td></tr></table></figure>\n\n<p>make change:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">token_path = <span class=\"string\">'/tmp/token.pickle'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for offline use, token must put into tmp dir first</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(token_path):</span><br><span class=\"line\">    copyfile(<span class=\"string\">'token.pickle'</span>,token_path)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The file token.pickle stores the user's access and refresh tokens, and is</span></span><br><span class=\"line\"><span class=\"comment\"># created automatically when the authorization flow completes for the first time.</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> open(token_path, <span class=\"string\">'rb'</span>) <span class=\"keyword\">as</span> token:</span><br><span class=\"line\">    creds = pickle.load(token)</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>This post includes:</p>\n<ul>\n<li>use python to get labels from GMail API</li>\n<li>deploy python package to AWS Lambda</li>\n<li>setup a AWS gateway API to get labels</li>\n</ul>","more":"<h1 id=\"Get-Labels-from-GMail-API-using-Python\"><a href=\"#Get-Labels-from-GMail-API-using-Python\" class=\"headerlink\" title=\"Get Labels from GMail API using Python\"></a>Get Labels from GMail API using Python</h1><p>Reference: <a href=\"https://developers.google.com/gmail/api/quickstart/python\" target=\"_blank\" rel=\"noopener\">https://developers.google.com/gmail/api/quickstart/python</a></p>\n<p>Create a working directory: <code>~/gmail-labels</code>.<br>Follow the reference for <code>credentials.json</code> and install library.<br>Copy and Edit the code sample to become: <code>~/gmail-labels/main.py</code>.</p>\n<h2 id=\"main-py\"><a href=\"#main-py\" class=\"headerlink\" title=\"main.py\"></a>main.py</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pickle</span><br><span class=\"line\"><span class=\"keyword\">import</span> os.path</span><br><span class=\"line\"><span class=\"keyword\">from</span> googleapiclient.discovery <span class=\"keyword\">import</span> build</span><br><span class=\"line\"><span class=\"keyword\">from</span> google_auth_oauthlib.flow <span class=\"keyword\">import</span> InstalledAppFlow</span><br><span class=\"line\"><span class=\"keyword\">from</span> google.auth.transport.requests <span class=\"keyword\">import</span> Request</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># If modifying these scopes, delete the file token.pickle.</span></span><br><span class=\"line\">SCOPES = [<span class=\"string\">'https://www.googleapis.com/auth/gmail.labels'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_creds</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    creds = <span class=\"keyword\">None</span></span><br><span class=\"line\">    <span class=\"comment\"># The file token.pickle stores the user's access and refresh tokens, and is</span></span><br><span class=\"line\">    <span class=\"comment\"># created automatically when the authorization flow completes for the first time.</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> os.path.exists(<span class=\"string\">'token.pickle'</span>):</span><br><span class=\"line\">        <span class=\"keyword\">with</span> open(<span class=\"string\">'token.pickle'</span>, <span class=\"string\">'rb'</span>) <span class=\"keyword\">as</span> token:</span><br><span class=\"line\">            creds = pickle.load(token)</span><br><span class=\"line\">    <span class=\"comment\"># If there are no (valid) credentials available, let the user log in.</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> creds <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> creds.valid:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> creds <span class=\"keyword\">and</span> creds.expired <span class=\"keyword\">and</span> creds.refresh_token:</span><br><span class=\"line\">            creds.refresh(Request())</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            flow = InstalledAppFlow.from_client_secrets_file(<span class=\"string\">'credentials.json'</span>, SCOPES)</span><br><span class=\"line\">            creds = flow.run_local_server(port=<span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"comment\"># Save the credentials for the next run</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> open(<span class=\"string\">'token.pickle'</span>, <span class=\"string\">'wb'</span>) <span class=\"keyword\">as</span> token:</span><br><span class=\"line\">            pickle.dump(creds, token)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> creds</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_service</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    creds = get_creds()</span><br><span class=\"line\">    service = build(<span class=\"string\">'gmail'</span>, <span class=\"string\">'v1'</span>, credentials=creds)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> service</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">list</span><span class=\"params\">(event, context)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># Call the Gmail API</span></span><br><span class=\"line\">    service = get_service()</span><br><span class=\"line\">    results = service.users().labels().list(userId=<span class=\"string\">'me'</span>).execute()</span><br><span class=\"line\">    labels = results.get(<span class=\"string\">'labels'</span>, [])</span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"comment\"># if not labels:</span></span><br><span class=\"line\">    <span class=\"comment\">#     print('No labels found.')</span></span><br><span class=\"line\">    <span class=\"comment\"># else:</span></span><br><span class=\"line\">    <span class=\"comment\">#     print('Labels:')</span></span><br><span class=\"line\">    <span class=\"comment\">#     for label in labels:</span></span><br><span class=\"line\">    <span class=\"comment\">#         print(label)</span></span><br><span class=\"line\">    <span class=\"comment\"># print(\"======= END of list =======\")</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> labels</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_unreads</span><span class=\"params\">(event, context)</span>:</span></span><br><span class=\"line\">    service = get_service()</span><br><span class=\"line\">    labels = list(<span class=\"keyword\">None</span>,<span class=\"keyword\">None</span>)[<span class=\"number\">0</span>:<span class=\"number\">5</span>]</span><br><span class=\"line\">    labelToUnreadMessage = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> label <span class=\"keyword\">in</span> labels:</span><br><span class=\"line\">        label_details = service.users().labels().get(userId=<span class=\"string\">'me'</span>, id=label[<span class=\"string\">'id'</span>]).execute();</span><br><span class=\"line\">        labelToUnreadMessage[label[<span class=\"string\">'id'</span>]] = label_details[<span class=\"string\">'messagesUnread'</span>]</span><br><span class=\"line\">        <span class=\"comment\"># print(\"label:\", label_details)</span></span><br><span class=\"line\">    print(<span class=\"string\">'labelToUnreadMessage: '</span>, labelToUnreadMessage)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> labelToUnreadMessage</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_unread</span><span class=\"params\">(event, context)</span>:</span></span><br><span class=\"line\">    id = event[<span class=\"string\">'id'</span>]</span><br><span class=\"line\">    service = get_service()</span><br><span class=\"line\">    label_details = service.users().labels().get(userId=<span class=\"string\">'me'</span>, id=id).execute();</span><br><span class=\"line\">    result = &#123;&#125;</span><br><span class=\"line\">    result[<span class=\"string\">'id'</span>] = id</span><br><span class=\"line\">    result[<span class=\"string\">'messagesUnread'</span>] = label_details[<span class=\"string\">'messagesUnread'</span>]</span><br><span class=\"line\">    print(<span class=\"string\">'result: '</span>, result)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># get_unread(&#123;'id':'INBOX'&#125;, None)</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Deploy-python-package-to-AWS-Lambda\"><a href=\"#Deploy-python-package-to-AWS-Lambda\" class=\"headerlink\" title=\"Deploy python package to AWS Lambda\"></a>Deploy python package to AWS Lambda</h1><p>Install dependencies in the working directory:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/gmail-labels</span><br><span class=\"line\">pip3 install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib -t .</span><br></pre></td></tr></table></figure>\n\n<p>in <code>~/gmail-labels</code>, select all files(55) and compress to a <code>Archive.zip</code> (6M).</p>\n<h2 id=\"AWS-Lambda-Console\"><a href=\"#AWS-Lambda-Console\" class=\"headerlink\" title=\"AWS Lambda Console\"></a>AWS Lambda Console</h2><ul>\n<li>upload <code>Archive.zip</code></li>\n<li>change handler to : <code>main.get_unread</code></li>\n<li>save</li>\n</ul>\n<h2 id=\"test-event\"><a href=\"#test-event\" class=\"headerlink\" title=\"test event\"></a>test event</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;id&quot;: &quot;INBOX&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"AWS-Gateway-API\"><a href=\"#AWS-Gateway-API\" class=\"headerlink\" title=\"AWS Gateway API\"></a>AWS Gateway API</h1><ul>\n<li><p>add resource</p>\n</li>\n<li><p>add method</p>\n</li>\n<li><p>in Method Request, change API key required to true</p>\n</li>\n<li><p>in Integration Request, set mapping:  </p>\n<ul>\n<li>When there are no templates defined (recommended)</li>\n<li>application/json<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#set($inputRoot = $input.path(&apos;$&apos;))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;id&quot;: &quot;$input.params(&apos;id&apos;)&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>test</p>\n</li>\n<li><p>deploy API to test stage, get URL</p>\n</li>\n</ul>\n<h2 id=\"create-a-usage-plan\"><a href=\"#create-a-usage-plan\" class=\"headerlink\" title=\"create a usage plan\"></a>create a usage plan</h2><p>API(test) &lt;-&gt; Usage Plan &lt;-&gt; API key(a customer)</p>\n<h1 id=\"PostMan\"><a href=\"#PostMan\" class=\"headerlink\" title=\"PostMan\"></a>PostMan</h1><p>GET: <a href=\"https://xxtqwmuo0i.execute-api.us-east-2.amazonaws.com/test/labels?id=INBOX\" target=\"_blank\" rel=\"noopener\">https://xxtqwmuo0i.execute-api.us-east-2.amazonaws.com/test/labels?id=INBOX</a></p>\n<p>Put API key to header: <code>x-api-key</code></p>\n<h1 id=\"issues\"><a href=\"#issues\" class=\"headerlink\" title=\"issues\"></a>issues</h1><h2 id=\"Read-only-file-system-‘token-pickle’\"><a href=\"#Read-only-file-system-‘token-pickle’\" class=\"headerlink\" title=\"Read-only file system: ‘token.pickle’\"></a>Read-only file system: ‘token.pickle’</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Errno 30] Read-only file system: &apos;token.pickle&apos;</span><br><span class=\"line\">with open(&apos;token.pickle&apos;, &apos;wb&apos;) as token</span><br></pre></td></tr></table></figure>\n\n<p>make change:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">token_path = <span class=\"string\">'/tmp/token.pickle'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for offline use, token must put into tmp dir first</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(token_path):</span><br><span class=\"line\">    copyfile(<span class=\"string\">'token.pickle'</span>,token_path)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The file token.pickle stores the user's access and refresh tokens, and is</span></span><br><span class=\"line\"><span class=\"comment\"># created automatically when the authorization flow completes for the first time.</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> open(token_path, <span class=\"string\">'rb'</span>) <span class=\"keyword\">as</span> token:</span><br><span class=\"line\">    creds = pickle.load(token)</span><br></pre></td></tr></table></figure>"},{"title":"Clone Blog to Ubuntu","date":"2017-12-07T04:21:12.000Z","_content":"\nMy current working space for this hexo blog is in windows 10.\n\nThis is how I migrate to Ubuntu.\n\n# upload project to github\n1. create new repo in github called : hexoBlog\n2. If any folders inside are cloned from github. Need to remove git related files:\n\t- .git\n\t- .gitignore\n\t- .github/\n\t- ...<!--more-->\n3. open git bash on blog folder, and run:\n```bash\n$ git init\n$ git add --all\n$ git commit\n$ git remote add origin https://github.com/Ryanluoxu/hexoBlog.git\n$ git push\n```\n4. `git push` may face \"fatal: The current branch master has no upstream branch\". Run:\n```\n$ git push -u origin master\n```\n\nNow project is on the github.\n\n# clone project to Ubuntu\n\n```bash\n$ sudo apt-get install git-core\t#1 install git\n$ mkdir ~/git\t\t\t#2 create folder git under home\n$ cd ~/git\n$ git clone https://github.com/Ryanluoxu/hexoBlog.git\t#3 clone project from github\n```\n\nNow local working space is : ~/git/hexoblog/\n \n\n# installation\n\n```bash\n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash\t#1 install Node Version Manager\n$ nvm install stable\t#2 install Node.js\n$ npm install -g hexo-cli\t#3 install hexo\n```\n\nDone.\n\n","source":"_posts/Clone-Blog-to-Ubuntu.md","raw":"---\ntitle: Clone Blog to Ubuntu\ndate: 2017-12-07 12:21:12\ncategories: 搭建博客\ntags: [blog, hexo, ubuntu, migrate]\n---\n\nMy current working space for this hexo blog is in windows 10.\n\nThis is how I migrate to Ubuntu.\n\n# upload project to github\n1. create new repo in github called : hexoBlog\n2. If any folders inside are cloned from github. Need to remove git related files:\n\t- .git\n\t- .gitignore\n\t- .github/\n\t- ...<!--more-->\n3. open git bash on blog folder, and run:\n```bash\n$ git init\n$ git add --all\n$ git commit\n$ git remote add origin https://github.com/Ryanluoxu/hexoBlog.git\n$ git push\n```\n4. `git push` may face \"fatal: The current branch master has no upstream branch\". Run:\n```\n$ git push -u origin master\n```\n\nNow project is on the github.\n\n# clone project to Ubuntu\n\n```bash\n$ sudo apt-get install git-core\t#1 install git\n$ mkdir ~/git\t\t\t#2 create folder git under home\n$ cd ~/git\n$ git clone https://github.com/Ryanluoxu/hexoBlog.git\t#3 clone project from github\n```\n\nNow local working space is : ~/git/hexoblog/\n \n\n# installation\n\n```bash\n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash\t#1 install Node Version Manager\n$ nvm install stable\t#2 install Node.js\n$ npm install -g hexo-cli\t#3 install hexo\n```\n\nDone.\n\n","slug":"Clone-Blog-to-Ubuntu","published":1,"updated":"2020-04-30T09:23:19.525Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedhu0007sd5ta469xcad","content":"<p>My current working space for this hexo blog is in windows 10.</p>\n<p>This is how I migrate to Ubuntu.</p>\n<h1 id=\"upload-project-to-github\"><a href=\"#upload-project-to-github\" class=\"headerlink\" title=\"upload project to github\"></a>upload project to github</h1><ol>\n<li><p>create new repo in github called : hexoBlog</p>\n</li>\n<li><p>If any folders inside are cloned from github. Need to remove git related files:</p>\n<ul>\n<li>.git</li>\n<li>.gitignore</li>\n<li>.github/</li>\n<li>…<a id=\"more\"></a></li>\n</ul>\n</li>\n<li><p>open git bash on blog folder, and run:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git init</span><br><span class=\"line\">$ git add --all</span><br><span class=\"line\">$ git commit</span><br><span class=\"line\">$ git remote add origin https://github.com/Ryanluoxu/hexoBlog.git</span><br><span class=\"line\">$ git push</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>git push</code> may face “fatal: The current branch master has no upstream branch”. Run:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push -u origin master</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>Now project is on the github.</p>\n<h1 id=\"clone-project-to-Ubuntu\"><a href=\"#clone-project-to-Ubuntu\" class=\"headerlink\" title=\"clone project to Ubuntu\"></a>clone project to Ubuntu</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install git-core\t<span class=\"comment\">#1 install git</span></span><br><span class=\"line\">$ mkdir ~/git\t\t\t<span class=\"comment\">#2 create folder git under home</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/git</span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/Ryanluoxu/hexoBlog.git\t<span class=\"comment\">#3 clone project from github</span></span><br></pre></td></tr></table></figure>\n\n<p>Now local working space is : ~/git/hexoblog/</p>\n<h1 id=\"installation\"><a href=\"#installation\" class=\"headerlink\" title=\"installation\"></a>installation</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash\t<span class=\"comment\">#1 install Node Version Manager</span></span><br><span class=\"line\">$ nvm install stable\t<span class=\"comment\">#2 install Node.js</span></span><br><span class=\"line\">$ npm install -g hexo-cli\t<span class=\"comment\">#3 install hexo</span></span><br></pre></td></tr></table></figure>\n\n<p>Done.</p>\n","site":{"data":{}},"excerpt":"<p>My current working space for this hexo blog is in windows 10.</p>\n<p>This is how I migrate to Ubuntu.</p>\n<h1 id=\"upload-project-to-github\"><a href=\"#upload-project-to-github\" class=\"headerlink\" title=\"upload project to github\"></a>upload project to github</h1><ol>\n<li><p>create new repo in github called : hexoBlog</p>\n</li>\n<li><p>If any folders inside are cloned from github. Need to remove git related files:</p>\n<ul>\n<li>.git</li>\n<li>.gitignore</li>\n<li>.github/</li>\n<li>…","more":"</li>\n</ul>\n</li>\n<li><p>open git bash on blog folder, and run:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git init</span><br><span class=\"line\">$ git add --all</span><br><span class=\"line\">$ git commit</span><br><span class=\"line\">$ git remote add origin https://github.com/Ryanluoxu/hexoBlog.git</span><br><span class=\"line\">$ git push</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>git push</code> may face “fatal: The current branch master has no upstream branch”. Run:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push -u origin master</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>Now project is on the github.</p>\n<h1 id=\"clone-project-to-Ubuntu\"><a href=\"#clone-project-to-Ubuntu\" class=\"headerlink\" title=\"clone project to Ubuntu\"></a>clone project to Ubuntu</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install git-core\t<span class=\"comment\">#1 install git</span></span><br><span class=\"line\">$ mkdir ~/git\t\t\t<span class=\"comment\">#2 create folder git under home</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/git</span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/Ryanluoxu/hexoBlog.git\t<span class=\"comment\">#3 clone project from github</span></span><br></pre></td></tr></table></figure>\n\n<p>Now local working space is : ~/git/hexoblog/</p>\n<h1 id=\"installation\"><a href=\"#installation\" class=\"headerlink\" title=\"installation\"></a>installation</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash\t<span class=\"comment\">#1 install Node Version Manager</span></span><br><span class=\"line\">$ nvm install stable\t<span class=\"comment\">#2 install Node.js</span></span><br><span class=\"line\">$ npm install -g hexo-cli\t<span class=\"comment\">#3 install hexo</span></span><br></pre></td></tr></table></figure>\n\n<p>Done.</p>"},{"title":"Blockchain Demo using Java","date":"2017-04-15T07:34:33.000Z","_content":"\nThis blog will be removed since some of the concepts are wrong.\n\n<!--more-->\n\n# Flow\n\n## New Blockchain()\n\n1. create an empty chain\n2. create genesis block\n\t1. with null previous hash, current timestamp and null transaction\n\t2. calculateHash using SHA256;\n3. add genesis block into chain\n4. define miningReward\n5. create an account list and add system as 1st account\n\n```\n\tpublic Blockchain() {\n\t\tchain = new ArrayList<>();\n\t\tgenesisBlock = createGenesisBlock();\n\t\tchain.add(genesisBlock);\n\t\tdifficulty = 1;\n\t\tpendingTransactions = new ArrayList<>();\n\t\tminingReward = 1000;\n\t\tbonusAmount = 100;\n\t\taccounts = new ArrayList<>();\n\t\taccounts.add(new Account(\"system\", \"system\", 0));\n\t}\n```\n\n\n## Create account\n\n1. user input any string\n2. encript (input+dateTime) to get address and key for a single user\n3. add to account list\n\n```\n\tprivate void createAccount() {\n\t\tSystem.out.print(\"Enter your name : \");\n\t\tString input = scanner.nextLine();\n\t\tDate dateTime = new Date();\n\t\tEncrypt encrypt = new Encrypt();\n\t\tString address = encrypt.SHA256((input+dateTime)).substring(0, 8);\n\t\tString key = encrypt.SHA256((input+dateTime)).substring(8, 16);\n\t\tAccount newAccount = new Account(address, key, 0);\n\t\tblockchain.addAccount(newAccount);\n\t\tSystem.out.println(\"Account created..\");\n\t\tSystem.out.println(\"\\tAddress : \" + address);\n\t\tSystem.out.println(\"\\tkey : \" + key);\n\t\tSystem.out.println(\"\");\n\t}\n```\n\n## Transaction\n\n1. provide fromAddress, fromKey, toAddress and amountStr\n2. check if two addresses are existed and fromKey matches\n3. push this transaction to pendingTransactions\n4. transaction will only take effects after mining (new block is added into chain)\n\n```\n\tvoid createTransaction(Transaction newTransaction, String fromKey) {\n\t\t// verification\n\t\tboolean isValidFromAddress = false;\n\t\tboolean isValidFromKey = false;\n\t\tboolean isValidToAddress = false;\n\n\t\tString fromAddress = newTransaction.getFromAddress();\n\t\tString toAddress = newTransaction.getToAddress();\n\n\t\tfor (Account account : accounts) {\n\t\t\tif (account.getAddress().equals(fromAddress)) {\n\t\t\t\tisValidFromAddress = true;\n\t\t\t\tif (account.getKey().equals(fromKey)) {\n\t\t\t\t\tisValidFromKey = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (Account account : accounts) {\n\t\t\tif (account.getAddress().equals(toAddress)) {\n\t\t\t\tisValidToAddress = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isValidToAddress && isValidFromAddress && isValidFromKey) {\n\t\t\tpendingTransactions.add(newTransaction);\n\t\t} else {\n\t\t\tSystem.out.println(\"Invalid fromAddress, fromKey or toAddress..\");\n\t\t}\n\t}\n```\n\n## Mine Pending Transaction\n\n1. provide miner address\n2. new Block using lastest block hash, current timestamp and pendingTransactions\n3. mine block by passing difficulty (proof of work)\n\t1. by passing increasing nonce to get different hash\n\t2. until 1st two charactars are \"00\" if difficulty is 2\n\t```\n\tvoid mineBlock(int difficulty) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor (int i = 0; i < difficulty; i++) {\n\t\t\tsb.append(\"0\");\n\t\t}\n\t\twhile (!this.hash.substring(0, difficulty).equals(sb.toString())) {\n\t\t\tthis.nonce++;\n\t\t\tthis.hash = this.calculateHash();\n\t\t\tSystem.out.println(\"hash : \" + hash);\n\t\t}\n\t}\n\t```\n4. add new block into the chain\n5. close pending transaction\n\t1. withdraw from fromAddress\n\t2. top up to toAddress\n6. cleare pending transaction\n7. give miner reward in the next block\n\t1. top up system by reward amount\n\t2. system transfer to miner\n\t3. transaction push into pending transaction\n\n```\nvoid minePendingTransaction(String miningRewardAddress) {\n\t\tBlock newBlock = new Block(getLatestBlock().getHash(), new Timestamp(System.currentTimeMillis()), pendingTransactions);\n\t\tnewBlock.mineBlock(difficulty);\n\t\tchain.add(newBlock);\n\n\t\t// close pending transaction\n\t\tfor (Transaction transaction : pendingTransactions) {\n\t\t\t// deduct from FromAddress\n\t\t\tboolean isWithdrawSuccess = false;\n\t\t\tboolean isTopUpSuccess = false;\n\t\t\tfor (Account account : accounts) {\n\t\t\t\tif (account.getAddress().equals(transaction.getFromAddress())) {\n\t\t\t\t\tisWithdrawSuccess = account.withdraw(transaction.getAmount());\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// top up on toAddress\n\t\t\tfor (Account account : accounts) {\n\t\t\t\tif (isWithdrawSuccess) {\n\t\t\t\t\tif (account.getAddress().equals(transaction.getToAddress())) {\n\t\t\t\t\t\tisTopUpSuccess = account.topUp(transaction.getAmount());\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isWithdrawSuccess && !isTopUpSuccess) {\n\t\t\t\tSystem.out.println(\"miningRewardAddress to [\" + miningRewardAddress + \"] is not successful..\");\n\t\t\t}\n\t\t}\n\n\t\t// cleare pending transaction\n\t\tpendingTransactions = new ArrayList<>();\n\n\t\t// reward given in next new block\n\t\taccounts.get(0).topUp(miningReward);\n\t\tpendingTransactions.add(new Transaction(\"system\", miningRewardAddress, miningReward));\n\t}\n```\n\n# Code\n\n## RyanCoin\n```\npackage io.ryanluoxu.blockchain;\n\nimport java.util.Date;\nimport java.util.Scanner;\n\npublic class RyanCoin {\n\n\tstatic String option = \"\";\n\tstatic Scanner scanner = new Scanner(System.in);\n\tstatic Blockchain blockchain;\n\n\tpublic static void main(String[] args) {\n\n\t\tRyanCoin ryanCoin = new RyanCoin();\n\t\tblockchain = new Blockchain();\n\n\t\twhile (!option.equals(\"0\")) {\n\t\t\tryanCoin.printMenu();\n\t\t\tSystem.out.println(\"\");\n\t\t\tSystem.out.print(\"    Please choose : \");\n\t\t\toption = ryanCoin.getOption();\n\t\t\tSystem.out.println(\"\");\n\t\t\tswitch (option) {\n\t\t\tcase \"1\":\n\t\t\t\tryanCoin.createAccount();\n\t\t\t\tbreak;\n\t\t\tcase \"2\":\n\t\t\t\tryanCoin.addTransaction();\n\t\t\t\tbreak;\n\t\t\tcase \"3\":\n\t\t\t\tryanCoin.minePendingTransaction();\n\t\t\t\tbreak;\n\t\t\tcase \"4\":\n\t\t\t\tryanCoin.viewAccount();\n\t\t\t\tbreak;\n\t\t\tcase \"9\":\n\t\t\t\tryanCoin.bonus();\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tSystem.out.println(\"Invalid option..\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate void viewAccount() {\n\t\tblockchain.viewAccount();\n\t}\n\n\tprivate void bonus() {\n\t\tblockchain.bonus();\n\t}\n\n\tprivate void minePendingTransaction() {\n\t\tSystem.out.print(\"Miner address : \");\n\t\tString miningRewardAddress = scanner.nextLine();\n\t\tblockchain.minePendingTransaction(miningRewardAddress);\n\t}\n\n\tprivate void addTransaction() {\n\t\tString fromAddress;\n\t\tString fromKey;\n\t\tString toAddress;\n\t\tString amountStr;\n\n\t\tSystem.out.print(\"From Address : \");\n\t\tfromAddress = scanner.nextLine();\n\t\tSystem.out.print(\"From Key : \");\n\t\tfromKey = scanner.nextLine();\n\t\tSystem.out.print(\"To Address : \");\n\t\ttoAddress = scanner.nextLine();\n\t\tSystem.out.print(\"Transaction Amount : \");\n\t\tamountStr = scanner.nextLine();\n\n\t\ttry {\n\t\t\tdouble amount = Integer.valueOf(amountStr);\n\t\t\tif (amount >= 0) {\n\t\t\t\tblockchain.createTransaction(new Transaction(fromAddress, toAddress, amount), fromKey);\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"Invalid amount..\");\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tSystem.out.println(e);\n\t\t\tSystem.out.println(\"invalid amount..\");\n\t\t}\n\t}\n\n\tprivate void createAccount() {\n\t\tSystem.out.print(\"Enter your name : \");\n\t\tString input = scanner.nextLine();\n\t\tDate dateTime = new Date();\n\t\tEncrypt encrypt = new Encrypt();\n\t\tString address = encrypt.SHA256((input+dateTime)).substring(0, 8);\n\t\tString key = encrypt.SHA256((input+dateTime)).substring(8, 16);\n\t\tAccount newAccount = new Account(address, key, 0);\n\t\tblockchain.addAccount(newAccount);\n\t\tSystem.out.println(\"Account created..\");\n\t\tSystem.out.println(\"\\tAddress : \" + address);\n\t\tSystem.out.println(\"\\tkey : \" + key);\n\t\tSystem.out.println(\"\");\n\t}\n\n\tprivate String getOption() {\n\t\tString result = null;\n\t\tresult = scanner.nextLine();\n\t\treturn result;\n\t}\n\n\tprivate void printMenu() {\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"\\t Ryan Coin 1.0           \");\n\t\tSystem.out.println(\"\\t===============          \");\n\t\tSystem.out.println(\"\\t1. Create Account\");\n\t\tSystem.out.println(\"\\t2. New Transaction\");\n\t\tSystem.out.println(\"\\t3. Mine Pending Transaction\");\n\t\tSystem.out.println(\"\\t4. View Account\");\n\t\tSystem.out.println(\"\\t9. Ryan Bonus\");\n\t\tSystem.out.println(\"\\t0. Destroy coin\");\n\n\t}\n\n}\n```\n\n## Blockchain\n```\npackage io.ryanluoxu.blockchain;\n\nimport java.sql.Timestamp;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Blockchain {\n\n\tprivate List<Block> chain;\n\tprivate Block genesisBlock;\n\tprivate int difficulty;\n\tprivate List<Transaction> pendingTransactions;\n\tprivate long miningReward;\n\tprivate long bonusAmount;\n\tprivate List<Account> accounts;\n\n\tpublic Blockchain() {\n\t\tchain = new ArrayList<>();\n\t\tgenesisBlock = createGenesisBlock();\n\t\tchain.add(genesisBlock);\n\t\t// genesisBlock info\n\t\tSystem.out.println(\"Genesis Block is created:\");\n\t\tSystem.out.println(\"\\tgenesisBlock.hash : \" + genesisBlock.getHash());\n\t\tSystem.out.println(\"\\tgenesisBlock.nonce : \" + genesisBlock.getNonce());\n\t\tSystem.out.println(\"\\tgenesisBlock.timestamp : \" + genesisBlock.getTimestamp());\n\t\tSystem.out.println(\"\");\n\n\t\tdifficulty = 1;\n\t\tpendingTransactions = new ArrayList<>();\n\t\tminingReward = 1000;\n\t\tbonusAmount = 100;\n\t\taccounts = new ArrayList<>();\n\t\taccounts.add(new Account(\"system\", \"system\", 0));\n\t}\n\n\tprivate Block createGenesisBlock() {\n\t\treturn new Block(null, new Timestamp(System.currentTimeMillis()), null);\n\t}\n\n\tprivate Block getLatestBlock(){\n\t\treturn chain.get(chain.size()-1);\n\t}\n\n\tpublic boolean isChainValid() {\n\n\t\tfor (int i = 0; i < chain.size(); i++) {\n\t\t\tBlock currentBlock = chain.get(i);\n\t\t\tBlock previousBlock = chain.get(i-1);\n\n\t\t\tif (currentBlock.getHash() != currentBlock.calculateHash()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (currentBlock.getPreviousHash() != previousBlock.getHash()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tvoid createTransaction(Transaction newTransaction, String fromKey) {\n\t\t// verification\n\t\tboolean isValidFromAddress = false;\n\t\tboolean isValidFromKey = false;\n\t\tboolean isValidToAddress = false;\n\n\t\tString fromAddress = newTransaction.getFromAddress();\n\t\tString toAddress = newTransaction.getToAddress();\n\n\t\tfor (Account account : accounts) {\n\t\t\tif (account.getAddress().equals(fromAddress)) {\n\t\t\t\tisValidFromAddress = true;\n\t\t\t\tif (account.getKey().equals(fromKey)) {\n\t\t\t\t\tisValidFromKey = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (Account account : accounts) {\n\t\t\tif (account.getAddress().equals(toAddress)) {\n\t\t\t\tisValidToAddress = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isValidToAddress && isValidFromAddress && isValidFromKey) {\n\t\t\tpendingTransactions.add(newTransaction);\n\t\t} else {\n\t\t\tSystem.out.println(\"Invalid fromAddress, fromKey or toAddress..\");\n\t\t}\n\t}\n\n\tvoid minePendingTransaction(String miningRewardAddress) {\n\t\tBlock newBlock = new Block(getLatestBlock().getHash(), new Timestamp(System.currentTimeMillis()), pendingTransactions);\n\t\tnewBlock.mineBlock(difficulty);\n\t\tchain.add(newBlock);\n\t\t// newBlock info\n\t\tSystem.out.println(\"new Block is created:\");\n\t\tSystem.out.println(\"\\tnewBlock.previousHash : \" + newBlock.getPreviousHash());\n\t\tSystem.out.println(\"\\tnewBlock.hash : \" + newBlock.getHash());\n\t\tSystem.out.println(\"\\tnewBlock.nonce : \" + newBlock.getNonce());\n\t\tSystem.out.println(\"\\tnewBlock.timestamp : \" + newBlock.getTimestamp());\n\t\tSystem.out.println(\"\");\n\n\t\t// close pending transaction\n\t\tfor (Transaction transaction : pendingTransactions) {\n\t\t\t// deduct from FromAddress\n\t\t\tboolean isWithdrawSuccess = false;\n\t\t\tboolean isTopUpSuccess = false;\n\t\t\tfor (Account account : accounts) {\n\t\t\t\tif (account.getAddress().equals(transaction.getFromAddress())) {\n\t\t\t\t\tisWithdrawSuccess = account.withdraw(transaction.getAmount());\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// top up on toAddress\n\t\t\tfor (Account account : accounts) {\n\t\t\t\tif (isWithdrawSuccess) {\n\t\t\t\t\tif (account.getAddress().equals(transaction.getToAddress())) {\n\t\t\t\t\t\tisTopUpSuccess = account.topUp(transaction.getAmount());\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isWithdrawSuccess && !isTopUpSuccess) {\n\t\t\t\tSystem.out.println(\"miningRewardAddress to [\" + miningRewardAddress + \"] is not successful..\");\n\t\t\t}\n\t\t}\n\n\t\t// cleare pending transaction\n\t\tpendingTransactions = new ArrayList<>();\n\n\t\t// reward given in next new block\n\t\taccounts.get(0).topUp(miningReward);\n//\t\tSystem.out.println(\"System top up mining reward amount : \" + miningReward);\n\t\tpendingTransactions.add(new Transaction(\"system\", miningRewardAddress, miningReward));\n\t}\n\n\tpublic void addAccount(Account newAccount) {\n\t\taccounts.add(newAccount);\n\t}\n\n\tpublic void bonus() {\n\t\tfor (int i = 1; i < accounts.size(); i++) {\n\t\t\taccounts.get(0).topUp(bonusAmount);\n//\t\t\tSystem.out.println(\"System top up bonus amount : \" + bonusAmount);\n\t\t\tpendingTransactions.add(new Transaction(\"system\", accounts.get(i).getAddress(), bonusAmount));\n\t\t}\n\t}\n\n\tpublic void viewAccount() {\n\t\tSystem.out.println(\"View Accounts: \");\n\t\tfor (int i = 1; i < accounts.size(); i++) {\n\t\t\tSystem.out.println(\"\\t\" + accounts.get(i).getAddress() + \" : \" + accounts.get(i).getBalance());\n\t\t}\n\t\tSystem.out.println(\"\");\n\t}\n}\n```\n\n## Block\n\n```\npackage io.ryanluoxu.blockchain;\n\nimport java.sql.Timestamp;\nimport java.util.List;\n\npublic class Block {\n\n\tprivate long nonce;\n\tprivate String previousHash;\n\tprivate Timestamp timestamp;\n\tprivate List<Transaction> transactions;\n\tprivate String hash;\n\n\tpublic Block(String previousHash, Timestamp timestamp, List<Transaction> transactions) {\n\t\tthis.previousHash = previousHash;\n\t\tthis.timestamp = timestamp;\n\t\tthis.transactions = transactions;\n\t\tthis.hash = calculateHash();\n\t\tthis.nonce = 0;\n\t}\n\n\tString calculateHash() {\n\t\tEncrypt encrypt = new Encrypt();\n\t\tString strText = null;\n\t\tif (previousHash == null) {\n\t\t\tif (transactions == null) {\n\t\t\t\tstrText = (\"\" + timestamp + \"\" + nonce).toString();\n\t\t\t} else {\n\t\t\t\tstrText = (\"\" + timestamp + transactions.toString() + nonce).toString();\n\t\t\t}\n\t\t} else {\n\t\t\tstrText = (previousHash + timestamp + transactions.toString() + nonce).toString();\n\t\t}\n//\t\tSystem.out.println(\"strText of block : \"+strText);\n\t\treturn encrypt.SHA256(strText);\n\t}\n\n\tvoid mineBlock(int difficulty) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor (int i = 0; i < difficulty; i++) {\n\t\t\tsb.append(\"0\");\n\t\t}\n\t\twhile (!this.hash.substring(0, difficulty).equals(sb.toString())) {\n\t\t\tthis.nonce++;\n\t\t\tthis.hash = this.calculateHash();\n\t\t\tSystem.out.println(\"hash : \" + hash);\n\t\t}\n\t}\n\n\tpublic long getNonce() {\n\t\treturn nonce;\n\t}\n\n\tpublic String getPreviousHash() {\n\t\treturn previousHash;\n\t}\n\n\tpublic Timestamp getTimestamp() {\n\t\treturn timestamp;\n\t}\n\n\tpublic List<Transaction> getTransactions() {\n\t\treturn transactions;\n\t}\n\n\tpublic String getHash() {\n\t\treturn hash;\n\t}\n\n}\n\n```\n\n## Encrypt\n\n```\npackage io.ryanluoxu.blockchain;\n\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\n\npublic class Encrypt {\n\n\tpublic String SHA256(final String strText) {\n\t\treturn SHA(strText,\"SHA-256\");\n\t}\n\n\tpublic String SHA512(final String strText) {\n\t\treturn SHA(strText,\"SHA-512\");\n\t}\n\n\tprivate String SHA(final String strText, final String strType) {\n\t\tString strResult = null;\n\n\t\tif (strText != null && strText.length() > 0) {\n\n\t\t\tbyte byteBuffer[] = null;\n\n\t\t\ttry {\n\t\t\t\tMessageDigest messageDigest = MessageDigest.getInstance(strType);\n\t\t\t\tmessageDigest.update(strText.getBytes());\n\t\t\t\tbyteBuffer = messageDigest.digest();\n\t\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\n\t\t\tStringBuffer strHexString = new StringBuffer();\n\t\t\tif (byteBuffer != null && byteBuffer.length > 0) {\n\t\t\t\tfor (int i = 0; i < byteBuffer.length; i++) {\n\t\t\t\t\tString hex = Integer.toHexString(0xff & byteBuffer[i]);\n\t\t\t\t\tif (hex.length() == 1) {\n\t\t\t\t\t\tstrHexString.append('0');\n\t\t\t\t\t}\n\t\t\t\t\tstrHexString.append(hex);\n\t\t\t\t}\n\t\t\t\tstrResult = strHexString.toString();\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"messageDigest.digest() fail..\");\n\t\t\t}\n\t\t}\n\t\treturn strResult;\n\t}\n\n}\n```\n\n## Transaction\n\n```\npackage io.ryanluoxu.blockchain;\n\npublic class Transaction {\n\n\tprivate String fromAddress;\n\tprivate String toAddress;\n\tprivate double amount;\n\n\tpublic Transaction(String fromAddress, String toAddress, double amount) {\n\t\tsuper();\n\t\tthis.fromAddress = fromAddress;\n\t\tthis.toAddress = toAddress;\n\t\tthis.amount = amount;\n\t}\n\n\tpublic String getFromAddress() {\n\t\treturn fromAddress;\n\t}\n\n\tpublic void setFromAddress(String fromAddress) {\n\t\tthis.fromAddress = fromAddress;\n\t}\n\n\tpublic String getToAddress() {\n\t\treturn toAddress;\n\t}\n\n\tpublic void setToAddress(String toAddress) {\n\t\tthis.toAddress = toAddress;\n\t}\n\n\tpublic double getAmount() {\n\t\treturn amount;\n\t}\n\n\tpublic void setAmount(double amount) {\n\t\tthis.amount = amount;\n\t}\n\n}\n\n```\n\n## Account\n\n```\npackage io.ryanluoxu.blockchain;\n\npublic class Account {\n\n\tprivate String address;\n\tprivate String key;\n\tprivate double balance;\n\tpublic Account(String address, String key, double balance) {\n\t\tthis.address = address;\n\t\tthis.key = key;\n\t\tthis.balance = balance;\n\t}\n\tpublic String getAddress() {\n\t\treturn address;\n\t}\n\tpublic String getKey() {\n\t\treturn key;\n\t}\n\tpublic double getBalance() {\n\t\treturn balance;\n\t}\n\tpublic boolean topUp(double amount) {\n\t\tbalance += amount;\n\t\tSystem.out.println(\"Top up of [\" + amount + \"] into [\" + address + \"] is successful..\");\n\t\treturn true;\n\t}\n\n\tpublic boolean withdraw(double amount) {\n\t\tif (balance - amount >= 0) {\n\t\t\tbalance -= amount;\n\t\t\tSystem.out.println(\"Withdraw of [\" + amount + \"] from [\" + address + \"] is successful..\");\n\t\t\treturn true;\n\t\t}\n\t\tSystem.out.println(\"Insuffient balance..\");\n\t\treturn false;\n\t}\n}\n\n```\n","source":"_posts/Blockchain-Demo-using-Java.md","raw":"---\ntitle: Blockchain Demo using Java\ndate: 2017-04-15 15:34:33\ncategories: BlockChain\ntags: [BlockChain, Java, demo]\n---\n\nThis blog will be removed since some of the concepts are wrong.\n\n<!--more-->\n\n# Flow\n\n## New Blockchain()\n\n1. create an empty chain\n2. create genesis block\n\t1. with null previous hash, current timestamp and null transaction\n\t2. calculateHash using SHA256;\n3. add genesis block into chain\n4. define miningReward\n5. create an account list and add system as 1st account\n\n```\n\tpublic Blockchain() {\n\t\tchain = new ArrayList<>();\n\t\tgenesisBlock = createGenesisBlock();\n\t\tchain.add(genesisBlock);\n\t\tdifficulty = 1;\n\t\tpendingTransactions = new ArrayList<>();\n\t\tminingReward = 1000;\n\t\tbonusAmount = 100;\n\t\taccounts = new ArrayList<>();\n\t\taccounts.add(new Account(\"system\", \"system\", 0));\n\t}\n```\n\n\n## Create account\n\n1. user input any string\n2. encript (input+dateTime) to get address and key for a single user\n3. add to account list\n\n```\n\tprivate void createAccount() {\n\t\tSystem.out.print(\"Enter your name : \");\n\t\tString input = scanner.nextLine();\n\t\tDate dateTime = new Date();\n\t\tEncrypt encrypt = new Encrypt();\n\t\tString address = encrypt.SHA256((input+dateTime)).substring(0, 8);\n\t\tString key = encrypt.SHA256((input+dateTime)).substring(8, 16);\n\t\tAccount newAccount = new Account(address, key, 0);\n\t\tblockchain.addAccount(newAccount);\n\t\tSystem.out.println(\"Account created..\");\n\t\tSystem.out.println(\"\\tAddress : \" + address);\n\t\tSystem.out.println(\"\\tkey : \" + key);\n\t\tSystem.out.println(\"\");\n\t}\n```\n\n## Transaction\n\n1. provide fromAddress, fromKey, toAddress and amountStr\n2. check if two addresses are existed and fromKey matches\n3. push this transaction to pendingTransactions\n4. transaction will only take effects after mining (new block is added into chain)\n\n```\n\tvoid createTransaction(Transaction newTransaction, String fromKey) {\n\t\t// verification\n\t\tboolean isValidFromAddress = false;\n\t\tboolean isValidFromKey = false;\n\t\tboolean isValidToAddress = false;\n\n\t\tString fromAddress = newTransaction.getFromAddress();\n\t\tString toAddress = newTransaction.getToAddress();\n\n\t\tfor (Account account : accounts) {\n\t\t\tif (account.getAddress().equals(fromAddress)) {\n\t\t\t\tisValidFromAddress = true;\n\t\t\t\tif (account.getKey().equals(fromKey)) {\n\t\t\t\t\tisValidFromKey = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (Account account : accounts) {\n\t\t\tif (account.getAddress().equals(toAddress)) {\n\t\t\t\tisValidToAddress = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isValidToAddress && isValidFromAddress && isValidFromKey) {\n\t\t\tpendingTransactions.add(newTransaction);\n\t\t} else {\n\t\t\tSystem.out.println(\"Invalid fromAddress, fromKey or toAddress..\");\n\t\t}\n\t}\n```\n\n## Mine Pending Transaction\n\n1. provide miner address\n2. new Block using lastest block hash, current timestamp and pendingTransactions\n3. mine block by passing difficulty (proof of work)\n\t1. by passing increasing nonce to get different hash\n\t2. until 1st two charactars are \"00\" if difficulty is 2\n\t```\n\tvoid mineBlock(int difficulty) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor (int i = 0; i < difficulty; i++) {\n\t\t\tsb.append(\"0\");\n\t\t}\n\t\twhile (!this.hash.substring(0, difficulty).equals(sb.toString())) {\n\t\t\tthis.nonce++;\n\t\t\tthis.hash = this.calculateHash();\n\t\t\tSystem.out.println(\"hash : \" + hash);\n\t\t}\n\t}\n\t```\n4. add new block into the chain\n5. close pending transaction\n\t1. withdraw from fromAddress\n\t2. top up to toAddress\n6. cleare pending transaction\n7. give miner reward in the next block\n\t1. top up system by reward amount\n\t2. system transfer to miner\n\t3. transaction push into pending transaction\n\n```\nvoid minePendingTransaction(String miningRewardAddress) {\n\t\tBlock newBlock = new Block(getLatestBlock().getHash(), new Timestamp(System.currentTimeMillis()), pendingTransactions);\n\t\tnewBlock.mineBlock(difficulty);\n\t\tchain.add(newBlock);\n\n\t\t// close pending transaction\n\t\tfor (Transaction transaction : pendingTransactions) {\n\t\t\t// deduct from FromAddress\n\t\t\tboolean isWithdrawSuccess = false;\n\t\t\tboolean isTopUpSuccess = false;\n\t\t\tfor (Account account : accounts) {\n\t\t\t\tif (account.getAddress().equals(transaction.getFromAddress())) {\n\t\t\t\t\tisWithdrawSuccess = account.withdraw(transaction.getAmount());\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// top up on toAddress\n\t\t\tfor (Account account : accounts) {\n\t\t\t\tif (isWithdrawSuccess) {\n\t\t\t\t\tif (account.getAddress().equals(transaction.getToAddress())) {\n\t\t\t\t\t\tisTopUpSuccess = account.topUp(transaction.getAmount());\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isWithdrawSuccess && !isTopUpSuccess) {\n\t\t\t\tSystem.out.println(\"miningRewardAddress to [\" + miningRewardAddress + \"] is not successful..\");\n\t\t\t}\n\t\t}\n\n\t\t// cleare pending transaction\n\t\tpendingTransactions = new ArrayList<>();\n\n\t\t// reward given in next new block\n\t\taccounts.get(0).topUp(miningReward);\n\t\tpendingTransactions.add(new Transaction(\"system\", miningRewardAddress, miningReward));\n\t}\n```\n\n# Code\n\n## RyanCoin\n```\npackage io.ryanluoxu.blockchain;\n\nimport java.util.Date;\nimport java.util.Scanner;\n\npublic class RyanCoin {\n\n\tstatic String option = \"\";\n\tstatic Scanner scanner = new Scanner(System.in);\n\tstatic Blockchain blockchain;\n\n\tpublic static void main(String[] args) {\n\n\t\tRyanCoin ryanCoin = new RyanCoin();\n\t\tblockchain = new Blockchain();\n\n\t\twhile (!option.equals(\"0\")) {\n\t\t\tryanCoin.printMenu();\n\t\t\tSystem.out.println(\"\");\n\t\t\tSystem.out.print(\"    Please choose : \");\n\t\t\toption = ryanCoin.getOption();\n\t\t\tSystem.out.println(\"\");\n\t\t\tswitch (option) {\n\t\t\tcase \"1\":\n\t\t\t\tryanCoin.createAccount();\n\t\t\t\tbreak;\n\t\t\tcase \"2\":\n\t\t\t\tryanCoin.addTransaction();\n\t\t\t\tbreak;\n\t\t\tcase \"3\":\n\t\t\t\tryanCoin.minePendingTransaction();\n\t\t\t\tbreak;\n\t\t\tcase \"4\":\n\t\t\t\tryanCoin.viewAccount();\n\t\t\t\tbreak;\n\t\t\tcase \"9\":\n\t\t\t\tryanCoin.bonus();\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tSystem.out.println(\"Invalid option..\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate void viewAccount() {\n\t\tblockchain.viewAccount();\n\t}\n\n\tprivate void bonus() {\n\t\tblockchain.bonus();\n\t}\n\n\tprivate void minePendingTransaction() {\n\t\tSystem.out.print(\"Miner address : \");\n\t\tString miningRewardAddress = scanner.nextLine();\n\t\tblockchain.minePendingTransaction(miningRewardAddress);\n\t}\n\n\tprivate void addTransaction() {\n\t\tString fromAddress;\n\t\tString fromKey;\n\t\tString toAddress;\n\t\tString amountStr;\n\n\t\tSystem.out.print(\"From Address : \");\n\t\tfromAddress = scanner.nextLine();\n\t\tSystem.out.print(\"From Key : \");\n\t\tfromKey = scanner.nextLine();\n\t\tSystem.out.print(\"To Address : \");\n\t\ttoAddress = scanner.nextLine();\n\t\tSystem.out.print(\"Transaction Amount : \");\n\t\tamountStr = scanner.nextLine();\n\n\t\ttry {\n\t\t\tdouble amount = Integer.valueOf(amountStr);\n\t\t\tif (amount >= 0) {\n\t\t\t\tblockchain.createTransaction(new Transaction(fromAddress, toAddress, amount), fromKey);\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"Invalid amount..\");\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tSystem.out.println(e);\n\t\t\tSystem.out.println(\"invalid amount..\");\n\t\t}\n\t}\n\n\tprivate void createAccount() {\n\t\tSystem.out.print(\"Enter your name : \");\n\t\tString input = scanner.nextLine();\n\t\tDate dateTime = new Date();\n\t\tEncrypt encrypt = new Encrypt();\n\t\tString address = encrypt.SHA256((input+dateTime)).substring(0, 8);\n\t\tString key = encrypt.SHA256((input+dateTime)).substring(8, 16);\n\t\tAccount newAccount = new Account(address, key, 0);\n\t\tblockchain.addAccount(newAccount);\n\t\tSystem.out.println(\"Account created..\");\n\t\tSystem.out.println(\"\\tAddress : \" + address);\n\t\tSystem.out.println(\"\\tkey : \" + key);\n\t\tSystem.out.println(\"\");\n\t}\n\n\tprivate String getOption() {\n\t\tString result = null;\n\t\tresult = scanner.nextLine();\n\t\treturn result;\n\t}\n\n\tprivate void printMenu() {\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"\\t Ryan Coin 1.0           \");\n\t\tSystem.out.println(\"\\t===============          \");\n\t\tSystem.out.println(\"\\t1. Create Account\");\n\t\tSystem.out.println(\"\\t2. New Transaction\");\n\t\tSystem.out.println(\"\\t3. Mine Pending Transaction\");\n\t\tSystem.out.println(\"\\t4. View Account\");\n\t\tSystem.out.println(\"\\t9. Ryan Bonus\");\n\t\tSystem.out.println(\"\\t0. Destroy coin\");\n\n\t}\n\n}\n```\n\n## Blockchain\n```\npackage io.ryanluoxu.blockchain;\n\nimport java.sql.Timestamp;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Blockchain {\n\n\tprivate List<Block> chain;\n\tprivate Block genesisBlock;\n\tprivate int difficulty;\n\tprivate List<Transaction> pendingTransactions;\n\tprivate long miningReward;\n\tprivate long bonusAmount;\n\tprivate List<Account> accounts;\n\n\tpublic Blockchain() {\n\t\tchain = new ArrayList<>();\n\t\tgenesisBlock = createGenesisBlock();\n\t\tchain.add(genesisBlock);\n\t\t// genesisBlock info\n\t\tSystem.out.println(\"Genesis Block is created:\");\n\t\tSystem.out.println(\"\\tgenesisBlock.hash : \" + genesisBlock.getHash());\n\t\tSystem.out.println(\"\\tgenesisBlock.nonce : \" + genesisBlock.getNonce());\n\t\tSystem.out.println(\"\\tgenesisBlock.timestamp : \" + genesisBlock.getTimestamp());\n\t\tSystem.out.println(\"\");\n\n\t\tdifficulty = 1;\n\t\tpendingTransactions = new ArrayList<>();\n\t\tminingReward = 1000;\n\t\tbonusAmount = 100;\n\t\taccounts = new ArrayList<>();\n\t\taccounts.add(new Account(\"system\", \"system\", 0));\n\t}\n\n\tprivate Block createGenesisBlock() {\n\t\treturn new Block(null, new Timestamp(System.currentTimeMillis()), null);\n\t}\n\n\tprivate Block getLatestBlock(){\n\t\treturn chain.get(chain.size()-1);\n\t}\n\n\tpublic boolean isChainValid() {\n\n\t\tfor (int i = 0; i < chain.size(); i++) {\n\t\t\tBlock currentBlock = chain.get(i);\n\t\t\tBlock previousBlock = chain.get(i-1);\n\n\t\t\tif (currentBlock.getHash() != currentBlock.calculateHash()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (currentBlock.getPreviousHash() != previousBlock.getHash()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tvoid createTransaction(Transaction newTransaction, String fromKey) {\n\t\t// verification\n\t\tboolean isValidFromAddress = false;\n\t\tboolean isValidFromKey = false;\n\t\tboolean isValidToAddress = false;\n\n\t\tString fromAddress = newTransaction.getFromAddress();\n\t\tString toAddress = newTransaction.getToAddress();\n\n\t\tfor (Account account : accounts) {\n\t\t\tif (account.getAddress().equals(fromAddress)) {\n\t\t\t\tisValidFromAddress = true;\n\t\t\t\tif (account.getKey().equals(fromKey)) {\n\t\t\t\t\tisValidFromKey = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (Account account : accounts) {\n\t\t\tif (account.getAddress().equals(toAddress)) {\n\t\t\t\tisValidToAddress = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isValidToAddress && isValidFromAddress && isValidFromKey) {\n\t\t\tpendingTransactions.add(newTransaction);\n\t\t} else {\n\t\t\tSystem.out.println(\"Invalid fromAddress, fromKey or toAddress..\");\n\t\t}\n\t}\n\n\tvoid minePendingTransaction(String miningRewardAddress) {\n\t\tBlock newBlock = new Block(getLatestBlock().getHash(), new Timestamp(System.currentTimeMillis()), pendingTransactions);\n\t\tnewBlock.mineBlock(difficulty);\n\t\tchain.add(newBlock);\n\t\t// newBlock info\n\t\tSystem.out.println(\"new Block is created:\");\n\t\tSystem.out.println(\"\\tnewBlock.previousHash : \" + newBlock.getPreviousHash());\n\t\tSystem.out.println(\"\\tnewBlock.hash : \" + newBlock.getHash());\n\t\tSystem.out.println(\"\\tnewBlock.nonce : \" + newBlock.getNonce());\n\t\tSystem.out.println(\"\\tnewBlock.timestamp : \" + newBlock.getTimestamp());\n\t\tSystem.out.println(\"\");\n\n\t\t// close pending transaction\n\t\tfor (Transaction transaction : pendingTransactions) {\n\t\t\t// deduct from FromAddress\n\t\t\tboolean isWithdrawSuccess = false;\n\t\t\tboolean isTopUpSuccess = false;\n\t\t\tfor (Account account : accounts) {\n\t\t\t\tif (account.getAddress().equals(transaction.getFromAddress())) {\n\t\t\t\t\tisWithdrawSuccess = account.withdraw(transaction.getAmount());\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// top up on toAddress\n\t\t\tfor (Account account : accounts) {\n\t\t\t\tif (isWithdrawSuccess) {\n\t\t\t\t\tif (account.getAddress().equals(transaction.getToAddress())) {\n\t\t\t\t\t\tisTopUpSuccess = account.topUp(transaction.getAmount());\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isWithdrawSuccess && !isTopUpSuccess) {\n\t\t\t\tSystem.out.println(\"miningRewardAddress to [\" + miningRewardAddress + \"] is not successful..\");\n\t\t\t}\n\t\t}\n\n\t\t// cleare pending transaction\n\t\tpendingTransactions = new ArrayList<>();\n\n\t\t// reward given in next new block\n\t\taccounts.get(0).topUp(miningReward);\n//\t\tSystem.out.println(\"System top up mining reward amount : \" + miningReward);\n\t\tpendingTransactions.add(new Transaction(\"system\", miningRewardAddress, miningReward));\n\t}\n\n\tpublic void addAccount(Account newAccount) {\n\t\taccounts.add(newAccount);\n\t}\n\n\tpublic void bonus() {\n\t\tfor (int i = 1; i < accounts.size(); i++) {\n\t\t\taccounts.get(0).topUp(bonusAmount);\n//\t\t\tSystem.out.println(\"System top up bonus amount : \" + bonusAmount);\n\t\t\tpendingTransactions.add(new Transaction(\"system\", accounts.get(i).getAddress(), bonusAmount));\n\t\t}\n\t}\n\n\tpublic void viewAccount() {\n\t\tSystem.out.println(\"View Accounts: \");\n\t\tfor (int i = 1; i < accounts.size(); i++) {\n\t\t\tSystem.out.println(\"\\t\" + accounts.get(i).getAddress() + \" : \" + accounts.get(i).getBalance());\n\t\t}\n\t\tSystem.out.println(\"\");\n\t}\n}\n```\n\n## Block\n\n```\npackage io.ryanluoxu.blockchain;\n\nimport java.sql.Timestamp;\nimport java.util.List;\n\npublic class Block {\n\n\tprivate long nonce;\n\tprivate String previousHash;\n\tprivate Timestamp timestamp;\n\tprivate List<Transaction> transactions;\n\tprivate String hash;\n\n\tpublic Block(String previousHash, Timestamp timestamp, List<Transaction> transactions) {\n\t\tthis.previousHash = previousHash;\n\t\tthis.timestamp = timestamp;\n\t\tthis.transactions = transactions;\n\t\tthis.hash = calculateHash();\n\t\tthis.nonce = 0;\n\t}\n\n\tString calculateHash() {\n\t\tEncrypt encrypt = new Encrypt();\n\t\tString strText = null;\n\t\tif (previousHash == null) {\n\t\t\tif (transactions == null) {\n\t\t\t\tstrText = (\"\" + timestamp + \"\" + nonce).toString();\n\t\t\t} else {\n\t\t\t\tstrText = (\"\" + timestamp + transactions.toString() + nonce).toString();\n\t\t\t}\n\t\t} else {\n\t\t\tstrText = (previousHash + timestamp + transactions.toString() + nonce).toString();\n\t\t}\n//\t\tSystem.out.println(\"strText of block : \"+strText);\n\t\treturn encrypt.SHA256(strText);\n\t}\n\n\tvoid mineBlock(int difficulty) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor (int i = 0; i < difficulty; i++) {\n\t\t\tsb.append(\"0\");\n\t\t}\n\t\twhile (!this.hash.substring(0, difficulty).equals(sb.toString())) {\n\t\t\tthis.nonce++;\n\t\t\tthis.hash = this.calculateHash();\n\t\t\tSystem.out.println(\"hash : \" + hash);\n\t\t}\n\t}\n\n\tpublic long getNonce() {\n\t\treturn nonce;\n\t}\n\n\tpublic String getPreviousHash() {\n\t\treturn previousHash;\n\t}\n\n\tpublic Timestamp getTimestamp() {\n\t\treturn timestamp;\n\t}\n\n\tpublic List<Transaction> getTransactions() {\n\t\treturn transactions;\n\t}\n\n\tpublic String getHash() {\n\t\treturn hash;\n\t}\n\n}\n\n```\n\n## Encrypt\n\n```\npackage io.ryanluoxu.blockchain;\n\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\n\npublic class Encrypt {\n\n\tpublic String SHA256(final String strText) {\n\t\treturn SHA(strText,\"SHA-256\");\n\t}\n\n\tpublic String SHA512(final String strText) {\n\t\treturn SHA(strText,\"SHA-512\");\n\t}\n\n\tprivate String SHA(final String strText, final String strType) {\n\t\tString strResult = null;\n\n\t\tif (strText != null && strText.length() > 0) {\n\n\t\t\tbyte byteBuffer[] = null;\n\n\t\t\ttry {\n\t\t\t\tMessageDigest messageDigest = MessageDigest.getInstance(strType);\n\t\t\t\tmessageDigest.update(strText.getBytes());\n\t\t\t\tbyteBuffer = messageDigest.digest();\n\t\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\n\t\t\tStringBuffer strHexString = new StringBuffer();\n\t\t\tif (byteBuffer != null && byteBuffer.length > 0) {\n\t\t\t\tfor (int i = 0; i < byteBuffer.length; i++) {\n\t\t\t\t\tString hex = Integer.toHexString(0xff & byteBuffer[i]);\n\t\t\t\t\tif (hex.length() == 1) {\n\t\t\t\t\t\tstrHexString.append('0');\n\t\t\t\t\t}\n\t\t\t\t\tstrHexString.append(hex);\n\t\t\t\t}\n\t\t\t\tstrResult = strHexString.toString();\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"messageDigest.digest() fail..\");\n\t\t\t}\n\t\t}\n\t\treturn strResult;\n\t}\n\n}\n```\n\n## Transaction\n\n```\npackage io.ryanluoxu.blockchain;\n\npublic class Transaction {\n\n\tprivate String fromAddress;\n\tprivate String toAddress;\n\tprivate double amount;\n\n\tpublic Transaction(String fromAddress, String toAddress, double amount) {\n\t\tsuper();\n\t\tthis.fromAddress = fromAddress;\n\t\tthis.toAddress = toAddress;\n\t\tthis.amount = amount;\n\t}\n\n\tpublic String getFromAddress() {\n\t\treturn fromAddress;\n\t}\n\n\tpublic void setFromAddress(String fromAddress) {\n\t\tthis.fromAddress = fromAddress;\n\t}\n\n\tpublic String getToAddress() {\n\t\treturn toAddress;\n\t}\n\n\tpublic void setToAddress(String toAddress) {\n\t\tthis.toAddress = toAddress;\n\t}\n\n\tpublic double getAmount() {\n\t\treturn amount;\n\t}\n\n\tpublic void setAmount(double amount) {\n\t\tthis.amount = amount;\n\t}\n\n}\n\n```\n\n## Account\n\n```\npackage io.ryanluoxu.blockchain;\n\npublic class Account {\n\n\tprivate String address;\n\tprivate String key;\n\tprivate double balance;\n\tpublic Account(String address, String key, double balance) {\n\t\tthis.address = address;\n\t\tthis.key = key;\n\t\tthis.balance = balance;\n\t}\n\tpublic String getAddress() {\n\t\treturn address;\n\t}\n\tpublic String getKey() {\n\t\treturn key;\n\t}\n\tpublic double getBalance() {\n\t\treturn balance;\n\t}\n\tpublic boolean topUp(double amount) {\n\t\tbalance += amount;\n\t\tSystem.out.println(\"Top up of [\" + amount + \"] into [\" + address + \"] is successful..\");\n\t\treturn true;\n\t}\n\n\tpublic boolean withdraw(double amount) {\n\t\tif (balance - amount >= 0) {\n\t\t\tbalance -= amount;\n\t\t\tSystem.out.println(\"Withdraw of [\" + amount + \"] from [\" + address + \"] is successful..\");\n\t\t\treturn true;\n\t\t}\n\t\tSystem.out.println(\"Insuffient balance..\");\n\t\treturn false;\n\t}\n}\n\n```\n","slug":"Blockchain-Demo-using-Java","published":1,"updated":"2020-04-30T09:44:14.521Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedhv0008sd5txww3fqwu","content":"<p>This blog will be removed since some of the concepts are wrong.</p>\n<a id=\"more\"></a>\n\n<h1 id=\"Flow\"><a href=\"#Flow\" class=\"headerlink\" title=\"Flow\"></a>Flow</h1><h2 id=\"New-Blockchain\"><a href=\"#New-Blockchain\" class=\"headerlink\" title=\"New Blockchain()\"></a>New Blockchain()</h2><ol>\n<li>create an empty chain</li>\n<li>create genesis block<ol>\n<li>with null previous hash, current timestamp and null transaction</li>\n<li>calculateHash using SHA256;</li>\n</ol>\n</li>\n<li>add genesis block into chain</li>\n<li>define miningReward</li>\n<li>create an account list and add system as 1st account</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public Blockchain() &#123;</span><br><span class=\"line\">\tchain = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\tgenesisBlock = createGenesisBlock();</span><br><span class=\"line\">\tchain.add(genesisBlock);</span><br><span class=\"line\">\tdifficulty = 1;</span><br><span class=\"line\">\tpendingTransactions = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\tminingReward = 1000;</span><br><span class=\"line\">\tbonusAmount = 100;</span><br><span class=\"line\">\taccounts = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\taccounts.add(new Account(&quot;system&quot;, &quot;system&quot;, 0));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Create-account\"><a href=\"#Create-account\" class=\"headerlink\" title=\"Create account\"></a>Create account</h2><ol>\n<li>user input any string</li>\n<li>encript (input+dateTime) to get address and key for a single user</li>\n<li>add to account list</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private void createAccount() &#123;</span><br><span class=\"line\">\tSystem.out.print(&quot;Enter your name : &quot;);</span><br><span class=\"line\">\tString input = scanner.nextLine();</span><br><span class=\"line\">\tDate dateTime = new Date();</span><br><span class=\"line\">\tEncrypt encrypt = new Encrypt();</span><br><span class=\"line\">\tString address = encrypt.SHA256((input+dateTime)).substring(0, 8);</span><br><span class=\"line\">\tString key = encrypt.SHA256((input+dateTime)).substring(8, 16);</span><br><span class=\"line\">\tAccount newAccount = new Account(address, key, 0);</span><br><span class=\"line\">\tblockchain.addAccount(newAccount);</span><br><span class=\"line\">\tSystem.out.println(&quot;Account created..&quot;);</span><br><span class=\"line\">\tSystem.out.println(&quot;\\tAddress : &quot; + address);</span><br><span class=\"line\">\tSystem.out.println(&quot;\\tkey : &quot; + key);</span><br><span class=\"line\">\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Transaction\"><a href=\"#Transaction\" class=\"headerlink\" title=\"Transaction\"></a>Transaction</h2><ol>\n<li>provide fromAddress, fromKey, toAddress and amountStr</li>\n<li>check if two addresses are existed and fromKey matches</li>\n<li>push this transaction to pendingTransactions</li>\n<li>transaction will only take effects after mining (new block is added into chain)</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void createTransaction(Transaction newTransaction, String fromKey) &#123;</span><br><span class=\"line\">\t// verification</span><br><span class=\"line\">\tboolean isValidFromAddress = false;</span><br><span class=\"line\">\tboolean isValidFromKey = false;</span><br><span class=\"line\">\tboolean isValidToAddress = false;</span><br><span class=\"line\"></span><br><span class=\"line\">\tString fromAddress = newTransaction.getFromAddress();</span><br><span class=\"line\">\tString toAddress = newTransaction.getToAddress();</span><br><span class=\"line\"></span><br><span class=\"line\">\tfor (Account account : accounts) &#123;</span><br><span class=\"line\">\t\tif (account.getAddress().equals(fromAddress)) &#123;</span><br><span class=\"line\">\t\t\tisValidFromAddress = true;</span><br><span class=\"line\">\t\t\tif (account.getKey().equals(fromKey)) &#123;</span><br><span class=\"line\">\t\t\t\tisValidFromKey = true;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tbreak;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfor (Account account : accounts) &#123;</span><br><span class=\"line\">\t\tif (account.getAddress().equals(toAddress)) &#123;</span><br><span class=\"line\">\t\t\tisValidToAddress = true;</span><br><span class=\"line\">\t\t\tbreak;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tif (isValidToAddress &amp;&amp; isValidFromAddress &amp;&amp; isValidFromKey) &#123;</span><br><span class=\"line\">\t\tpendingTransactions.add(newTransaction);</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Invalid fromAddress, fromKey or toAddress..&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Mine-Pending-Transaction\"><a href=\"#Mine-Pending-Transaction\" class=\"headerlink\" title=\"Mine Pending Transaction\"></a>Mine Pending Transaction</h2><ol>\n<li><p>provide miner address</p>\n</li>\n<li><p>new Block using lastest block hash, current timestamp and pendingTransactions</p>\n</li>\n<li><p>mine block by passing difficulty (proof of work)</p>\n<ol>\n<li>by passing increasing nonce to get different hash</li>\n<li>until 1st two charactars are “00” if difficulty is 2<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void mineBlock(int difficulty) &#123;</span><br><span class=\"line\">\tStringBuilder sb = new StringBuilder();</span><br><span class=\"line\">\tfor (int i = 0; i &lt; difficulty; i++) &#123;</span><br><span class=\"line\">\t\tsb.append(&quot;0&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\twhile (!this.hash.substring(0, difficulty).equals(sb.toString())) &#123;</span><br><span class=\"line\">\t\tthis.nonce++;</span><br><span class=\"line\">\t\tthis.hash = this.calculateHash();</span><br><span class=\"line\">\t\tSystem.out.println(&quot;hash : &quot; + hash);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n<li><p>add new block into the chain</p>\n</li>\n<li><p>close pending transaction</p>\n<ol>\n<li>withdraw from fromAddress</li>\n<li>top up to toAddress</li>\n</ol>\n</li>\n<li><p>cleare pending transaction</p>\n</li>\n<li><p>give miner reward in the next block</p>\n<ol>\n<li>top up system by reward amount</li>\n<li>system transfer to miner</li>\n<li>transaction push into pending transaction</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void minePendingTransaction(String miningRewardAddress) &#123;</span><br><span class=\"line\">\t\tBlock newBlock = new Block(getLatestBlock().getHash(), new Timestamp(System.currentTimeMillis()), pendingTransactions);</span><br><span class=\"line\">\t\tnewBlock.mineBlock(difficulty);</span><br><span class=\"line\">\t\tchain.add(newBlock);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t// close pending transaction</span><br><span class=\"line\">\t\tfor (Transaction transaction : pendingTransactions) &#123;</span><br><span class=\"line\">\t\t\t// deduct from FromAddress</span><br><span class=\"line\">\t\t\tboolean isWithdrawSuccess = false;</span><br><span class=\"line\">\t\t\tboolean isTopUpSuccess = false;</span><br><span class=\"line\">\t\t\tfor (Account account : accounts) &#123;</span><br><span class=\"line\">\t\t\t\tif (account.getAddress().equals(transaction.getFromAddress())) &#123;</span><br><span class=\"line\">\t\t\t\t\tisWithdrawSuccess = account.withdraw(transaction.getAmount());</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t// top up on toAddress</span><br><span class=\"line\">\t\t\tfor (Account account : accounts) &#123;</span><br><span class=\"line\">\t\t\t\tif (isWithdrawSuccess) &#123;</span><br><span class=\"line\">\t\t\t\t\tif (account.getAddress().equals(transaction.getToAddress())) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tisTopUpSuccess = account.topUp(transaction.getAmount());</span><br><span class=\"line\">\t\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tif (isWithdrawSuccess &amp;&amp; !isTopUpSuccess) &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;miningRewardAddress to [&quot; + miningRewardAddress + &quot;] is not successful..&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t// cleare pending transaction</span><br><span class=\"line\">\t\tpendingTransactions = new ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t// reward given in next new block</span><br><span class=\"line\">\t\taccounts.get(0).topUp(miningReward);</span><br><span class=\"line\">\t\tpendingTransactions.add(new Transaction(&quot;system&quot;, miningRewardAddress, miningReward));</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h1><h2 id=\"RyanCoin\"><a href=\"#RyanCoin\" class=\"headerlink\" title=\"RyanCoin\"></a>RyanCoin</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package io.ryanluoxu.blockchain;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.Date;</span><br><span class=\"line\">import java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\">public class RyanCoin &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstatic String option = &quot;&quot;;</span><br><span class=\"line\">\tstatic Scanner scanner = new Scanner(System.in);</span><br><span class=\"line\">\tstatic Blockchain blockchain;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tRyanCoin ryanCoin = new RyanCoin();</span><br><span class=\"line\">\t\tblockchain = new Blockchain();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\twhile (!option.equals(&quot;0&quot;)) &#123;</span><br><span class=\"line\">\t\t\tryanCoin.printMenu();</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t\t\tSystem.out.print(&quot;    Please choose : &quot;);</span><br><span class=\"line\">\t\t\toption = ryanCoin.getOption();</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t\t\tswitch (option) &#123;</span><br><span class=\"line\">\t\t\tcase &quot;1&quot;:</span><br><span class=\"line\">\t\t\t\tryanCoin.createAccount();</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\tcase &quot;2&quot;:</span><br><span class=\"line\">\t\t\t\tryanCoin.addTransaction();</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\tcase &quot;3&quot;:</span><br><span class=\"line\">\t\t\t\tryanCoin.minePendingTransaction();</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\tcase &quot;4&quot;:</span><br><span class=\"line\">\t\t\t\tryanCoin.viewAccount();</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\tcase &quot;9&quot;:</span><br><span class=\"line\">\t\t\t\tryanCoin.bonus();</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tdefault:</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;Invalid option..&quot;);</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void viewAccount() &#123;</span><br><span class=\"line\">\t\tblockchain.viewAccount();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void bonus() &#123;</span><br><span class=\"line\">\t\tblockchain.bonus();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void minePendingTransaction() &#123;</span><br><span class=\"line\">\t\tSystem.out.print(&quot;Miner address : &quot;);</span><br><span class=\"line\">\t\tString miningRewardAddress = scanner.nextLine();</span><br><span class=\"line\">\t\tblockchain.minePendingTransaction(miningRewardAddress);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void addTransaction() &#123;</span><br><span class=\"line\">\t\tString fromAddress;</span><br><span class=\"line\">\t\tString fromKey;</span><br><span class=\"line\">\t\tString toAddress;</span><br><span class=\"line\">\t\tString amountStr;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSystem.out.print(&quot;From Address : &quot;);</span><br><span class=\"line\">\t\tfromAddress = scanner.nextLine();</span><br><span class=\"line\">\t\tSystem.out.print(&quot;From Key : &quot;);</span><br><span class=\"line\">\t\tfromKey = scanner.nextLine();</span><br><span class=\"line\">\t\tSystem.out.print(&quot;To Address : &quot;);</span><br><span class=\"line\">\t\ttoAddress = scanner.nextLine();</span><br><span class=\"line\">\t\tSystem.out.print(&quot;Transaction Amount : &quot;);</span><br><span class=\"line\">\t\tamountStr = scanner.nextLine();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\ttry &#123;</span><br><span class=\"line\">\t\t\tdouble amount = Integer.valueOf(amountStr);</span><br><span class=\"line\">\t\t\tif (amount &gt;= 0) &#123;</span><br><span class=\"line\">\t\t\t\tblockchain.createTransaction(new Transaction(fromAddress, toAddress, amount), fromKey);</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;Invalid amount..&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(e);</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;invalid amount..&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void createAccount() &#123;</span><br><span class=\"line\">\t\tSystem.out.print(&quot;Enter your name : &quot;);</span><br><span class=\"line\">\t\tString input = scanner.nextLine();</span><br><span class=\"line\">\t\tDate dateTime = new Date();</span><br><span class=\"line\">\t\tEncrypt encrypt = new Encrypt();</span><br><span class=\"line\">\t\tString address = encrypt.SHA256((input+dateTime)).substring(0, 8);</span><br><span class=\"line\">\t\tString key = encrypt.SHA256((input+dateTime)).substring(8, 16);</span><br><span class=\"line\">\t\tAccount newAccount = new Account(address, key, 0);</span><br><span class=\"line\">\t\tblockchain.addAccount(newAccount);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Account created..&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\tAddress : &quot; + address);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\tkey : &quot; + key);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String getOption() &#123;</span><br><span class=\"line\">\t\tString result = null;</span><br><span class=\"line\">\t\tresult = scanner.nextLine();</span><br><span class=\"line\">\t\treturn result;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void printMenu() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\t Ryan Coin 1.0           &quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\t===============          &quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\t1. Create Account&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\t2. New Transaction&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\t3. Mine Pending Transaction&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\t4. View Account&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\t9. Ryan Bonus&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\t0. Destroy coin&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Blockchain\"><a href=\"#Blockchain\" class=\"headerlink\" title=\"Blockchain\"></a>Blockchain</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package io.ryanluoxu.blockchain;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.sql.Timestamp;</span><br><span class=\"line\">import java.util.ArrayList;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Blockchain &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate List&lt;Block&gt; chain;</span><br><span class=\"line\">\tprivate Block genesisBlock;</span><br><span class=\"line\">\tprivate int difficulty;</span><br><span class=\"line\">\tprivate List&lt;Transaction&gt; pendingTransactions;</span><br><span class=\"line\">\tprivate long miningReward;</span><br><span class=\"line\">\tprivate long bonusAmount;</span><br><span class=\"line\">\tprivate List&lt;Account&gt; accounts;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic Blockchain() &#123;</span><br><span class=\"line\">\t\tchain = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t\tgenesisBlock = createGenesisBlock();</span><br><span class=\"line\">\t\tchain.add(genesisBlock);</span><br><span class=\"line\">\t\t// genesisBlock info</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Genesis Block is created:&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\tgenesisBlock.hash : &quot; + genesisBlock.getHash());</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\tgenesisBlock.nonce : &quot; + genesisBlock.getNonce());</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\tgenesisBlock.timestamp : &quot; + genesisBlock.getTimestamp());</span><br><span class=\"line\">\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdifficulty = 1;</span><br><span class=\"line\">\t\tpendingTransactions = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t\tminingReward = 1000;</span><br><span class=\"line\">\t\tbonusAmount = 100;</span><br><span class=\"line\">\t\taccounts = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t\taccounts.add(new Account(&quot;system&quot;, &quot;system&quot;, 0));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate Block createGenesisBlock() &#123;</span><br><span class=\"line\">\t\treturn new Block(null, new Timestamp(System.currentTimeMillis()), null);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate Block getLatestBlock()&#123;</span><br><span class=\"line\">\t\treturn chain.get(chain.size()-1);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic boolean isChainValid() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tfor (int i = 0; i &lt; chain.size(); i++) &#123;</span><br><span class=\"line\">\t\t\tBlock currentBlock = chain.get(i);</span><br><span class=\"line\">\t\t\tBlock previousBlock = chain.get(i-1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tif (currentBlock.getHash() != currentBlock.calculateHash()) &#123;</span><br><span class=\"line\">\t\t\t\treturn false;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tif (currentBlock.getPreviousHash() != previousBlock.getHash()) &#123;</span><br><span class=\"line\">\t\t\t\treturn false;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\treturn true;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvoid createTransaction(Transaction newTransaction, String fromKey) &#123;</span><br><span class=\"line\">\t\t// verification</span><br><span class=\"line\">\t\tboolean isValidFromAddress = false;</span><br><span class=\"line\">\t\tboolean isValidFromKey = false;</span><br><span class=\"line\">\t\tboolean isValidToAddress = false;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tString fromAddress = newTransaction.getFromAddress();</span><br><span class=\"line\">\t\tString toAddress = newTransaction.getToAddress();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tfor (Account account : accounts) &#123;</span><br><span class=\"line\">\t\t\tif (account.getAddress().equals(fromAddress)) &#123;</span><br><span class=\"line\">\t\t\t\tisValidFromAddress = true;</span><br><span class=\"line\">\t\t\t\tif (account.getKey().equals(fromKey)) &#123;</span><br><span class=\"line\">\t\t\t\t\tisValidFromKey = true;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tfor (Account account : accounts) &#123;</span><br><span class=\"line\">\t\t\tif (account.getAddress().equals(toAddress)) &#123;</span><br><span class=\"line\">\t\t\t\tisValidToAddress = true;</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tif (isValidToAddress &amp;&amp; isValidFromAddress &amp;&amp; isValidFromKey) &#123;</span><br><span class=\"line\">\t\t\tpendingTransactions.add(newTransaction);</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;Invalid fromAddress, fromKey or toAddress..&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvoid minePendingTransaction(String miningRewardAddress) &#123;</span><br><span class=\"line\">\t\tBlock newBlock = new Block(getLatestBlock().getHash(), new Timestamp(System.currentTimeMillis()), pendingTransactions);</span><br><span class=\"line\">\t\tnewBlock.mineBlock(difficulty);</span><br><span class=\"line\">\t\tchain.add(newBlock);</span><br><span class=\"line\">\t\t// newBlock info</span><br><span class=\"line\">\t\tSystem.out.println(&quot;new Block is created:&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\tnewBlock.previousHash : &quot; + newBlock.getPreviousHash());</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\tnewBlock.hash : &quot; + newBlock.getHash());</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\tnewBlock.nonce : &quot; + newBlock.getNonce());</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\tnewBlock.timestamp : &quot; + newBlock.getTimestamp());</span><br><span class=\"line\">\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t// close pending transaction</span><br><span class=\"line\">\t\tfor (Transaction transaction : pendingTransactions) &#123;</span><br><span class=\"line\">\t\t\t// deduct from FromAddress</span><br><span class=\"line\">\t\t\tboolean isWithdrawSuccess = false;</span><br><span class=\"line\">\t\t\tboolean isTopUpSuccess = false;</span><br><span class=\"line\">\t\t\tfor (Account account : accounts) &#123;</span><br><span class=\"line\">\t\t\t\tif (account.getAddress().equals(transaction.getFromAddress())) &#123;</span><br><span class=\"line\">\t\t\t\t\tisWithdrawSuccess = account.withdraw(transaction.getAmount());</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t// top up on toAddress</span><br><span class=\"line\">\t\t\tfor (Account account : accounts) &#123;</span><br><span class=\"line\">\t\t\t\tif (isWithdrawSuccess) &#123;</span><br><span class=\"line\">\t\t\t\t\tif (account.getAddress().equals(transaction.getToAddress())) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tisTopUpSuccess = account.topUp(transaction.getAmount());</span><br><span class=\"line\">\t\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tif (isWithdrawSuccess &amp;&amp; !isTopUpSuccess) &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;miningRewardAddress to [&quot; + miningRewardAddress + &quot;] is not successful..&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t// cleare pending transaction</span><br><span class=\"line\">\t\tpendingTransactions = new ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t// reward given in next new block</span><br><span class=\"line\">\t\taccounts.get(0).topUp(miningReward);</span><br><span class=\"line\">//\t\tSystem.out.println(&quot;System top up mining reward amount : &quot; + miningReward);</span><br><span class=\"line\">\t\tpendingTransactions.add(new Transaction(&quot;system&quot;, miningRewardAddress, miningReward));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic void addAccount(Account newAccount) &#123;</span><br><span class=\"line\">\t\taccounts.add(newAccount);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic void bonus() &#123;</span><br><span class=\"line\">\t\tfor (int i = 1; i &lt; accounts.size(); i++) &#123;</span><br><span class=\"line\">\t\t\taccounts.get(0).topUp(bonusAmount);</span><br><span class=\"line\">//\t\t\tSystem.out.println(&quot;System top up bonus amount : &quot; + bonusAmount);</span><br><span class=\"line\">\t\t\tpendingTransactions.add(new Transaction(&quot;system&quot;, accounts.get(i).getAddress(), bonusAmount));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic void viewAccount() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;View Accounts: &quot;);</span><br><span class=\"line\">\t\tfor (int i = 1; i &lt; accounts.size(); i++) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;\\t&quot; + accounts.get(i).getAddress() + &quot; : &quot; + accounts.get(i).getBalance());</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Block\"><a href=\"#Block\" class=\"headerlink\" title=\"Block\"></a>Block</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package io.ryanluoxu.blockchain;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.sql.Timestamp;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Block &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate long nonce;</span><br><span class=\"line\">\tprivate String previousHash;</span><br><span class=\"line\">\tprivate Timestamp timestamp;</span><br><span class=\"line\">\tprivate List&lt;Transaction&gt; transactions;</span><br><span class=\"line\">\tprivate String hash;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic Block(String previousHash, Timestamp timestamp, List&lt;Transaction&gt; transactions) &#123;</span><br><span class=\"line\">\t\tthis.previousHash = previousHash;</span><br><span class=\"line\">\t\tthis.timestamp = timestamp;</span><br><span class=\"line\">\t\tthis.transactions = transactions;</span><br><span class=\"line\">\t\tthis.hash = calculateHash();</span><br><span class=\"line\">\t\tthis.nonce = 0;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tString calculateHash() &#123;</span><br><span class=\"line\">\t\tEncrypt encrypt = new Encrypt();</span><br><span class=\"line\">\t\tString strText = null;</span><br><span class=\"line\">\t\tif (previousHash == null) &#123;</span><br><span class=\"line\">\t\t\tif (transactions == null) &#123;</span><br><span class=\"line\">\t\t\t\tstrText = (&quot;&quot; + timestamp + &quot;&quot; + nonce).toString();</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tstrText = (&quot;&quot; + timestamp + transactions.toString() + nonce).toString();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tstrText = (previousHash + timestamp + transactions.toString() + nonce).toString();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">//\t\tSystem.out.println(&quot;strText of block : &quot;+strText);</span><br><span class=\"line\">\t\treturn encrypt.SHA256(strText);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvoid mineBlock(int difficulty) &#123;</span><br><span class=\"line\">\t\tStringBuilder sb = new StringBuilder();</span><br><span class=\"line\">\t\tfor (int i = 0; i &lt; difficulty; i++) &#123;</span><br><span class=\"line\">\t\t\tsb.append(&quot;0&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\twhile (!this.hash.substring(0, difficulty).equals(sb.toString())) &#123;</span><br><span class=\"line\">\t\t\tthis.nonce++;</span><br><span class=\"line\">\t\t\tthis.hash = this.calculateHash();</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;hash : &quot; + hash);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic long getNonce() &#123;</span><br><span class=\"line\">\t\treturn nonce;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic String getPreviousHash() &#123;</span><br><span class=\"line\">\t\treturn previousHash;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic Timestamp getTimestamp() &#123;</span><br><span class=\"line\">\t\treturn timestamp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic List&lt;Transaction&gt; getTransactions() &#123;</span><br><span class=\"line\">\t\treturn transactions;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic String getHash() &#123;</span><br><span class=\"line\">\t\treturn hash;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Encrypt\"><a href=\"#Encrypt\" class=\"headerlink\" title=\"Encrypt\"></a>Encrypt</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package io.ryanluoxu.blockchain;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.security.MessageDigest;</span><br><span class=\"line\">import java.security.NoSuchAlgorithmException;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Encrypt &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic String SHA256(final String strText) &#123;</span><br><span class=\"line\">\t\treturn SHA(strText,&quot;SHA-256&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic String SHA512(final String strText) &#123;</span><br><span class=\"line\">\t\treturn SHA(strText,&quot;SHA-512&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String SHA(final String strText, final String strType) &#123;</span><br><span class=\"line\">\t\tString strResult = null;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tif (strText != null &amp;&amp; strText.length() &gt; 0) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tbyte byteBuffer[] = null;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tMessageDigest messageDigest = MessageDigest.getInstance(strType);</span><br><span class=\"line\">\t\t\t\tmessageDigest.update(strText.getBytes());</span><br><span class=\"line\">\t\t\t\tbyteBuffer = messageDigest.digest();</span><br><span class=\"line\">\t\t\t&#125; catch (NoSuchAlgorithmException e) &#123;</span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tStringBuffer strHexString = new StringBuffer();</span><br><span class=\"line\">\t\t\tif (byteBuffer != null &amp;&amp; byteBuffer.length &gt; 0) &#123;</span><br><span class=\"line\">\t\t\t\tfor (int i = 0; i &lt; byteBuffer.length; i++) &#123;</span><br><span class=\"line\">\t\t\t\t\tString hex = Integer.toHexString(0xff &amp; byteBuffer[i]);</span><br><span class=\"line\">\t\t\t\t\tif (hex.length() == 1) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tstrHexString.append(&apos;0&apos;);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\tstrHexString.append(hex);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tstrResult = strHexString.toString();</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;messageDigest.digest() fail..&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\treturn strResult;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Transaction-1\"><a href=\"#Transaction-1\" class=\"headerlink\" title=\"Transaction\"></a>Transaction</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package io.ryanluoxu.blockchain;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Transaction &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String fromAddress;</span><br><span class=\"line\">\tprivate String toAddress;</span><br><span class=\"line\">\tprivate double amount;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic Transaction(String fromAddress, String toAddress, double amount) &#123;</span><br><span class=\"line\">\t\tsuper();</span><br><span class=\"line\">\t\tthis.fromAddress = fromAddress;</span><br><span class=\"line\">\t\tthis.toAddress = toAddress;</span><br><span class=\"line\">\t\tthis.amount = amount;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic String getFromAddress() &#123;</span><br><span class=\"line\">\t\treturn fromAddress;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic void setFromAddress(String fromAddress) &#123;</span><br><span class=\"line\">\t\tthis.fromAddress = fromAddress;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic String getToAddress() &#123;</span><br><span class=\"line\">\t\treturn toAddress;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic void setToAddress(String toAddress) &#123;</span><br><span class=\"line\">\t\tthis.toAddress = toAddress;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic double getAmount() &#123;</span><br><span class=\"line\">\t\treturn amount;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic void setAmount(double amount) &#123;</span><br><span class=\"line\">\t\tthis.amount = amount;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Account\"><a href=\"#Account\" class=\"headerlink\" title=\"Account\"></a>Account</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package io.ryanluoxu.blockchain;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Account &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String address;</span><br><span class=\"line\">\tprivate String key;</span><br><span class=\"line\">\tprivate double balance;</span><br><span class=\"line\">\tpublic Account(String address, String key, double balance) &#123;</span><br><span class=\"line\">\t\tthis.address = address;</span><br><span class=\"line\">\t\tthis.key = key;</span><br><span class=\"line\">\t\tthis.balance = balance;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic String getAddress() &#123;</span><br><span class=\"line\">\t\treturn address;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic String getKey() &#123;</span><br><span class=\"line\">\t\treturn key;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic double getBalance() &#123;</span><br><span class=\"line\">\t\treturn balance;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic boolean topUp(double amount) &#123;</span><br><span class=\"line\">\t\tbalance += amount;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Top up of [&quot; + amount + &quot;] into [&quot; + address + &quot;] is successful..&quot;);</span><br><span class=\"line\">\t\treturn true;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic boolean withdraw(double amount) &#123;</span><br><span class=\"line\">\t\tif (balance - amount &gt;= 0) &#123;</span><br><span class=\"line\">\t\t\tbalance -= amount;</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;Withdraw of [&quot; + amount + &quot;] from [&quot; + address + &quot;] is successful..&quot;);</span><br><span class=\"line\">\t\t\treturn true;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Insuffient balance..&quot;);</span><br><span class=\"line\">\t\treturn false;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>This blog will be removed since some of the concepts are wrong.</p>","more":"<h1 id=\"Flow\"><a href=\"#Flow\" class=\"headerlink\" title=\"Flow\"></a>Flow</h1><h2 id=\"New-Blockchain\"><a href=\"#New-Blockchain\" class=\"headerlink\" title=\"New Blockchain()\"></a>New Blockchain()</h2><ol>\n<li>create an empty chain</li>\n<li>create genesis block<ol>\n<li>with null previous hash, current timestamp and null transaction</li>\n<li>calculateHash using SHA256;</li>\n</ol>\n</li>\n<li>add genesis block into chain</li>\n<li>define miningReward</li>\n<li>create an account list and add system as 1st account</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public Blockchain() &#123;</span><br><span class=\"line\">\tchain = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\tgenesisBlock = createGenesisBlock();</span><br><span class=\"line\">\tchain.add(genesisBlock);</span><br><span class=\"line\">\tdifficulty = 1;</span><br><span class=\"line\">\tpendingTransactions = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\tminingReward = 1000;</span><br><span class=\"line\">\tbonusAmount = 100;</span><br><span class=\"line\">\taccounts = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\taccounts.add(new Account(&quot;system&quot;, &quot;system&quot;, 0));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Create-account\"><a href=\"#Create-account\" class=\"headerlink\" title=\"Create account\"></a>Create account</h2><ol>\n<li>user input any string</li>\n<li>encript (input+dateTime) to get address and key for a single user</li>\n<li>add to account list</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private void createAccount() &#123;</span><br><span class=\"line\">\tSystem.out.print(&quot;Enter your name : &quot;);</span><br><span class=\"line\">\tString input = scanner.nextLine();</span><br><span class=\"line\">\tDate dateTime = new Date();</span><br><span class=\"line\">\tEncrypt encrypt = new Encrypt();</span><br><span class=\"line\">\tString address = encrypt.SHA256((input+dateTime)).substring(0, 8);</span><br><span class=\"line\">\tString key = encrypt.SHA256((input+dateTime)).substring(8, 16);</span><br><span class=\"line\">\tAccount newAccount = new Account(address, key, 0);</span><br><span class=\"line\">\tblockchain.addAccount(newAccount);</span><br><span class=\"line\">\tSystem.out.println(&quot;Account created..&quot;);</span><br><span class=\"line\">\tSystem.out.println(&quot;\\tAddress : &quot; + address);</span><br><span class=\"line\">\tSystem.out.println(&quot;\\tkey : &quot; + key);</span><br><span class=\"line\">\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Transaction\"><a href=\"#Transaction\" class=\"headerlink\" title=\"Transaction\"></a>Transaction</h2><ol>\n<li>provide fromAddress, fromKey, toAddress and amountStr</li>\n<li>check if two addresses are existed and fromKey matches</li>\n<li>push this transaction to pendingTransactions</li>\n<li>transaction will only take effects after mining (new block is added into chain)</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void createTransaction(Transaction newTransaction, String fromKey) &#123;</span><br><span class=\"line\">\t// verification</span><br><span class=\"line\">\tboolean isValidFromAddress = false;</span><br><span class=\"line\">\tboolean isValidFromKey = false;</span><br><span class=\"line\">\tboolean isValidToAddress = false;</span><br><span class=\"line\"></span><br><span class=\"line\">\tString fromAddress = newTransaction.getFromAddress();</span><br><span class=\"line\">\tString toAddress = newTransaction.getToAddress();</span><br><span class=\"line\"></span><br><span class=\"line\">\tfor (Account account : accounts) &#123;</span><br><span class=\"line\">\t\tif (account.getAddress().equals(fromAddress)) &#123;</span><br><span class=\"line\">\t\t\tisValidFromAddress = true;</span><br><span class=\"line\">\t\t\tif (account.getKey().equals(fromKey)) &#123;</span><br><span class=\"line\">\t\t\t\tisValidFromKey = true;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tbreak;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfor (Account account : accounts) &#123;</span><br><span class=\"line\">\t\tif (account.getAddress().equals(toAddress)) &#123;</span><br><span class=\"line\">\t\t\tisValidToAddress = true;</span><br><span class=\"line\">\t\t\tbreak;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tif (isValidToAddress &amp;&amp; isValidFromAddress &amp;&amp; isValidFromKey) &#123;</span><br><span class=\"line\">\t\tpendingTransactions.add(newTransaction);</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Invalid fromAddress, fromKey or toAddress..&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Mine-Pending-Transaction\"><a href=\"#Mine-Pending-Transaction\" class=\"headerlink\" title=\"Mine Pending Transaction\"></a>Mine Pending Transaction</h2><ol>\n<li><p>provide miner address</p>\n</li>\n<li><p>new Block using lastest block hash, current timestamp and pendingTransactions</p>\n</li>\n<li><p>mine block by passing difficulty (proof of work)</p>\n<ol>\n<li>by passing increasing nonce to get different hash</li>\n<li>until 1st two charactars are “00” if difficulty is 2<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void mineBlock(int difficulty) &#123;</span><br><span class=\"line\">\tStringBuilder sb = new StringBuilder();</span><br><span class=\"line\">\tfor (int i = 0; i &lt; difficulty; i++) &#123;</span><br><span class=\"line\">\t\tsb.append(&quot;0&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\twhile (!this.hash.substring(0, difficulty).equals(sb.toString())) &#123;</span><br><span class=\"line\">\t\tthis.nonce++;</span><br><span class=\"line\">\t\tthis.hash = this.calculateHash();</span><br><span class=\"line\">\t\tSystem.out.println(&quot;hash : &quot; + hash);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n<li><p>add new block into the chain</p>\n</li>\n<li><p>close pending transaction</p>\n<ol>\n<li>withdraw from fromAddress</li>\n<li>top up to toAddress</li>\n</ol>\n</li>\n<li><p>cleare pending transaction</p>\n</li>\n<li><p>give miner reward in the next block</p>\n<ol>\n<li>top up system by reward amount</li>\n<li>system transfer to miner</li>\n<li>transaction push into pending transaction</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void minePendingTransaction(String miningRewardAddress) &#123;</span><br><span class=\"line\">\t\tBlock newBlock = new Block(getLatestBlock().getHash(), new Timestamp(System.currentTimeMillis()), pendingTransactions);</span><br><span class=\"line\">\t\tnewBlock.mineBlock(difficulty);</span><br><span class=\"line\">\t\tchain.add(newBlock);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t// close pending transaction</span><br><span class=\"line\">\t\tfor (Transaction transaction : pendingTransactions) &#123;</span><br><span class=\"line\">\t\t\t// deduct from FromAddress</span><br><span class=\"line\">\t\t\tboolean isWithdrawSuccess = false;</span><br><span class=\"line\">\t\t\tboolean isTopUpSuccess = false;</span><br><span class=\"line\">\t\t\tfor (Account account : accounts) &#123;</span><br><span class=\"line\">\t\t\t\tif (account.getAddress().equals(transaction.getFromAddress())) &#123;</span><br><span class=\"line\">\t\t\t\t\tisWithdrawSuccess = account.withdraw(transaction.getAmount());</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t// top up on toAddress</span><br><span class=\"line\">\t\t\tfor (Account account : accounts) &#123;</span><br><span class=\"line\">\t\t\t\tif (isWithdrawSuccess) &#123;</span><br><span class=\"line\">\t\t\t\t\tif (account.getAddress().equals(transaction.getToAddress())) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tisTopUpSuccess = account.topUp(transaction.getAmount());</span><br><span class=\"line\">\t\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tif (isWithdrawSuccess &amp;&amp; !isTopUpSuccess) &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;miningRewardAddress to [&quot; + miningRewardAddress + &quot;] is not successful..&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t// cleare pending transaction</span><br><span class=\"line\">\t\tpendingTransactions = new ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t// reward given in next new block</span><br><span class=\"line\">\t\taccounts.get(0).topUp(miningReward);</span><br><span class=\"line\">\t\tpendingTransactions.add(new Transaction(&quot;system&quot;, miningRewardAddress, miningReward));</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h1><h2 id=\"RyanCoin\"><a href=\"#RyanCoin\" class=\"headerlink\" title=\"RyanCoin\"></a>RyanCoin</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package io.ryanluoxu.blockchain;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.Date;</span><br><span class=\"line\">import java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\">public class RyanCoin &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstatic String option = &quot;&quot;;</span><br><span class=\"line\">\tstatic Scanner scanner = new Scanner(System.in);</span><br><span class=\"line\">\tstatic Blockchain blockchain;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tRyanCoin ryanCoin = new RyanCoin();</span><br><span class=\"line\">\t\tblockchain = new Blockchain();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\twhile (!option.equals(&quot;0&quot;)) &#123;</span><br><span class=\"line\">\t\t\tryanCoin.printMenu();</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t\t\tSystem.out.print(&quot;    Please choose : &quot;);</span><br><span class=\"line\">\t\t\toption = ryanCoin.getOption();</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t\t\tswitch (option) &#123;</span><br><span class=\"line\">\t\t\tcase &quot;1&quot;:</span><br><span class=\"line\">\t\t\t\tryanCoin.createAccount();</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\tcase &quot;2&quot;:</span><br><span class=\"line\">\t\t\t\tryanCoin.addTransaction();</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\tcase &quot;3&quot;:</span><br><span class=\"line\">\t\t\t\tryanCoin.minePendingTransaction();</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\tcase &quot;4&quot;:</span><br><span class=\"line\">\t\t\t\tryanCoin.viewAccount();</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\tcase &quot;9&quot;:</span><br><span class=\"line\">\t\t\t\tryanCoin.bonus();</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tdefault:</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;Invalid option..&quot;);</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void viewAccount() &#123;</span><br><span class=\"line\">\t\tblockchain.viewAccount();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void bonus() &#123;</span><br><span class=\"line\">\t\tblockchain.bonus();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void minePendingTransaction() &#123;</span><br><span class=\"line\">\t\tSystem.out.print(&quot;Miner address : &quot;);</span><br><span class=\"line\">\t\tString miningRewardAddress = scanner.nextLine();</span><br><span class=\"line\">\t\tblockchain.minePendingTransaction(miningRewardAddress);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void addTransaction() &#123;</span><br><span class=\"line\">\t\tString fromAddress;</span><br><span class=\"line\">\t\tString fromKey;</span><br><span class=\"line\">\t\tString toAddress;</span><br><span class=\"line\">\t\tString amountStr;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSystem.out.print(&quot;From Address : &quot;);</span><br><span class=\"line\">\t\tfromAddress = scanner.nextLine();</span><br><span class=\"line\">\t\tSystem.out.print(&quot;From Key : &quot;);</span><br><span class=\"line\">\t\tfromKey = scanner.nextLine();</span><br><span class=\"line\">\t\tSystem.out.print(&quot;To Address : &quot;);</span><br><span class=\"line\">\t\ttoAddress = scanner.nextLine();</span><br><span class=\"line\">\t\tSystem.out.print(&quot;Transaction Amount : &quot;);</span><br><span class=\"line\">\t\tamountStr = scanner.nextLine();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\ttry &#123;</span><br><span class=\"line\">\t\t\tdouble amount = Integer.valueOf(amountStr);</span><br><span class=\"line\">\t\t\tif (amount &gt;= 0) &#123;</span><br><span class=\"line\">\t\t\t\tblockchain.createTransaction(new Transaction(fromAddress, toAddress, amount), fromKey);</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;Invalid amount..&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(e);</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;invalid amount..&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void createAccount() &#123;</span><br><span class=\"line\">\t\tSystem.out.print(&quot;Enter your name : &quot;);</span><br><span class=\"line\">\t\tString input = scanner.nextLine();</span><br><span class=\"line\">\t\tDate dateTime = new Date();</span><br><span class=\"line\">\t\tEncrypt encrypt = new Encrypt();</span><br><span class=\"line\">\t\tString address = encrypt.SHA256((input+dateTime)).substring(0, 8);</span><br><span class=\"line\">\t\tString key = encrypt.SHA256((input+dateTime)).substring(8, 16);</span><br><span class=\"line\">\t\tAccount newAccount = new Account(address, key, 0);</span><br><span class=\"line\">\t\tblockchain.addAccount(newAccount);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Account created..&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\tAddress : &quot; + address);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\tkey : &quot; + key);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String getOption() &#123;</span><br><span class=\"line\">\t\tString result = null;</span><br><span class=\"line\">\t\tresult = scanner.nextLine();</span><br><span class=\"line\">\t\treturn result;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void printMenu() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\t Ryan Coin 1.0           &quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\t===============          &quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\t1. Create Account&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\t2. New Transaction&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\t3. Mine Pending Transaction&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\t4. View Account&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\t9. Ryan Bonus&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\t0. Destroy coin&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Blockchain\"><a href=\"#Blockchain\" class=\"headerlink\" title=\"Blockchain\"></a>Blockchain</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package io.ryanluoxu.blockchain;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.sql.Timestamp;</span><br><span class=\"line\">import java.util.ArrayList;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Blockchain &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate List&lt;Block&gt; chain;</span><br><span class=\"line\">\tprivate Block genesisBlock;</span><br><span class=\"line\">\tprivate int difficulty;</span><br><span class=\"line\">\tprivate List&lt;Transaction&gt; pendingTransactions;</span><br><span class=\"line\">\tprivate long miningReward;</span><br><span class=\"line\">\tprivate long bonusAmount;</span><br><span class=\"line\">\tprivate List&lt;Account&gt; accounts;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic Blockchain() &#123;</span><br><span class=\"line\">\t\tchain = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t\tgenesisBlock = createGenesisBlock();</span><br><span class=\"line\">\t\tchain.add(genesisBlock);</span><br><span class=\"line\">\t\t// genesisBlock info</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Genesis Block is created:&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\tgenesisBlock.hash : &quot; + genesisBlock.getHash());</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\tgenesisBlock.nonce : &quot; + genesisBlock.getNonce());</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\tgenesisBlock.timestamp : &quot; + genesisBlock.getTimestamp());</span><br><span class=\"line\">\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdifficulty = 1;</span><br><span class=\"line\">\t\tpendingTransactions = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t\tminingReward = 1000;</span><br><span class=\"line\">\t\tbonusAmount = 100;</span><br><span class=\"line\">\t\taccounts = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t\taccounts.add(new Account(&quot;system&quot;, &quot;system&quot;, 0));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate Block createGenesisBlock() &#123;</span><br><span class=\"line\">\t\treturn new Block(null, new Timestamp(System.currentTimeMillis()), null);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate Block getLatestBlock()&#123;</span><br><span class=\"line\">\t\treturn chain.get(chain.size()-1);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic boolean isChainValid() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tfor (int i = 0; i &lt; chain.size(); i++) &#123;</span><br><span class=\"line\">\t\t\tBlock currentBlock = chain.get(i);</span><br><span class=\"line\">\t\t\tBlock previousBlock = chain.get(i-1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tif (currentBlock.getHash() != currentBlock.calculateHash()) &#123;</span><br><span class=\"line\">\t\t\t\treturn false;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tif (currentBlock.getPreviousHash() != previousBlock.getHash()) &#123;</span><br><span class=\"line\">\t\t\t\treturn false;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\treturn true;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvoid createTransaction(Transaction newTransaction, String fromKey) &#123;</span><br><span class=\"line\">\t\t// verification</span><br><span class=\"line\">\t\tboolean isValidFromAddress = false;</span><br><span class=\"line\">\t\tboolean isValidFromKey = false;</span><br><span class=\"line\">\t\tboolean isValidToAddress = false;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tString fromAddress = newTransaction.getFromAddress();</span><br><span class=\"line\">\t\tString toAddress = newTransaction.getToAddress();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tfor (Account account : accounts) &#123;</span><br><span class=\"line\">\t\t\tif (account.getAddress().equals(fromAddress)) &#123;</span><br><span class=\"line\">\t\t\t\tisValidFromAddress = true;</span><br><span class=\"line\">\t\t\t\tif (account.getKey().equals(fromKey)) &#123;</span><br><span class=\"line\">\t\t\t\t\tisValidFromKey = true;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tfor (Account account : accounts) &#123;</span><br><span class=\"line\">\t\t\tif (account.getAddress().equals(toAddress)) &#123;</span><br><span class=\"line\">\t\t\t\tisValidToAddress = true;</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tif (isValidToAddress &amp;&amp; isValidFromAddress &amp;&amp; isValidFromKey) &#123;</span><br><span class=\"line\">\t\t\tpendingTransactions.add(newTransaction);</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;Invalid fromAddress, fromKey or toAddress..&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvoid minePendingTransaction(String miningRewardAddress) &#123;</span><br><span class=\"line\">\t\tBlock newBlock = new Block(getLatestBlock().getHash(), new Timestamp(System.currentTimeMillis()), pendingTransactions);</span><br><span class=\"line\">\t\tnewBlock.mineBlock(difficulty);</span><br><span class=\"line\">\t\tchain.add(newBlock);</span><br><span class=\"line\">\t\t// newBlock info</span><br><span class=\"line\">\t\tSystem.out.println(&quot;new Block is created:&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\tnewBlock.previousHash : &quot; + newBlock.getPreviousHash());</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\tnewBlock.hash : &quot; + newBlock.getHash());</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\tnewBlock.nonce : &quot; + newBlock.getNonce());</span><br><span class=\"line\">\t\tSystem.out.println(&quot;\\tnewBlock.timestamp : &quot; + newBlock.getTimestamp());</span><br><span class=\"line\">\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t// close pending transaction</span><br><span class=\"line\">\t\tfor (Transaction transaction : pendingTransactions) &#123;</span><br><span class=\"line\">\t\t\t// deduct from FromAddress</span><br><span class=\"line\">\t\t\tboolean isWithdrawSuccess = false;</span><br><span class=\"line\">\t\t\tboolean isTopUpSuccess = false;</span><br><span class=\"line\">\t\t\tfor (Account account : accounts) &#123;</span><br><span class=\"line\">\t\t\t\tif (account.getAddress().equals(transaction.getFromAddress())) &#123;</span><br><span class=\"line\">\t\t\t\t\tisWithdrawSuccess = account.withdraw(transaction.getAmount());</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t// top up on toAddress</span><br><span class=\"line\">\t\t\tfor (Account account : accounts) &#123;</span><br><span class=\"line\">\t\t\t\tif (isWithdrawSuccess) &#123;</span><br><span class=\"line\">\t\t\t\t\tif (account.getAddress().equals(transaction.getToAddress())) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tisTopUpSuccess = account.topUp(transaction.getAmount());</span><br><span class=\"line\">\t\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tif (isWithdrawSuccess &amp;&amp; !isTopUpSuccess) &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;miningRewardAddress to [&quot; + miningRewardAddress + &quot;] is not successful..&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t// cleare pending transaction</span><br><span class=\"line\">\t\tpendingTransactions = new ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t// reward given in next new block</span><br><span class=\"line\">\t\taccounts.get(0).topUp(miningReward);</span><br><span class=\"line\">//\t\tSystem.out.println(&quot;System top up mining reward amount : &quot; + miningReward);</span><br><span class=\"line\">\t\tpendingTransactions.add(new Transaction(&quot;system&quot;, miningRewardAddress, miningReward));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic void addAccount(Account newAccount) &#123;</span><br><span class=\"line\">\t\taccounts.add(newAccount);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic void bonus() &#123;</span><br><span class=\"line\">\t\tfor (int i = 1; i &lt; accounts.size(); i++) &#123;</span><br><span class=\"line\">\t\t\taccounts.get(0).topUp(bonusAmount);</span><br><span class=\"line\">//\t\t\tSystem.out.println(&quot;System top up bonus amount : &quot; + bonusAmount);</span><br><span class=\"line\">\t\t\tpendingTransactions.add(new Transaction(&quot;system&quot;, accounts.get(i).getAddress(), bonusAmount));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic void viewAccount() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;View Accounts: &quot;);</span><br><span class=\"line\">\t\tfor (int i = 1; i &lt; accounts.size(); i++) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;\\t&quot; + accounts.get(i).getAddress() + &quot; : &quot; + accounts.get(i).getBalance());</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Block\"><a href=\"#Block\" class=\"headerlink\" title=\"Block\"></a>Block</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package io.ryanluoxu.blockchain;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.sql.Timestamp;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Block &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate long nonce;</span><br><span class=\"line\">\tprivate String previousHash;</span><br><span class=\"line\">\tprivate Timestamp timestamp;</span><br><span class=\"line\">\tprivate List&lt;Transaction&gt; transactions;</span><br><span class=\"line\">\tprivate String hash;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic Block(String previousHash, Timestamp timestamp, List&lt;Transaction&gt; transactions) &#123;</span><br><span class=\"line\">\t\tthis.previousHash = previousHash;</span><br><span class=\"line\">\t\tthis.timestamp = timestamp;</span><br><span class=\"line\">\t\tthis.transactions = transactions;</span><br><span class=\"line\">\t\tthis.hash = calculateHash();</span><br><span class=\"line\">\t\tthis.nonce = 0;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tString calculateHash() &#123;</span><br><span class=\"line\">\t\tEncrypt encrypt = new Encrypt();</span><br><span class=\"line\">\t\tString strText = null;</span><br><span class=\"line\">\t\tif (previousHash == null) &#123;</span><br><span class=\"line\">\t\t\tif (transactions == null) &#123;</span><br><span class=\"line\">\t\t\t\tstrText = (&quot;&quot; + timestamp + &quot;&quot; + nonce).toString();</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tstrText = (&quot;&quot; + timestamp + transactions.toString() + nonce).toString();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tstrText = (previousHash + timestamp + transactions.toString() + nonce).toString();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">//\t\tSystem.out.println(&quot;strText of block : &quot;+strText);</span><br><span class=\"line\">\t\treturn encrypt.SHA256(strText);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvoid mineBlock(int difficulty) &#123;</span><br><span class=\"line\">\t\tStringBuilder sb = new StringBuilder();</span><br><span class=\"line\">\t\tfor (int i = 0; i &lt; difficulty; i++) &#123;</span><br><span class=\"line\">\t\t\tsb.append(&quot;0&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\twhile (!this.hash.substring(0, difficulty).equals(sb.toString())) &#123;</span><br><span class=\"line\">\t\t\tthis.nonce++;</span><br><span class=\"line\">\t\t\tthis.hash = this.calculateHash();</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;hash : &quot; + hash);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic long getNonce() &#123;</span><br><span class=\"line\">\t\treturn nonce;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic String getPreviousHash() &#123;</span><br><span class=\"line\">\t\treturn previousHash;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic Timestamp getTimestamp() &#123;</span><br><span class=\"line\">\t\treturn timestamp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic List&lt;Transaction&gt; getTransactions() &#123;</span><br><span class=\"line\">\t\treturn transactions;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic String getHash() &#123;</span><br><span class=\"line\">\t\treturn hash;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Encrypt\"><a href=\"#Encrypt\" class=\"headerlink\" title=\"Encrypt\"></a>Encrypt</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package io.ryanluoxu.blockchain;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.security.MessageDigest;</span><br><span class=\"line\">import java.security.NoSuchAlgorithmException;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Encrypt &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic String SHA256(final String strText) &#123;</span><br><span class=\"line\">\t\treturn SHA(strText,&quot;SHA-256&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic String SHA512(final String strText) &#123;</span><br><span class=\"line\">\t\treturn SHA(strText,&quot;SHA-512&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String SHA(final String strText, final String strType) &#123;</span><br><span class=\"line\">\t\tString strResult = null;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tif (strText != null &amp;&amp; strText.length() &gt; 0) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tbyte byteBuffer[] = null;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tMessageDigest messageDigest = MessageDigest.getInstance(strType);</span><br><span class=\"line\">\t\t\t\tmessageDigest.update(strText.getBytes());</span><br><span class=\"line\">\t\t\t\tbyteBuffer = messageDigest.digest();</span><br><span class=\"line\">\t\t\t&#125; catch (NoSuchAlgorithmException e) &#123;</span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tStringBuffer strHexString = new StringBuffer();</span><br><span class=\"line\">\t\t\tif (byteBuffer != null &amp;&amp; byteBuffer.length &gt; 0) &#123;</span><br><span class=\"line\">\t\t\t\tfor (int i = 0; i &lt; byteBuffer.length; i++) &#123;</span><br><span class=\"line\">\t\t\t\t\tString hex = Integer.toHexString(0xff &amp; byteBuffer[i]);</span><br><span class=\"line\">\t\t\t\t\tif (hex.length() == 1) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tstrHexString.append(&apos;0&apos;);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\tstrHexString.append(hex);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tstrResult = strHexString.toString();</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;messageDigest.digest() fail..&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\treturn strResult;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Transaction-1\"><a href=\"#Transaction-1\" class=\"headerlink\" title=\"Transaction\"></a>Transaction</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package io.ryanluoxu.blockchain;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Transaction &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String fromAddress;</span><br><span class=\"line\">\tprivate String toAddress;</span><br><span class=\"line\">\tprivate double amount;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic Transaction(String fromAddress, String toAddress, double amount) &#123;</span><br><span class=\"line\">\t\tsuper();</span><br><span class=\"line\">\t\tthis.fromAddress = fromAddress;</span><br><span class=\"line\">\t\tthis.toAddress = toAddress;</span><br><span class=\"line\">\t\tthis.amount = amount;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic String getFromAddress() &#123;</span><br><span class=\"line\">\t\treturn fromAddress;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic void setFromAddress(String fromAddress) &#123;</span><br><span class=\"line\">\t\tthis.fromAddress = fromAddress;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic String getToAddress() &#123;</span><br><span class=\"line\">\t\treturn toAddress;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic void setToAddress(String toAddress) &#123;</span><br><span class=\"line\">\t\tthis.toAddress = toAddress;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic double getAmount() &#123;</span><br><span class=\"line\">\t\treturn amount;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic void setAmount(double amount) &#123;</span><br><span class=\"line\">\t\tthis.amount = amount;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Account\"><a href=\"#Account\" class=\"headerlink\" title=\"Account\"></a>Account</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package io.ryanluoxu.blockchain;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Account &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String address;</span><br><span class=\"line\">\tprivate String key;</span><br><span class=\"line\">\tprivate double balance;</span><br><span class=\"line\">\tpublic Account(String address, String key, double balance) &#123;</span><br><span class=\"line\">\t\tthis.address = address;</span><br><span class=\"line\">\t\tthis.key = key;</span><br><span class=\"line\">\t\tthis.balance = balance;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic String getAddress() &#123;</span><br><span class=\"line\">\t\treturn address;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic String getKey() &#123;</span><br><span class=\"line\">\t\treturn key;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic double getBalance() &#123;</span><br><span class=\"line\">\t\treturn balance;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic boolean topUp(double amount) &#123;</span><br><span class=\"line\">\t\tbalance += amount;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Top up of [&quot; + amount + &quot;] into [&quot; + address + &quot;] is successful..&quot;);</span><br><span class=\"line\">\t\treturn true;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic boolean withdraw(double amount) &#123;</span><br><span class=\"line\">\t\tif (balance - amount &gt;= 0) &#123;</span><br><span class=\"line\">\t\t\tbalance -= amount;</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;Withdraw of [&quot; + amount + &quot;] from [&quot; + address + &quot;] is successful..&quot;);</span><br><span class=\"line\">\t\t\treturn true;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Insuffient balance..&quot;);</span><br><span class=\"line\">\t\treturn false;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Bootstrap CheatSheet","date":"2018-01-20T09:43:51.000Z","_content":"\nThis is a note for learning Bootstrap with a cheat sheet.\n\n<!--more-->\n\n# Download lib\n1. Download -> [Boostrap Download](https://getbootstrap.com/docs/3.3/getting-started/)\n2. Choose `Compiled and minified CSS, JavaScript, and fonts.`\n3. Downland jQuery -> [jQuery Download](https://jquery.com/download/)\n4. Choose `Download the uncompressed, development jQuery 3.2.1`\n5. Copy foldler `bootstrap-3.3.7-dist` into project under `src/main/resources/static`\n6. Copy `jquery-3.2.1` into `src/main/resources/static/js`\n7. Copy basic template to `index.html`\n\t```\n\t<head>\n\t<meta charset=\"utf-8\">\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\t<title>Bootstrap_Demo</title>\n\t\n\t<!-- Bootstrap -->\n\t<script src=\"js/jquery-3.2.1.js\"></script>\n\t<link href=\"bootstrap-3.3.7-dist/css/bootstrap.css\" rel=\"stylesheet\">\n\t<script src=\"bootstrap-3.3.7-dist/js/bootstrap.js\"></script>\n\t\n\t</head>\n\n\t```\n\n# Cover\n\n**Showcase: [Bootstrap Demo](/images/bootstrap-demo.html)**\n\n1. NarBar\n2. Jumbotron\n3. Typograpgy\n\t1. Alignment and transformation\n\t2. Float\n\t3. Block quote\n\t4. List\n\t5. Code\n\t6. Contestual color and background color\n4. Button\n\t1. Contestual\n\t2. Size\n5.  Form\n6.  Table\n7.  List group\n8.  Panel\n9.  Well\n10. Alert\n11. Progress bar\n12. Label\n13. Badge\n14. Image\n15. Grid\n\n# Complete Code\n```\n<!doctype html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<title>Bootstrap_Demo</title>\n\n<!-- Bootstrap -->\n<script src=\"js/jquery-3.2.1.js\"></script>\n<link href=\"bootstrap-3.3.7-dist/css/bootstrap.css\" rel=\"stylesheet\">\n<script src=\"bootstrap-3.3.7-dist/js/bootstrap.js\"></script>\n\n<!-- Alternative\n\t<!-- Latest compiled and minified CSS -->\n\t<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n\t\n\t<!-- jQuery library -->\n\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\t\n\t<!-- Latest compiled JavaScript -->\n\t<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n-->\n\n<!-- Customized -->\n<style type=\"text/css\">\n\t.navbar{\n\t\tmargin-bottom: 0;\n\t\tborder-radius: 0;\n\t}\n</style>\n\n</head>\n\n<body>\n\t\n<!-- NAVBAR -->\n\t<nav class=\"navbar navbar-inverse\">\n\t\t<div class=\"container-fluid\">\n\t\t\t<!-- Brand and toggle get grouped for better mobile display -->\n\t\t\t<div class=\"navbar-header\">\n\t\t\t\t<button type=\"button\" class=\"navbar-toggle collapsed\"\n\t\t\t\t\tdata-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\"\n\t\t\t\t\taria-expanded=\"false\">\n\t\t\t\t\t<span class=\"sr-only\">Toggle navigation</span> <span\n\t\t\t\t\t\tclass=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span\n\t\t\t\t\t\tclass=\"icon-bar\"></span>\n\t\t\t\t</button>\n\t\t\t\t<a class=\"navbar-brand\" href=\"#\">Bootstrap CheatSheet</a>\n\t\t\t</div>\n\t\t\t\n\t\t\t<!-- Collect the nav links, forms, and other content for toggling -->\n\t\t\t<div class=\"collapse navbar-collapse\"\n\t\t\t\tid=\"bs-example-navbar-collapse-1\">\n\t\t\t\t<ul class=\"nav navbar-nav\">\n\t\t\t\t\t<li class=\"active\"><a href=\"#\">Link <span class=\"sr-only\">(current)</span></a></li>\n\t\t\t\t\t<li><a href=\"#\">Link</a></li>\n\t\t\t\t\t<li class=\"dropdown\"><a href=\"#\" class=\"dropdown-toggle\"\n\t\t\t\t\t\tdata-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n\t\t\t\t\t\taria-expanded=\"false\">Dropdown <span class=\"caret\"></span></a>\n\t\t\t\t\t\t<ul class=\"dropdown-menu\">\n\t\t\t\t\t\t\t<li><a href=\"#\">Action</a></li>\n\t\t\t\t\t\t\t<li><a href=\"#\">Another action</a></li>\n\t\t\t\t\t\t\t<li><a href=\"#\">Something else here</a></li>\n\t\t\t\t\t\t\t<li role=\"separator\" class=\"divider\"></li>\n\t\t\t\t\t\t\t<li><a href=\"#\">Separated link</a></li>\n\t\t\t\t\t\t\t<li role=\"separator\" class=\"divider\"></li>\n\t\t\t\t\t\t\t<li><a href=\"#\">One more separated link</a></li>\n\t\t\t\t\t\t</ul></li>\n\t\t\t\t</ul>\n\t\t\t\t<form class=\"navbar-form navbar-left\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"Search\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-default\">Submit</button>\n\t\t\t\t</form>\n\t\t\t\t<ul class=\"nav navbar-nav navbar-right\">\n\t\t\t\t\t<li><a href=\"#\">Link</a></li>\n\t\t\t\t\t<li class=\"dropdown\"><a href=\"#\" class=\"dropdown-toggle\"\n\t\t\t\t\t\tdata-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n\t\t\t\t\t\taria-expanded=\"false\">Dropdown <span class=\"caret\"></span></a>\n\t\t\t\t\t\t<ul class=\"dropdown-menu\">\n\t\t\t\t\t\t\t<li><a href=\"#\">Action</a></li>\n\t\t\t\t\t\t\t<li><a href=\"#\">Another action</a></li>\n\t\t\t\t\t\t\t<li><a href=\"#\">Something else here</a></li>\n\t\t\t\t\t\t\t<li role=\"separator\" class=\"divider\"></li>\n\t\t\t\t\t\t\t<li><a href=\"#\">Separated link</a></li>\n\t\t\t\t\t\t</ul></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<!-- /.navbar-collapse -->\n\t\t</div>\n\t\t<!-- /.container-fluid -->\n\t</nav>\n\t\n<!-- JUMBOTRON -->\n\t<div class=\"jumbotron text-center\">\n\t\t<div class=\"container\">\n\t\t\t<h1>Welcome to Bootstrap CheatSheet</h1>\n\t\t\t<p>Lorem Ipsum is simply dummy text of the printing and\n\t\t\ttypesetting industry. Lorem Ipsum has been the industry's standard\n\t\t\tdummy text ever since the 1500s</p>\n\t\t\t<a href=\"#\" class=\"btn btn-primary\">Read More</a>\n\t\t</div>\n\t</div>\n\t\n\n<!-- TYPOGRAPHY -->\n\t<div class=\"container\">\n\t\n\t\t<h1 class=\"page-header\">Hello, world! <small>Secondary text</small></h1>\n\t\t\n\t\t<p class=\"lead\">Lorem Ipsum is simply dummy text of the printing and\n\t\t\ttypesetting industry. Lorem Ipsum has been the industry's standard\n\t\t\tdummy text ever since the 1500s, when an unknown printer took a\n\t\t\tAldus PageMaker including versions of Lorem Ipsum.</p>\n\t\t\t\n\t\t<p><mark>Lorem Ipsum is simply dummy</mark> text of the printing and\n\t\t\ttypesetting industry. Lorem Ipsum has been the industry's standard\n\t\t\tdummy text ever since the 1500s, when an unknown printer took a\n\t\t\tgalley of type and scrambled it to make a type specimen book. It has\n\t\t\tsurvived not <del>only five centuries, but also the leap </del> into electronic\n\t\t\ttypesetting, remaining essentially unchanged. It was popularised in\n\t\t\tthe 1960s with the release of Letraset sheets containing Lorem Ipsum\n\t\t\tpassages, <u>and more recently with desktop publishing</u> software like\n\t\t\tAldus PageMaker including versions of Lorem Ipsum.</p>\n\t\t\n\t\t<hr>\t\n\t\t\n<!-- ALIGNMENT & TRANSFORMATION -->\n\t\t<p class=\"text-left text-lowercase\">Left aligned text.</p>\n\t\t<p class=\"text-center text-uppercase\">Center aligned text.</p>\n\t\t<p class=\"text-right text-capitalize\">Right aligned text.</p>\n\t\t<p class=\"text-justify\">Justified text.</p>\n\t\t<p class=\"text-nowrap\">No wrap text.</p>\n\t\t\n\t\t<hr>\t\n\t\t\n<!-- QUICK FLOATS -->\n\t\t<div class=\"pull-right\">Div float to right</div>\n\t\t<div class=\"pull-left\">Div float to left</div>\n\t\t\n<!-- CLEAR FLOATS -->\n\t\t<div class=\"clearfix\"></div>\n\t\t\n\t\t<hr>\t\n\t\t\n<!-- BLOCK QUOTE -->\n\t\t<blockquote class=\"blockquote\">\n\t\t<p>Lorem Ipsum is simply dummy text of the\n\t\t\tprinting and typesetting industry. Lorem Ipsum has been the\n\t\t\tindustry's standard dummy text ever since the 1500s, when an unknown\n\t\t\tprinter took a Aldus PageMaker including versions of Lorem Ipsum.</p>\n\t\t<footer>Quote By <cite title=\"Ryan\">Ryan</cite></footer>\n\t\t</blockquote>\n\t\t\n\t\t<hr>\n\t\t\n<!-- LISTS -->\n\t\t<ul>\n\t\t\t<li>Item 1</li>\n\t\t\t<li>Item 2</li>\n\t\t\t<li>Item 3</li>\n\t\t</ul>\n\t\t\n<!-- CODE -->\n\t\t<code>&lt;h1&gt;Heading text&lt;/h1&gt;</code>\n\t\t<br>\n\t\tchange directory with <kbd>cd</kbd>\n\t\t<br>\n\t\tto edit settings, press <kbd><kbd>ctrl</kbd>+<kbd>,</kbd></kbd>\n\t\t\n\t\t<hr>\n\t\t\n\t\t<!-- CONTESTUAL COLORS -->\n\t\t<p class=\"text-primary\">Hello World..</p>\n\t\t<p class=\"text-success\">Hello World..</p>\n\t\t<p class=\"text-info\">Hello World..</p>\n\t\t<p class=\"text-warning\">Hello World..</p>\n\t\t<p class=\"text-danger\">Hello World..</p>\n\t\t<p class=\"text-muted\">Hello World..</p>\n\t\t\n\t\t<!-- CONTESTUAL BACKGROUND COLORS -->\n\t\t<p class=\"bg-primary\">Hello World..</p>\n\t\t<p class=\"bg-success\">Hello World..</p>\n\t\t<p class=\"bg-info\">Hello World..</p>\n\t\t<p class=\"bg-warning\">Hello World..</p>\n\t\t<p class=\"bg-danger\">Hello World..</p>\n\t\t\n\t</div>\n\t\n\t<hr>\n\t\n<!-- BUTTON -->\n\t<div class=\"container\">\n\t\n\t\t<button class=\"btn btn-default\">Default</button>\n\t\t<a href=\"#\" class=\"btn btn-default\" role=\"button\">Link</a>\n\t\t<input type=\"submit\" class=\"btn btn-default\" value=\"Submit\">\n\t\t<br>\n\t\t\n<!-- CONTESTUAL BUTTONS -->\n\t\t<button class=\"btn btn-default\">Default</button>\n\t\t<button class=\"btn btn-primary\">primary</button>\n\t\t<button class=\"btn btn-success\">success</button>\n\t\t<button class=\"btn btn-info\">info</button>\n\t\t<button class=\"btn btn-warning\">warning</button>\n\t\t<button class=\"btn btn-danger\">danger</button>\n\t\t<button class=\"btn btn-link\">link</button>\n\t\t<br>\n\t\t\n<!-- BUTTON SIZES -->\n\t\t<button class=\"btn btn-default btn-lg\">Default</button>\n\t\t<button class=\"btn btn-default\">Default</button>\n\t\t<button class=\"btn btn-default btn-sm\">Default</button>\n\t\t<button class=\"btn btn-default btn-xs\" disabled=\"disabled\">Default</button>\n\t</div>\n\t\n\t<hr>\n\t\n<!-- FORMS -->\n\t<div class=\"container\">\n\t\t<form action=\"\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Name</label>\n\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"Add Name\">\t\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Email</label>\n\t\t\t\t<input type=\"email\" class=\"form-control\" placeholder=\"Add Email\">\t\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Message</label>\n\t\t\t\t<textarea class=\"form-control\" placeholder=\"Add Name\"></textarea>\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Gender</label>\n\t\t\t\t<select class=\"form-control\">\n\t\t\t\t\t<option value=\"male\">Male</option>\n\t\t\t\t\t<option value=\"female\">Female</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Upload File</label>\n\t\t\t\t<input type=\"file\">\n\t\t\t\t<p class=\"help-block\">Only pdf accepted</p>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"checkbox\">\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"checkbox\">check me out\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t\n\t\t\t<button type=\"submit\" class=\"btn btn-default\">Submit</button>\n\t\t</form>\n\t\t\t\n\t\t<hr>\n\t\t\n<!-- INLINE FORM -->\n\t\t<form class=\"form-inline\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Name</label>\n\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"Add Name\">\t\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Email</label>\n\t\t\t\t<input type=\"email\" class=\"form-control\" placeholder=\"Add Email\">\t\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Gender</label>\n\t\t\t\t<select class=\"form-control\">\n\t\t\t\t\t<option value=\"male\">Male</option>\n\t\t\t\t\t<option value=\"female\">Female</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"checkbox\">\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"checkbox\">check me out\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t\n\t\t\t<button type=\"submit\" class=\"btn btn-default\">Submit</button>\n\t\t</form>\t\t\n\t\t\t\n\t</div>\n\t\n\t<hr>\n\t\n<!-- TABLE -->\n\t<div class=\"container\">\n\t\t<table class=\"table table-striped table-bordered table-hover table-condensed\">\n\t\t\t<tr>\n\t\t\t\t<th>FirstName</th>\n\t\t\t\t<th>LastName</th>\n\t\t\t\t<th>Age</th>\n\t\t\t</tr>\t\n\t\t\t<tr class=\"success\">\n\t\t\t\t<th>Xu</th>\n\t\t\t\t<th>Luo</th>\n\t\t\t\t<th>30</th>\n\t\t\t</tr>\t\n\t\t\t<tr>\n\t\t\t\t<th>Melvin</th>\n\t\t\t\t<th>Tan</th>\n\t\t\t\t<th>32</th>\n\t\t\t</tr>\t\n\t\t\t<tr class=\"danger\">\n\t\t\t\t<th>Tim</th>\n\t\t\t\t<th>Park</th>\n\t\t\t\t<th>40</th>\n\t\t\t</tr>\t\n\t\t</table>\n\t</div>\n\t\n\t<hr>\n<!-- LIST GROUP -->\n\t<div class=\"container\">\n\t\t<ul class=\"list-group\">\n\t\t\t<li class=\"list-group-item\">Item 1</li>\n\t\t\t<li class=\"list-group-item\">Item 2</li>\n\t\t\t<li class=\"list-group-item\">Item 3</li>\n\t\t</ul>\n\t\t\n\t\t<div class=\"list-group\">\n\t\t\t<a href=\"#\" class=\"list-group-item active\">Item 1</a>\n\t\t\t<a href=\"#\" class=\"list-group-item\">Item 2</a>\n\t\t\t<a href=\"#\" class=\"list-group-item\">Item 3</a>\n\t\t</div>\n\t</div>\n\t\n\t<div class=\"container\">\n<!-- PANELS -->\n\t\t<div class=\"panel panel-primary\">\n\t\t\t<div class=\"panel-heading\"><h3 class=\"panel-title\">Panel title</h3></div>\n\t\t\t<div class=\"panel-body\">Panel content</div>\n\t\t\t<div class=\"panel-footer\">Panel footer</div>\n\t\t</div>\n\t\t\n\t\t<hr>\n\t\t\n<!-- WELLS -->\n\t\t<div class=\"well\">Well</div>\n\t\t<div class=\"well well-lg\">Well large</div>\n\t\t<div class=\"well well-sm\">Well small</div>\n\t\t\n\t\t<hr>\n\t\t\n<!-- ALERTS -->\n\t\t<div class=\"alert alert-success\" role=\"alert\">Alert success</div>\n\t\t<div class=\"alert alert-info\" role=\"alert\">Alert info..</div>\n\t\t<div class=\"alert alert-warning\" role=\"alert\">Alert warning..</div>\n\t\t<div class=\"alert alert-danger\" role=\"alert\">Alert danger..</div>\n\t\t\n\t\t<div class=\"alert alert-info alert-dismissible\" role=\"alert\">\n\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"alert\">\n\t\t\t\t<span>&times;</span>\n\t\t\t</button>\n\t\t\tyou can close this alert..\n\t\t</div>\n\t\t\n\t\t<hr>\n\t\t\n<!-- PROGRESS BARS -->\n\t\t<div class=\"progress\">\n\t\t\t<div class=\"progress-bar progress-bar-success progress-bar-striped active\" style=\"width:50%;\">\n\t\t\t\t50%\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<hr>\n\t\t\n<!-- LABELS -->\n\t\t<span class=\"label label-default\">default label</span>\n\t\t<h1><span class=\"label label-primary\">primary label in h1</span></h1>\n\t\t<span class=\"label label-success\">success label</span>\n\t\t<span class=\"label label-warning\">warning label</span>\n\t\t<span class=\"label label-danger\">danger label</span>\n\t\t\n\t\t<hr>\n\t\t\n<!-- BADGES -->\n\t\t<a href=\"#\">Inbox <span class=\"badge\">50</span></a>\n\t\t<button class=\"btn\">Messages <span class=\"badge\">9</span> </button>\n\t\t\n\t\t<hr>\n\t</div>\n\t\n<!-- IMAGES -->\n\t<div class=\"container\">\n\t\t<img alt=\"\" class=\"thumbnail\" src=\"https://goo.gl/LpLNct\">\n\t\t<img alt=\"\" class=\"img-rounded\" src=\"https://goo.gl/LpLNct\">\n\t\t<img alt=\"\" class=\"img-circle\" src=\"https://goo.gl/LpLNct\">\n\t</div>\n\t\n\t<hr>\n\t\t\n<!-- GRIDS -->\n\t<div class=\" container\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-8 col-sm-8 col-xs-8\">\n\t\t\t\t<p>Lorem Ipsum is simply dummy text of the printing and\n\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry's standard\n\t\t\t\t\tdummy text ever since the 1500s, when an unknown printer took a\n\t\t\t\t\tAldus PageMaker including versions of Lorem Ipsum.</p>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-4 col-sm-4 col-xs-4\">\n\t\t\t\t<p>Lorem Ipsum is simply dummy text of the printing and\n\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry's.</p>\n\t\t\t</div>\n\t\t</div>\t\n\t\t<hr>\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-3\">\n\t\t\t\t<p>Lorem Ipsum is simply dummy text of the printing and\n\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry's.</p>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-3\">\n\t\t\t\t<p>Lorem Ipsum is simply dummy text of the printing and\n\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry's.</p>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-3\">\n\t\t\t\t<p>Lorem Ipsum is simply dummy text of the printing and\n\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry's.</p>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-3\">\n\t\t\t\t<p>Lorem Ipsum is simply dummy text of the printing and\n\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry's.</p>\n\t\t\t</div>\n\t\t</div>\t\n\t</div>\n\t\n\t<div style=\"height:200px\"></div>\n</body>\n\n</html>\n```","source":"_posts/Bootstrap-CheatSheet.md","raw":"---\ntitle: Bootstrap CheatSheet\ndate: 2018-01-20 17:43:51\ncategories: FrontEnd\ntags: [Bootstrap, CheatSheet, FrontEnd]\n---\n\nThis is a note for learning Bootstrap with a cheat sheet.\n\n<!--more-->\n\n# Download lib\n1. Download -> [Boostrap Download](https://getbootstrap.com/docs/3.3/getting-started/)\n2. Choose `Compiled and minified CSS, JavaScript, and fonts.`\n3. Downland jQuery -> [jQuery Download](https://jquery.com/download/)\n4. Choose `Download the uncompressed, development jQuery 3.2.1`\n5. Copy foldler `bootstrap-3.3.7-dist` into project under `src/main/resources/static`\n6. Copy `jquery-3.2.1` into `src/main/resources/static/js`\n7. Copy basic template to `index.html`\n\t```\n\t<head>\n\t<meta charset=\"utf-8\">\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\t<title>Bootstrap_Demo</title>\n\t\n\t<!-- Bootstrap -->\n\t<script src=\"js/jquery-3.2.1.js\"></script>\n\t<link href=\"bootstrap-3.3.7-dist/css/bootstrap.css\" rel=\"stylesheet\">\n\t<script src=\"bootstrap-3.3.7-dist/js/bootstrap.js\"></script>\n\t\n\t</head>\n\n\t```\n\n# Cover\n\n**Showcase: [Bootstrap Demo](/images/bootstrap-demo.html)**\n\n1. NarBar\n2. Jumbotron\n3. Typograpgy\n\t1. Alignment and transformation\n\t2. Float\n\t3. Block quote\n\t4. List\n\t5. Code\n\t6. Contestual color and background color\n4. Button\n\t1. Contestual\n\t2. Size\n5.  Form\n6.  Table\n7.  List group\n8.  Panel\n9.  Well\n10. Alert\n11. Progress bar\n12. Label\n13. Badge\n14. Image\n15. Grid\n\n# Complete Code\n```\n<!doctype html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<title>Bootstrap_Demo</title>\n\n<!-- Bootstrap -->\n<script src=\"js/jquery-3.2.1.js\"></script>\n<link href=\"bootstrap-3.3.7-dist/css/bootstrap.css\" rel=\"stylesheet\">\n<script src=\"bootstrap-3.3.7-dist/js/bootstrap.js\"></script>\n\n<!-- Alternative\n\t<!-- Latest compiled and minified CSS -->\n\t<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n\t\n\t<!-- jQuery library -->\n\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\t\n\t<!-- Latest compiled JavaScript -->\n\t<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n-->\n\n<!-- Customized -->\n<style type=\"text/css\">\n\t.navbar{\n\t\tmargin-bottom: 0;\n\t\tborder-radius: 0;\n\t}\n</style>\n\n</head>\n\n<body>\n\t\n<!-- NAVBAR -->\n\t<nav class=\"navbar navbar-inverse\">\n\t\t<div class=\"container-fluid\">\n\t\t\t<!-- Brand and toggle get grouped for better mobile display -->\n\t\t\t<div class=\"navbar-header\">\n\t\t\t\t<button type=\"button\" class=\"navbar-toggle collapsed\"\n\t\t\t\t\tdata-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\"\n\t\t\t\t\taria-expanded=\"false\">\n\t\t\t\t\t<span class=\"sr-only\">Toggle navigation</span> <span\n\t\t\t\t\t\tclass=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span\n\t\t\t\t\t\tclass=\"icon-bar\"></span>\n\t\t\t\t</button>\n\t\t\t\t<a class=\"navbar-brand\" href=\"#\">Bootstrap CheatSheet</a>\n\t\t\t</div>\n\t\t\t\n\t\t\t<!-- Collect the nav links, forms, and other content for toggling -->\n\t\t\t<div class=\"collapse navbar-collapse\"\n\t\t\t\tid=\"bs-example-navbar-collapse-1\">\n\t\t\t\t<ul class=\"nav navbar-nav\">\n\t\t\t\t\t<li class=\"active\"><a href=\"#\">Link <span class=\"sr-only\">(current)</span></a></li>\n\t\t\t\t\t<li><a href=\"#\">Link</a></li>\n\t\t\t\t\t<li class=\"dropdown\"><a href=\"#\" class=\"dropdown-toggle\"\n\t\t\t\t\t\tdata-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n\t\t\t\t\t\taria-expanded=\"false\">Dropdown <span class=\"caret\"></span></a>\n\t\t\t\t\t\t<ul class=\"dropdown-menu\">\n\t\t\t\t\t\t\t<li><a href=\"#\">Action</a></li>\n\t\t\t\t\t\t\t<li><a href=\"#\">Another action</a></li>\n\t\t\t\t\t\t\t<li><a href=\"#\">Something else here</a></li>\n\t\t\t\t\t\t\t<li role=\"separator\" class=\"divider\"></li>\n\t\t\t\t\t\t\t<li><a href=\"#\">Separated link</a></li>\n\t\t\t\t\t\t\t<li role=\"separator\" class=\"divider\"></li>\n\t\t\t\t\t\t\t<li><a href=\"#\">One more separated link</a></li>\n\t\t\t\t\t\t</ul></li>\n\t\t\t\t</ul>\n\t\t\t\t<form class=\"navbar-form navbar-left\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"Search\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-default\">Submit</button>\n\t\t\t\t</form>\n\t\t\t\t<ul class=\"nav navbar-nav navbar-right\">\n\t\t\t\t\t<li><a href=\"#\">Link</a></li>\n\t\t\t\t\t<li class=\"dropdown\"><a href=\"#\" class=\"dropdown-toggle\"\n\t\t\t\t\t\tdata-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n\t\t\t\t\t\taria-expanded=\"false\">Dropdown <span class=\"caret\"></span></a>\n\t\t\t\t\t\t<ul class=\"dropdown-menu\">\n\t\t\t\t\t\t\t<li><a href=\"#\">Action</a></li>\n\t\t\t\t\t\t\t<li><a href=\"#\">Another action</a></li>\n\t\t\t\t\t\t\t<li><a href=\"#\">Something else here</a></li>\n\t\t\t\t\t\t\t<li role=\"separator\" class=\"divider\"></li>\n\t\t\t\t\t\t\t<li><a href=\"#\">Separated link</a></li>\n\t\t\t\t\t\t</ul></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<!-- /.navbar-collapse -->\n\t\t</div>\n\t\t<!-- /.container-fluid -->\n\t</nav>\n\t\n<!-- JUMBOTRON -->\n\t<div class=\"jumbotron text-center\">\n\t\t<div class=\"container\">\n\t\t\t<h1>Welcome to Bootstrap CheatSheet</h1>\n\t\t\t<p>Lorem Ipsum is simply dummy text of the printing and\n\t\t\ttypesetting industry. Lorem Ipsum has been the industry's standard\n\t\t\tdummy text ever since the 1500s</p>\n\t\t\t<a href=\"#\" class=\"btn btn-primary\">Read More</a>\n\t\t</div>\n\t</div>\n\t\n\n<!-- TYPOGRAPHY -->\n\t<div class=\"container\">\n\t\n\t\t<h1 class=\"page-header\">Hello, world! <small>Secondary text</small></h1>\n\t\t\n\t\t<p class=\"lead\">Lorem Ipsum is simply dummy text of the printing and\n\t\t\ttypesetting industry. Lorem Ipsum has been the industry's standard\n\t\t\tdummy text ever since the 1500s, when an unknown printer took a\n\t\t\tAldus PageMaker including versions of Lorem Ipsum.</p>\n\t\t\t\n\t\t<p><mark>Lorem Ipsum is simply dummy</mark> text of the printing and\n\t\t\ttypesetting industry. Lorem Ipsum has been the industry's standard\n\t\t\tdummy text ever since the 1500s, when an unknown printer took a\n\t\t\tgalley of type and scrambled it to make a type specimen book. It has\n\t\t\tsurvived not <del>only five centuries, but also the leap </del> into electronic\n\t\t\ttypesetting, remaining essentially unchanged. It was popularised in\n\t\t\tthe 1960s with the release of Letraset sheets containing Lorem Ipsum\n\t\t\tpassages, <u>and more recently with desktop publishing</u> software like\n\t\t\tAldus PageMaker including versions of Lorem Ipsum.</p>\n\t\t\n\t\t<hr>\t\n\t\t\n<!-- ALIGNMENT & TRANSFORMATION -->\n\t\t<p class=\"text-left text-lowercase\">Left aligned text.</p>\n\t\t<p class=\"text-center text-uppercase\">Center aligned text.</p>\n\t\t<p class=\"text-right text-capitalize\">Right aligned text.</p>\n\t\t<p class=\"text-justify\">Justified text.</p>\n\t\t<p class=\"text-nowrap\">No wrap text.</p>\n\t\t\n\t\t<hr>\t\n\t\t\n<!-- QUICK FLOATS -->\n\t\t<div class=\"pull-right\">Div float to right</div>\n\t\t<div class=\"pull-left\">Div float to left</div>\n\t\t\n<!-- CLEAR FLOATS -->\n\t\t<div class=\"clearfix\"></div>\n\t\t\n\t\t<hr>\t\n\t\t\n<!-- BLOCK QUOTE -->\n\t\t<blockquote class=\"blockquote\">\n\t\t<p>Lorem Ipsum is simply dummy text of the\n\t\t\tprinting and typesetting industry. Lorem Ipsum has been the\n\t\t\tindustry's standard dummy text ever since the 1500s, when an unknown\n\t\t\tprinter took a Aldus PageMaker including versions of Lorem Ipsum.</p>\n\t\t<footer>Quote By <cite title=\"Ryan\">Ryan</cite></footer>\n\t\t</blockquote>\n\t\t\n\t\t<hr>\n\t\t\n<!-- LISTS -->\n\t\t<ul>\n\t\t\t<li>Item 1</li>\n\t\t\t<li>Item 2</li>\n\t\t\t<li>Item 3</li>\n\t\t</ul>\n\t\t\n<!-- CODE -->\n\t\t<code>&lt;h1&gt;Heading text&lt;/h1&gt;</code>\n\t\t<br>\n\t\tchange directory with <kbd>cd</kbd>\n\t\t<br>\n\t\tto edit settings, press <kbd><kbd>ctrl</kbd>+<kbd>,</kbd></kbd>\n\t\t\n\t\t<hr>\n\t\t\n\t\t<!-- CONTESTUAL COLORS -->\n\t\t<p class=\"text-primary\">Hello World..</p>\n\t\t<p class=\"text-success\">Hello World..</p>\n\t\t<p class=\"text-info\">Hello World..</p>\n\t\t<p class=\"text-warning\">Hello World..</p>\n\t\t<p class=\"text-danger\">Hello World..</p>\n\t\t<p class=\"text-muted\">Hello World..</p>\n\t\t\n\t\t<!-- CONTESTUAL BACKGROUND COLORS -->\n\t\t<p class=\"bg-primary\">Hello World..</p>\n\t\t<p class=\"bg-success\">Hello World..</p>\n\t\t<p class=\"bg-info\">Hello World..</p>\n\t\t<p class=\"bg-warning\">Hello World..</p>\n\t\t<p class=\"bg-danger\">Hello World..</p>\n\t\t\n\t</div>\n\t\n\t<hr>\n\t\n<!-- BUTTON -->\n\t<div class=\"container\">\n\t\n\t\t<button class=\"btn btn-default\">Default</button>\n\t\t<a href=\"#\" class=\"btn btn-default\" role=\"button\">Link</a>\n\t\t<input type=\"submit\" class=\"btn btn-default\" value=\"Submit\">\n\t\t<br>\n\t\t\n<!-- CONTESTUAL BUTTONS -->\n\t\t<button class=\"btn btn-default\">Default</button>\n\t\t<button class=\"btn btn-primary\">primary</button>\n\t\t<button class=\"btn btn-success\">success</button>\n\t\t<button class=\"btn btn-info\">info</button>\n\t\t<button class=\"btn btn-warning\">warning</button>\n\t\t<button class=\"btn btn-danger\">danger</button>\n\t\t<button class=\"btn btn-link\">link</button>\n\t\t<br>\n\t\t\n<!-- BUTTON SIZES -->\n\t\t<button class=\"btn btn-default btn-lg\">Default</button>\n\t\t<button class=\"btn btn-default\">Default</button>\n\t\t<button class=\"btn btn-default btn-sm\">Default</button>\n\t\t<button class=\"btn btn-default btn-xs\" disabled=\"disabled\">Default</button>\n\t</div>\n\t\n\t<hr>\n\t\n<!-- FORMS -->\n\t<div class=\"container\">\n\t\t<form action=\"\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Name</label>\n\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"Add Name\">\t\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Email</label>\n\t\t\t\t<input type=\"email\" class=\"form-control\" placeholder=\"Add Email\">\t\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Message</label>\n\t\t\t\t<textarea class=\"form-control\" placeholder=\"Add Name\"></textarea>\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Gender</label>\n\t\t\t\t<select class=\"form-control\">\n\t\t\t\t\t<option value=\"male\">Male</option>\n\t\t\t\t\t<option value=\"female\">Female</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Upload File</label>\n\t\t\t\t<input type=\"file\">\n\t\t\t\t<p class=\"help-block\">Only pdf accepted</p>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"checkbox\">\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"checkbox\">check me out\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t\n\t\t\t<button type=\"submit\" class=\"btn btn-default\">Submit</button>\n\t\t</form>\n\t\t\t\n\t\t<hr>\n\t\t\n<!-- INLINE FORM -->\n\t\t<form class=\"form-inline\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Name</label>\n\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"Add Name\">\t\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Email</label>\n\t\t\t\t<input type=\"email\" class=\"form-control\" placeholder=\"Add Email\">\t\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Gender</label>\n\t\t\t\t<select class=\"form-control\">\n\t\t\t\t\t<option value=\"male\">Male</option>\n\t\t\t\t\t<option value=\"female\">Female</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"checkbox\">\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"checkbox\">check me out\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t\n\t\t\t<button type=\"submit\" class=\"btn btn-default\">Submit</button>\n\t\t</form>\t\t\n\t\t\t\n\t</div>\n\t\n\t<hr>\n\t\n<!-- TABLE -->\n\t<div class=\"container\">\n\t\t<table class=\"table table-striped table-bordered table-hover table-condensed\">\n\t\t\t<tr>\n\t\t\t\t<th>FirstName</th>\n\t\t\t\t<th>LastName</th>\n\t\t\t\t<th>Age</th>\n\t\t\t</tr>\t\n\t\t\t<tr class=\"success\">\n\t\t\t\t<th>Xu</th>\n\t\t\t\t<th>Luo</th>\n\t\t\t\t<th>30</th>\n\t\t\t</tr>\t\n\t\t\t<tr>\n\t\t\t\t<th>Melvin</th>\n\t\t\t\t<th>Tan</th>\n\t\t\t\t<th>32</th>\n\t\t\t</tr>\t\n\t\t\t<tr class=\"danger\">\n\t\t\t\t<th>Tim</th>\n\t\t\t\t<th>Park</th>\n\t\t\t\t<th>40</th>\n\t\t\t</tr>\t\n\t\t</table>\n\t</div>\n\t\n\t<hr>\n<!-- LIST GROUP -->\n\t<div class=\"container\">\n\t\t<ul class=\"list-group\">\n\t\t\t<li class=\"list-group-item\">Item 1</li>\n\t\t\t<li class=\"list-group-item\">Item 2</li>\n\t\t\t<li class=\"list-group-item\">Item 3</li>\n\t\t</ul>\n\t\t\n\t\t<div class=\"list-group\">\n\t\t\t<a href=\"#\" class=\"list-group-item active\">Item 1</a>\n\t\t\t<a href=\"#\" class=\"list-group-item\">Item 2</a>\n\t\t\t<a href=\"#\" class=\"list-group-item\">Item 3</a>\n\t\t</div>\n\t</div>\n\t\n\t<div class=\"container\">\n<!-- PANELS -->\n\t\t<div class=\"panel panel-primary\">\n\t\t\t<div class=\"panel-heading\"><h3 class=\"panel-title\">Panel title</h3></div>\n\t\t\t<div class=\"panel-body\">Panel content</div>\n\t\t\t<div class=\"panel-footer\">Panel footer</div>\n\t\t</div>\n\t\t\n\t\t<hr>\n\t\t\n<!-- WELLS -->\n\t\t<div class=\"well\">Well</div>\n\t\t<div class=\"well well-lg\">Well large</div>\n\t\t<div class=\"well well-sm\">Well small</div>\n\t\t\n\t\t<hr>\n\t\t\n<!-- ALERTS -->\n\t\t<div class=\"alert alert-success\" role=\"alert\">Alert success</div>\n\t\t<div class=\"alert alert-info\" role=\"alert\">Alert info..</div>\n\t\t<div class=\"alert alert-warning\" role=\"alert\">Alert warning..</div>\n\t\t<div class=\"alert alert-danger\" role=\"alert\">Alert danger..</div>\n\t\t\n\t\t<div class=\"alert alert-info alert-dismissible\" role=\"alert\">\n\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"alert\">\n\t\t\t\t<span>&times;</span>\n\t\t\t</button>\n\t\t\tyou can close this alert..\n\t\t</div>\n\t\t\n\t\t<hr>\n\t\t\n<!-- PROGRESS BARS -->\n\t\t<div class=\"progress\">\n\t\t\t<div class=\"progress-bar progress-bar-success progress-bar-striped active\" style=\"width:50%;\">\n\t\t\t\t50%\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<hr>\n\t\t\n<!-- LABELS -->\n\t\t<span class=\"label label-default\">default label</span>\n\t\t<h1><span class=\"label label-primary\">primary label in h1</span></h1>\n\t\t<span class=\"label label-success\">success label</span>\n\t\t<span class=\"label label-warning\">warning label</span>\n\t\t<span class=\"label label-danger\">danger label</span>\n\t\t\n\t\t<hr>\n\t\t\n<!-- BADGES -->\n\t\t<a href=\"#\">Inbox <span class=\"badge\">50</span></a>\n\t\t<button class=\"btn\">Messages <span class=\"badge\">9</span> </button>\n\t\t\n\t\t<hr>\n\t</div>\n\t\n<!-- IMAGES -->\n\t<div class=\"container\">\n\t\t<img alt=\"\" class=\"thumbnail\" src=\"https://goo.gl/LpLNct\">\n\t\t<img alt=\"\" class=\"img-rounded\" src=\"https://goo.gl/LpLNct\">\n\t\t<img alt=\"\" class=\"img-circle\" src=\"https://goo.gl/LpLNct\">\n\t</div>\n\t\n\t<hr>\n\t\t\n<!-- GRIDS -->\n\t<div class=\" container\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-8 col-sm-8 col-xs-8\">\n\t\t\t\t<p>Lorem Ipsum is simply dummy text of the printing and\n\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry's standard\n\t\t\t\t\tdummy text ever since the 1500s, when an unknown printer took a\n\t\t\t\t\tAldus PageMaker including versions of Lorem Ipsum.</p>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-4 col-sm-4 col-xs-4\">\n\t\t\t\t<p>Lorem Ipsum is simply dummy text of the printing and\n\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry's.</p>\n\t\t\t</div>\n\t\t</div>\t\n\t\t<hr>\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-3\">\n\t\t\t\t<p>Lorem Ipsum is simply dummy text of the printing and\n\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry's.</p>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-3\">\n\t\t\t\t<p>Lorem Ipsum is simply dummy text of the printing and\n\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry's.</p>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-3\">\n\t\t\t\t<p>Lorem Ipsum is simply dummy text of the printing and\n\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry's.</p>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-3\">\n\t\t\t\t<p>Lorem Ipsum is simply dummy text of the printing and\n\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry's.</p>\n\t\t\t</div>\n\t\t</div>\t\n\t</div>\n\t\n\t<div style=\"height:200px\"></div>\n</body>\n\n</html>\n```","slug":"Bootstrap-CheatSheet","published":1,"updated":"2020-04-30T09:23:19.525Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedhw0009sd5troup5ztf","content":"<p>This is a note for learning Bootstrap with a cheat sheet.</p>\n<a id=\"more\"></a>\n\n<h1 id=\"Download-lib\"><a href=\"#Download-lib\" class=\"headerlink\" title=\"Download lib\"></a>Download lib</h1><ol>\n<li>Download -&gt; <a href=\"https://getbootstrap.com/docs/3.3/getting-started/\" target=\"_blank\" rel=\"noopener\">Boostrap Download</a></li>\n<li>Choose <code>Compiled and minified CSS, JavaScript, and fonts.</code></li>\n<li>Downland jQuery -&gt; <a href=\"https://jquery.com/download/\" target=\"_blank\" rel=\"noopener\">jQuery Download</a></li>\n<li>Choose <code>Download the uncompressed, development jQuery 3.2.1</code></li>\n<li>Copy foldler <code>bootstrap-3.3.7-dist</code> into project under <code>src/main/resources/static</code></li>\n<li>Copy <code>jquery-3.2.1</code> into <code>src/main/resources/static/js</code></li>\n<li>Copy basic template to <code>index.html</code> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class=\"line\">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class=\"line\">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;</span><br><span class=\"line\">&lt;title&gt;Bootstrap_Demo&lt;/title&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- Bootstrap --&gt;</span><br><span class=\"line\">&lt;script src=&quot;js/jquery-3.2.1.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;link href=&quot;bootstrap-3.3.7-dist/css/bootstrap.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class=\"line\">&lt;script src=&quot;bootstrap-3.3.7-dist/js/bootstrap.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/head&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h1 id=\"Cover\"><a href=\"#Cover\" class=\"headerlink\" title=\"Cover\"></a>Cover</h1><p><strong>Showcase: <a href=\"/images/bootstrap-demo.html\">Bootstrap Demo</a></strong></p>\n<ol>\n<li>NarBar</li>\n<li>Jumbotron</li>\n<li>Typograpgy<ol>\n<li>Alignment and transformation</li>\n<li>Float</li>\n<li>Block quote</li>\n<li>List</li>\n<li>Code</li>\n<li>Contestual color and background color</li>\n</ol>\n</li>\n<li>Button<ol>\n<li>Contestual</li>\n<li>Size</li>\n</ol>\n</li>\n<li>Form</li>\n<li>Table</li>\n<li>List group</li>\n<li>Panel</li>\n<li>Well</li>\n<li>Alert</li>\n<li>Progress bar</li>\n<li>Label</li>\n<li>Badge</li>\n<li>Image</li>\n<li>Grid</li>\n</ol>\n<h1 id=\"Complete-Code\"><a href=\"#Complete-Code\" class=\"headerlink\" title=\"Complete Code\"></a>Complete Code</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!doctype html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class=\"line\">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class=\"line\">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;</span><br><span class=\"line\">&lt;title&gt;Bootstrap_Demo&lt;/title&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- Bootstrap --&gt;</span><br><span class=\"line\">&lt;script src=&quot;js/jquery-3.2.1.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;link href=&quot;bootstrap-3.3.7-dist/css/bootstrap.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class=\"line\">&lt;script src=&quot;bootstrap-3.3.7-dist/js/bootstrap.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- Alternative</span><br><span class=\"line\">\t&lt;!-- Latest compiled and minified CSS --&gt;</span><br><span class=\"line\">\t&lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;!-- jQuery library --&gt;</span><br><span class=\"line\">\t&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;!-- Latest compiled JavaScript --&gt;</span><br><span class=\"line\">\t&lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">--&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- Customized --&gt;</span><br><span class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class=\"line\">\t.navbar&#123;</span><br><span class=\"line\">\t\tmargin-bottom: 0;</span><br><span class=\"line\">\t\tborder-radius: 0;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;!-- NAVBAR --&gt;</span><br><span class=\"line\">\t&lt;nav class=&quot;navbar navbar-inverse&quot;&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;container-fluid&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;!-- Brand and toggle get grouped for better mobile display --&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;navbar-header&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot;</span><br><span class=\"line\">\t\t\t\t\tdata-toggle=&quot;collapse&quot; data-target=&quot;#bs-example-navbar-collapse-1&quot;</span><br><span class=\"line\">\t\t\t\t\taria-expanded=&quot;false&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt; &lt;span</span><br><span class=\"line\">\t\t\t\t\t\tclass=&quot;icon-bar&quot;&gt;&lt;/span&gt; &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt; &lt;span</span><br><span class=\"line\">\t\t\t\t\t\tclass=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span><br><span class=\"line\">\t\t\t\t&lt;/button&gt;</span><br><span class=\"line\">\t\t\t\t&lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;Bootstrap CheatSheet&lt;/a&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t&lt;!-- Collect the nav links, forms, and other content for toggling --&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;collapse navbar-collapse&quot;</span><br><span class=\"line\">\t\t\t\tid=&quot;bs-example-navbar-collapse-1&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;ul class=&quot;nav navbar-nav&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;#&quot;&gt;Link &lt;span class=&quot;sr-only&quot;&gt;(current)&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;li class=&quot;dropdown&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot;</span><br><span class=\"line\">\t\t\t\t\t\tdata-toggle=&quot;dropdown&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot;</span><br><span class=\"line\">\t\t\t\t\t\taria-expanded=&quot;false&quot;&gt;Dropdown &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/a&gt;</span><br><span class=\"line\">\t\t\t\t\t\t&lt;ul class=&quot;dropdown-menu&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Action&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Another action&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Something else here&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li role=&quot;separator&quot; class=&quot;divider&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Separated link&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li role=&quot;separator&quot; class=&quot;divider&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;One more separated link&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t&lt;/ul&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t&lt;/ul&gt;</span><br><span class=\"line\">\t\t\t\t&lt;form class=&quot;navbar-form navbar-left&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t\t&lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;Search&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;</span><br><span class=\"line\">\t\t\t\t&lt;/form&gt;</span><br><span class=\"line\">\t\t\t\t&lt;ul class=&quot;nav navbar-nav navbar-right&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;li class=&quot;dropdown&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot;</span><br><span class=\"line\">\t\t\t\t\t\tdata-toggle=&quot;dropdown&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot;</span><br><span class=\"line\">\t\t\t\t\t\taria-expanded=&quot;false&quot;&gt;Dropdown &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/a&gt;</span><br><span class=\"line\">\t\t\t\t\t\t&lt;ul class=&quot;dropdown-menu&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Action&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Another action&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Something else here&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li role=&quot;separator&quot; class=&quot;divider&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Separated link&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t&lt;/ul&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t&lt;/ul&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;!-- /.navbar-collapse --&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;!-- /.container-fluid --&gt;</span><br><span class=\"line\">\t&lt;/nav&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;!-- JUMBOTRON --&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;jumbotron text-center&quot;&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;h1&gt;Welcome to Bootstrap CheatSheet&lt;/h1&gt;</span><br><span class=\"line\">\t\t\t&lt;p&gt;Lorem Ipsum is simply dummy text of the printing and</span><br><span class=\"line\">\t\t\ttypesetting industry. Lorem Ipsum has been the industry&apos;s standard</span><br><span class=\"line\">\t\t\tdummy text ever since the 1500s&lt;/p&gt;</span><br><span class=\"line\">\t\t\t&lt;a href=&quot;#&quot; class=&quot;btn btn-primary&quot;&gt;Read More&lt;/a&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- TYPOGRAPHY --&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t&lt;h1 class=&quot;page-header&quot;&gt;Hello, world! &lt;small&gt;Secondary text&lt;/small&gt;&lt;/h1&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;p class=&quot;lead&quot;&gt;Lorem Ipsum is simply dummy text of the printing and</span><br><span class=\"line\">\t\t\ttypesetting industry. Lorem Ipsum has been the industry&apos;s standard</span><br><span class=\"line\">\t\t\tdummy text ever since the 1500s, when an unknown printer took a</span><br><span class=\"line\">\t\t\tAldus PageMaker including versions of Lorem Ipsum.&lt;/p&gt;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&lt;p&gt;&lt;mark&gt;Lorem Ipsum is simply dummy&lt;/mark&gt; text of the printing and</span><br><span class=\"line\">\t\t\ttypesetting industry. Lorem Ipsum has been the industry&apos;s standard</span><br><span class=\"line\">\t\t\tdummy text ever since the 1500s, when an unknown printer took a</span><br><span class=\"line\">\t\t\tgalley of type and scrambled it to make a type specimen book. It has</span><br><span class=\"line\">\t\t\tsurvived not &lt;del&gt;only five centuries, but also the leap &lt;/del&gt; into electronic</span><br><span class=\"line\">\t\t\ttypesetting, remaining essentially unchanged. It was popularised in</span><br><span class=\"line\">\t\t\tthe 1960s with the release of Letraset sheets containing Lorem Ipsum</span><br><span class=\"line\">\t\t\tpassages, &lt;u&gt;and more recently with desktop publishing&lt;/u&gt; software like</span><br><span class=\"line\">\t\t\tAldus PageMaker including versions of Lorem Ipsum.&lt;/p&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;\t</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- ALIGNMENT &amp; TRANSFORMATION --&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-left text-lowercase&quot;&gt;Left aligned text.&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-center text-uppercase&quot;&gt;Center aligned text.&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-right text-capitalize&quot;&gt;Right aligned text.&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-justify&quot;&gt;Justified text.&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-nowrap&quot;&gt;No wrap text.&lt;/p&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;\t</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- QUICK FLOATS --&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;pull-right&quot;&gt;Div float to right&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;pull-left&quot;&gt;Div float to left&lt;/div&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- CLEAR FLOATS --&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;\t</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- BLOCK QUOTE --&gt;</span><br><span class=\"line\">\t\t&lt;blockquote class=&quot;blockquote&quot;&gt;</span><br><span class=\"line\">\t\t&lt;p&gt;Lorem Ipsum is simply dummy text of the</span><br><span class=\"line\">\t\t\tprinting and typesetting industry. Lorem Ipsum has been the</span><br><span class=\"line\">\t\t\tindustry&apos;s standard dummy text ever since the 1500s, when an unknown</span><br><span class=\"line\">\t\t\tprinter took a Aldus PageMaker including versions of Lorem Ipsum.&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;footer&gt;Quote By &lt;cite title=&quot;Ryan&quot;&gt;Ryan&lt;/cite&gt;&lt;/footer&gt;</span><br><span class=\"line\">\t\t&lt;/blockquote&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- LISTS --&gt;</span><br><span class=\"line\">\t\t&lt;ul&gt;</span><br><span class=\"line\">\t\t\t&lt;li&gt;Item 1&lt;/li&gt;</span><br><span class=\"line\">\t\t\t&lt;li&gt;Item 2&lt;/li&gt;</span><br><span class=\"line\">\t\t\t&lt;li&gt;Item 3&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;/ul&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- CODE --&gt;</span><br><span class=\"line\">\t\t&lt;code&gt;&amp;lt;h1&amp;gt;Heading text&amp;lt;/h1&amp;gt;&lt;/code&gt;</span><br><span class=\"line\">\t\t&lt;br&gt;</span><br><span class=\"line\">\t\tchange directory with &lt;kbd&gt;cd&lt;/kbd&gt;</span><br><span class=\"line\">\t\t&lt;br&gt;</span><br><span class=\"line\">\t\tto edit settings, press &lt;kbd&gt;&lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;,&lt;/kbd&gt;&lt;/kbd&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;!-- CONTESTUAL COLORS --&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-primary&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-success&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-info&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-warning&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-danger&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-muted&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;!-- CONTESTUAL BACKGROUND COLORS --&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;bg-primary&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;bg-success&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;bg-info&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;bg-warning&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;bg-danger&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;hr&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;!-- BUTTON --&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-default&quot;&gt;Default&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;a href=&quot;#&quot; class=&quot;btn btn-default&quot; role=&quot;button&quot;&gt;Link&lt;/a&gt;</span><br><span class=\"line\">\t\t&lt;input type=&quot;submit&quot; class=&quot;btn btn-default&quot; value=&quot;Submit&quot;&gt;</span><br><span class=\"line\">\t\t&lt;br&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- CONTESTUAL BUTTONS --&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-default&quot;&gt;Default&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-primary&quot;&gt;primary&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-success&quot;&gt;success&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-info&quot;&gt;info&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-warning&quot;&gt;warning&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-danger&quot;&gt;danger&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-link&quot;&gt;link&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;br&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- BUTTON SIZES --&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-default btn-lg&quot;&gt;Default&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-default&quot;&gt;Default&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-default btn-sm&quot;&gt;Default&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-default btn-xs&quot; disabled=&quot;disabled&quot;&gt;Default&lt;/button&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;hr&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;!-- FORMS --&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">\t\t&lt;form action=&quot;&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;Name&lt;/label&gt;</span><br><span class=\"line\">\t\t\t\t&lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;Add Name&quot;&gt;\t</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;Email&lt;/label&gt;</span><br><span class=\"line\">\t\t\t\t&lt;input type=&quot;email&quot; class=&quot;form-control&quot; placeholder=&quot;Add Email&quot;&gt;\t</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;Message&lt;/label&gt;</span><br><span class=\"line\">\t\t\t\t&lt;textarea class=&quot;form-control&quot; placeholder=&quot;Add Name&quot;&gt;&lt;/textarea&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;Gender&lt;/label&gt;</span><br><span class=\"line\">\t\t\t\t&lt;select class=&quot;form-control&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;option value=&quot;male&quot;&gt;Male&lt;/option&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;option value=&quot;female&quot;&gt;Female&lt;/option&gt;</span><br><span class=\"line\">\t\t\t\t&lt;/select&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;Upload File&lt;/label&gt;</span><br><span class=\"line\">\t\t\t\t&lt;input type=&quot;file&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;p class=&quot;help-block&quot;&gt;Only pdf accepted&lt;/p&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;checkbox&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;input type=&quot;checkbox&quot;&gt;check me out</span><br><span class=\"line\">\t\t\t\t&lt;/label&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t&lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;/form&gt;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- INLINE FORM --&gt;</span><br><span class=\"line\">\t\t&lt;form class=&quot;form-inline&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;Name&lt;/label&gt;</span><br><span class=\"line\">\t\t\t\t&lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;Add Name&quot;&gt;\t</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;Email&lt;/label&gt;</span><br><span class=\"line\">\t\t\t\t&lt;input type=&quot;email&quot; class=&quot;form-control&quot; placeholder=&quot;Add Email&quot;&gt;\t</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;Gender&lt;/label&gt;</span><br><span class=\"line\">\t\t\t\t&lt;select class=&quot;form-control&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;option value=&quot;male&quot;&gt;Male&lt;/option&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;option value=&quot;female&quot;&gt;Female&lt;/option&gt;</span><br><span class=\"line\">\t\t\t\t&lt;/select&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;checkbox&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;input type=&quot;checkbox&quot;&gt;check me out</span><br><span class=\"line\">\t\t\t\t&lt;/label&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t&lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;/form&gt;\t\t</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;hr&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;!-- TABLE --&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">\t\t&lt;table class=&quot;table table-striped table-bordered table-hover table-condensed&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;FirstName&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;LastName&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;Age&lt;/th&gt;</span><br><span class=\"line\">\t\t\t&lt;/tr&gt;\t</span><br><span class=\"line\">\t\t\t&lt;tr class=&quot;success&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;Xu&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;Luo&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;30&lt;/th&gt;</span><br><span class=\"line\">\t\t\t&lt;/tr&gt;\t</span><br><span class=\"line\">\t\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;Melvin&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;Tan&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;32&lt;/th&gt;</span><br><span class=\"line\">\t\t\t&lt;/tr&gt;\t</span><br><span class=\"line\">\t\t\t&lt;tr class=&quot;danger&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;Tim&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;Park&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;40&lt;/th&gt;</span><br><span class=\"line\">\t\t\t&lt;/tr&gt;\t</span><br><span class=\"line\">\t\t&lt;/table&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;hr&gt;</span><br><span class=\"line\">&lt;!-- LIST GROUP --&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">\t\t&lt;ul class=&quot;list-group&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;li class=&quot;list-group-item&quot;&gt;Item 1&lt;/li&gt;</span><br><span class=\"line\">\t\t\t&lt;li class=&quot;list-group-item&quot;&gt;Item 2&lt;/li&gt;</span><br><span class=\"line\">\t\t\t&lt;li class=&quot;list-group-item&quot;&gt;Item 3&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;/ul&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;div class=&quot;list-group&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;a href=&quot;#&quot; class=&quot;list-group-item active&quot;&gt;Item 1&lt;/a&gt;</span><br><span class=\"line\">\t\t\t&lt;a href=&quot;#&quot; class=&quot;list-group-item&quot;&gt;Item 2&lt;/a&gt;</span><br><span class=\"line\">\t\t\t&lt;a href=&quot;#&quot; class=&quot;list-group-item&quot;&gt;Item 3&lt;/a&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">&lt;!-- PANELS --&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;panel panel-primary&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;panel-heading&quot;&gt;&lt;h3 class=&quot;panel-title&quot;&gt;Panel title&lt;/h3&gt;&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;panel-body&quot;&gt;Panel content&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;panel-footer&quot;&gt;Panel footer&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- WELLS --&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;well&quot;&gt;Well&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;well well-lg&quot;&gt;Well large&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;well well-sm&quot;&gt;Well small&lt;/div&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- ALERTS --&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;alert alert-success&quot; role=&quot;alert&quot;&gt;Alert success&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;alert alert-info&quot; role=&quot;alert&quot;&gt;Alert info..&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;Alert warning..&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;alert alert-danger&quot; role=&quot;alert&quot;&gt;Alert danger..&lt;/div&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;div class=&quot;alert alert-info alert-dismissible&quot; role=&quot;alert&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;alert&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;span&gt;&amp;times;&lt;/span&gt;</span><br><span class=\"line\">\t\t\t&lt;/button&gt;</span><br><span class=\"line\">\t\t\tyou can close this alert..</span><br><span class=\"line\">\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- PROGRESS BARS --&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;progress&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;progress-bar progress-bar-success progress-bar-striped active&quot; style=&quot;width:50%;&quot;&gt;</span><br><span class=\"line\">\t\t\t\t50%</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- LABELS --&gt;</span><br><span class=\"line\">\t\t&lt;span class=&quot;label label-default&quot;&gt;default label&lt;/span&gt;</span><br><span class=\"line\">\t\t&lt;h1&gt;&lt;span class=&quot;label label-primary&quot;&gt;primary label in h1&lt;/span&gt;&lt;/h1&gt;</span><br><span class=\"line\">\t\t&lt;span class=&quot;label label-success&quot;&gt;success label&lt;/span&gt;</span><br><span class=\"line\">\t\t&lt;span class=&quot;label label-warning&quot;&gt;warning label&lt;/span&gt;</span><br><span class=\"line\">\t\t&lt;span class=&quot;label label-danger&quot;&gt;danger label&lt;/span&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- BADGES --&gt;</span><br><span class=\"line\">\t\t&lt;a href=&quot;#&quot;&gt;Inbox &lt;span class=&quot;badge&quot;&gt;50&lt;/span&gt;&lt;/a&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn&quot;&gt;Messages &lt;span class=&quot;badge&quot;&gt;9&lt;/span&gt; &lt;/button&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;!-- IMAGES --&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">\t\t&lt;img alt=&quot;&quot; class=&quot;thumbnail&quot; src=&quot;https://goo.gl/LpLNct&quot;&gt;</span><br><span class=\"line\">\t\t&lt;img alt=&quot;&quot; class=&quot;img-rounded&quot; src=&quot;https://goo.gl/LpLNct&quot;&gt;</span><br><span class=\"line\">\t\t&lt;img alt=&quot;&quot; class=&quot;img-circle&quot; src=&quot;https://goo.gl/LpLNct&quot;&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;hr&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- GRIDS --&gt;</span><br><span class=\"line\">\t&lt;div class=&quot; container&quot;&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;row&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;col-md-8 col-sm-8 col-xs-8&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;p&gt;Lorem Ipsum is simply dummy text of the printing and</span><br><span class=\"line\">\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry&apos;s standard</span><br><span class=\"line\">\t\t\t\t\tdummy text ever since the 1500s, when an unknown printer took a</span><br><span class=\"line\">\t\t\t\t\tAldus PageMaker including versions of Lorem Ipsum.&lt;/p&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;col-md-4 col-sm-4 col-xs-4&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;p&gt;Lorem Ipsum is simply dummy text of the printing and</span><br><span class=\"line\">\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry&apos;s.&lt;/p&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;row&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;col-md-3&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;p&gt;Lorem Ipsum is simply dummy text of the printing and</span><br><span class=\"line\">\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry&apos;s.&lt;/p&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;col-md-3&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;p&gt;Lorem Ipsum is simply dummy text of the printing and</span><br><span class=\"line\">\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry&apos;s.&lt;/p&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;col-md-3&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;p&gt;Lorem Ipsum is simply dummy text of the printing and</span><br><span class=\"line\">\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry&apos;s.&lt;/p&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;col-md-3&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;p&gt;Lorem Ipsum is simply dummy text of the printing and</span><br><span class=\"line\">\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry&apos;s.&lt;/p&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;\t</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;div style=&quot;height:200px&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>This is a note for learning Bootstrap with a cheat sheet.</p>","more":"<h1 id=\"Download-lib\"><a href=\"#Download-lib\" class=\"headerlink\" title=\"Download lib\"></a>Download lib</h1><ol>\n<li>Download -&gt; <a href=\"https://getbootstrap.com/docs/3.3/getting-started/\" target=\"_blank\" rel=\"noopener\">Boostrap Download</a></li>\n<li>Choose <code>Compiled and minified CSS, JavaScript, and fonts.</code></li>\n<li>Downland jQuery -&gt; <a href=\"https://jquery.com/download/\" target=\"_blank\" rel=\"noopener\">jQuery Download</a></li>\n<li>Choose <code>Download the uncompressed, development jQuery 3.2.1</code></li>\n<li>Copy foldler <code>bootstrap-3.3.7-dist</code> into project under <code>src/main/resources/static</code></li>\n<li>Copy <code>jquery-3.2.1</code> into <code>src/main/resources/static/js</code></li>\n<li>Copy basic template to <code>index.html</code> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class=\"line\">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class=\"line\">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;</span><br><span class=\"line\">&lt;title&gt;Bootstrap_Demo&lt;/title&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- Bootstrap --&gt;</span><br><span class=\"line\">&lt;script src=&quot;js/jquery-3.2.1.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;link href=&quot;bootstrap-3.3.7-dist/css/bootstrap.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class=\"line\">&lt;script src=&quot;bootstrap-3.3.7-dist/js/bootstrap.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/head&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h1 id=\"Cover\"><a href=\"#Cover\" class=\"headerlink\" title=\"Cover\"></a>Cover</h1><p><strong>Showcase: <a href=\"/images/bootstrap-demo.html\">Bootstrap Demo</a></strong></p>\n<ol>\n<li>NarBar</li>\n<li>Jumbotron</li>\n<li>Typograpgy<ol>\n<li>Alignment and transformation</li>\n<li>Float</li>\n<li>Block quote</li>\n<li>List</li>\n<li>Code</li>\n<li>Contestual color and background color</li>\n</ol>\n</li>\n<li>Button<ol>\n<li>Contestual</li>\n<li>Size</li>\n</ol>\n</li>\n<li>Form</li>\n<li>Table</li>\n<li>List group</li>\n<li>Panel</li>\n<li>Well</li>\n<li>Alert</li>\n<li>Progress bar</li>\n<li>Label</li>\n<li>Badge</li>\n<li>Image</li>\n<li>Grid</li>\n</ol>\n<h1 id=\"Complete-Code\"><a href=\"#Complete-Code\" class=\"headerlink\" title=\"Complete Code\"></a>Complete Code</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!doctype html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class=\"line\">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class=\"line\">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;</span><br><span class=\"line\">&lt;title&gt;Bootstrap_Demo&lt;/title&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- Bootstrap --&gt;</span><br><span class=\"line\">&lt;script src=&quot;js/jquery-3.2.1.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;link href=&quot;bootstrap-3.3.7-dist/css/bootstrap.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class=\"line\">&lt;script src=&quot;bootstrap-3.3.7-dist/js/bootstrap.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- Alternative</span><br><span class=\"line\">\t&lt;!-- Latest compiled and minified CSS --&gt;</span><br><span class=\"line\">\t&lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;!-- jQuery library --&gt;</span><br><span class=\"line\">\t&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;!-- Latest compiled JavaScript --&gt;</span><br><span class=\"line\">\t&lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">--&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- Customized --&gt;</span><br><span class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class=\"line\">\t.navbar&#123;</span><br><span class=\"line\">\t\tmargin-bottom: 0;</span><br><span class=\"line\">\t\tborder-radius: 0;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;!-- NAVBAR --&gt;</span><br><span class=\"line\">\t&lt;nav class=&quot;navbar navbar-inverse&quot;&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;container-fluid&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;!-- Brand and toggle get grouped for better mobile display --&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;navbar-header&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot;</span><br><span class=\"line\">\t\t\t\t\tdata-toggle=&quot;collapse&quot; data-target=&quot;#bs-example-navbar-collapse-1&quot;</span><br><span class=\"line\">\t\t\t\t\taria-expanded=&quot;false&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt; &lt;span</span><br><span class=\"line\">\t\t\t\t\t\tclass=&quot;icon-bar&quot;&gt;&lt;/span&gt; &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt; &lt;span</span><br><span class=\"line\">\t\t\t\t\t\tclass=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span><br><span class=\"line\">\t\t\t\t&lt;/button&gt;</span><br><span class=\"line\">\t\t\t\t&lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;Bootstrap CheatSheet&lt;/a&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t&lt;!-- Collect the nav links, forms, and other content for toggling --&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;collapse navbar-collapse&quot;</span><br><span class=\"line\">\t\t\t\tid=&quot;bs-example-navbar-collapse-1&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;ul class=&quot;nav navbar-nav&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;#&quot;&gt;Link &lt;span class=&quot;sr-only&quot;&gt;(current)&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;li class=&quot;dropdown&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot;</span><br><span class=\"line\">\t\t\t\t\t\tdata-toggle=&quot;dropdown&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot;</span><br><span class=\"line\">\t\t\t\t\t\taria-expanded=&quot;false&quot;&gt;Dropdown &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/a&gt;</span><br><span class=\"line\">\t\t\t\t\t\t&lt;ul class=&quot;dropdown-menu&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Action&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Another action&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Something else here&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li role=&quot;separator&quot; class=&quot;divider&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Separated link&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li role=&quot;separator&quot; class=&quot;divider&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;One more separated link&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t&lt;/ul&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t&lt;/ul&gt;</span><br><span class=\"line\">\t\t\t\t&lt;form class=&quot;navbar-form navbar-left&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t\t&lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;Search&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;</span><br><span class=\"line\">\t\t\t\t&lt;/form&gt;</span><br><span class=\"line\">\t\t\t\t&lt;ul class=&quot;nav navbar-nav navbar-right&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;li class=&quot;dropdown&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot;</span><br><span class=\"line\">\t\t\t\t\t\tdata-toggle=&quot;dropdown&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot;</span><br><span class=\"line\">\t\t\t\t\t\taria-expanded=&quot;false&quot;&gt;Dropdown &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/a&gt;</span><br><span class=\"line\">\t\t\t\t\t\t&lt;ul class=&quot;dropdown-menu&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Action&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Another action&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Something else here&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li role=&quot;separator&quot; class=&quot;divider&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t\t&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Separated link&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t\t\t&lt;/ul&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t\t\t&lt;/ul&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;!-- /.navbar-collapse --&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;!-- /.container-fluid --&gt;</span><br><span class=\"line\">\t&lt;/nav&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;!-- JUMBOTRON --&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;jumbotron text-center&quot;&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;h1&gt;Welcome to Bootstrap CheatSheet&lt;/h1&gt;</span><br><span class=\"line\">\t\t\t&lt;p&gt;Lorem Ipsum is simply dummy text of the printing and</span><br><span class=\"line\">\t\t\ttypesetting industry. Lorem Ipsum has been the industry&apos;s standard</span><br><span class=\"line\">\t\t\tdummy text ever since the 1500s&lt;/p&gt;</span><br><span class=\"line\">\t\t\t&lt;a href=&quot;#&quot; class=&quot;btn btn-primary&quot;&gt;Read More&lt;/a&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- TYPOGRAPHY --&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t&lt;h1 class=&quot;page-header&quot;&gt;Hello, world! &lt;small&gt;Secondary text&lt;/small&gt;&lt;/h1&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;p class=&quot;lead&quot;&gt;Lorem Ipsum is simply dummy text of the printing and</span><br><span class=\"line\">\t\t\ttypesetting industry. Lorem Ipsum has been the industry&apos;s standard</span><br><span class=\"line\">\t\t\tdummy text ever since the 1500s, when an unknown printer took a</span><br><span class=\"line\">\t\t\tAldus PageMaker including versions of Lorem Ipsum.&lt;/p&gt;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&lt;p&gt;&lt;mark&gt;Lorem Ipsum is simply dummy&lt;/mark&gt; text of the printing and</span><br><span class=\"line\">\t\t\ttypesetting industry. Lorem Ipsum has been the industry&apos;s standard</span><br><span class=\"line\">\t\t\tdummy text ever since the 1500s, when an unknown printer took a</span><br><span class=\"line\">\t\t\tgalley of type and scrambled it to make a type specimen book. It has</span><br><span class=\"line\">\t\t\tsurvived not &lt;del&gt;only five centuries, but also the leap &lt;/del&gt; into electronic</span><br><span class=\"line\">\t\t\ttypesetting, remaining essentially unchanged. It was popularised in</span><br><span class=\"line\">\t\t\tthe 1960s with the release of Letraset sheets containing Lorem Ipsum</span><br><span class=\"line\">\t\t\tpassages, &lt;u&gt;and more recently with desktop publishing&lt;/u&gt; software like</span><br><span class=\"line\">\t\t\tAldus PageMaker including versions of Lorem Ipsum.&lt;/p&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;\t</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- ALIGNMENT &amp; TRANSFORMATION --&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-left text-lowercase&quot;&gt;Left aligned text.&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-center text-uppercase&quot;&gt;Center aligned text.&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-right text-capitalize&quot;&gt;Right aligned text.&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-justify&quot;&gt;Justified text.&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-nowrap&quot;&gt;No wrap text.&lt;/p&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;\t</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- QUICK FLOATS --&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;pull-right&quot;&gt;Div float to right&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;pull-left&quot;&gt;Div float to left&lt;/div&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- CLEAR FLOATS --&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;\t</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- BLOCK QUOTE --&gt;</span><br><span class=\"line\">\t\t&lt;blockquote class=&quot;blockquote&quot;&gt;</span><br><span class=\"line\">\t\t&lt;p&gt;Lorem Ipsum is simply dummy text of the</span><br><span class=\"line\">\t\t\tprinting and typesetting industry. Lorem Ipsum has been the</span><br><span class=\"line\">\t\t\tindustry&apos;s standard dummy text ever since the 1500s, when an unknown</span><br><span class=\"line\">\t\t\tprinter took a Aldus PageMaker including versions of Lorem Ipsum.&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;footer&gt;Quote By &lt;cite title=&quot;Ryan&quot;&gt;Ryan&lt;/cite&gt;&lt;/footer&gt;</span><br><span class=\"line\">\t\t&lt;/blockquote&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- LISTS --&gt;</span><br><span class=\"line\">\t\t&lt;ul&gt;</span><br><span class=\"line\">\t\t\t&lt;li&gt;Item 1&lt;/li&gt;</span><br><span class=\"line\">\t\t\t&lt;li&gt;Item 2&lt;/li&gt;</span><br><span class=\"line\">\t\t\t&lt;li&gt;Item 3&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;/ul&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- CODE --&gt;</span><br><span class=\"line\">\t\t&lt;code&gt;&amp;lt;h1&amp;gt;Heading text&amp;lt;/h1&amp;gt;&lt;/code&gt;</span><br><span class=\"line\">\t\t&lt;br&gt;</span><br><span class=\"line\">\t\tchange directory with &lt;kbd&gt;cd&lt;/kbd&gt;</span><br><span class=\"line\">\t\t&lt;br&gt;</span><br><span class=\"line\">\t\tto edit settings, press &lt;kbd&gt;&lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;,&lt;/kbd&gt;&lt;/kbd&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;!-- CONTESTUAL COLORS --&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-primary&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-success&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-info&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-warning&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-danger&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;text-muted&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;!-- CONTESTUAL BACKGROUND COLORS --&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;bg-primary&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;bg-success&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;bg-info&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;bg-warning&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;p class=&quot;bg-danger&quot;&gt;Hello World..&lt;/p&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;hr&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;!-- BUTTON --&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-default&quot;&gt;Default&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;a href=&quot;#&quot; class=&quot;btn btn-default&quot; role=&quot;button&quot;&gt;Link&lt;/a&gt;</span><br><span class=\"line\">\t\t&lt;input type=&quot;submit&quot; class=&quot;btn btn-default&quot; value=&quot;Submit&quot;&gt;</span><br><span class=\"line\">\t\t&lt;br&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- CONTESTUAL BUTTONS --&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-default&quot;&gt;Default&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-primary&quot;&gt;primary&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-success&quot;&gt;success&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-info&quot;&gt;info&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-warning&quot;&gt;warning&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-danger&quot;&gt;danger&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-link&quot;&gt;link&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;br&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- BUTTON SIZES --&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-default btn-lg&quot;&gt;Default&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-default&quot;&gt;Default&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-default btn-sm&quot;&gt;Default&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn btn-default btn-xs&quot; disabled=&quot;disabled&quot;&gt;Default&lt;/button&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;hr&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;!-- FORMS --&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">\t\t&lt;form action=&quot;&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;Name&lt;/label&gt;</span><br><span class=\"line\">\t\t\t\t&lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;Add Name&quot;&gt;\t</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;Email&lt;/label&gt;</span><br><span class=\"line\">\t\t\t\t&lt;input type=&quot;email&quot; class=&quot;form-control&quot; placeholder=&quot;Add Email&quot;&gt;\t</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;Message&lt;/label&gt;</span><br><span class=\"line\">\t\t\t\t&lt;textarea class=&quot;form-control&quot; placeholder=&quot;Add Name&quot;&gt;&lt;/textarea&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;Gender&lt;/label&gt;</span><br><span class=\"line\">\t\t\t\t&lt;select class=&quot;form-control&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;option value=&quot;male&quot;&gt;Male&lt;/option&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;option value=&quot;female&quot;&gt;Female&lt;/option&gt;</span><br><span class=\"line\">\t\t\t\t&lt;/select&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;Upload File&lt;/label&gt;</span><br><span class=\"line\">\t\t\t\t&lt;input type=&quot;file&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;p class=&quot;help-block&quot;&gt;Only pdf accepted&lt;/p&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;checkbox&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;input type=&quot;checkbox&quot;&gt;check me out</span><br><span class=\"line\">\t\t\t\t&lt;/label&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t&lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;/form&gt;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- INLINE FORM --&gt;</span><br><span class=\"line\">\t\t&lt;form class=&quot;form-inline&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;Name&lt;/label&gt;</span><br><span class=\"line\">\t\t\t\t&lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;Add Name&quot;&gt;\t</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;Email&lt;/label&gt;</span><br><span class=\"line\">\t\t\t\t&lt;input type=&quot;email&quot; class=&quot;form-control&quot; placeholder=&quot;Add Email&quot;&gt;\t</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;Gender&lt;/label&gt;</span><br><span class=\"line\">\t\t\t\t&lt;select class=&quot;form-control&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;option value=&quot;male&quot;&gt;Male&lt;/option&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;option value=&quot;female&quot;&gt;Female&lt;/option&gt;</span><br><span class=\"line\">\t\t\t\t&lt;/select&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;checkbox&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;label&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;input type=&quot;checkbox&quot;&gt;check me out</span><br><span class=\"line\">\t\t\t\t&lt;/label&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t&lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;/form&gt;\t\t</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;hr&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;!-- TABLE --&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">\t\t&lt;table class=&quot;table table-striped table-bordered table-hover table-condensed&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;FirstName&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;LastName&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;Age&lt;/th&gt;</span><br><span class=\"line\">\t\t\t&lt;/tr&gt;\t</span><br><span class=\"line\">\t\t\t&lt;tr class=&quot;success&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;Xu&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;Luo&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;30&lt;/th&gt;</span><br><span class=\"line\">\t\t\t&lt;/tr&gt;\t</span><br><span class=\"line\">\t\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;Melvin&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;Tan&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;32&lt;/th&gt;</span><br><span class=\"line\">\t\t\t&lt;/tr&gt;\t</span><br><span class=\"line\">\t\t\t&lt;tr class=&quot;danger&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;Tim&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;Park&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;40&lt;/th&gt;</span><br><span class=\"line\">\t\t\t&lt;/tr&gt;\t</span><br><span class=\"line\">\t\t&lt;/table&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;hr&gt;</span><br><span class=\"line\">&lt;!-- LIST GROUP --&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">\t\t&lt;ul class=&quot;list-group&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;li class=&quot;list-group-item&quot;&gt;Item 1&lt;/li&gt;</span><br><span class=\"line\">\t\t\t&lt;li class=&quot;list-group-item&quot;&gt;Item 2&lt;/li&gt;</span><br><span class=\"line\">\t\t\t&lt;li class=&quot;list-group-item&quot;&gt;Item 3&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;/ul&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;div class=&quot;list-group&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;a href=&quot;#&quot; class=&quot;list-group-item active&quot;&gt;Item 1&lt;/a&gt;</span><br><span class=\"line\">\t\t\t&lt;a href=&quot;#&quot; class=&quot;list-group-item&quot;&gt;Item 2&lt;/a&gt;</span><br><span class=\"line\">\t\t\t&lt;a href=&quot;#&quot; class=&quot;list-group-item&quot;&gt;Item 3&lt;/a&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">&lt;!-- PANELS --&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;panel panel-primary&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;panel-heading&quot;&gt;&lt;h3 class=&quot;panel-title&quot;&gt;Panel title&lt;/h3&gt;&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;panel-body&quot;&gt;Panel content&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;panel-footer&quot;&gt;Panel footer&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- WELLS --&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;well&quot;&gt;Well&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;well well-lg&quot;&gt;Well large&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;well well-sm&quot;&gt;Well small&lt;/div&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- ALERTS --&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;alert alert-success&quot; role=&quot;alert&quot;&gt;Alert success&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;alert alert-info&quot; role=&quot;alert&quot;&gt;Alert info..&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;Alert warning..&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;alert alert-danger&quot; role=&quot;alert&quot;&gt;Alert danger..&lt;/div&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;div class=&quot;alert alert-info alert-dismissible&quot; role=&quot;alert&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;alert&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;span&gt;&amp;times;&lt;/span&gt;</span><br><span class=\"line\">\t\t\t&lt;/button&gt;</span><br><span class=\"line\">\t\t\tyou can close this alert..</span><br><span class=\"line\">\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- PROGRESS BARS --&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;progress&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;progress-bar progress-bar-success progress-bar-striped active&quot; style=&quot;width:50%;&quot;&gt;</span><br><span class=\"line\">\t\t\t\t50%</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- LABELS --&gt;</span><br><span class=\"line\">\t\t&lt;span class=&quot;label label-default&quot;&gt;default label&lt;/span&gt;</span><br><span class=\"line\">\t\t&lt;h1&gt;&lt;span class=&quot;label label-primary&quot;&gt;primary label in h1&lt;/span&gt;&lt;/h1&gt;</span><br><span class=\"line\">\t\t&lt;span class=&quot;label label-success&quot;&gt;success label&lt;/span&gt;</span><br><span class=\"line\">\t\t&lt;span class=&quot;label label-warning&quot;&gt;warning label&lt;/span&gt;</span><br><span class=\"line\">\t\t&lt;span class=&quot;label label-danger&quot;&gt;danger label&lt;/span&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- BADGES --&gt;</span><br><span class=\"line\">\t\t&lt;a href=&quot;#&quot;&gt;Inbox &lt;span class=&quot;badge&quot;&gt;50&lt;/span&gt;&lt;/a&gt;</span><br><span class=\"line\">\t\t&lt;button class=&quot;btn&quot;&gt;Messages &lt;span class=&quot;badge&quot;&gt;9&lt;/span&gt; &lt;/button&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;!-- IMAGES --&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">\t\t&lt;img alt=&quot;&quot; class=&quot;thumbnail&quot; src=&quot;https://goo.gl/LpLNct&quot;&gt;</span><br><span class=\"line\">\t\t&lt;img alt=&quot;&quot; class=&quot;img-rounded&quot; src=&quot;https://goo.gl/LpLNct&quot;&gt;</span><br><span class=\"line\">\t\t&lt;img alt=&quot;&quot; class=&quot;img-circle&quot; src=&quot;https://goo.gl/LpLNct&quot;&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;hr&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&lt;!-- GRIDS --&gt;</span><br><span class=\"line\">\t&lt;div class=&quot; container&quot;&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;row&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;col-md-8 col-sm-8 col-xs-8&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;p&gt;Lorem Ipsum is simply dummy text of the printing and</span><br><span class=\"line\">\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry&apos;s standard</span><br><span class=\"line\">\t\t\t\t\tdummy text ever since the 1500s, when an unknown printer took a</span><br><span class=\"line\">\t\t\t\t\tAldus PageMaker including versions of Lorem Ipsum.&lt;/p&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;col-md-4 col-sm-4 col-xs-4&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;p&gt;Lorem Ipsum is simply dummy text of the printing and</span><br><span class=\"line\">\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry&apos;s.&lt;/p&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;\t</span><br><span class=\"line\">\t\t&lt;hr&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;row&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;col-md-3&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;p&gt;Lorem Ipsum is simply dummy text of the printing and</span><br><span class=\"line\">\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry&apos;s.&lt;/p&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;col-md-3&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;p&gt;Lorem Ipsum is simply dummy text of the printing and</span><br><span class=\"line\">\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry&apos;s.&lt;/p&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;col-md-3&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;p&gt;Lorem Ipsum is simply dummy text of the printing and</span><br><span class=\"line\">\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry&apos;s.&lt;/p&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;col-md-3&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;p&gt;Lorem Ipsum is simply dummy text of the printing and</span><br><span class=\"line\">\t\t\t\t\ttypesetting industry. Lorem Ipsum has been the industry&apos;s.&lt;/p&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;\t</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;div style=&quot;height:200px&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>"},{"title":"Database - PostgreSQL on AWS","date":"2017-12-16T03:00:28.000Z","_content":"![SQuirreL SQL Client](/images/SQuirreL-SQL-Client.png)\n- Create Postgres database on Amazon Web Service. \n- Install pgAdmin as client application to connect to database.\n- Install SQuirreL SQL Client to connect to database.\n\nI personally prefer to use SQuirreL SQL Client than pgAdmin.\n\n<!--more-->\n\n# Create Postgres Database on AWS\n\nReference: [Create and Connect to a PostgreSQL Database](https://aws.amazon.com/getting-started/tutorials/create-connect-postgresql-db/)\n\n1. create an AWS account before creating database.\n2. go to this page: [AWS services](https://ap-southeast-1.console.aws.amazon.com/console/home?region=ap-southeast-1)\n3. search for `RDS` and click\n4. search for `Create instance` and click `Launch a DB instance`\n\nBelow steps made under `Free Usage Tier`\n1. Engine: `PostgreSQL`\n2. Use case: `Dev/Test`\n3. DB details: \n\t- tick `Only enable options eligible for RDS Free Usage Tier`\n\t- DB instance identifier: `myPostgresDB`\n\t- Master username: `xxxxxx`\n\t- Master password: `xxxxxx`\n4. Configure advanced settings\n\t- tick `Yes` for Public accessibility\n\t- Database name: `Demo`\n\nClick `Launch DB instance` to create.\n\n# Use pgAdmin as Client Application\n\nReference: [Connecting to a DB Instance Running the PostgreSQL Database Engine](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ConnectToPostgreSQLInstance.html)\n\nTo connect to database, go to `RDS`>`Instances`>`postgresql` and collect below info:\n- Endpoint\n- Port\n- Username\n- Password\n\n1. Go to [Download - pgAdmin](https://www.pgadmin.org/download/) to download `pgAdmin 4 v2.0`\n2. Install and Open pgAdmin\n3. Right click `Servers` - `Create` - `Server...`\n4. General:\n\t- Name: `Demo`\n\t- Comments: `Demo`\n5. Connection: \n\t- Host: `<Endpoint>`\n\t- Port:\t`<Port>`\n\t- Username: `<Username>`\n\t- Password: `<Password>`\n\t- Role: Empty\n\nClick `Save`\n\n\nDone..\n\n\n# Use Squirrel SQL Client as Client Application\n\n1. Install Squirrel SQL Client Application\n\t- Go to [SQuirreL SQL Client Download](http://squirrel-sql.sourceforge.net/#installation)\n\t- Download and install\n2. Download PostgreSQL JDBC Driver\n\t- Go to [PostgreSQL JDBC Download](https://jdbc.postgresql.org/download.html)\n\t- Choose `PostgreSQL JDBC 4.2 Driver, 42.1.4`\n\t- Get `postgresql-42.1.4 driver`\n3. Add PostgreSQL driver for Squirrel SQL Client\n\t- Open `Squirrel SQL Client`\n\t- Choose `Driver` on the left\n\t- Choose `+` to add driver\n\t- Choose `Extra Class Path` and `Add`\n\t- Choose `postgresql-42.1.4 driver` just downloaded.\n\t- Fill up:\n\t\t- PostgreSQL\n\t\t- jdbc:postgresql://<host>:<5432>/<database>\n\t\t- http://jdbc.postgresql.org\n\t\t- org.postgresql.Driver\n\t- OK\n4. Add Alias\n\t- Choose `Aliases` on the left\n\t- Choose `+` to add\n\t- Choose blue tick `PostgreSQL` as Driver\n\t- Fill up:\n\t\t- Demo\n\t\t- jdbc:postgresql://postgresql.cfqvncjculpj.ap-southeast-1.rds.amazonaws.com:5432/Demo\n\t\t- userName\n\t\t- password\n\t- `Test`\n\t- `Connect`\n\t- `OK`\n\n\nDone..","source":"_posts/Database-PostgreSQL.md","raw":"---\ntitle: Database - PostgreSQL on AWS\ndate: 2017-12-16 11:00:28\ncategories: Database\ntags: [database, Postgres, install, setup, AWS]\n---\n![SQuirreL SQL Client](/images/SQuirreL-SQL-Client.png)\n- Create Postgres database on Amazon Web Service. \n- Install pgAdmin as client application to connect to database.\n- Install SQuirreL SQL Client to connect to database.\n\nI personally prefer to use SQuirreL SQL Client than pgAdmin.\n\n<!--more-->\n\n# Create Postgres Database on AWS\n\nReference: [Create and Connect to a PostgreSQL Database](https://aws.amazon.com/getting-started/tutorials/create-connect-postgresql-db/)\n\n1. create an AWS account before creating database.\n2. go to this page: [AWS services](https://ap-southeast-1.console.aws.amazon.com/console/home?region=ap-southeast-1)\n3. search for `RDS` and click\n4. search for `Create instance` and click `Launch a DB instance`\n\nBelow steps made under `Free Usage Tier`\n1. Engine: `PostgreSQL`\n2. Use case: `Dev/Test`\n3. DB details: \n\t- tick `Only enable options eligible for RDS Free Usage Tier`\n\t- DB instance identifier: `myPostgresDB`\n\t- Master username: `xxxxxx`\n\t- Master password: `xxxxxx`\n4. Configure advanced settings\n\t- tick `Yes` for Public accessibility\n\t- Database name: `Demo`\n\nClick `Launch DB instance` to create.\n\n# Use pgAdmin as Client Application\n\nReference: [Connecting to a DB Instance Running the PostgreSQL Database Engine](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ConnectToPostgreSQLInstance.html)\n\nTo connect to database, go to `RDS`>`Instances`>`postgresql` and collect below info:\n- Endpoint\n- Port\n- Username\n- Password\n\n1. Go to [Download - pgAdmin](https://www.pgadmin.org/download/) to download `pgAdmin 4 v2.0`\n2. Install and Open pgAdmin\n3. Right click `Servers` - `Create` - `Server...`\n4. General:\n\t- Name: `Demo`\n\t- Comments: `Demo`\n5. Connection: \n\t- Host: `<Endpoint>`\n\t- Port:\t`<Port>`\n\t- Username: `<Username>`\n\t- Password: `<Password>`\n\t- Role: Empty\n\nClick `Save`\n\n\nDone..\n\n\n# Use Squirrel SQL Client as Client Application\n\n1. Install Squirrel SQL Client Application\n\t- Go to [SQuirreL SQL Client Download](http://squirrel-sql.sourceforge.net/#installation)\n\t- Download and install\n2. Download PostgreSQL JDBC Driver\n\t- Go to [PostgreSQL JDBC Download](https://jdbc.postgresql.org/download.html)\n\t- Choose `PostgreSQL JDBC 4.2 Driver, 42.1.4`\n\t- Get `postgresql-42.1.4 driver`\n3. Add PostgreSQL driver for Squirrel SQL Client\n\t- Open `Squirrel SQL Client`\n\t- Choose `Driver` on the left\n\t- Choose `+` to add driver\n\t- Choose `Extra Class Path` and `Add`\n\t- Choose `postgresql-42.1.4 driver` just downloaded.\n\t- Fill up:\n\t\t- PostgreSQL\n\t\t- jdbc:postgresql://<host>:<5432>/<database>\n\t\t- http://jdbc.postgresql.org\n\t\t- org.postgresql.Driver\n\t- OK\n4. Add Alias\n\t- Choose `Aliases` on the left\n\t- Choose `+` to add\n\t- Choose blue tick `PostgreSQL` as Driver\n\t- Fill up:\n\t\t- Demo\n\t\t- jdbc:postgresql://postgresql.cfqvncjculpj.ap-southeast-1.rds.amazonaws.com:5432/Demo\n\t\t- userName\n\t\t- password\n\t- `Test`\n\t- `Connect`\n\t- `OK`\n\n\nDone..","slug":"Database-PostgreSQL","published":1,"updated":"2020-04-30T09:23:19.526Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedhx000asd5t5fwsfrfa","content":"<p><img src=\"/images/SQuirreL-SQL-Client.png\" alt=\"SQuirreL SQL Client\"></p>\n<ul>\n<li>Create Postgres database on Amazon Web Service. </li>\n<li>Install pgAdmin as client application to connect to database.</li>\n<li>Install SQuirreL SQL Client to connect to database.</li>\n</ul>\n<p>I personally prefer to use SQuirreL SQL Client than pgAdmin.</p>\n<a id=\"more\"></a>\n\n<h1 id=\"Create-Postgres-Database-on-AWS\"><a href=\"#Create-Postgres-Database-on-AWS\" class=\"headerlink\" title=\"Create Postgres Database on AWS\"></a>Create Postgres Database on AWS</h1><p>Reference: <a href=\"https://aws.amazon.com/getting-started/tutorials/create-connect-postgresql-db/\" target=\"_blank\" rel=\"noopener\">Create and Connect to a PostgreSQL Database</a></p>\n<ol>\n<li>create an AWS account before creating database.</li>\n<li>go to this page: <a href=\"https://ap-southeast-1.console.aws.amazon.com/console/home?region=ap-southeast-1\" target=\"_blank\" rel=\"noopener\">AWS services</a></li>\n<li>search for <code>RDS</code> and click</li>\n<li>search for <code>Create instance</code> and click <code>Launch a DB instance</code></li>\n</ol>\n<p>Below steps made under <code>Free Usage Tier</code></p>\n<ol>\n<li>Engine: <code>PostgreSQL</code></li>\n<li>Use case: <code>Dev/Test</code></li>\n<li>DB details: <ul>\n<li>tick <code>Only enable options eligible for RDS Free Usage Tier</code></li>\n<li>DB instance identifier: <code>myPostgresDB</code></li>\n<li>Master username: <code>xxxxxx</code></li>\n<li>Master password: <code>xxxxxx</code></li>\n</ul>\n</li>\n<li>Configure advanced settings<ul>\n<li>tick <code>Yes</code> for Public accessibility</li>\n<li>Database name: <code>Demo</code></li>\n</ul>\n</li>\n</ol>\n<p>Click <code>Launch DB instance</code> to create.</p>\n<h1 id=\"Use-pgAdmin-as-Client-Application\"><a href=\"#Use-pgAdmin-as-Client-Application\" class=\"headerlink\" title=\"Use pgAdmin as Client Application\"></a>Use pgAdmin as Client Application</h1><p>Reference: <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ConnectToPostgreSQLInstance.html\" target=\"_blank\" rel=\"noopener\">Connecting to a DB Instance Running the PostgreSQL Database Engine</a></p>\n<p>To connect to database, go to <code>RDS</code>&gt;<code>Instances</code>&gt;<code>postgresql</code> and collect below info:</p>\n<ul>\n<li>Endpoint</li>\n<li>Port</li>\n<li>Username</li>\n<li>Password</li>\n</ul>\n<ol>\n<li>Go to <a href=\"https://www.pgadmin.org/download/\" target=\"_blank\" rel=\"noopener\">Download - pgAdmin</a> to download <code>pgAdmin 4 v2.0</code></li>\n<li>Install and Open pgAdmin</li>\n<li>Right click <code>Servers</code> - <code>Create</code> - <code>Server...</code></li>\n<li>General:<ul>\n<li>Name: <code>Demo</code></li>\n<li>Comments: <code>Demo</code></li>\n</ul>\n</li>\n<li>Connection: <ul>\n<li>Host: <code>&lt;Endpoint&gt;</code></li>\n<li>Port:    <code>&lt;Port&gt;</code></li>\n<li>Username: <code>&lt;Username&gt;</code></li>\n<li>Password: <code>&lt;Password&gt;</code></li>\n<li>Role: Empty</li>\n</ul>\n</li>\n</ol>\n<p>Click <code>Save</code></p>\n<p>Done..</p>\n<h1 id=\"Use-Squirrel-SQL-Client-as-Client-Application\"><a href=\"#Use-Squirrel-SQL-Client-as-Client-Application\" class=\"headerlink\" title=\"Use Squirrel SQL Client as Client Application\"></a>Use Squirrel SQL Client as Client Application</h1><ol>\n<li>Install Squirrel SQL Client Application<ul>\n<li>Go to <a href=\"http://squirrel-sql.sourceforge.net/#installation\" target=\"_blank\" rel=\"noopener\">SQuirreL SQL Client Download</a></li>\n<li>Download and install</li>\n</ul>\n</li>\n<li>Download PostgreSQL JDBC Driver<ul>\n<li>Go to <a href=\"https://jdbc.postgresql.org/download.html\" target=\"_blank\" rel=\"noopener\">PostgreSQL JDBC Download</a></li>\n<li>Choose <code>PostgreSQL JDBC 4.2 Driver, 42.1.4</code></li>\n<li>Get <code>postgresql-42.1.4 driver</code></li>\n</ul>\n</li>\n<li>Add PostgreSQL driver for Squirrel SQL Client<ul>\n<li>Open <code>Squirrel SQL Client</code></li>\n<li>Choose <code>Driver</code> on the left</li>\n<li>Choose <code>+</code> to add driver</li>\n<li>Choose <code>Extra Class Path</code> and <code>Add</code></li>\n<li>Choose <code>postgresql-42.1.4 driver</code> just downloaded.</li>\n<li>Fill up:<ul>\n<li>PostgreSQL</li>\n<li>jdbc:postgresql://<host>:&lt;5432&gt;/<database></database></host></li>\n<li><a href=\"http://jdbc.postgresql.org\" target=\"_blank\" rel=\"noopener\">http://jdbc.postgresql.org</a></li>\n<li>org.postgresql.Driver</li>\n</ul>\n</li>\n<li>OK</li>\n</ul>\n</li>\n<li>Add Alias<ul>\n<li>Choose <code>Aliases</code> on the left</li>\n<li>Choose <code>+</code> to add</li>\n<li>Choose blue tick <code>PostgreSQL</code> as Driver</li>\n<li>Fill up:<ul>\n<li>Demo</li>\n<li>jdbc:postgresql://postgresql.cfqvncjculpj.ap-southeast-1.rds.amazonaws.com:5432/Demo</li>\n<li>userName</li>\n<li>password</li>\n</ul>\n</li>\n<li><code>Test</code></li>\n<li><code>Connect</code></li>\n<li><code>OK</code></li>\n</ul>\n</li>\n</ol>\n<p>Done..</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/SQuirreL-SQL-Client.png\" alt=\"SQuirreL SQL Client\"></p>\n<ul>\n<li>Create Postgres database on Amazon Web Service. </li>\n<li>Install pgAdmin as client application to connect to database.</li>\n<li>Install SQuirreL SQL Client to connect to database.</li>\n</ul>\n<p>I personally prefer to use SQuirreL SQL Client than pgAdmin.</p>","more":"<h1 id=\"Create-Postgres-Database-on-AWS\"><a href=\"#Create-Postgres-Database-on-AWS\" class=\"headerlink\" title=\"Create Postgres Database on AWS\"></a>Create Postgres Database on AWS</h1><p>Reference: <a href=\"https://aws.amazon.com/getting-started/tutorials/create-connect-postgresql-db/\" target=\"_blank\" rel=\"noopener\">Create and Connect to a PostgreSQL Database</a></p>\n<ol>\n<li>create an AWS account before creating database.</li>\n<li>go to this page: <a href=\"https://ap-southeast-1.console.aws.amazon.com/console/home?region=ap-southeast-1\" target=\"_blank\" rel=\"noopener\">AWS services</a></li>\n<li>search for <code>RDS</code> and click</li>\n<li>search for <code>Create instance</code> and click <code>Launch a DB instance</code></li>\n</ol>\n<p>Below steps made under <code>Free Usage Tier</code></p>\n<ol>\n<li>Engine: <code>PostgreSQL</code></li>\n<li>Use case: <code>Dev/Test</code></li>\n<li>DB details: <ul>\n<li>tick <code>Only enable options eligible for RDS Free Usage Tier</code></li>\n<li>DB instance identifier: <code>myPostgresDB</code></li>\n<li>Master username: <code>xxxxxx</code></li>\n<li>Master password: <code>xxxxxx</code></li>\n</ul>\n</li>\n<li>Configure advanced settings<ul>\n<li>tick <code>Yes</code> for Public accessibility</li>\n<li>Database name: <code>Demo</code></li>\n</ul>\n</li>\n</ol>\n<p>Click <code>Launch DB instance</code> to create.</p>\n<h1 id=\"Use-pgAdmin-as-Client-Application\"><a href=\"#Use-pgAdmin-as-Client-Application\" class=\"headerlink\" title=\"Use pgAdmin as Client Application\"></a>Use pgAdmin as Client Application</h1><p>Reference: <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ConnectToPostgreSQLInstance.html\" target=\"_blank\" rel=\"noopener\">Connecting to a DB Instance Running the PostgreSQL Database Engine</a></p>\n<p>To connect to database, go to <code>RDS</code>&gt;<code>Instances</code>&gt;<code>postgresql</code> and collect below info:</p>\n<ul>\n<li>Endpoint</li>\n<li>Port</li>\n<li>Username</li>\n<li>Password</li>\n</ul>\n<ol>\n<li>Go to <a href=\"https://www.pgadmin.org/download/\" target=\"_blank\" rel=\"noopener\">Download - pgAdmin</a> to download <code>pgAdmin 4 v2.0</code></li>\n<li>Install and Open pgAdmin</li>\n<li>Right click <code>Servers</code> - <code>Create</code> - <code>Server...</code></li>\n<li>General:<ul>\n<li>Name: <code>Demo</code></li>\n<li>Comments: <code>Demo</code></li>\n</ul>\n</li>\n<li>Connection: <ul>\n<li>Host: <code>&lt;Endpoint&gt;</code></li>\n<li>Port:    <code>&lt;Port&gt;</code></li>\n<li>Username: <code>&lt;Username&gt;</code></li>\n<li>Password: <code>&lt;Password&gt;</code></li>\n<li>Role: Empty</li>\n</ul>\n</li>\n</ol>\n<p>Click <code>Save</code></p>\n<p>Done..</p>\n<h1 id=\"Use-Squirrel-SQL-Client-as-Client-Application\"><a href=\"#Use-Squirrel-SQL-Client-as-Client-Application\" class=\"headerlink\" title=\"Use Squirrel SQL Client as Client Application\"></a>Use Squirrel SQL Client as Client Application</h1><ol>\n<li>Install Squirrel SQL Client Application<ul>\n<li>Go to <a href=\"http://squirrel-sql.sourceforge.net/#installation\" target=\"_blank\" rel=\"noopener\">SQuirreL SQL Client Download</a></li>\n<li>Download and install</li>\n</ul>\n</li>\n<li>Download PostgreSQL JDBC Driver<ul>\n<li>Go to <a href=\"https://jdbc.postgresql.org/download.html\" target=\"_blank\" rel=\"noopener\">PostgreSQL JDBC Download</a></li>\n<li>Choose <code>PostgreSQL JDBC 4.2 Driver, 42.1.4</code></li>\n<li>Get <code>postgresql-42.1.4 driver</code></li>\n</ul>\n</li>\n<li>Add PostgreSQL driver for Squirrel SQL Client<ul>\n<li>Open <code>Squirrel SQL Client</code></li>\n<li>Choose <code>Driver</code> on the left</li>\n<li>Choose <code>+</code> to add driver</li>\n<li>Choose <code>Extra Class Path</code> and <code>Add</code></li>\n<li>Choose <code>postgresql-42.1.4 driver</code> just downloaded.</li>\n<li>Fill up:<ul>\n<li>PostgreSQL</li>\n<li>jdbc:postgresql://<host>:&lt;5432&gt;/<database></database></host></li>\n<li><a href=\"http://jdbc.postgresql.org\" target=\"_blank\" rel=\"noopener\">http://jdbc.postgresql.org</a></li>\n<li>org.postgresql.Driver</li>\n</ul>\n</li>\n<li>OK</li>\n</ul>\n</li>\n<li>Add Alias<ul>\n<li>Choose <code>Aliases</code> on the left</li>\n<li>Choose <code>+</code> to add</li>\n<li>Choose blue tick <code>PostgreSQL</code> as Driver</li>\n<li>Fill up:<ul>\n<li>Demo</li>\n<li>jdbc:postgresql://postgresql.cfqvncjculpj.ap-southeast-1.rds.amazonaws.com:5432/Demo</li>\n<li>userName</li>\n<li>password</li>\n</ul>\n</li>\n<li><code>Test</code></li>\n<li><code>Connect</code></li>\n<li><code>OK</code></li>\n</ul>\n</li>\n</ol>\n<p>Done..</p>"},{"title":"Docker Notes","date":"2018-05-13T05:31:03.000Z","_content":"\nI want to install Jenkins in Docker container. And find out that Docker is an amazing tool and containerization is worthy to really be understood.\n\nRefereces:\n- [Docker Tutorial](http://www.runoob.com/docker/docker-install-nginx.html)\n- [Digital Ocean Tutorial](https://www.digitalocean.com/community/tutorials/)\n\n<!--more-->\n\n# Docker Basic\n## basic command\n```bash\ndocker run ubuntu:15.10 /bin/echo \"Hello world\" \n#ubuntu:15.10 is an image\n\ndocker run -i -t ubuntu:15.10 /bin/bash\n# -t:make a terminal in the container。\n# -i:allow interaction with STDIN\n\ndocker run -d ubuntu:15.10 /bin/sh  # get container Id\ndocker ps\ndocker logs <CONTAINER_ID>\ndocker stop <CONTAINER_ID>\ndocker command --help\ndocker pull training/webapp # get image\n\ndocker run -d -P training/webapp python app.py\n# -d:run container at the background\n# -P:expose the container port to our server port\ndocker run -d -p 5000:5000 training/webapp python app.py\n\ndocker port <CONTAINER_ID>\ndocker logs -f <CONTAINER_ID>\n# -f:use dokcer logs to show output like tail -f\n\ndocker top <CONTAINER_ID>\ndocker inspect <CONTAINER_ID>   # get a JSON\ndocker start <CONTAINER_ID>\ndocker rm <CONTAINER_ID>  \n```\n## image (image-class, container-instance)\n### basic\n```bash\ndocker images # list the images\ndocker pull ubuntu:13.10    # then use this image to run a container\ndocker search httpd\ndocker pull httpd\ndocker run httpd\n```\n### update image\n```bash\ndocker run -t -i ubuntu:15.10 /bin/bash # create a container\napt-get update\nexit\ndocker commit -m=\"update\" -a=\"author\" <CONTAINER_ID> boot/ubuntu:v2 # container name\ndocker images\ndocker run -t -i boot/ubuntu:v2 /bin/bash\n```\n### create image\nDockerfile\n```\nFROM    centos:6.7\nMAINTAINER      Fisher \"fisher@sudops.com\"\n\nRUN     /bin/echo 'root:root' |chpasswd\nRUN     useradd ryan\nRUN     /bin/echo 'ryan:ryan' |chpasswd\nRUN     /bin/echo -e \"LANG=\\\"en_US.UTF-8\\\"\" >/etc/default/local\nEXPOSE  22\nEXPOSE  80\nCMD     /usr/sbin/sshd -D\n```\n```bash\n# build an image based on Dockerfile\ndocker build - < Dockerfile -t ryan/centos:6.7\n# REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\n# ryan/centos         6.7                 2d1b0607dc75        48 seconds ago      191 MB\n\n## add a new tag to the image\ndocker tag <CONTAINER_ID> boot/centos:dev\n\n```\n\n## container port exposing\n```bash\ndocker run -d -p 127.0.0.1:5001:5000 training/webapp python app.py\n# 127.0.0.1:5001 can visit docker container\n\ndocker run -d -P --name <container_name> training/webapp python app.py\n```\n\n# Docker Sample\n## Install Nginx\n```bash\n# make dir for nginx\nmkdir -p ~/nginx/www ~/nginx/wwwlogs ~/nginx/conf\n\n# get nginx image\ndocker search nginx\ndocker pull nginx\n\n# get container\ndocker run --name docker-nginx -p 80:80 nginx\ndocker rm docker-nginx\n\n# detach the container to allow it to run independently\ndocker run --name docker-nginx -p 80:80 -d nginx\n\n# Building a Web Page to Serve on Nginx, create index page to replace the default landing page\nmkdir -p ~/docker/docker-nginx/html\nvi ~/docker/docker-nginx/html/index.html    # as per content below\n\n# website content: link files in container -> files in server\n## Nginx container index page : /usr/share/nginx/html\ndocker run --name docker-nginx -p 80:80 -d -v ~/docker/docker-nginx/html:/usr/share/nginx/html nginx\n\n```\n### index.html\n```\n<html>\n  <head>\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha256-MfvZlkHCEqatNoGiOXveE8FIwMzZg4W85qfrfIFBfYc= sha512-dTfge/zgoMYpP7QbHy4gWMEGsbsdZeCXz7irItjcC3sPUFtf0kuFbDz/ixG7ArTxmDjLXDmezHubeNikyKGVyQ==\" crossorigin=\"anonymous\">\n    <title>Docker nginx sample</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Hello NginX</h1>\n      <p>This nginx page is brought to you by Docker</p>\n    </div>\n  </body>\n</html>\n```\n\n### customize Nginx config file\n```bash\ndocker cp docker-nginx:/etc/nginx/conf.d/default.conf ~/docker/docker-nginx/default.conf\n\n# run with customized default.config\ndocker run --name docker-nginx -p 80:80 -v ~/docker-nginx/html:/usr/share/nginx/html -v ~/docker/docker-nginx/default.conf:/etc/nginx/conf.d/default.conf -d nginx\n```\n\n","source":"_posts/Docker-Notes.md","raw":"---\ntitle: Docker Notes\ndate: 2018-05-13 13:31:03\ncategories: CICD\ntags: [docker, notes, CICD]\n---\n\nI want to install Jenkins in Docker container. And find out that Docker is an amazing tool and containerization is worthy to really be understood.\n\nRefereces:\n- [Docker Tutorial](http://www.runoob.com/docker/docker-install-nginx.html)\n- [Digital Ocean Tutorial](https://www.digitalocean.com/community/tutorials/)\n\n<!--more-->\n\n# Docker Basic\n## basic command\n```bash\ndocker run ubuntu:15.10 /bin/echo \"Hello world\" \n#ubuntu:15.10 is an image\n\ndocker run -i -t ubuntu:15.10 /bin/bash\n# -t:make a terminal in the container。\n# -i:allow interaction with STDIN\n\ndocker run -d ubuntu:15.10 /bin/sh  # get container Id\ndocker ps\ndocker logs <CONTAINER_ID>\ndocker stop <CONTAINER_ID>\ndocker command --help\ndocker pull training/webapp # get image\n\ndocker run -d -P training/webapp python app.py\n# -d:run container at the background\n# -P:expose the container port to our server port\ndocker run -d -p 5000:5000 training/webapp python app.py\n\ndocker port <CONTAINER_ID>\ndocker logs -f <CONTAINER_ID>\n# -f:use dokcer logs to show output like tail -f\n\ndocker top <CONTAINER_ID>\ndocker inspect <CONTAINER_ID>   # get a JSON\ndocker start <CONTAINER_ID>\ndocker rm <CONTAINER_ID>  \n```\n## image (image-class, container-instance)\n### basic\n```bash\ndocker images # list the images\ndocker pull ubuntu:13.10    # then use this image to run a container\ndocker search httpd\ndocker pull httpd\ndocker run httpd\n```\n### update image\n```bash\ndocker run -t -i ubuntu:15.10 /bin/bash # create a container\napt-get update\nexit\ndocker commit -m=\"update\" -a=\"author\" <CONTAINER_ID> boot/ubuntu:v2 # container name\ndocker images\ndocker run -t -i boot/ubuntu:v2 /bin/bash\n```\n### create image\nDockerfile\n```\nFROM    centos:6.7\nMAINTAINER      Fisher \"fisher@sudops.com\"\n\nRUN     /bin/echo 'root:root' |chpasswd\nRUN     useradd ryan\nRUN     /bin/echo 'ryan:ryan' |chpasswd\nRUN     /bin/echo -e \"LANG=\\\"en_US.UTF-8\\\"\" >/etc/default/local\nEXPOSE  22\nEXPOSE  80\nCMD     /usr/sbin/sshd -D\n```\n```bash\n# build an image based on Dockerfile\ndocker build - < Dockerfile -t ryan/centos:6.7\n# REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\n# ryan/centos         6.7                 2d1b0607dc75        48 seconds ago      191 MB\n\n## add a new tag to the image\ndocker tag <CONTAINER_ID> boot/centos:dev\n\n```\n\n## container port exposing\n```bash\ndocker run -d -p 127.0.0.1:5001:5000 training/webapp python app.py\n# 127.0.0.1:5001 can visit docker container\n\ndocker run -d -P --name <container_name> training/webapp python app.py\n```\n\n# Docker Sample\n## Install Nginx\n```bash\n# make dir for nginx\nmkdir -p ~/nginx/www ~/nginx/wwwlogs ~/nginx/conf\n\n# get nginx image\ndocker search nginx\ndocker pull nginx\n\n# get container\ndocker run --name docker-nginx -p 80:80 nginx\ndocker rm docker-nginx\n\n# detach the container to allow it to run independently\ndocker run --name docker-nginx -p 80:80 -d nginx\n\n# Building a Web Page to Serve on Nginx, create index page to replace the default landing page\nmkdir -p ~/docker/docker-nginx/html\nvi ~/docker/docker-nginx/html/index.html    # as per content below\n\n# website content: link files in container -> files in server\n## Nginx container index page : /usr/share/nginx/html\ndocker run --name docker-nginx -p 80:80 -d -v ~/docker/docker-nginx/html:/usr/share/nginx/html nginx\n\n```\n### index.html\n```\n<html>\n  <head>\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha256-MfvZlkHCEqatNoGiOXveE8FIwMzZg4W85qfrfIFBfYc= sha512-dTfge/zgoMYpP7QbHy4gWMEGsbsdZeCXz7irItjcC3sPUFtf0kuFbDz/ixG7ArTxmDjLXDmezHubeNikyKGVyQ==\" crossorigin=\"anonymous\">\n    <title>Docker nginx sample</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Hello NginX</h1>\n      <p>This nginx page is brought to you by Docker</p>\n    </div>\n  </body>\n</html>\n```\n\n### customize Nginx config file\n```bash\ndocker cp docker-nginx:/etc/nginx/conf.d/default.conf ~/docker/docker-nginx/default.conf\n\n# run with customized default.config\ndocker run --name docker-nginx -p 80:80 -v ~/docker-nginx/html:/usr/share/nginx/html -v ~/docker/docker-nginx/default.conf:/etc/nginx/conf.d/default.conf -d nginx\n```\n\n","slug":"Docker-Notes","published":1,"updated":"2020-04-30T09:23:19.526Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedhy000bsd5tv2wyljgn","content":"<p>I want to install Jenkins in Docker container. And find out that Docker is an amazing tool and containerization is worthy to really be understood.</p>\n<p>Refereces:</p>\n<ul>\n<li><a href=\"http://www.runoob.com/docker/docker-install-nginx.html\" target=\"_blank\" rel=\"noopener\">Docker Tutorial</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/\" target=\"_blank\" rel=\"noopener\">Digital Ocean Tutorial</a></li>\n</ul>\n<a id=\"more\"></a>\n\n<h1 id=\"Docker-Basic\"><a href=\"#Docker-Basic\" class=\"headerlink\" title=\"Docker Basic\"></a>Docker Basic</h1><h2 id=\"basic-command\"><a href=\"#basic-command\" class=\"headerlink\" title=\"basic command\"></a>basic command</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run ubuntu:15.10 /bin/<span class=\"built_in\">echo</span> <span class=\"string\">\"Hello world\"</span> </span><br><span class=\"line\"><span class=\"comment\">#ubuntu:15.10 is an image</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker run -i -t ubuntu:15.10 /bin/bash</span><br><span class=\"line\"><span class=\"comment\"># -t:make a terminal in the container。</span></span><br><span class=\"line\"><span class=\"comment\"># -i:allow interaction with STDIN</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker run -d ubuntu:15.10 /bin/sh  <span class=\"comment\"># get container Id</span></span><br><span class=\"line\">docker ps</span><br><span class=\"line\">docker logs &lt;CONTAINER_ID&gt;</span><br><span class=\"line\">docker stop &lt;CONTAINER_ID&gt;</span><br><span class=\"line\">docker <span class=\"built_in\">command</span> --<span class=\"built_in\">help</span></span><br><span class=\"line\">docker pull training/webapp <span class=\"comment\"># get image</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker run -d -P training/webapp python app.py</span><br><span class=\"line\"><span class=\"comment\"># -d:run container at the background</span></span><br><span class=\"line\"><span class=\"comment\"># -P:expose the container port to our server port</span></span><br><span class=\"line\">docker run -d -p 5000:5000 training/webapp python app.py</span><br><span class=\"line\"></span><br><span class=\"line\">docker port &lt;CONTAINER_ID&gt;</span><br><span class=\"line\">docker logs -f &lt;CONTAINER_ID&gt;</span><br><span class=\"line\"><span class=\"comment\"># -f:use dokcer logs to show output like tail -f</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker top &lt;CONTAINER_ID&gt;</span><br><span class=\"line\">docker inspect &lt;CONTAINER_ID&gt;   <span class=\"comment\"># get a JSON</span></span><br><span class=\"line\">docker start &lt;CONTAINER_ID&gt;</span><br><span class=\"line\">docker rm &lt;CONTAINER_ID&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"image-image-class-container-instance\"><a href=\"#image-image-class-container-instance\" class=\"headerlink\" title=\"image (image-class, container-instance)\"></a>image (image-class, container-instance)</h2><h3 id=\"basic\"><a href=\"#basic\" class=\"headerlink\" title=\"basic\"></a>basic</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker images <span class=\"comment\"># list the images</span></span><br><span class=\"line\">docker pull ubuntu:13.10    <span class=\"comment\"># then use this image to run a container</span></span><br><span class=\"line\">docker search httpd</span><br><span class=\"line\">docker pull httpd</span><br><span class=\"line\">docker run httpd</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"update-image\"><a href=\"#update-image\" class=\"headerlink\" title=\"update image\"></a>update image</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -t -i ubuntu:15.10 /bin/bash <span class=\"comment\"># create a container</span></span><br><span class=\"line\">apt-get update</span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br><span class=\"line\">docker commit -m=<span class=\"string\">\"update\"</span> -a=<span class=\"string\">\"author\"</span> &lt;CONTAINER_ID&gt; boot/ubuntu:v2 <span class=\"comment\"># container name</span></span><br><span class=\"line\">docker images</span><br><span class=\"line\">docker run -t -i boot/ubuntu:v2 /bin/bash</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"create-image\"><a href=\"#create-image\" class=\"headerlink\" title=\"create image\"></a>create image</h3><p>Dockerfile</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM    centos:6.7</span><br><span class=\"line\">MAINTAINER      Fisher &quot;fisher@sudops.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">RUN     /bin/echo &apos;root:root&apos; |chpasswd</span><br><span class=\"line\">RUN     useradd ryan</span><br><span class=\"line\">RUN     /bin/echo &apos;ryan:ryan&apos; |chpasswd</span><br><span class=\"line\">RUN     /bin/echo -e &quot;LANG=\\&quot;en_US.UTF-8\\&quot;&quot; &gt;/etc/default/local</span><br><span class=\"line\">EXPOSE  22</span><br><span class=\"line\">EXPOSE  80</span><br><span class=\"line\">CMD     /usr/sbin/sshd -D</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># build an image based on Dockerfile</span></span><br><span class=\"line\">docker build - &lt; Dockerfile -t ryan/centos:6.7</span><br><span class=\"line\"><span class=\"comment\"># REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span></span><br><span class=\"line\"><span class=\"comment\"># ryan/centos         6.7                 2d1b0607dc75        48 seconds ago      191 MB</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## add a new tag to the image</span></span><br><span class=\"line\">docker tag &lt;CONTAINER_ID&gt; boot/centos:dev</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"container-port-exposing\"><a href=\"#container-port-exposing\" class=\"headerlink\" title=\"container port exposing\"></a>container port exposing</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 127.0.0.1:5001:5000 training/webapp python app.py</span><br><span class=\"line\"><span class=\"comment\"># 127.0.0.1:5001 can visit docker container</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker run -d -P --name &lt;container_name&gt; training/webapp python app.py</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Docker-Sample\"><a href=\"#Docker-Sample\" class=\"headerlink\" title=\"Docker Sample\"></a>Docker Sample</h1><h2 id=\"Install-Nginx\"><a href=\"#Install-Nginx\" class=\"headerlink\" title=\"Install Nginx\"></a>Install Nginx</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># make dir for nginx</span></span><br><span class=\"line\">mkdir -p ~/nginx/www ~/nginx/wwwlogs ~/nginx/conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># get nginx image</span></span><br><span class=\"line\">docker search nginx</span><br><span class=\"line\">docker pull nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># get container</span></span><br><span class=\"line\">docker run --name docker-nginx -p 80:80 nginx</span><br><span class=\"line\">docker rm docker-nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># detach the container to allow it to run independently</span></span><br><span class=\"line\">docker run --name docker-nginx -p 80:80 -d nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Building a Web Page to Serve on Nginx, create index page to replace the default landing page</span></span><br><span class=\"line\">mkdir -p ~/docker/docker-nginx/html</span><br><span class=\"line\">vi ~/docker/docker-nginx/html/index.html    <span class=\"comment\"># as per content below</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># website content: link files in container -&gt; files in server</span></span><br><span class=\"line\"><span class=\"comment\">## Nginx container index page : /usr/share/nginx/html</span></span><br><span class=\"line\">docker run --name docker-nginx -p 80:80 -d -v ~/docker/docker-nginx/html:/usr/share/nginx/html nginx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"index-html\"><a href=\"#index-html\" class=\"headerlink\" title=\"index.html\"></a>index.html</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;link href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha256-MfvZlkHCEqatNoGiOXveE8FIwMzZg4W85qfrfIFBfYc= sha512-dTfge/zgoMYpP7QbHy4gWMEGsbsdZeCXz7irItjcC3sPUFtf0kuFbDz/ixG7ArTxmDjLXDmezHubeNikyKGVyQ==&quot; crossorigin=&quot;anonymous&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Docker nginx sample&lt;/title&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">      &lt;h1&gt;Hello NginX&lt;/h1&gt;</span><br><span class=\"line\">      &lt;p&gt;This nginx page is brought to you by Docker&lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"customize-Nginx-config-file\"><a href=\"#customize-Nginx-config-file\" class=\"headerlink\" title=\"customize Nginx config file\"></a>customize Nginx config file</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp docker-nginx:/etc/nginx/conf.d/default.conf ~/docker/docker-nginx/default.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># run with customized default.config</span></span><br><span class=\"line\">docker run --name docker-nginx -p 80:80 -v ~/docker-nginx/html:/usr/share/nginx/html -v ~/docker/docker-nginx/default.conf:/etc/nginx/conf.d/default.conf -d nginx</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>I want to install Jenkins in Docker container. And find out that Docker is an amazing tool and containerization is worthy to really be understood.</p>\n<p>Refereces:</p>\n<ul>\n<li><a href=\"http://www.runoob.com/docker/docker-install-nginx.html\" target=\"_blank\" rel=\"noopener\">Docker Tutorial</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/\" target=\"_blank\" rel=\"noopener\">Digital Ocean Tutorial</a></li>\n</ul>","more":"<h1 id=\"Docker-Basic\"><a href=\"#Docker-Basic\" class=\"headerlink\" title=\"Docker Basic\"></a>Docker Basic</h1><h2 id=\"basic-command\"><a href=\"#basic-command\" class=\"headerlink\" title=\"basic command\"></a>basic command</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run ubuntu:15.10 /bin/<span class=\"built_in\">echo</span> <span class=\"string\">\"Hello world\"</span> </span><br><span class=\"line\"><span class=\"comment\">#ubuntu:15.10 is an image</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker run -i -t ubuntu:15.10 /bin/bash</span><br><span class=\"line\"><span class=\"comment\"># -t:make a terminal in the container。</span></span><br><span class=\"line\"><span class=\"comment\"># -i:allow interaction with STDIN</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker run -d ubuntu:15.10 /bin/sh  <span class=\"comment\"># get container Id</span></span><br><span class=\"line\">docker ps</span><br><span class=\"line\">docker logs &lt;CONTAINER_ID&gt;</span><br><span class=\"line\">docker stop &lt;CONTAINER_ID&gt;</span><br><span class=\"line\">docker <span class=\"built_in\">command</span> --<span class=\"built_in\">help</span></span><br><span class=\"line\">docker pull training/webapp <span class=\"comment\"># get image</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker run -d -P training/webapp python app.py</span><br><span class=\"line\"><span class=\"comment\"># -d:run container at the background</span></span><br><span class=\"line\"><span class=\"comment\"># -P:expose the container port to our server port</span></span><br><span class=\"line\">docker run -d -p 5000:5000 training/webapp python app.py</span><br><span class=\"line\"></span><br><span class=\"line\">docker port &lt;CONTAINER_ID&gt;</span><br><span class=\"line\">docker logs -f &lt;CONTAINER_ID&gt;</span><br><span class=\"line\"><span class=\"comment\"># -f:use dokcer logs to show output like tail -f</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker top &lt;CONTAINER_ID&gt;</span><br><span class=\"line\">docker inspect &lt;CONTAINER_ID&gt;   <span class=\"comment\"># get a JSON</span></span><br><span class=\"line\">docker start &lt;CONTAINER_ID&gt;</span><br><span class=\"line\">docker rm &lt;CONTAINER_ID&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"image-image-class-container-instance\"><a href=\"#image-image-class-container-instance\" class=\"headerlink\" title=\"image (image-class, container-instance)\"></a>image (image-class, container-instance)</h2><h3 id=\"basic\"><a href=\"#basic\" class=\"headerlink\" title=\"basic\"></a>basic</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker images <span class=\"comment\"># list the images</span></span><br><span class=\"line\">docker pull ubuntu:13.10    <span class=\"comment\"># then use this image to run a container</span></span><br><span class=\"line\">docker search httpd</span><br><span class=\"line\">docker pull httpd</span><br><span class=\"line\">docker run httpd</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"update-image\"><a href=\"#update-image\" class=\"headerlink\" title=\"update image\"></a>update image</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -t -i ubuntu:15.10 /bin/bash <span class=\"comment\"># create a container</span></span><br><span class=\"line\">apt-get update</span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br><span class=\"line\">docker commit -m=<span class=\"string\">\"update\"</span> -a=<span class=\"string\">\"author\"</span> &lt;CONTAINER_ID&gt; boot/ubuntu:v2 <span class=\"comment\"># container name</span></span><br><span class=\"line\">docker images</span><br><span class=\"line\">docker run -t -i boot/ubuntu:v2 /bin/bash</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"create-image\"><a href=\"#create-image\" class=\"headerlink\" title=\"create image\"></a>create image</h3><p>Dockerfile</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM    centos:6.7</span><br><span class=\"line\">MAINTAINER      Fisher &quot;fisher@sudops.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">RUN     /bin/echo &apos;root:root&apos; |chpasswd</span><br><span class=\"line\">RUN     useradd ryan</span><br><span class=\"line\">RUN     /bin/echo &apos;ryan:ryan&apos; |chpasswd</span><br><span class=\"line\">RUN     /bin/echo -e &quot;LANG=\\&quot;en_US.UTF-8\\&quot;&quot; &gt;/etc/default/local</span><br><span class=\"line\">EXPOSE  22</span><br><span class=\"line\">EXPOSE  80</span><br><span class=\"line\">CMD     /usr/sbin/sshd -D</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># build an image based on Dockerfile</span></span><br><span class=\"line\">docker build - &lt; Dockerfile -t ryan/centos:6.7</span><br><span class=\"line\"><span class=\"comment\"># REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span></span><br><span class=\"line\"><span class=\"comment\"># ryan/centos         6.7                 2d1b0607dc75        48 seconds ago      191 MB</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## add a new tag to the image</span></span><br><span class=\"line\">docker tag &lt;CONTAINER_ID&gt; boot/centos:dev</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"container-port-exposing\"><a href=\"#container-port-exposing\" class=\"headerlink\" title=\"container port exposing\"></a>container port exposing</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 127.0.0.1:5001:5000 training/webapp python app.py</span><br><span class=\"line\"><span class=\"comment\"># 127.0.0.1:5001 can visit docker container</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker run -d -P --name &lt;container_name&gt; training/webapp python app.py</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Docker-Sample\"><a href=\"#Docker-Sample\" class=\"headerlink\" title=\"Docker Sample\"></a>Docker Sample</h1><h2 id=\"Install-Nginx\"><a href=\"#Install-Nginx\" class=\"headerlink\" title=\"Install Nginx\"></a>Install Nginx</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># make dir for nginx</span></span><br><span class=\"line\">mkdir -p ~/nginx/www ~/nginx/wwwlogs ~/nginx/conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># get nginx image</span></span><br><span class=\"line\">docker search nginx</span><br><span class=\"line\">docker pull nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># get container</span></span><br><span class=\"line\">docker run --name docker-nginx -p 80:80 nginx</span><br><span class=\"line\">docker rm docker-nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># detach the container to allow it to run independently</span></span><br><span class=\"line\">docker run --name docker-nginx -p 80:80 -d nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Building a Web Page to Serve on Nginx, create index page to replace the default landing page</span></span><br><span class=\"line\">mkdir -p ~/docker/docker-nginx/html</span><br><span class=\"line\">vi ~/docker/docker-nginx/html/index.html    <span class=\"comment\"># as per content below</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># website content: link files in container -&gt; files in server</span></span><br><span class=\"line\"><span class=\"comment\">## Nginx container index page : /usr/share/nginx/html</span></span><br><span class=\"line\">docker run --name docker-nginx -p 80:80 -d -v ~/docker/docker-nginx/html:/usr/share/nginx/html nginx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"index-html\"><a href=\"#index-html\" class=\"headerlink\" title=\"index.html\"></a>index.html</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;link href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha256-MfvZlkHCEqatNoGiOXveE8FIwMzZg4W85qfrfIFBfYc= sha512-dTfge/zgoMYpP7QbHy4gWMEGsbsdZeCXz7irItjcC3sPUFtf0kuFbDz/ixG7ArTxmDjLXDmezHubeNikyKGVyQ==&quot; crossorigin=&quot;anonymous&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Docker nginx sample&lt;/title&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">      &lt;h1&gt;Hello NginX&lt;/h1&gt;</span><br><span class=\"line\">      &lt;p&gt;This nginx page is brought to you by Docker&lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"customize-Nginx-config-file\"><a href=\"#customize-Nginx-config-file\" class=\"headerlink\" title=\"customize Nginx config file\"></a>customize Nginx config file</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp docker-nginx:/etc/nginx/conf.d/default.conf ~/docker/docker-nginx/default.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># run with customized default.config</span></span><br><span class=\"line\">docker run --name docker-nginx -p 80:80 -v ~/docker-nginx/html:/usr/share/nginx/html -v ~/docker/docker-nginx/default.conf:/etc/nginx/conf.d/default.conf -d nginx</span><br></pre></td></tr></table></figure>"},{"title":"Date Demo","date":"2019-03-05T15:13:32.000Z","_content":"# DateFormat\n## get date string in specific format\n```java\nDate date = new Date();\nDateFormat dateFormat = new SimpleDateFormat(\"dd-MMM-yyyy\");\nString dateString = dateFormat.format(date);\nSystem.out.println(dateString); // 05-Mar-2019\n```\n\n\n## get date from date string\n```java\nString dateString2 = \"2019-03-05\";\nDateFormat dateFormat2 = new SimpleDateFormat(\"yyyy-MM-dd\");\nDate date2 = null;\ntry {\n\tdate2 = dateFormat2.parse(dateString2);\n} catch (ParseException e) {\n\te.printStackTrace();\n}\nSystem.out.println(date2); // Tue Mar 05 00:00:00 SGT 2019\n```\n\n<!--more-->\n\n# Calendar\n```java\n/**\n * 1st way : Wed Mar 06 00:00:00 SGT 2019\n */\nCalendar calendar = new GregorianCalendar(2019, Calendar.MARCH, 6);\nSystem.out.println(calendar.getTime());\n\n/**\n * 2nd way : Mon Apr 15 10:49:07 SGT 2019\n */\nCalendar calendar2 = new GregorianCalendar();\ncalendar2.set(Calendar.YEAR, 2019);\ncalendar2.set(Calendar.MONTH, Calendar.APRIL);\ncalendar2.set(Calendar.DATE, 15);\ncalendar2.set(Calendar.HOUR_OF_DAY, 10);\nSystem.out.println(calendar2.getTime());\n\n/**\n * 3rd way : Wed Mar 06 13:49:07 SGT 2019\n */\nCalendar calendar3 = new GregorianCalendar();\ncalendar3.setTime(new Date());\nSystem.out.println(calendar3.getTime());\n\n/**\n * function\n */\ncalendar.add(Calendar.MONTH, 10);\ncalendar.add(Calendar.DATE, -10);\n```","source":"_posts/Date-Demo.md","raw":"---\ntitle: Date Demo\ndate: 2019-03-05 23:13:32\ncategories: Java\ntags: [Java 300集, DateFormat, Date, Calendar]\n---\n# DateFormat\n## get date string in specific format\n```java\nDate date = new Date();\nDateFormat dateFormat = new SimpleDateFormat(\"dd-MMM-yyyy\");\nString dateString = dateFormat.format(date);\nSystem.out.println(dateString); // 05-Mar-2019\n```\n\n\n## get date from date string\n```java\nString dateString2 = \"2019-03-05\";\nDateFormat dateFormat2 = new SimpleDateFormat(\"yyyy-MM-dd\");\nDate date2 = null;\ntry {\n\tdate2 = dateFormat2.parse(dateString2);\n} catch (ParseException e) {\n\te.printStackTrace();\n}\nSystem.out.println(date2); // Tue Mar 05 00:00:00 SGT 2019\n```\n\n<!--more-->\n\n# Calendar\n```java\n/**\n * 1st way : Wed Mar 06 00:00:00 SGT 2019\n */\nCalendar calendar = new GregorianCalendar(2019, Calendar.MARCH, 6);\nSystem.out.println(calendar.getTime());\n\n/**\n * 2nd way : Mon Apr 15 10:49:07 SGT 2019\n */\nCalendar calendar2 = new GregorianCalendar();\ncalendar2.set(Calendar.YEAR, 2019);\ncalendar2.set(Calendar.MONTH, Calendar.APRIL);\ncalendar2.set(Calendar.DATE, 15);\ncalendar2.set(Calendar.HOUR_OF_DAY, 10);\nSystem.out.println(calendar2.getTime());\n\n/**\n * 3rd way : Wed Mar 06 13:49:07 SGT 2019\n */\nCalendar calendar3 = new GregorianCalendar();\ncalendar3.setTime(new Date());\nSystem.out.println(calendar3.getTime());\n\n/**\n * function\n */\ncalendar.add(Calendar.MONTH, 10);\ncalendar.add(Calendar.DATE, -10);\n```","slug":"Date-Demo","published":1,"updated":"2020-04-30T09:23:19.526Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedhz000csd5t5jd0e550","content":"<h1 id=\"DateFormat\"><a href=\"#DateFormat\" class=\"headerlink\" title=\"DateFormat\"></a>DateFormat</h1><h2 id=\"get-date-string-in-specific-format\"><a href=\"#get-date-string-in-specific-format\" class=\"headerlink\" title=\"get date string in specific format\"></a>get date string in specific format</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Date date = <span class=\"keyword\">new</span> Date();</span><br><span class=\"line\">DateFormat dateFormat = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"dd-MMM-yyyy\"</span>);</span><br><span class=\"line\">String dateString = dateFormat.format(date);</span><br><span class=\"line\">System.out.println(dateString); <span class=\"comment\">// 05-Mar-2019</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"get-date-from-date-string\"><a href=\"#get-date-from-date-string\" class=\"headerlink\" title=\"get date from date string\"></a>get date from date string</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String dateString2 = <span class=\"string\">\"2019-03-05\"</span>;</span><br><span class=\"line\">DateFormat dateFormat2 = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyy-MM-dd\"</span>);</span><br><span class=\"line\">Date date2 = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\tdate2 = dateFormat2.parse(dateString2);</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (ParseException e) &#123;</span><br><span class=\"line\">\te.printStackTrace();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">System.out.println(date2); <span class=\"comment\">// Tue Mar 05 00:00:00 SGT 2019</span></span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<h1 id=\"Calendar\"><a href=\"#Calendar\" class=\"headerlink\" title=\"Calendar\"></a>Calendar</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 1st way : Wed Mar 06 00:00:00 SGT 2019</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">Calendar calendar = <span class=\"keyword\">new</span> GregorianCalendar(<span class=\"number\">2019</span>, Calendar.MARCH, <span class=\"number\">6</span>);</span><br><span class=\"line\">System.out.println(calendar.getTime());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 2nd way : Mon Apr 15 10:49:07 SGT 2019</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">Calendar calendar2 = <span class=\"keyword\">new</span> GregorianCalendar();</span><br><span class=\"line\">calendar2.set(Calendar.YEAR, <span class=\"number\">2019</span>);</span><br><span class=\"line\">calendar2.set(Calendar.MONTH, Calendar.APRIL);</span><br><span class=\"line\">calendar2.set(Calendar.DATE, <span class=\"number\">15</span>);</span><br><span class=\"line\">calendar2.set(Calendar.HOUR_OF_DAY, <span class=\"number\">10</span>);</span><br><span class=\"line\">System.out.println(calendar2.getTime());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 3rd way : Wed Mar 06 13:49:07 SGT 2019</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">Calendar calendar3 = <span class=\"keyword\">new</span> GregorianCalendar();</span><br><span class=\"line\">calendar3.setTime(<span class=\"keyword\">new</span> Date());</span><br><span class=\"line\">System.out.println(calendar3.getTime());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * function</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">calendar.add(Calendar.MONTH, <span class=\"number\">10</span>);</span><br><span class=\"line\">calendar.add(Calendar.DATE, -<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"DateFormat\"><a href=\"#DateFormat\" class=\"headerlink\" title=\"DateFormat\"></a>DateFormat</h1><h2 id=\"get-date-string-in-specific-format\"><a href=\"#get-date-string-in-specific-format\" class=\"headerlink\" title=\"get date string in specific format\"></a>get date string in specific format</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Date date = <span class=\"keyword\">new</span> Date();</span><br><span class=\"line\">DateFormat dateFormat = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"dd-MMM-yyyy\"</span>);</span><br><span class=\"line\">String dateString = dateFormat.format(date);</span><br><span class=\"line\">System.out.println(dateString); <span class=\"comment\">// 05-Mar-2019</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"get-date-from-date-string\"><a href=\"#get-date-from-date-string\" class=\"headerlink\" title=\"get date from date string\"></a>get date from date string</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String dateString2 = <span class=\"string\">\"2019-03-05\"</span>;</span><br><span class=\"line\">DateFormat dateFormat2 = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyy-MM-dd\"</span>);</span><br><span class=\"line\">Date date2 = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\tdate2 = dateFormat2.parse(dateString2);</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (ParseException e) &#123;</span><br><span class=\"line\">\te.printStackTrace();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">System.out.println(date2); <span class=\"comment\">// Tue Mar 05 00:00:00 SGT 2019</span></span><br></pre></td></tr></table></figure>","more":"<h1 id=\"Calendar\"><a href=\"#Calendar\" class=\"headerlink\" title=\"Calendar\"></a>Calendar</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 1st way : Wed Mar 06 00:00:00 SGT 2019</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">Calendar calendar = <span class=\"keyword\">new</span> GregorianCalendar(<span class=\"number\">2019</span>, Calendar.MARCH, <span class=\"number\">6</span>);</span><br><span class=\"line\">System.out.println(calendar.getTime());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 2nd way : Mon Apr 15 10:49:07 SGT 2019</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">Calendar calendar2 = <span class=\"keyword\">new</span> GregorianCalendar();</span><br><span class=\"line\">calendar2.set(Calendar.YEAR, <span class=\"number\">2019</span>);</span><br><span class=\"line\">calendar2.set(Calendar.MONTH, Calendar.APRIL);</span><br><span class=\"line\">calendar2.set(Calendar.DATE, <span class=\"number\">15</span>);</span><br><span class=\"line\">calendar2.set(Calendar.HOUR_OF_DAY, <span class=\"number\">10</span>);</span><br><span class=\"line\">System.out.println(calendar2.getTime());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 3rd way : Wed Mar 06 13:49:07 SGT 2019</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">Calendar calendar3 = <span class=\"keyword\">new</span> GregorianCalendar();</span><br><span class=\"line\">calendar3.setTime(<span class=\"keyword\">new</span> Date());</span><br><span class=\"line\">System.out.println(calendar3.getTime());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * function</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">calendar.add(Calendar.MONTH, <span class=\"number\">10</span>);</span><br><span class=\"line\">calendar.add(Calendar.DATE, -<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure>"},{"title":"GC - 垃圾回收机制","date":"2019-02-24T10:15:04.000Z","_content":"两件事情：\n\n- 发现无用的对象\n- 回收占用的空间\n\n<!--more-->\n\n# 怎么发现？\n\n## 引用计数法\n\n- 每个对象都有计数\n- 被引用时，计数+1\n- 当计数为 0，对象被回收\n- 缺点：对象互相引用，导致计数不为0\n\n## 引用可达法\n\n- 将所有引用关系作图\n- 如果对象无法被到达，就进行回收\n\n# 分代垃圾回收机制\n\n对象分为三种状态：\n\n- 年轻\n- 年老\n- 持久（不考虑）\n\nJVM也将堆分为\n\n- Eden\n- Survivor 1\n- Survivor 2\n- Old\n\n## 回收类型\n\n- Minor GC：清理Eden和Survivor区域的无用对象，复制有用对象到Survivor1或者Survivor2（同一时间，1和2一个有对象，一个为空）\n- Major GC：清理Old区域\n- Full GC：清理Eden，Survivor和Old区域。影响性能。\n\n## 回收过程：\n\n- 当 Eden 满了，触发 Minor GC，使用survivor1\n- Eden 满了，触发 Minor GC，将有用对象放到survivor2\n- 被转移15次的对象，被放入Old\n- 当Old达到一定比例，触发 Major GC\n- Old满的时候，触发 Full GC","source":"_posts/GC-垃圾回收机制.md","raw":"---\ntitle: GC - 垃圾回收机制\ndate: 2019-02-24 18:15:04\ncategories: Java\ntags: [Java 300集, GC]\n---\n两件事情：\n\n- 发现无用的对象\n- 回收占用的空间\n\n<!--more-->\n\n# 怎么发现？\n\n## 引用计数法\n\n- 每个对象都有计数\n- 被引用时，计数+1\n- 当计数为 0，对象被回收\n- 缺点：对象互相引用，导致计数不为0\n\n## 引用可达法\n\n- 将所有引用关系作图\n- 如果对象无法被到达，就进行回收\n\n# 分代垃圾回收机制\n\n对象分为三种状态：\n\n- 年轻\n- 年老\n- 持久（不考虑）\n\nJVM也将堆分为\n\n- Eden\n- Survivor 1\n- Survivor 2\n- Old\n\n## 回收类型\n\n- Minor GC：清理Eden和Survivor区域的无用对象，复制有用对象到Survivor1或者Survivor2（同一时间，1和2一个有对象，一个为空）\n- Major GC：清理Old区域\n- Full GC：清理Eden，Survivor和Old区域。影响性能。\n\n## 回收过程：\n\n- 当 Eden 满了，触发 Minor GC，使用survivor1\n- Eden 满了，触发 Minor GC，将有用对象放到survivor2\n- 被转移15次的对象，被放入Old\n- 当Old达到一定比例，触发 Major GC\n- Old满的时候，触发 Full GC","slug":"GC-垃圾回收机制","published":1,"updated":"2020-04-30T09:23:19.526Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedhz000dsd5t3eyd1ip4","content":"<p>两件事情：</p>\n<ul>\n<li>发现无用的对象</li>\n<li>回收占用的空间</li>\n</ul>\n<a id=\"more\"></a>\n\n<h1 id=\"怎么发现？\"><a href=\"#怎么发现？\" class=\"headerlink\" title=\"怎么发现？\"></a>怎么发现？</h1><h2 id=\"引用计数法\"><a href=\"#引用计数法\" class=\"headerlink\" title=\"引用计数法\"></a>引用计数法</h2><ul>\n<li>每个对象都有计数</li>\n<li>被引用时，计数+1</li>\n<li>当计数为 0，对象被回收</li>\n<li>缺点：对象互相引用，导致计数不为0</li>\n</ul>\n<h2 id=\"引用可达法\"><a href=\"#引用可达法\" class=\"headerlink\" title=\"引用可达法\"></a>引用可达法</h2><ul>\n<li>将所有引用关系作图</li>\n<li>如果对象无法被到达，就进行回收</li>\n</ul>\n<h1 id=\"分代垃圾回收机制\"><a href=\"#分代垃圾回收机制\" class=\"headerlink\" title=\"分代垃圾回收机制\"></a>分代垃圾回收机制</h1><p>对象分为三种状态：</p>\n<ul>\n<li>年轻</li>\n<li>年老</li>\n<li>持久（不考虑）</li>\n</ul>\n<p>JVM也将堆分为</p>\n<ul>\n<li>Eden</li>\n<li>Survivor 1</li>\n<li>Survivor 2</li>\n<li>Old</li>\n</ul>\n<h2 id=\"回收类型\"><a href=\"#回收类型\" class=\"headerlink\" title=\"回收类型\"></a>回收类型</h2><ul>\n<li>Minor GC：清理Eden和Survivor区域的无用对象，复制有用对象到Survivor1或者Survivor2（同一时间，1和2一个有对象，一个为空）</li>\n<li>Major GC：清理Old区域</li>\n<li>Full GC：清理Eden，Survivor和Old区域。影响性能。</li>\n</ul>\n<h2 id=\"回收过程：\"><a href=\"#回收过程：\" class=\"headerlink\" title=\"回收过程：\"></a>回收过程：</h2><ul>\n<li>当 Eden 满了，触发 Minor GC，使用survivor1</li>\n<li>Eden 满了，触发 Minor GC，将有用对象放到survivor2</li>\n<li>被转移15次的对象，被放入Old</li>\n<li>当Old达到一定比例，触发 Major GC</li>\n<li>Old满的时候，触发 Full GC</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>两件事情：</p>\n<ul>\n<li>发现无用的对象</li>\n<li>回收占用的空间</li>\n</ul>","more":"<h1 id=\"怎么发现？\"><a href=\"#怎么发现？\" class=\"headerlink\" title=\"怎么发现？\"></a>怎么发现？</h1><h2 id=\"引用计数法\"><a href=\"#引用计数法\" class=\"headerlink\" title=\"引用计数法\"></a>引用计数法</h2><ul>\n<li>每个对象都有计数</li>\n<li>被引用时，计数+1</li>\n<li>当计数为 0，对象被回收</li>\n<li>缺点：对象互相引用，导致计数不为0</li>\n</ul>\n<h2 id=\"引用可达法\"><a href=\"#引用可达法\" class=\"headerlink\" title=\"引用可达法\"></a>引用可达法</h2><ul>\n<li>将所有引用关系作图</li>\n<li>如果对象无法被到达，就进行回收</li>\n</ul>\n<h1 id=\"分代垃圾回收机制\"><a href=\"#分代垃圾回收机制\" class=\"headerlink\" title=\"分代垃圾回收机制\"></a>分代垃圾回收机制</h1><p>对象分为三种状态：</p>\n<ul>\n<li>年轻</li>\n<li>年老</li>\n<li>持久（不考虑）</li>\n</ul>\n<p>JVM也将堆分为</p>\n<ul>\n<li>Eden</li>\n<li>Survivor 1</li>\n<li>Survivor 2</li>\n<li>Old</li>\n</ul>\n<h2 id=\"回收类型\"><a href=\"#回收类型\" class=\"headerlink\" title=\"回收类型\"></a>回收类型</h2><ul>\n<li>Minor GC：清理Eden和Survivor区域的无用对象，复制有用对象到Survivor1或者Survivor2（同一时间，1和2一个有对象，一个为空）</li>\n<li>Major GC：清理Old区域</li>\n<li>Full GC：清理Eden，Survivor和Old区域。影响性能。</li>\n</ul>\n<h2 id=\"回收过程：\"><a href=\"#回收过程：\" class=\"headerlink\" title=\"回收过程：\"></a>回收过程：</h2><ul>\n<li>当 Eden 满了，触发 Minor GC，使用survivor1</li>\n<li>Eden 满了，触发 Minor GC，将有用对象放到survivor2</li>\n<li>被转移15次的对象，被放入Old</li>\n<li>当Old达到一定比例，触发 Major GC</li>\n<li>Old满的时候，触发 Full GC</li>\n</ul>"},{"title":"Git - 学习笔记","date":"2017-11-24T14:46:23.000Z","_content":"\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n学习素材：[Pro Git](https://bingohuang.gitbooks.io/progit2/content/02-git-basics/sections/getting-a-repository.html)\n\n# 常用指令 #\n\n```bash\ngit add\t\t#添加到下一次的提交中。\ngit status -s\t#状态简览\ngit diff --staged\t##暂存区域 - 本地 Repo\ngit commit -a -m 'comment'\t#跳过git add\n```\n\nGit 周期\n![Git 周期](/images/Git 周期.png)\n\n<!--more-->\n\n# Git 基础 #\n\n## 获取 Git 仓库 ##\n\n两种方法：\n\n1. 初始现有文件夹    \n```\ngit init\n```\n\t初始后的文件夹里多了一个 .git 的文件夹，这就是本地 repository。\n2. 克隆已有的 Remote Repository\n```\ngit clone https://github.com/Ryanluoxu/learn_linux.git\n```\n\t会在当前文件夹里生成 `learn_linux` 文件夹。里面也有 .git 文件夹作为本地 repository。 Remote repository 里的内容先进入到本地 repository，然后才到 `learn_linux` 文件夹。\n\n## 提交文件 ##\n### 文件的三种状态 ###\n- 已修改 modified ： 对某个文件进行修改，保存完成。\n- 已暂存 staged ： 执行 `git add` 之后\n- 已提交 committed ： 执行 `git commit` 之后\n\n这里的提交目的地，是本地 repository。  \n常用的 github 为 remote repository。   \n如果需要将本地 repository 同步到 github 上，需要执行 `git push`。    \n\n所以对本地文件进行修改，到同步到 github，基本流程如下：   \n  \n![本地修改-github的流程图](/images/本地修改-github的流程图.jpg)\n\n\n### git status ###\n```\ngit status\ngit status -s\t#状态简览\n```\n举例：\n```bash\n M README\t\t\t#文件被修改了但是还没放入暂存区\nMM Rakefile\t\t\t#文件被修改，放入了暂存区之后。该文件又被修改。\nA  lib\t\t\t\t#新添加到暂存区中的文件\nM  simple.txt\t\t#文件被修改了并放入了暂存区\n?? LICENSE.txt\t\t#新添加的未跟踪文件\n```\n\n\n### git ignore ###\n创建一个名为 `.gitignore` 的文件，列出要忽略的文件模式。\n```bash\n# no .a files\n*.a\n\n# but do track lib.a, even though you're ignoring .a files above\n!lib.a\n\n# only ignore the TODO file in the current directory, not subdir/TODO\n/TODO\n\n# ignore all files in the build/ directory\nbuild/\n\n# ignore doc/notes.txt, but not doc/server/arch.txt\ndoc/*.txt\n\n# ignore all .pdf files in the doc/ directory\ndoc/**/*.pdf\n```\n\n### git diff ###\n\n```bash\ngit diff\t\t\t#本地文件 - 暂存区域\ngit diff --staged\t#暂存区域 - 本地 Repo\n```\n\n### git commit ###\n```bash\ngit commit -m \"Story 182: Fix benchmarks for speed\"\n```\n\n跳过 `git add`， 把所有跟踪下的文件暂存，然后提交。\n```bash\ngit commit -a -m 'added new benchmarks'\n```\n\n\n# 远程仓库 #\n\n查看已经配置的远程仓库服务器:\n```\ngit remote -v\n```\n\n添加远程 Git 仓库:\n```\ngit remote add <shortname> <url>\n```\n\n抓取：从远程仓库中获得数据,放到本地仓库：\n```\ngit fetch [remote-name]\n```\n\n拉取：从远程仓库中获得数据，然后合并到当前分支：\n```\ngit pull\n```\n\n## Push existing project to github ##\n\n1. Create new repo in github called : hexoBlog\n2. git bash\n```bash\n$ git init\n$ git add --all\n$ git commit\n$ git remote add origin https://github.com/Ryanluoxu/hexoBlog.git\n$ git push\n$ git status\n```\n4. there is one folder always in `untracked` mode. \n```\nmodified:   next (modified content, untracked content)\n```\n5. realised `next` is cloned from github. Itself contains a .git folder.\n6. remove `next` local git repo.\n```bash\n$ cd theme/next/\n$ rm -rf .git\n$ cd ../..\n$ git status\n\nnothing to commit, working tree clean\n\n$ git push\n\nfatal: The current branch master has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin master\n\n\n$ git push -u origin master\t\t#org\n\n```\n\n\n## existing project -> remote repo & eclipse ##\n1. create empty remote repo: `myProject`\n2. git bash on `~/workspace`\n3. clone repo\n\t```\n\tgit clone <**/myProject.git>\t# create `~/workspace/myProject`\n\t```\n4. copy existing project files into `~/workspace/myProject`\n5. git push to remote repo\n\t```bash\n\tcd ~/workspace/myProject\n\tgit add --all\n\tgit commit -m \"initial commit\"\n\tgit push\n\t```\t\n6. Add local repo to Eclipse. \n\t- open git repo window\n\t- add local git repo and choose `~/workspace/myProject`\n7. Go to working directory and import existing project\n8. Once code change. \n\t- Right click project\n\t- team - commit - give commit message - commit and push\n\n\n\n","source":"_posts/Git-学习笔记.md","raw":"---\ntitle: 'Git - 学习笔记'\ndate: 2017-11-24 22:46:23\ncategories: Git\ntags: [Git, 学习笔记]\n---\n\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n学习素材：[Pro Git](https://bingohuang.gitbooks.io/progit2/content/02-git-basics/sections/getting-a-repository.html)\n\n# 常用指令 #\n\n```bash\ngit add\t\t#添加到下一次的提交中。\ngit status -s\t#状态简览\ngit diff --staged\t##暂存区域 - 本地 Repo\ngit commit -a -m 'comment'\t#跳过git add\n```\n\nGit 周期\n![Git 周期](/images/Git 周期.png)\n\n<!--more-->\n\n# Git 基础 #\n\n## 获取 Git 仓库 ##\n\n两种方法：\n\n1. 初始现有文件夹    \n```\ngit init\n```\n\t初始后的文件夹里多了一个 .git 的文件夹，这就是本地 repository。\n2. 克隆已有的 Remote Repository\n```\ngit clone https://github.com/Ryanluoxu/learn_linux.git\n```\n\t会在当前文件夹里生成 `learn_linux` 文件夹。里面也有 .git 文件夹作为本地 repository。 Remote repository 里的内容先进入到本地 repository，然后才到 `learn_linux` 文件夹。\n\n## 提交文件 ##\n### 文件的三种状态 ###\n- 已修改 modified ： 对某个文件进行修改，保存完成。\n- 已暂存 staged ： 执行 `git add` 之后\n- 已提交 committed ： 执行 `git commit` 之后\n\n这里的提交目的地，是本地 repository。  \n常用的 github 为 remote repository。   \n如果需要将本地 repository 同步到 github 上，需要执行 `git push`。    \n\n所以对本地文件进行修改，到同步到 github，基本流程如下：   \n  \n![本地修改-github的流程图](/images/本地修改-github的流程图.jpg)\n\n\n### git status ###\n```\ngit status\ngit status -s\t#状态简览\n```\n举例：\n```bash\n M README\t\t\t#文件被修改了但是还没放入暂存区\nMM Rakefile\t\t\t#文件被修改，放入了暂存区之后。该文件又被修改。\nA  lib\t\t\t\t#新添加到暂存区中的文件\nM  simple.txt\t\t#文件被修改了并放入了暂存区\n?? LICENSE.txt\t\t#新添加的未跟踪文件\n```\n\n\n### git ignore ###\n创建一个名为 `.gitignore` 的文件，列出要忽略的文件模式。\n```bash\n# no .a files\n*.a\n\n# but do track lib.a, even though you're ignoring .a files above\n!lib.a\n\n# only ignore the TODO file in the current directory, not subdir/TODO\n/TODO\n\n# ignore all files in the build/ directory\nbuild/\n\n# ignore doc/notes.txt, but not doc/server/arch.txt\ndoc/*.txt\n\n# ignore all .pdf files in the doc/ directory\ndoc/**/*.pdf\n```\n\n### git diff ###\n\n```bash\ngit diff\t\t\t#本地文件 - 暂存区域\ngit diff --staged\t#暂存区域 - 本地 Repo\n```\n\n### git commit ###\n```bash\ngit commit -m \"Story 182: Fix benchmarks for speed\"\n```\n\n跳过 `git add`， 把所有跟踪下的文件暂存，然后提交。\n```bash\ngit commit -a -m 'added new benchmarks'\n```\n\n\n# 远程仓库 #\n\n查看已经配置的远程仓库服务器:\n```\ngit remote -v\n```\n\n添加远程 Git 仓库:\n```\ngit remote add <shortname> <url>\n```\n\n抓取：从远程仓库中获得数据,放到本地仓库：\n```\ngit fetch [remote-name]\n```\n\n拉取：从远程仓库中获得数据，然后合并到当前分支：\n```\ngit pull\n```\n\n## Push existing project to github ##\n\n1. Create new repo in github called : hexoBlog\n2. git bash\n```bash\n$ git init\n$ git add --all\n$ git commit\n$ git remote add origin https://github.com/Ryanluoxu/hexoBlog.git\n$ git push\n$ git status\n```\n4. there is one folder always in `untracked` mode. \n```\nmodified:   next (modified content, untracked content)\n```\n5. realised `next` is cloned from github. Itself contains a .git folder.\n6. remove `next` local git repo.\n```bash\n$ cd theme/next/\n$ rm -rf .git\n$ cd ../..\n$ git status\n\nnothing to commit, working tree clean\n\n$ git push\n\nfatal: The current branch master has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin master\n\n\n$ git push -u origin master\t\t#org\n\n```\n\n\n## existing project -> remote repo & eclipse ##\n1. create empty remote repo: `myProject`\n2. git bash on `~/workspace`\n3. clone repo\n\t```\n\tgit clone <**/myProject.git>\t# create `~/workspace/myProject`\n\t```\n4. copy existing project files into `~/workspace/myProject`\n5. git push to remote repo\n\t```bash\n\tcd ~/workspace/myProject\n\tgit add --all\n\tgit commit -m \"initial commit\"\n\tgit push\n\t```\t\n6. Add local repo to Eclipse. \n\t- open git repo window\n\t- add local git repo and choose `~/workspace/myProject`\n7. Go to working directory and import existing project\n8. Once code change. \n\t- Right click project\n\t- team - commit - give commit message - commit and push\n\n\n\n","slug":"Git-学习笔记","published":1,"updated":"2020-04-30T09:23:19.527Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedi0000esd5tcswo60un","content":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>学习素材：<a href=\"https://bingohuang.gitbooks.io/progit2/content/02-git-basics/sections/getting-a-repository.html\" target=\"_blank\" rel=\"noopener\">Pro Git</a></p>\n<h1 id=\"常用指令\"><a href=\"#常用指令\" class=\"headerlink\" title=\"常用指令\"></a>常用指令</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add\t\t<span class=\"comment\">#添加到下一次的提交中。</span></span><br><span class=\"line\">git status -s\t<span class=\"comment\">#状态简览</span></span><br><span class=\"line\">git diff --staged\t<span class=\"comment\">##暂存区域 - 本地 Repo</span></span><br><span class=\"line\">git commit -a -m <span class=\"string\">'comment'</span>\t<span class=\"comment\">#跳过git add</span></span><br></pre></td></tr></table></figure>\n\n<p>Git 周期<br>![Git 周期](/images/Git 周期.png)</p>\n<a id=\"more\"></a>\n\n<h1 id=\"Git-基础\"><a href=\"#Git-基础\" class=\"headerlink\" title=\"Git 基础\"></a>Git 基础</h1><h2 id=\"获取-Git-仓库\"><a href=\"#获取-Git-仓库\" class=\"headerlink\" title=\"获取 Git 仓库\"></a>获取 Git 仓库</h2><p>两种方法：</p>\n<ol>\n<li><p>初始现有文件夹    </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n\n<p> 初始后的文件夹里多了一个 .git 的文件夹，这就是本地 repository。</p>\n</li>\n<li><p>克隆已有的 Remote Repository</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/Ryanluoxu/learn_linux.git</span><br></pre></td></tr></table></figure>\n\n<p> 会在当前文件夹里生成 <code>learn_linux</code> 文件夹。里面也有 .git 文件夹作为本地 repository。 Remote repository 里的内容先进入到本地 repository，然后才到 <code>learn_linux</code> 文件夹。</p>\n</li>\n</ol>\n<h2 id=\"提交文件\"><a href=\"#提交文件\" class=\"headerlink\" title=\"提交文件\"></a>提交文件</h2><h3 id=\"文件的三种状态\"><a href=\"#文件的三种状态\" class=\"headerlink\" title=\"文件的三种状态\"></a>文件的三种状态</h3><ul>\n<li>已修改 modified ： 对某个文件进行修改，保存完成。</li>\n<li>已暂存 staged ： 执行 <code>git add</code> 之后</li>\n<li>已提交 committed ： 执行 <code>git commit</code> 之后</li>\n</ul>\n<p>这里的提交目的地，是本地 repository。<br>常用的 github 为 remote repository。<br>如果需要将本地 repository 同步到 github 上，需要执行 <code>git push</code>。    </p>\n<p>所以对本地文件进行修改，到同步到 github，基本流程如下：   </p>\n<p><img src=\"/images/%E6%9C%AC%E5%9C%B0%E4%BF%AE%E6%94%B9-github%E7%9A%84%E6%B5%81%E7%A8%8B%E5%9B%BE.jpg\" alt=\"本地修改-github的流程图\"></p>\n<h3 id=\"git-status\"><a href=\"#git-status\" class=\"headerlink\" title=\"git status\"></a>git status</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br><span class=\"line\">git status -s\t#状态简览</span><br></pre></td></tr></table></figure>\n\n<p>举例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> M README\t\t\t<span class=\"comment\">#文件被修改了但是还没放入暂存区</span></span><br><span class=\"line\">MM Rakefile\t\t\t<span class=\"comment\">#文件被修改，放入了暂存区之后。该文件又被修改。</span></span><br><span class=\"line\">A  lib\t\t\t\t<span class=\"comment\">#新添加到暂存区中的文件</span></span><br><span class=\"line\">M  simple.txt\t\t<span class=\"comment\">#文件被修改了并放入了暂存区</span></span><br><span class=\"line\">?? LICENSE.txt\t\t<span class=\"comment\">#新添加的未跟踪文件</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"git-ignore\"><a href=\"#git-ignore\" class=\"headerlink\" title=\"git ignore\"></a>git ignore</h3><p>创建一个名为 <code>.gitignore</code> 的文件，列出要忽略的文件模式。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># no .a files</span></span><br><span class=\"line\">*.a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># but do track lib.a, even though you're ignoring .a files above</span></span><br><span class=\"line\">!lib.a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># only ignore the TODO file in the current directory, not subdir/TODO</span></span><br><span class=\"line\">/TODO</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ignore all files in the build/ directory</span></span><br><span class=\"line\">build/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ignore doc/notes.txt, but not doc/server/arch.txt</span></span><br><span class=\"line\">doc/*.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ignore all .pdf files in the doc/ directory</span></span><br><span class=\"line\">doc/**/*.pdf</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"git-diff\"><a href=\"#git-diff\" class=\"headerlink\" title=\"git diff\"></a>git diff</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff\t\t\t<span class=\"comment\">#本地文件 - 暂存区域</span></span><br><span class=\"line\">git diff --staged\t<span class=\"comment\">#暂存区域 - 本地 Repo</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"git-commit\"><a href=\"#git-commit\" class=\"headerlink\" title=\"git commit\"></a>git commit</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">\"Story 182: Fix benchmarks for speed\"</span></span><br></pre></td></tr></table></figure>\n\n<p>跳过 <code>git add</code>， 把所有跟踪下的文件暂存，然后提交。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -a -m <span class=\"string\">'added new benchmarks'</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h1><p>查看已经配置的远程仓库服务器:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n\n<p>添加远程 Git 仓库:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add &lt;shortname&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure>\n\n<p>抓取：从远程仓库中获得数据,放到本地仓库：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch [remote-name]</span><br></pre></td></tr></table></figure>\n\n<p>拉取：从远程仓库中获得数据，然后合并到当前分支：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Push-existing-project-to-github\"><a href=\"#Push-existing-project-to-github\" class=\"headerlink\" title=\"Push existing project to github\"></a>Push existing project to github</h2><ol>\n<li><p>Create new repo in github called : hexoBlog</p>\n</li>\n<li><p>git bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git init</span><br><span class=\"line\">$ git add --all</span><br><span class=\"line\">$ git commit</span><br><span class=\"line\">$ git remote add origin https://github.com/Ryanluoxu/hexoBlog.git</span><br><span class=\"line\">$ git push</span><br><span class=\"line\">$ git status</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>there is one folder always in <code>untracked</code> mode. </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">modified:   next (modified content, untracked content)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>realised <code>next</code> is cloned from github. Itself contains a .git folder.</p>\n</li>\n<li><p>remove <code>next</code> local git repo.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> theme/next/</span><br><span class=\"line\">$ rm -rf .git</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> ../..</span><br><span class=\"line\">$ git status</span><br><span class=\"line\"></span><br><span class=\"line\">nothing to commit, working tree clean</span><br><span class=\"line\"></span><br><span class=\"line\">$ git push</span><br><span class=\"line\"></span><br><span class=\"line\">fatal: The current branch master has no upstream branch.</span><br><span class=\"line\">To push the current branch and <span class=\"built_in\">set</span> the remote as upstream, use</span><br><span class=\"line\"></span><br><span class=\"line\">    git push --<span class=\"built_in\">set</span>-upstream origin master</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">$ git push -u origin master\t\t<span class=\"comment\">#org</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"existing-project-gt-remote-repo-amp-eclipse\"><a href=\"#existing-project-gt-remote-repo-amp-eclipse\" class=\"headerlink\" title=\"existing project -&gt; remote repo &amp; eclipse\"></a>existing project -&gt; remote repo &amp; eclipse</h2><ol>\n<li><p>create empty remote repo: <code>myProject</code></p>\n</li>\n<li><p>git bash on <code>~/workspace</code></p>\n</li>\n<li><p>clone repo</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone &lt;**/myProject.git&gt;\t# create `~/workspace/myProject`</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>copy existing project files into <code>~/workspace/myProject</code></p>\n</li>\n<li><p>git push to remote repo</p>\n<pre><code class=\"bash\"><span class=\"built_in\">cd</span> ~/workspace/myProject\ngit add --all\ngit commit -m <span class=\"string\">\"initial commit\"</span>\ngit push</code></pre>\n</li>\n<li><p>Add local repo to Eclipse. </p>\n<ul>\n<li>open git repo window</li>\n<li>add local git repo and choose <code>~/workspace/myProject</code></li>\n</ul>\n</li>\n<li><p>Go to working directory and import existing project</p>\n</li>\n<li><p>Once code change. </p>\n<ul>\n<li>Right click project</li>\n<li>team - commit - give commit message - commit and push</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>学习素材：<a href=\"https://bingohuang.gitbooks.io/progit2/content/02-git-basics/sections/getting-a-repository.html\" target=\"_blank\" rel=\"noopener\">Pro Git</a></p>\n<h1 id=\"常用指令\"><a href=\"#常用指令\" class=\"headerlink\" title=\"常用指令\"></a>常用指令</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add\t\t<span class=\"comment\">#添加到下一次的提交中。</span></span><br><span class=\"line\">git status -s\t<span class=\"comment\">#状态简览</span></span><br><span class=\"line\">git diff --staged\t<span class=\"comment\">##暂存区域 - 本地 Repo</span></span><br><span class=\"line\">git commit -a -m <span class=\"string\">'comment'</span>\t<span class=\"comment\">#跳过git add</span></span><br></pre></td></tr></table></figure>\n\n<p>Git 周期<br>![Git 周期](/images/Git 周期.png)</p>","more":"<h1 id=\"Git-基础\"><a href=\"#Git-基础\" class=\"headerlink\" title=\"Git 基础\"></a>Git 基础</h1><h2 id=\"获取-Git-仓库\"><a href=\"#获取-Git-仓库\" class=\"headerlink\" title=\"获取 Git 仓库\"></a>获取 Git 仓库</h2><p>两种方法：</p>\n<ol>\n<li><p>初始现有文件夹    </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n\n<p> 初始后的文件夹里多了一个 .git 的文件夹，这就是本地 repository。</p>\n</li>\n<li><p>克隆已有的 Remote Repository</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/Ryanluoxu/learn_linux.git</span><br></pre></td></tr></table></figure>\n\n<p> 会在当前文件夹里生成 <code>learn_linux</code> 文件夹。里面也有 .git 文件夹作为本地 repository。 Remote repository 里的内容先进入到本地 repository，然后才到 <code>learn_linux</code> 文件夹。</p>\n</li>\n</ol>\n<h2 id=\"提交文件\"><a href=\"#提交文件\" class=\"headerlink\" title=\"提交文件\"></a>提交文件</h2><h3 id=\"文件的三种状态\"><a href=\"#文件的三种状态\" class=\"headerlink\" title=\"文件的三种状态\"></a>文件的三种状态</h3><ul>\n<li>已修改 modified ： 对某个文件进行修改，保存完成。</li>\n<li>已暂存 staged ： 执行 <code>git add</code> 之后</li>\n<li>已提交 committed ： 执行 <code>git commit</code> 之后</li>\n</ul>\n<p>这里的提交目的地，是本地 repository。<br>常用的 github 为 remote repository。<br>如果需要将本地 repository 同步到 github 上，需要执行 <code>git push</code>。    </p>\n<p>所以对本地文件进行修改，到同步到 github，基本流程如下：   </p>\n<p><img src=\"/images/%E6%9C%AC%E5%9C%B0%E4%BF%AE%E6%94%B9-github%E7%9A%84%E6%B5%81%E7%A8%8B%E5%9B%BE.jpg\" alt=\"本地修改-github的流程图\"></p>\n<h3 id=\"git-status\"><a href=\"#git-status\" class=\"headerlink\" title=\"git status\"></a>git status</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br><span class=\"line\">git status -s\t#状态简览</span><br></pre></td></tr></table></figure>\n\n<p>举例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> M README\t\t\t<span class=\"comment\">#文件被修改了但是还没放入暂存区</span></span><br><span class=\"line\">MM Rakefile\t\t\t<span class=\"comment\">#文件被修改，放入了暂存区之后。该文件又被修改。</span></span><br><span class=\"line\">A  lib\t\t\t\t<span class=\"comment\">#新添加到暂存区中的文件</span></span><br><span class=\"line\">M  simple.txt\t\t<span class=\"comment\">#文件被修改了并放入了暂存区</span></span><br><span class=\"line\">?? LICENSE.txt\t\t<span class=\"comment\">#新添加的未跟踪文件</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"git-ignore\"><a href=\"#git-ignore\" class=\"headerlink\" title=\"git ignore\"></a>git ignore</h3><p>创建一个名为 <code>.gitignore</code> 的文件，列出要忽略的文件模式。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># no .a files</span></span><br><span class=\"line\">*.a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># but do track lib.a, even though you're ignoring .a files above</span></span><br><span class=\"line\">!lib.a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># only ignore the TODO file in the current directory, not subdir/TODO</span></span><br><span class=\"line\">/TODO</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ignore all files in the build/ directory</span></span><br><span class=\"line\">build/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ignore doc/notes.txt, but not doc/server/arch.txt</span></span><br><span class=\"line\">doc/*.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ignore all .pdf files in the doc/ directory</span></span><br><span class=\"line\">doc/**/*.pdf</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"git-diff\"><a href=\"#git-diff\" class=\"headerlink\" title=\"git diff\"></a>git diff</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff\t\t\t<span class=\"comment\">#本地文件 - 暂存区域</span></span><br><span class=\"line\">git diff --staged\t<span class=\"comment\">#暂存区域 - 本地 Repo</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"git-commit\"><a href=\"#git-commit\" class=\"headerlink\" title=\"git commit\"></a>git commit</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">\"Story 182: Fix benchmarks for speed\"</span></span><br></pre></td></tr></table></figure>\n\n<p>跳过 <code>git add</code>， 把所有跟踪下的文件暂存，然后提交。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -a -m <span class=\"string\">'added new benchmarks'</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h1><p>查看已经配置的远程仓库服务器:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n\n<p>添加远程 Git 仓库:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add &lt;shortname&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure>\n\n<p>抓取：从远程仓库中获得数据,放到本地仓库：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch [remote-name]</span><br></pre></td></tr></table></figure>\n\n<p>拉取：从远程仓库中获得数据，然后合并到当前分支：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Push-existing-project-to-github\"><a href=\"#Push-existing-project-to-github\" class=\"headerlink\" title=\"Push existing project to github\"></a>Push existing project to github</h2><ol>\n<li><p>Create new repo in github called : hexoBlog</p>\n</li>\n<li><p>git bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git init</span><br><span class=\"line\">$ git add --all</span><br><span class=\"line\">$ git commit</span><br><span class=\"line\">$ git remote add origin https://github.com/Ryanluoxu/hexoBlog.git</span><br><span class=\"line\">$ git push</span><br><span class=\"line\">$ git status</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>there is one folder always in <code>untracked</code> mode. </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">modified:   next (modified content, untracked content)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>realised <code>next</code> is cloned from github. Itself contains a .git folder.</p>\n</li>\n<li><p>remove <code>next</code> local git repo.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> theme/next/</span><br><span class=\"line\">$ rm -rf .git</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> ../..</span><br><span class=\"line\">$ git status</span><br><span class=\"line\"></span><br><span class=\"line\">nothing to commit, working tree clean</span><br><span class=\"line\"></span><br><span class=\"line\">$ git push</span><br><span class=\"line\"></span><br><span class=\"line\">fatal: The current branch master has no upstream branch.</span><br><span class=\"line\">To push the current branch and <span class=\"built_in\">set</span> the remote as upstream, use</span><br><span class=\"line\"></span><br><span class=\"line\">    git push --<span class=\"built_in\">set</span>-upstream origin master</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">$ git push -u origin master\t\t<span class=\"comment\">#org</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"existing-project-gt-remote-repo-amp-eclipse\"><a href=\"#existing-project-gt-remote-repo-amp-eclipse\" class=\"headerlink\" title=\"existing project -&gt; remote repo &amp; eclipse\"></a>existing project -&gt; remote repo &amp; eclipse</h2><ol>\n<li><p>create empty remote repo: <code>myProject</code></p>\n</li>\n<li><p>git bash on <code>~/workspace</code></p>\n</li>\n<li><p>clone repo</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone &lt;**/myProject.git&gt;\t# create `~/workspace/myProject`</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>copy existing project files into <code>~/workspace/myProject</code></p>\n</li>\n<li><p>git push to remote repo</p>\n<pre><code class=\"bash\"><span class=\"built_in\">cd</span> ~/workspace/myProject\ngit add --all\ngit commit -m <span class=\"string\">\"initial commit\"</span>\ngit push</code></pre>\n</li>\n<li><p>Add local repo to Eclipse. </p>\n<ul>\n<li>open git repo window</li>\n<li>add local git repo and choose <code>~/workspace/myProject</code></li>\n</ul>\n</li>\n<li><p>Go to working directory and import existing project</p>\n</li>\n<li><p>Once code change. </p>\n<ul>\n<li>Right click project</li>\n<li>team - commit - give commit message - commit and push</li>\n</ul>\n</li>\n</ol>"},{"title":"Github Learning","date":"2017-12-07T06:45:54.000Z","_content":"\n## Switching remote URLs between SSH and HTTPS\nCheck existing remote:\n- If SSH:\n```bash\n$ git remote -v\norigin  git@github.com:USERNAME/REPOSITORY.git (fetch)\norigin  git@github.com:USERNAME/REPOSITORY.git (push)\n```\n- If HTTPS:\n```bash\n$ git remote -v\norigin  https://github.com/USERNAME/REPOSITORY.git (fetch)\norigin  https://github.com/USERNAME/REPOSITORY.git (push)\n```\n<!--more-->\nChange your remote's URL from SSH to HTTPS\n```bash\n$ git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\n```\nChange your remote's URL from HTTPS to SSH \n```bash\n$ git remote set-url origin git@github.com:USERNAME/REPOSITORY.git\n```\nReference: https://help.github.com/articles/changing-a-remote-s-url/\n\n## git push without entering username & password\n\n### HTTPS\nFor the repo which is cloned from GitHub using HTTPS, use a credential helper to remember username and password.\n\nWith Git for Windows, run the following commands to store credentials:\n```bash\ngit config --global credential.helper wincred\n```\n\n### SSH\nFor the repo which is cloned from GitHub using SSH, use SSH keys. -> [Generating an SSH Key](https://help.github.com/articles/generating-an-ssh-key)\n\nReference:[Caching your GitHub password in Git](https://help.github.com/articles/caching-your-github-password-in-git/#platform-windows)\n","source":"_posts/Github-Learning.md","raw":"---\ntitle: Github Learning\ndate: 2017-12-07 14:45:54\ncategories: Git\ntags: [github, git, notes]\n---\n\n## Switching remote URLs between SSH and HTTPS\nCheck existing remote:\n- If SSH:\n```bash\n$ git remote -v\norigin  git@github.com:USERNAME/REPOSITORY.git (fetch)\norigin  git@github.com:USERNAME/REPOSITORY.git (push)\n```\n- If HTTPS:\n```bash\n$ git remote -v\norigin  https://github.com/USERNAME/REPOSITORY.git (fetch)\norigin  https://github.com/USERNAME/REPOSITORY.git (push)\n```\n<!--more-->\nChange your remote's URL from SSH to HTTPS\n```bash\n$ git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\n```\nChange your remote's URL from HTTPS to SSH \n```bash\n$ git remote set-url origin git@github.com:USERNAME/REPOSITORY.git\n```\nReference: https://help.github.com/articles/changing-a-remote-s-url/\n\n## git push without entering username & password\n\n### HTTPS\nFor the repo which is cloned from GitHub using HTTPS, use a credential helper to remember username and password.\n\nWith Git for Windows, run the following commands to store credentials:\n```bash\ngit config --global credential.helper wincred\n```\n\n### SSH\nFor the repo which is cloned from GitHub using SSH, use SSH keys. -> [Generating an SSH Key](https://help.github.com/articles/generating-an-ssh-key)\n\nReference:[Caching your GitHub password in Git](https://help.github.com/articles/caching-your-github-password-in-git/#platform-windows)\n","slug":"Github-Learning","published":1,"updated":"2020-04-30T09:23:19.527Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedi1000fsd5tygabt8dm","content":"<h2 id=\"Switching-remote-URLs-between-SSH-and-HTTPS\"><a href=\"#Switching-remote-URLs-between-SSH-and-HTTPS\" class=\"headerlink\" title=\"Switching remote URLs between SSH and HTTPS\"></a>Switching remote URLs between SSH and HTTPS</h2><p>Check existing remote:</p>\n<ul>\n<li><p>If SSH:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote -v</span><br><span class=\"line\">origin  git@github.com:USERNAME/REPOSITORY.git (fetch)</span><br><span class=\"line\">origin  git@github.com:USERNAME/REPOSITORY.git (push)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>If HTTPS:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote -v</span><br><span class=\"line\">origin  https://github.com/USERNAME/REPOSITORY.git (fetch)</span><br><span class=\"line\">origin  https://github.com/USERNAME/REPOSITORY.git (push)</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<a id=\"more\"></a>\n<p>Change your remote’s URL from SSH to HTTPS</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote <span class=\"built_in\">set</span>-url origin https://github.com/USERNAME/REPOSITORY.git</span><br></pre></td></tr></table></figure>\n\n<p>Change your remote’s URL from HTTPS to SSH </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote <span class=\"built_in\">set</span>-url origin git@github.com:USERNAME/REPOSITORY.git</span><br></pre></td></tr></table></figure>\n\n<p>Reference: <a href=\"https://help.github.com/articles/changing-a-remote-s-url/\" target=\"_blank\" rel=\"noopener\">https://help.github.com/articles/changing-a-remote-s-url/</a></p>\n<h2 id=\"git-push-without-entering-username-amp-password\"><a href=\"#git-push-without-entering-username-amp-password\" class=\"headerlink\" title=\"git push without entering username &amp; password\"></a>git push without entering username &amp; password</h2><h3 id=\"HTTPS\"><a href=\"#HTTPS\" class=\"headerlink\" title=\"HTTPS\"></a>HTTPS</h3><p>For the repo which is cloned from GitHub using HTTPS, use a credential helper to remember username and password.</p>\n<p>With Git for Windows, run the following commands to store credentials:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global credential.helper wincred</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"SSH\"><a href=\"#SSH\" class=\"headerlink\" title=\"SSH\"></a>SSH</h3><p>For the repo which is cloned from GitHub using SSH, use SSH keys. -&gt; <a href=\"https://help.github.com/articles/generating-an-ssh-key\" target=\"_blank\" rel=\"noopener\">Generating an SSH Key</a></p>\n<p>Reference:<a href=\"https://help.github.com/articles/caching-your-github-password-in-git/#platform-windows\" target=\"_blank\" rel=\"noopener\">Caching your GitHub password in Git</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"Switching-remote-URLs-between-SSH-and-HTTPS\"><a href=\"#Switching-remote-URLs-between-SSH-and-HTTPS\" class=\"headerlink\" title=\"Switching remote URLs between SSH and HTTPS\"></a>Switching remote URLs between SSH and HTTPS</h2><p>Check existing remote:</p>\n<ul>\n<li><p>If SSH:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote -v</span><br><span class=\"line\">origin  git@github.com:USERNAME/REPOSITORY.git (fetch)</span><br><span class=\"line\">origin  git@github.com:USERNAME/REPOSITORY.git (push)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>If HTTPS:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote -v</span><br><span class=\"line\">origin  https://github.com/USERNAME/REPOSITORY.git (fetch)</span><br><span class=\"line\">origin  https://github.com/USERNAME/REPOSITORY.git (push)</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>","more":"<p>Change your remote’s URL from SSH to HTTPS</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote <span class=\"built_in\">set</span>-url origin https://github.com/USERNAME/REPOSITORY.git</span><br></pre></td></tr></table></figure>\n\n<p>Change your remote’s URL from HTTPS to SSH </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote <span class=\"built_in\">set</span>-url origin git@github.com:USERNAME/REPOSITORY.git</span><br></pre></td></tr></table></figure>\n\n<p>Reference: <a href=\"https://help.github.com/articles/changing-a-remote-s-url/\" target=\"_blank\" rel=\"noopener\">https://help.github.com/articles/changing-a-remote-s-url/</a></p>\n<h2 id=\"git-push-without-entering-username-amp-password\"><a href=\"#git-push-without-entering-username-amp-password\" class=\"headerlink\" title=\"git push without entering username &amp; password\"></a>git push without entering username &amp; password</h2><h3 id=\"HTTPS\"><a href=\"#HTTPS\" class=\"headerlink\" title=\"HTTPS\"></a>HTTPS</h3><p>For the repo which is cloned from GitHub using HTTPS, use a credential helper to remember username and password.</p>\n<p>With Git for Windows, run the following commands to store credentials:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global credential.helper wincred</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"SSH\"><a href=\"#SSH\" class=\"headerlink\" title=\"SSH\"></a>SSH</h3><p>For the repo which is cloned from GitHub using SSH, use SSH keys. -&gt; <a href=\"https://help.github.com/articles/generating-an-ssh-key\" target=\"_blank\" rel=\"noopener\">Generating an SSH Key</a></p>\n<p>Reference:<a href=\"https://help.github.com/articles/caching-your-github-password-in-git/#platform-windows\" target=\"_blank\" rel=\"noopener\">Caching your GitHub password in Git</a></p>"},{"title":"Hexo-Next 添加 Gitment 评论系统","date":"2017-11-27T15:05:32.000Z","_content":"\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n网上关于添加 Gitment 的博客不少，但是互相有些出入。\n由于 Next 更新，Gitment 已经预置了，所以不需要自己再添加代码。\n这里分享我自己的设置经过，参考的文章在文末。\n\n## 注册 OAuth Application ##\n\n1. 登录 Github。\n2. 前往 https://github.com/settings/profile\n3. 点击左侧下方的 ` Developer settings` \n4. 点击绿色 `Register a new application`\n5. 填写以下内容：\n\t```\n\tApplication name：Gitment\n\tHomepage URL：https://ryanluoxu.github.io/\n\tApplication description：Blog comment system\n\tAuthorization callback URL：https://ryanluoxu.github.io/\n\t```\n6. 点击 `Register application`\n7. 得到：\n\t```\n\tClient ID:\n\tClient Secret:\n\t```\n<!--more-->\n## 创建存放 gitment-comments 的 repository ##\n\n1. 创建 repository。 Repository name 为 gitment-comments\n2. 地址：https://github.com/Ryanluoxu/gitment-comments.git\n3. 但是稍后填的是 `gitment-comments`，不是地址。\n\n## 添加 Gitment 到博客 ##\n\n1. 打开 D:\\blog\\themes\\next\\_config.yml\n2. 找到 `Gitment`\n3. 如下修改：\n```\ngitment:\n  enable: true\n  mint: true \t\t# RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway\n  count: true \t\t# Show comments count in post meta area\n  lazy: false \t\t# Comments lazy loading with a button\n  cleanly: false \t# Hide 'Powered by ...' on footer, and more\n  language: \t\t# Force language, or auto switch by theme\n  github_user: ryanluoxu \t# 此处 - Your Github ID\n  github_repo: gitment-comments # 此处注意 - The repo you use to store Gitment comments\n  client_id: xxxxxxxxxxxxxxxxxx # 此处 - Github client id for the Gitment\n  client_secret: xxxxxxxxxxxxx # 此处 - Github access secret token for the Gitment\n  proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect\n  redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled\n\n```\n4. 之后生成并且部署才会生效，本地有时没有效果 \n```\nhexo g -d\n``` \n\t部署之后，有可能碰到 `Not Found Error`，先不要着急，等一段时间再看看。\n5. 之后文章底部会出现 `初始化本文的评论页`，点击初始化。\n\n## 参考 ##\n\n[Gitment：使用 GitHub Issues 搭建评论系统](https://imsun.net/posts/gitment-introduction/)\n[hexo next主题集成gitment评论系统](http://yangq.me/post/ab9bb85a.html)\n[Hexo Next 主题博客添加gitment评论功能](https://icessun.github.io/Hexo-Next-%E4%B8%BB%E9%A2%98%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0gitment%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD.html)\n[为 hexo NexT 添加 Gitment 评论插件](https://meesong.github.io/StaticBlog/2017/NexT+Gitment/)\n","source":"_posts/Hexo-Next-添加-Gitment-评论系统.md","raw":"---\ntitle: Hexo-Next 添加 Gitment 评论系统\ndate: 2017-11-27 23:05:32\ncategories: 搭建博客\ntags: [Hexo, Next, 博客, 主题优化, 评论, Gitment]\n---\n\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n网上关于添加 Gitment 的博客不少，但是互相有些出入。\n由于 Next 更新，Gitment 已经预置了，所以不需要自己再添加代码。\n这里分享我自己的设置经过，参考的文章在文末。\n\n## 注册 OAuth Application ##\n\n1. 登录 Github。\n2. 前往 https://github.com/settings/profile\n3. 点击左侧下方的 ` Developer settings` \n4. 点击绿色 `Register a new application`\n5. 填写以下内容：\n\t```\n\tApplication name：Gitment\n\tHomepage URL：https://ryanluoxu.github.io/\n\tApplication description：Blog comment system\n\tAuthorization callback URL：https://ryanluoxu.github.io/\n\t```\n6. 点击 `Register application`\n7. 得到：\n\t```\n\tClient ID:\n\tClient Secret:\n\t```\n<!--more-->\n## 创建存放 gitment-comments 的 repository ##\n\n1. 创建 repository。 Repository name 为 gitment-comments\n2. 地址：https://github.com/Ryanluoxu/gitment-comments.git\n3. 但是稍后填的是 `gitment-comments`，不是地址。\n\n## 添加 Gitment 到博客 ##\n\n1. 打开 D:\\blog\\themes\\next\\_config.yml\n2. 找到 `Gitment`\n3. 如下修改：\n```\ngitment:\n  enable: true\n  mint: true \t\t# RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway\n  count: true \t\t# Show comments count in post meta area\n  lazy: false \t\t# Comments lazy loading with a button\n  cleanly: false \t# Hide 'Powered by ...' on footer, and more\n  language: \t\t# Force language, or auto switch by theme\n  github_user: ryanluoxu \t# 此处 - Your Github ID\n  github_repo: gitment-comments # 此处注意 - The repo you use to store Gitment comments\n  client_id: xxxxxxxxxxxxxxxxxx # 此处 - Github client id for the Gitment\n  client_secret: xxxxxxxxxxxxx # 此处 - Github access secret token for the Gitment\n  proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect\n  redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled\n\n```\n4. 之后生成并且部署才会生效，本地有时没有效果 \n```\nhexo g -d\n``` \n\t部署之后，有可能碰到 `Not Found Error`，先不要着急，等一段时间再看看。\n5. 之后文章底部会出现 `初始化本文的评论页`，点击初始化。\n\n## 参考 ##\n\n[Gitment：使用 GitHub Issues 搭建评论系统](https://imsun.net/posts/gitment-introduction/)\n[hexo next主题集成gitment评论系统](http://yangq.me/post/ab9bb85a.html)\n[Hexo Next 主题博客添加gitment评论功能](https://icessun.github.io/Hexo-Next-%E4%B8%BB%E9%A2%98%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0gitment%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD.html)\n[为 hexo NexT 添加 Gitment 评论插件](https://meesong.github.io/StaticBlog/2017/NexT+Gitment/)\n","slug":"Hexo-Next-添加-Gitment-评论系统","published":1,"updated":"2020-04-30T09:23:19.528Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedi2000gsd5tfq3n692s","content":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>网上关于添加 Gitment 的博客不少，但是互相有些出入。<br>由于 Next 更新，Gitment 已经预置了，所以不需要自己再添加代码。<br>这里分享我自己的设置经过，参考的文章在文末。</p>\n<h2 id=\"注册-OAuth-Application\"><a href=\"#注册-OAuth-Application\" class=\"headerlink\" title=\"注册 OAuth Application\"></a>注册 OAuth Application</h2><ol>\n<li><p>登录 Github。</p>\n</li>\n<li><p>前往 <a href=\"https://github.com/settings/profile\" target=\"_blank\" rel=\"noopener\">https://github.com/settings/profile</a></p>\n</li>\n<li><p>点击左侧下方的 <code>Developer settings</code> </p>\n</li>\n<li><p>点击绿色 <code>Register a new application</code></p>\n</li>\n<li><p>填写以下内容：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Application name：Gitment</span><br><span class=\"line\">Homepage URL：https://ryanluoxu.github.io/</span><br><span class=\"line\">Application description：Blog comment system</span><br><span class=\"line\">Authorization callback URL：https://ryanluoxu.github.io/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>点击 <code>Register application</code></p>\n</li>\n<li><p>得到：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client ID:</span><br><span class=\"line\">Client Secret:</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<a id=\"more\"></a>\n<h2 id=\"创建存放-gitment-comments-的-repository\"><a href=\"#创建存放-gitment-comments-的-repository\" class=\"headerlink\" title=\"创建存放 gitment-comments 的 repository\"></a>创建存放 gitment-comments 的 repository</h2><ol>\n<li>创建 repository。 Repository name 为 gitment-comments</li>\n<li>地址：<a href=\"https://github.com/Ryanluoxu/gitment-comments.git\" target=\"_blank\" rel=\"noopener\">https://github.com/Ryanluoxu/gitment-comments.git</a></li>\n<li>但是稍后填的是 <code>gitment-comments</code>，不是地址。</li>\n</ol>\n<h2 id=\"添加-Gitment-到博客\"><a href=\"#添加-Gitment-到博客\" class=\"headerlink\" title=\"添加 Gitment 到博客\"></a>添加 Gitment 到博客</h2><ol>\n<li><p>打开 D:\\blog\\themes\\next_config.yml</p>\n</li>\n<li><p>找到 <code>Gitment</code></p>\n</li>\n<li><p>如下修改：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitment:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  mint: true \t\t# RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway</span><br><span class=\"line\">  count: true \t\t# Show comments count in post meta area</span><br><span class=\"line\">  lazy: false \t\t# Comments lazy loading with a button</span><br><span class=\"line\">  cleanly: false \t# Hide &apos;Powered by ...&apos; on footer, and more</span><br><span class=\"line\">  language: \t\t# Force language, or auto switch by theme</span><br><span class=\"line\">  github_user: ryanluoxu \t# 此处 - Your Github ID</span><br><span class=\"line\">  github_repo: gitment-comments # 此处注意 - The repo you use to store Gitment comments</span><br><span class=\"line\">  client_id: xxxxxxxxxxxxxxxxxx # 此处 - Github client id for the Gitment</span><br><span class=\"line\">  client_secret: xxxxxxxxxxxxx # 此处 - Github access secret token for the Gitment</span><br><span class=\"line\">  proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect</span><br><span class=\"line\">  redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>之后生成并且部署才会生效，本地有时没有效果 </p>\n<pre><code>hexo g -d</code></pre><p> 部署之后，有可能碰到 <code>Not Found Error</code>，先不要着急，等一段时间再看看。</p>\n</li>\n<li><p>之后文章底部会出现 <code>初始化本文的评论页</code>，点击初始化。</p>\n</li>\n</ol>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://imsun.net/posts/gitment-introduction/\" target=\"_blank\" rel=\"noopener\">Gitment：使用 GitHub Issues 搭建评论系统</a><br><a href=\"http://yangq.me/post/ab9bb85a.html\" target=\"_blank\" rel=\"noopener\">hexo next主题集成gitment评论系统</a><br><a href=\"https://icessun.github.io/Hexo-Next-%E4%B8%BB%E9%A2%98%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0gitment%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD.html\" target=\"_blank\" rel=\"noopener\">Hexo Next 主题博客添加gitment评论功能</a><br><a href=\"https://meesong.github.io/StaticBlog/2017/NexT+Gitment/\" target=\"_blank\" rel=\"noopener\">为 hexo NexT 添加 Gitment 评论插件</a></p>\n","site":{"data":{}},"excerpt":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>网上关于添加 Gitment 的博客不少，但是互相有些出入。<br>由于 Next 更新，Gitment 已经预置了，所以不需要自己再添加代码。<br>这里分享我自己的设置经过，参考的文章在文末。</p>\n<h2 id=\"注册-OAuth-Application\"><a href=\"#注册-OAuth-Application\" class=\"headerlink\" title=\"注册 OAuth Application\"></a>注册 OAuth Application</h2><ol>\n<li><p>登录 Github。</p>\n</li>\n<li><p>前往 <a href=\"https://github.com/settings/profile\" target=\"_blank\" rel=\"noopener\">https://github.com/settings/profile</a></p>\n</li>\n<li><p>点击左侧下方的 <code>Developer settings</code> </p>\n</li>\n<li><p>点击绿色 <code>Register a new application</code></p>\n</li>\n<li><p>填写以下内容：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Application name：Gitment</span><br><span class=\"line\">Homepage URL：https://ryanluoxu.github.io/</span><br><span class=\"line\">Application description：Blog comment system</span><br><span class=\"line\">Authorization callback URL：https://ryanluoxu.github.io/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>点击 <code>Register application</code></p>\n</li>\n<li><p>得到：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client ID:</span><br><span class=\"line\">Client Secret:</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>","more":"<h2 id=\"创建存放-gitment-comments-的-repository\"><a href=\"#创建存放-gitment-comments-的-repository\" class=\"headerlink\" title=\"创建存放 gitment-comments 的 repository\"></a>创建存放 gitment-comments 的 repository</h2><ol>\n<li>创建 repository。 Repository name 为 gitment-comments</li>\n<li>地址：<a href=\"https://github.com/Ryanluoxu/gitment-comments.git\" target=\"_blank\" rel=\"noopener\">https://github.com/Ryanluoxu/gitment-comments.git</a></li>\n<li>但是稍后填的是 <code>gitment-comments</code>，不是地址。</li>\n</ol>\n<h2 id=\"添加-Gitment-到博客\"><a href=\"#添加-Gitment-到博客\" class=\"headerlink\" title=\"添加 Gitment 到博客\"></a>添加 Gitment 到博客</h2><ol>\n<li><p>打开 D:\\blog\\themes\\next_config.yml</p>\n</li>\n<li><p>找到 <code>Gitment</code></p>\n</li>\n<li><p>如下修改：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitment:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  mint: true \t\t# RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway</span><br><span class=\"line\">  count: true \t\t# Show comments count in post meta area</span><br><span class=\"line\">  lazy: false \t\t# Comments lazy loading with a button</span><br><span class=\"line\">  cleanly: false \t# Hide &apos;Powered by ...&apos; on footer, and more</span><br><span class=\"line\">  language: \t\t# Force language, or auto switch by theme</span><br><span class=\"line\">  github_user: ryanluoxu \t# 此处 - Your Github ID</span><br><span class=\"line\">  github_repo: gitment-comments # 此处注意 - The repo you use to store Gitment comments</span><br><span class=\"line\">  client_id: xxxxxxxxxxxxxxxxxx # 此处 - Github client id for the Gitment</span><br><span class=\"line\">  client_secret: xxxxxxxxxxxxx # 此处 - Github access secret token for the Gitment</span><br><span class=\"line\">  proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect</span><br><span class=\"line\">  redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>之后生成并且部署才会生效，本地有时没有效果 </p>\n<pre><code>hexo g -d</code></pre><p> 部署之后，有可能碰到 <code>Not Found Error</code>，先不要着急，等一段时间再看看。</p>\n</li>\n<li><p>之后文章底部会出现 <code>初始化本文的评论页</code>，点击初始化。</p>\n</li>\n</ol>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://imsun.net/posts/gitment-introduction/\" target=\"_blank\" rel=\"noopener\">Gitment：使用 GitHub Issues 搭建评论系统</a><br><a href=\"http://yangq.me/post/ab9bb85a.html\" target=\"_blank\" rel=\"noopener\">hexo next主题集成gitment评论系统</a><br><a href=\"https://icessun.github.io/Hexo-Next-%E4%B8%BB%E9%A2%98%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0gitment%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD.html\" target=\"_blank\" rel=\"noopener\">Hexo Next 主题博客添加gitment评论功能</a><br><a href=\"https://meesong.github.io/StaticBlog/2017/NexT+Gitment/\" target=\"_blank\" rel=\"noopener\">为 hexo NexT 添加 Gitment 评论插件</a></p>"},{"title":"IO Stream","date":"2019-04-14T14:10:47.000Z","_content":"\n# Bsic\n\n## Summary\n![IO-stream](/images/IO-stream.jpg)\n\n<!--more-->\n\n## Example\n### Read Fie\n```java\nprivate static void readFile() throws FileNotFoundException, IOException {\n\tString filePath = \"C:/Users/luoxu/Documents/temp.md\";\n\tBufferedReader reader = new BufferedReader(new FileReader(new File(filePath)));\n\tString currentLine;\n\twhile ((currentLine = reader.readLine())!=null) {\n\t\tSystem.out.println(currentLine);\n\t}\n\treader.close();\n}\n```\n\n### Write File\n```\nprivate static void writeFile() throws IOException {\n\tString filePath = \"C:/Users/luoxu/Documents/temp.md\";\n\tBufferedWriter writer = new BufferedWriter(new FileWriter(new File(filePath), true));\n\tString stringAppended = \"Current Time --> \" + (new Date()).toString();\n\twriter.newLine();\n\twriter.append(stringAppended);\n\twriter.flush();\n\twriter.close(); \n}\n```\n\n### Copy File \n```\nprivate static void copyFile() throws FileNotFoundException, IOException {\n\t/**\n\t * copy file\n\t * 1. source and destination\n\t * 2. get in and out stream\n\t * 3. move data from in to out, one buffer by one buffer\n\t * 4. flush\n\t * 5. close stream\n\t */\n\tString srcFile = \"C:/Users/luoxu/Pictures/chloe1.jpg\";\n\tString dstFile = \"C:/Users/luoxu/Pictures/chloe2.jpg\";\n\tBufferedInputStream in = new BufferedInputStream(new FileInputStream(new File(srcFile)));\n\tBufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(new File(dstFile)));\n\tbyte[] buffer = new byte[1024];\n\tint size = 0;\n\twhile(-1!=(size = in.read(buffer))) {\n\t\tSystem.out.println(size);\n\t\tout.write(buffer, 0, size);\n\t}\n\tout.flush();\n\tout.close();\n\tin.close();\n}\n```\n\n# 序列化 - Serialize\n- 序列化：将对象保存到文件或字节数组中\n- 反序列化：将文件或字节数组转化成对象\n\n- implements Serializable\n- transient 的属性不被序列化 \n## Example\n```\npublic class Company implements Serializable{\n\tprivate static final long serialVersionUID = 1L;\n\tprivate String name;\n\tpublic Company(String name) {\n\t\tthis.name = name;\n\t}\n\tpublic String getName() {\n\t\treturn name;\n\t}\n}\n```\n\n```\n/**\n * 将对象序列化 - output\n */\nString objectPath = \"C:/Users/luoxu/Documents/object1\";\nCompany company1 = new Company(\"Google\");\nObjectOutputStream out = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream(new File(objectPath))));\nout.writeObject(company1);\nout.close();\n\n/*\n * \tobject1:\n * \taced 0005 7372 001c 696f 2e72 7961 6e6c\n\t756f 7875 2e6a 6176 6133 3030 2e43 6f6d\n\t7061 6e79 0000 0000 0000 0001 0200 014c\n\t0004 6e61 6d65 7400 124c 6a61 7661 2f6c\n\t616e 672f 5374 7269 6e67 3b78 7074 0006\n\t476f 6f67 6c65 \n * \n */\n\n/**\n * 将文件反序列化成对象 - input\n */\nObjectInputStream in = new ObjectInputStream(new BufferedInputStream(new FileInputStream(new File(objectPath))));\nCompany company2 = (Company) in.readObject();\nin.close();\nSystem.out.println(company2.getName());\t//Google\n```\n\n# 装饰设计模式\n\n设计模式玩的是：类与类的关系\n- 依赖：形参，局部变量\n- 关联：属性\n\t- 聚合：不一致的生命周期\n\t- 组合：一致的生命周期\n- 继承：子类父类\n- 实现：实现接口\n\n## Example\n```\npublic class DecoratorDemo {\n\n\tpublic static void main(String[] args) {\n\t\tSpeaker speaker = new Speaker();\n\t\tAmplifier amplifier = new Amplifier(speaker);\n\t\tspeaker.speak();\n\t\tamplifier.speak();\n\t\t\n\t\t// speak with volume of 10\n\t\t// amplifier speak with volume of 1000\n\t}\n\t\n}\n\n\nclass Speaker {\n\tint volume =  10;\n\tpublic void speak() {\n\t\tSystem.out.println(\"speak with volume of \" + volume);\n\t}\n}\n\nclass Amplifier{\n\tSpeaker speaker;\n\tpublic Amplifier(Speaker speaker) {\n\t\tthis.speaker = speaker;\n\t}\n\tpublic void speak() {\n\t\tSystem.out.println(\"amplifier speak with volume of \" + speaker.volume*100);\n\t}\n}\n```","source":"_posts/IO-Stream.md","raw":"---\ntitle: IO Stream\ndate: 2019-04-14 22:10:47\ncategories: Java\ntags: [Java 300集, IO, copy, 序列化, 装饰设计模式]\n---\n\n# Bsic\n\n## Summary\n![IO-stream](/images/IO-stream.jpg)\n\n<!--more-->\n\n## Example\n### Read Fie\n```java\nprivate static void readFile() throws FileNotFoundException, IOException {\n\tString filePath = \"C:/Users/luoxu/Documents/temp.md\";\n\tBufferedReader reader = new BufferedReader(new FileReader(new File(filePath)));\n\tString currentLine;\n\twhile ((currentLine = reader.readLine())!=null) {\n\t\tSystem.out.println(currentLine);\n\t}\n\treader.close();\n}\n```\n\n### Write File\n```\nprivate static void writeFile() throws IOException {\n\tString filePath = \"C:/Users/luoxu/Documents/temp.md\";\n\tBufferedWriter writer = new BufferedWriter(new FileWriter(new File(filePath), true));\n\tString stringAppended = \"Current Time --> \" + (new Date()).toString();\n\twriter.newLine();\n\twriter.append(stringAppended);\n\twriter.flush();\n\twriter.close(); \n}\n```\n\n### Copy File \n```\nprivate static void copyFile() throws FileNotFoundException, IOException {\n\t/**\n\t * copy file\n\t * 1. source and destination\n\t * 2. get in and out stream\n\t * 3. move data from in to out, one buffer by one buffer\n\t * 4. flush\n\t * 5. close stream\n\t */\n\tString srcFile = \"C:/Users/luoxu/Pictures/chloe1.jpg\";\n\tString dstFile = \"C:/Users/luoxu/Pictures/chloe2.jpg\";\n\tBufferedInputStream in = new BufferedInputStream(new FileInputStream(new File(srcFile)));\n\tBufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(new File(dstFile)));\n\tbyte[] buffer = new byte[1024];\n\tint size = 0;\n\twhile(-1!=(size = in.read(buffer))) {\n\t\tSystem.out.println(size);\n\t\tout.write(buffer, 0, size);\n\t}\n\tout.flush();\n\tout.close();\n\tin.close();\n}\n```\n\n# 序列化 - Serialize\n- 序列化：将对象保存到文件或字节数组中\n- 反序列化：将文件或字节数组转化成对象\n\n- implements Serializable\n- transient 的属性不被序列化 \n## Example\n```\npublic class Company implements Serializable{\n\tprivate static final long serialVersionUID = 1L;\n\tprivate String name;\n\tpublic Company(String name) {\n\t\tthis.name = name;\n\t}\n\tpublic String getName() {\n\t\treturn name;\n\t}\n}\n```\n\n```\n/**\n * 将对象序列化 - output\n */\nString objectPath = \"C:/Users/luoxu/Documents/object1\";\nCompany company1 = new Company(\"Google\");\nObjectOutputStream out = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream(new File(objectPath))));\nout.writeObject(company1);\nout.close();\n\n/*\n * \tobject1:\n * \taced 0005 7372 001c 696f 2e72 7961 6e6c\n\t756f 7875 2e6a 6176 6133 3030 2e43 6f6d\n\t7061 6e79 0000 0000 0000 0001 0200 014c\n\t0004 6e61 6d65 7400 124c 6a61 7661 2f6c\n\t616e 672f 5374 7269 6e67 3b78 7074 0006\n\t476f 6f67 6c65 \n * \n */\n\n/**\n * 将文件反序列化成对象 - input\n */\nObjectInputStream in = new ObjectInputStream(new BufferedInputStream(new FileInputStream(new File(objectPath))));\nCompany company2 = (Company) in.readObject();\nin.close();\nSystem.out.println(company2.getName());\t//Google\n```\n\n# 装饰设计模式\n\n设计模式玩的是：类与类的关系\n- 依赖：形参，局部变量\n- 关联：属性\n\t- 聚合：不一致的生命周期\n\t- 组合：一致的生命周期\n- 继承：子类父类\n- 实现：实现接口\n\n## Example\n```\npublic class DecoratorDemo {\n\n\tpublic static void main(String[] args) {\n\t\tSpeaker speaker = new Speaker();\n\t\tAmplifier amplifier = new Amplifier(speaker);\n\t\tspeaker.speak();\n\t\tamplifier.speak();\n\t\t\n\t\t// speak with volume of 10\n\t\t// amplifier speak with volume of 1000\n\t}\n\t\n}\n\n\nclass Speaker {\n\tint volume =  10;\n\tpublic void speak() {\n\t\tSystem.out.println(\"speak with volume of \" + volume);\n\t}\n}\n\nclass Amplifier{\n\tSpeaker speaker;\n\tpublic Amplifier(Speaker speaker) {\n\t\tthis.speaker = speaker;\n\t}\n\tpublic void speak() {\n\t\tSystem.out.println(\"amplifier speak with volume of \" + speaker.volume*100);\n\t}\n}\n```","slug":"IO-Stream","published":1,"updated":"2020-04-30T09:23:19.528Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedi3000hsd5txgvylkkh","content":"<h1 id=\"Bsic\"><a href=\"#Bsic\" class=\"headerlink\" title=\"Bsic\"></a>Bsic</h1><h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p><img src=\"/images/IO-stream.jpg\" alt=\"IO-stream\"></p>\n<a id=\"more\"></a>\n\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><h3 id=\"Read-Fie\"><a href=\"#Read-Fie\" class=\"headerlink\" title=\"Read Fie\"></a>Read Fie</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">readFile</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> FileNotFoundException, IOException </span>&#123;</span><br><span class=\"line\">\tString filePath = <span class=\"string\">\"C:/Users/luoxu/Documents/temp.md\"</span>;</span><br><span class=\"line\">\tBufferedReader reader = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> FileReader(<span class=\"keyword\">new</span> File(filePath)));</span><br><span class=\"line\">\tString currentLine;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> ((currentLine = reader.readLine())!=<span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\tSystem.out.println(currentLine);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treader.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Write-File\"><a href=\"#Write-File\" class=\"headerlink\" title=\"Write File\"></a>Write File</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private static void writeFile() throws IOException &#123;</span><br><span class=\"line\">\tString filePath = &quot;C:/Users/luoxu/Documents/temp.md&quot;;</span><br><span class=\"line\">\tBufferedWriter writer = new BufferedWriter(new FileWriter(new File(filePath), true));</span><br><span class=\"line\">\tString stringAppended = &quot;Current Time --&gt; &quot; + (new Date()).toString();</span><br><span class=\"line\">\twriter.newLine();</span><br><span class=\"line\">\twriter.append(stringAppended);</span><br><span class=\"line\">\twriter.flush();</span><br><span class=\"line\">\twriter.close(); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Copy-File\"><a href=\"#Copy-File\" class=\"headerlink\" title=\"Copy File\"></a>Copy File</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private static void copyFile() throws FileNotFoundException, IOException &#123;</span><br><span class=\"line\">\t/**</span><br><span class=\"line\">\t * copy file</span><br><span class=\"line\">\t * 1. source and destination</span><br><span class=\"line\">\t * 2. get in and out stream</span><br><span class=\"line\">\t * 3. move data from in to out, one buffer by one buffer</span><br><span class=\"line\">\t * 4. flush</span><br><span class=\"line\">\t * 5. close stream</span><br><span class=\"line\">\t */</span><br><span class=\"line\">\tString srcFile = &quot;C:/Users/luoxu/Pictures/chloe1.jpg&quot;;</span><br><span class=\"line\">\tString dstFile = &quot;C:/Users/luoxu/Pictures/chloe2.jpg&quot;;</span><br><span class=\"line\">\tBufferedInputStream in = new BufferedInputStream(new FileInputStream(new File(srcFile)));</span><br><span class=\"line\">\tBufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(new File(dstFile)));</span><br><span class=\"line\">\tbyte[] buffer = new byte[1024];</span><br><span class=\"line\">\tint size = 0;</span><br><span class=\"line\">\twhile(-1!=(size = in.read(buffer))) &#123;</span><br><span class=\"line\">\t\tSystem.out.println(size);</span><br><span class=\"line\">\t\tout.write(buffer, 0, size);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tout.flush();</span><br><span class=\"line\">\tout.close();</span><br><span class=\"line\">\tin.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"序列化-Serialize\"><a href=\"#序列化-Serialize\" class=\"headerlink\" title=\"序列化 - Serialize\"></a>序列化 - Serialize</h1><ul>\n<li><p>序列化：将对象保存到文件或字节数组中</p>\n</li>\n<li><p>反序列化：将文件或字节数组转化成对象</p>\n</li>\n<li><p>implements Serializable</p>\n</li>\n<li><p>transient 的属性不被序列化 </p>\n<h2 id=\"Example-1\"><a href=\"#Example-1\" class=\"headerlink\" title=\"Example\"></a>Example</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Company implements Serializable&#123;</span><br><span class=\"line\">\tprivate static final long serialVersionUID = 1L;</span><br><span class=\"line\">\tprivate String name;</span><br><span class=\"line\">\tpublic Company(String name) &#123;</span><br><span class=\"line\">\t\tthis.name = name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic String getName() &#123;</span><br><span class=\"line\">\t\treturn name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 将对象序列化 - output</span><br><span class=\"line\"> */</span><br><span class=\"line\">String objectPath = &quot;C:/Users/luoxu/Documents/object1&quot;;</span><br><span class=\"line\">Company company1 = new Company(&quot;Google&quot;);</span><br><span class=\"line\">ObjectOutputStream out = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream(new File(objectPath))));</span><br><span class=\"line\">out.writeObject(company1);</span><br><span class=\"line\">out.close();</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"> * \tobject1:</span><br><span class=\"line\"> * \taced 0005 7372 001c 696f 2e72 7961 6e6c</span><br><span class=\"line\">\t756f 7875 2e6a 6176 6133 3030 2e43 6f6d</span><br><span class=\"line\">\t7061 6e79 0000 0000 0000 0001 0200 014c</span><br><span class=\"line\">\t0004 6e61 6d65 7400 124c 6a61 7661 2f6c</span><br><span class=\"line\">\t616e 672f 5374 7269 6e67 3b78 7074 0006</span><br><span class=\"line\">\t476f 6f67 6c65 </span><br><span class=\"line\"> * </span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 将文件反序列化成对象 - input</span><br><span class=\"line\"> */</span><br><span class=\"line\">ObjectInputStream in = new ObjectInputStream(new BufferedInputStream(new FileInputStream(new File(objectPath))));</span><br><span class=\"line\">Company company2 = (Company) in.readObject();</span><br><span class=\"line\">in.close();</span><br><span class=\"line\">System.out.println(company2.getName());\t//Google</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"装饰设计模式\"><a href=\"#装饰设计模式\" class=\"headerlink\" title=\"装饰设计模式\"></a>装饰设计模式</h1><p>设计模式玩的是：类与类的关系</p>\n<ul>\n<li>依赖：形参，局部变量</li>\n<li>关联：属性<ul>\n<li>聚合：不一致的生命周期</li>\n<li>组合：一致的生命周期</li>\n</ul>\n</li>\n<li>继承：子类父类</li>\n<li>实现：实现接口</li>\n</ul>\n<h2 id=\"Example-2\"><a href=\"#Example-2\" class=\"headerlink\" title=\"Example\"></a>Example</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class DecoratorDemo &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\tSpeaker speaker = new Speaker();</span><br><span class=\"line\">\t\tAmplifier amplifier = new Amplifier(speaker);</span><br><span class=\"line\">\t\tspeaker.speak();</span><br><span class=\"line\">\t\tamplifier.speak();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t// speak with volume of 10</span><br><span class=\"line\">\t\t// amplifier speak with volume of 1000</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Speaker &#123;</span><br><span class=\"line\">\tint volume =  10;</span><br><span class=\"line\">\tpublic void speak() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;speak with volume of &quot; + volume);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Amplifier&#123;</span><br><span class=\"line\">\tSpeaker speaker;</span><br><span class=\"line\">\tpublic Amplifier(Speaker speaker) &#123;</span><br><span class=\"line\">\t\tthis.speaker = speaker;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic void speak() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;amplifier speak with volume of &quot; + speaker.volume*100);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"Bsic\"><a href=\"#Bsic\" class=\"headerlink\" title=\"Bsic\"></a>Bsic</h1><h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p><img src=\"/images/IO-stream.jpg\" alt=\"IO-stream\"></p>","more":"<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><h3 id=\"Read-Fie\"><a href=\"#Read-Fie\" class=\"headerlink\" title=\"Read Fie\"></a>Read Fie</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">readFile</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> FileNotFoundException, IOException </span>&#123;</span><br><span class=\"line\">\tString filePath = <span class=\"string\">\"C:/Users/luoxu/Documents/temp.md\"</span>;</span><br><span class=\"line\">\tBufferedReader reader = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> FileReader(<span class=\"keyword\">new</span> File(filePath)));</span><br><span class=\"line\">\tString currentLine;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> ((currentLine = reader.readLine())!=<span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\tSystem.out.println(currentLine);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treader.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Write-File\"><a href=\"#Write-File\" class=\"headerlink\" title=\"Write File\"></a>Write File</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private static void writeFile() throws IOException &#123;</span><br><span class=\"line\">\tString filePath = &quot;C:/Users/luoxu/Documents/temp.md&quot;;</span><br><span class=\"line\">\tBufferedWriter writer = new BufferedWriter(new FileWriter(new File(filePath), true));</span><br><span class=\"line\">\tString stringAppended = &quot;Current Time --&gt; &quot; + (new Date()).toString();</span><br><span class=\"line\">\twriter.newLine();</span><br><span class=\"line\">\twriter.append(stringAppended);</span><br><span class=\"line\">\twriter.flush();</span><br><span class=\"line\">\twriter.close(); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Copy-File\"><a href=\"#Copy-File\" class=\"headerlink\" title=\"Copy File\"></a>Copy File</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private static void copyFile() throws FileNotFoundException, IOException &#123;</span><br><span class=\"line\">\t/**</span><br><span class=\"line\">\t * copy file</span><br><span class=\"line\">\t * 1. source and destination</span><br><span class=\"line\">\t * 2. get in and out stream</span><br><span class=\"line\">\t * 3. move data from in to out, one buffer by one buffer</span><br><span class=\"line\">\t * 4. flush</span><br><span class=\"line\">\t * 5. close stream</span><br><span class=\"line\">\t */</span><br><span class=\"line\">\tString srcFile = &quot;C:/Users/luoxu/Pictures/chloe1.jpg&quot;;</span><br><span class=\"line\">\tString dstFile = &quot;C:/Users/luoxu/Pictures/chloe2.jpg&quot;;</span><br><span class=\"line\">\tBufferedInputStream in = new BufferedInputStream(new FileInputStream(new File(srcFile)));</span><br><span class=\"line\">\tBufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(new File(dstFile)));</span><br><span class=\"line\">\tbyte[] buffer = new byte[1024];</span><br><span class=\"line\">\tint size = 0;</span><br><span class=\"line\">\twhile(-1!=(size = in.read(buffer))) &#123;</span><br><span class=\"line\">\t\tSystem.out.println(size);</span><br><span class=\"line\">\t\tout.write(buffer, 0, size);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tout.flush();</span><br><span class=\"line\">\tout.close();</span><br><span class=\"line\">\tin.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"序列化-Serialize\"><a href=\"#序列化-Serialize\" class=\"headerlink\" title=\"序列化 - Serialize\"></a>序列化 - Serialize</h1><ul>\n<li><p>序列化：将对象保存到文件或字节数组中</p>\n</li>\n<li><p>反序列化：将文件或字节数组转化成对象</p>\n</li>\n<li><p>implements Serializable</p>\n</li>\n<li><p>transient 的属性不被序列化 </p>\n<h2 id=\"Example-1\"><a href=\"#Example-1\" class=\"headerlink\" title=\"Example\"></a>Example</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Company implements Serializable&#123;</span><br><span class=\"line\">\tprivate static final long serialVersionUID = 1L;</span><br><span class=\"line\">\tprivate String name;</span><br><span class=\"line\">\tpublic Company(String name) &#123;</span><br><span class=\"line\">\t\tthis.name = name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic String getName() &#123;</span><br><span class=\"line\">\t\treturn name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 将对象序列化 - output</span><br><span class=\"line\"> */</span><br><span class=\"line\">String objectPath = &quot;C:/Users/luoxu/Documents/object1&quot;;</span><br><span class=\"line\">Company company1 = new Company(&quot;Google&quot;);</span><br><span class=\"line\">ObjectOutputStream out = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream(new File(objectPath))));</span><br><span class=\"line\">out.writeObject(company1);</span><br><span class=\"line\">out.close();</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"> * \tobject1:</span><br><span class=\"line\"> * \taced 0005 7372 001c 696f 2e72 7961 6e6c</span><br><span class=\"line\">\t756f 7875 2e6a 6176 6133 3030 2e43 6f6d</span><br><span class=\"line\">\t7061 6e79 0000 0000 0000 0001 0200 014c</span><br><span class=\"line\">\t0004 6e61 6d65 7400 124c 6a61 7661 2f6c</span><br><span class=\"line\">\t616e 672f 5374 7269 6e67 3b78 7074 0006</span><br><span class=\"line\">\t476f 6f67 6c65 </span><br><span class=\"line\"> * </span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 将文件反序列化成对象 - input</span><br><span class=\"line\"> */</span><br><span class=\"line\">ObjectInputStream in = new ObjectInputStream(new BufferedInputStream(new FileInputStream(new File(objectPath))));</span><br><span class=\"line\">Company company2 = (Company) in.readObject();</span><br><span class=\"line\">in.close();</span><br><span class=\"line\">System.out.println(company2.getName());\t//Google</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"装饰设计模式\"><a href=\"#装饰设计模式\" class=\"headerlink\" title=\"装饰设计模式\"></a>装饰设计模式</h1><p>设计模式玩的是：类与类的关系</p>\n<ul>\n<li>依赖：形参，局部变量</li>\n<li>关联：属性<ul>\n<li>聚合：不一致的生命周期</li>\n<li>组合：一致的生命周期</li>\n</ul>\n</li>\n<li>继承：子类父类</li>\n<li>实现：实现接口</li>\n</ul>\n<h2 id=\"Example-2\"><a href=\"#Example-2\" class=\"headerlink\" title=\"Example\"></a>Example</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class DecoratorDemo &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\tSpeaker speaker = new Speaker();</span><br><span class=\"line\">\t\tAmplifier amplifier = new Amplifier(speaker);</span><br><span class=\"line\">\t\tspeaker.speak();</span><br><span class=\"line\">\t\tamplifier.speak();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t// speak with volume of 10</span><br><span class=\"line\">\t\t// amplifier speak with volume of 1000</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Speaker &#123;</span><br><span class=\"line\">\tint volume =  10;</span><br><span class=\"line\">\tpublic void speak() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;speak with volume of &quot; + volume);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Amplifier&#123;</span><br><span class=\"line\">\tSpeaker speaker;</span><br><span class=\"line\">\tpublic Amplifier(Speaker speaker) &#123;</span><br><span class=\"line\">\t\tthis.speaker = speaker;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic void speak() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;amplifier speak with volume of &quot; + speaker.volume*100);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"JVM内存分析-stack, heap and method area","date":"2019-02-24T07:18:32.000Z","_content":"\nJVM的内存分为三个区域：\n- 栈 stack\n- 堆 heap\n- 方法区 method area\n\n<!--more-->\n# Basic\n## 栈 stack\n- 方法执行的内存模型。是一个连续的内存空间。\n- JVM为每个线程创建一个栈。栈属于线程私有，不能共享。\n- 每个方法调用都会创建一个栈帧\n- 特点： 先进后出，后进先出\n\t- 栈 相当于子弹夹\n\t- 栈帧 相当于子弹\n\n## 堆 heap\n- 存储对象\n- JVM只有一个堆，被所有线程共享\n- 不连续的内存空间。\n\n## 方法区 method area\n- 堆的一部分\n- 存储类信息中不变或者唯一的内容\n\t- 代码\n\t- 静态变量\n\t- 静态方法\n\t- String常量\n\n# 举例+图示\n## 代码\n```\nclass Student{\n\tString name;\n\tint age;\n\tvoid showAge() {\n\t\tSystem.out.println(name + \" : \" + age);\n\t}\n}\n\npublic class JvmStackHeapSample {\n\t\n\tstatic int averageAge = 28;\n\t\n\tpublic static void main(String[] args) {\n\t\tStudent student = new Student();\n\t\tstudent.name = \"ryan\";\n\t\tstudent.age = averageAge;\n\t\tstudent.showAge();\n\t}\n\n\tvoid anyMethod(){\n\t\t...\n\t}\n}\n```\n\n## 分析\n- 运行程序，首先使用方法区加载类信息\n\t- 代码\n\t- 静态变量\n\t- 静态方法\n\t- String常量\n- 开始执行 main 方法，创建main()栈帧\n- 创建局部变量 student = null\n- 在堆里创建Student类对象，调用构造器初始化对象\n- 将新建对象的地址赋值给student\n- 将String常量“ryan”赋值给student.name\n- 将静态变量averageAge赋值给student.age\n- 调用student.show(),创建show()栈帧\n- 打印: name + \" : \" + age\n- 销毁show()栈帧\n- 销毁main()栈帧\n\n![JVM内存](/images/JVM内存分析.png)\n","source":"_posts/JVM内存分析-stack-heap-and-method-area.md","raw":"---\ntitle: 'JVM内存分析-stack, heap and method area'\ndate: 2019-02-24 15:18:32\ncategories: Java\ntags: [Java 300集, JVM, stack, head, 内存分析]\n---\n\nJVM的内存分为三个区域：\n- 栈 stack\n- 堆 heap\n- 方法区 method area\n\n<!--more-->\n# Basic\n## 栈 stack\n- 方法执行的内存模型。是一个连续的内存空间。\n- JVM为每个线程创建一个栈。栈属于线程私有，不能共享。\n- 每个方法调用都会创建一个栈帧\n- 特点： 先进后出，后进先出\n\t- 栈 相当于子弹夹\n\t- 栈帧 相当于子弹\n\n## 堆 heap\n- 存储对象\n- JVM只有一个堆，被所有线程共享\n- 不连续的内存空间。\n\n## 方法区 method area\n- 堆的一部分\n- 存储类信息中不变或者唯一的内容\n\t- 代码\n\t- 静态变量\n\t- 静态方法\n\t- String常量\n\n# 举例+图示\n## 代码\n```\nclass Student{\n\tString name;\n\tint age;\n\tvoid showAge() {\n\t\tSystem.out.println(name + \" : \" + age);\n\t}\n}\n\npublic class JvmStackHeapSample {\n\t\n\tstatic int averageAge = 28;\n\t\n\tpublic static void main(String[] args) {\n\t\tStudent student = new Student();\n\t\tstudent.name = \"ryan\";\n\t\tstudent.age = averageAge;\n\t\tstudent.showAge();\n\t}\n\n\tvoid anyMethod(){\n\t\t...\n\t}\n}\n```\n\n## 分析\n- 运行程序，首先使用方法区加载类信息\n\t- 代码\n\t- 静态变量\n\t- 静态方法\n\t- String常量\n- 开始执行 main 方法，创建main()栈帧\n- 创建局部变量 student = null\n- 在堆里创建Student类对象，调用构造器初始化对象\n- 将新建对象的地址赋值给student\n- 将String常量“ryan”赋值给student.name\n- 将静态变量averageAge赋值给student.age\n- 调用student.show(),创建show()栈帧\n- 打印: name + \" : \" + age\n- 销毁show()栈帧\n- 销毁main()栈帧\n\n![JVM内存](/images/JVM内存分析.png)\n","slug":"JVM内存分析-stack-heap-and-method-area","published":1,"updated":"2020-04-30T09:23:19.528Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedi4000isd5tcxcxlep3","content":"<p>JVM的内存分为三个区域：</p>\n<ul>\n<li>栈 stack</li>\n<li>堆 heap</li>\n<li>方法区 method area</li>\n</ul>\n<a id=\"more\"></a>\n<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1><h2 id=\"栈-stack\"><a href=\"#栈-stack\" class=\"headerlink\" title=\"栈 stack\"></a>栈 stack</h2><ul>\n<li>方法执行的内存模型。是一个连续的内存空间。</li>\n<li>JVM为每个线程创建一个栈。栈属于线程私有，不能共享。</li>\n<li>每个方法调用都会创建一个栈帧</li>\n<li>特点： 先进后出，后进先出<ul>\n<li>栈 相当于子弹夹</li>\n<li>栈帧 相当于子弹</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"堆-heap\"><a href=\"#堆-heap\" class=\"headerlink\" title=\"堆 heap\"></a>堆 heap</h2><ul>\n<li>存储对象</li>\n<li>JVM只有一个堆，被所有线程共享</li>\n<li>不连续的内存空间。</li>\n</ul>\n<h2 id=\"方法区-method-area\"><a href=\"#方法区-method-area\" class=\"headerlink\" title=\"方法区 method area\"></a>方法区 method area</h2><ul>\n<li>堆的一部分</li>\n<li>存储类信息中不变或者唯一的内容<ul>\n<li>代码</li>\n<li>静态变量</li>\n<li>静态方法</li>\n<li>String常量</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"举例-图示\"><a href=\"#举例-图示\" class=\"headerlink\" title=\"举例+图示\"></a>举例+图示</h1><h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Student&#123;</span><br><span class=\"line\">\tString name;</span><br><span class=\"line\">\tint age;</span><br><span class=\"line\">\tvoid showAge() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(name + &quot; : &quot; + age);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public class JvmStackHeapSample &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tstatic int averageAge = 28;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\tStudent student = new Student();</span><br><span class=\"line\">\t\tstudent.name = &quot;ryan&quot;;</span><br><span class=\"line\">\t\tstudent.age = averageAge;</span><br><span class=\"line\">\t\tstudent.showAge();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvoid anyMethod()&#123;</span><br><span class=\"line\">\t\t...</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><ul>\n<li>运行程序，首先使用方法区加载类信息<ul>\n<li>代码</li>\n<li>静态变量</li>\n<li>静态方法</li>\n<li>String常量</li>\n</ul>\n</li>\n<li>开始执行 main 方法，创建main()栈帧</li>\n<li>创建局部变量 student = null</li>\n<li>在堆里创建Student类对象，调用构造器初始化对象</li>\n<li>将新建对象的地址赋值给student</li>\n<li>将String常量“ryan”赋值给student.name</li>\n<li>将静态变量averageAge赋值给student.age</li>\n<li>调用student.show(),创建show()栈帧</li>\n<li>打印: name + “ : “ + age</li>\n<li>销毁show()栈帧</li>\n<li>销毁main()栈帧</li>\n</ul>\n<p><img src=\"/images/JVM%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90.png\" alt=\"JVM内存\"></p>\n","site":{"data":{}},"excerpt":"<p>JVM的内存分为三个区域：</p>\n<ul>\n<li>栈 stack</li>\n<li>堆 heap</li>\n<li>方法区 method area</li>\n</ul>","more":"<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1><h2 id=\"栈-stack\"><a href=\"#栈-stack\" class=\"headerlink\" title=\"栈 stack\"></a>栈 stack</h2><ul>\n<li>方法执行的内存模型。是一个连续的内存空间。</li>\n<li>JVM为每个线程创建一个栈。栈属于线程私有，不能共享。</li>\n<li>每个方法调用都会创建一个栈帧</li>\n<li>特点： 先进后出，后进先出<ul>\n<li>栈 相当于子弹夹</li>\n<li>栈帧 相当于子弹</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"堆-heap\"><a href=\"#堆-heap\" class=\"headerlink\" title=\"堆 heap\"></a>堆 heap</h2><ul>\n<li>存储对象</li>\n<li>JVM只有一个堆，被所有线程共享</li>\n<li>不连续的内存空间。</li>\n</ul>\n<h2 id=\"方法区-method-area\"><a href=\"#方法区-method-area\" class=\"headerlink\" title=\"方法区 method area\"></a>方法区 method area</h2><ul>\n<li>堆的一部分</li>\n<li>存储类信息中不变或者唯一的内容<ul>\n<li>代码</li>\n<li>静态变量</li>\n<li>静态方法</li>\n<li>String常量</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"举例-图示\"><a href=\"#举例-图示\" class=\"headerlink\" title=\"举例+图示\"></a>举例+图示</h1><h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Student&#123;</span><br><span class=\"line\">\tString name;</span><br><span class=\"line\">\tint age;</span><br><span class=\"line\">\tvoid showAge() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(name + &quot; : &quot; + age);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public class JvmStackHeapSample &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tstatic int averageAge = 28;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\tStudent student = new Student();</span><br><span class=\"line\">\t\tstudent.name = &quot;ryan&quot;;</span><br><span class=\"line\">\t\tstudent.age = averageAge;</span><br><span class=\"line\">\t\tstudent.showAge();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvoid anyMethod()&#123;</span><br><span class=\"line\">\t\t...</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><ul>\n<li>运行程序，首先使用方法区加载类信息<ul>\n<li>代码</li>\n<li>静态变量</li>\n<li>静态方法</li>\n<li>String常量</li>\n</ul>\n</li>\n<li>开始执行 main 方法，创建main()栈帧</li>\n<li>创建局部变量 student = null</li>\n<li>在堆里创建Student类对象，调用构造器初始化对象</li>\n<li>将新建对象的地址赋值给student</li>\n<li>将String常量“ryan”赋值给student.name</li>\n<li>将静态变量averageAge赋值给student.age</li>\n<li>调用student.show(),创建show()栈帧</li>\n<li>打印: name + “ : “ + age</li>\n<li>销毁show()栈帧</li>\n<li>销毁main()栈帧</li>\n</ul>\n<p><img src=\"/images/JVM%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90.png\" alt=\"JVM内存\"></p>"},{"title":"JUnit - Beginner","date":"2018-02-13T23:55:55.000Z","_content":"\nNotes, Samples for JUnit.\n\n<!--more-->\n# Sample 1\n\n## Class to be tested:\n```\npackage test;\n\npublic class Calculator {\n\tpublic static int add(int num1, int num2) {\n\t\treturn num1 + num2;\n\t}\n\n\tpublic static int sub(int num1, int num2) {\n\t\treturn num1 - num2;\n\t}\n}\n```\n\n## Test Case:\n```\npackage test;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertNotEquals;\n\nimport org.junit.Test;\n\npublic class CalculatorAddTest {\n\n\t@Test\n\tpublic void pass() {\n\t\tassertEquals(\"Error in add()-1..\", 3, Calculator.add(1, 2));\n\t\tassertEquals(\"Error in add()-2..\", -3, Calculator.add(-1, -2));\n\t\tassertEquals(\"Error in add()-3..\", -1, Calculator.add(-1, -2));\n\t}\n\t\n\t@Test\n\tpublic void fail() {\n\t\tassertNotEquals(\"Error in add()-4..\", 0, Calculator.add(1, 2));\n\t}\n\t\n}\n```\nRun this by: **Run As - JUnit Test**\n\n\n## Test Standalone or Test Runner\n```\npackage test;\n\nimport org.junit.runner.JUnitCore;\nimport org.junit.runner.Result;\nimport org.junit.runner.notification.Failure;\n\npublic class RunTestStandalone {\n\tpublic static void main(String[] args) {\n\t\tResult result = JUnitCore.runClasses(CalculatorAddTest.class);\n\t\tfor (Failure failure : result.getFailures()) {\n\t\t\tSystem.out.println(failure.toString());\n\t\t}\n\t\tSystem.out.println(\"Result Pass? : \" + result.wasSuccessful());\n\t}\n}\n```\nRun this by: **Run As - Java Application**\n\n## Test Suite\n```\nimport org.junit.runner.RunWith;\nimport org.junit.runners.Suite;\nimport org.junit.runners.Suite.SuiteClasses;\n\n@RunWith(Suite.class)\n@SuiteClasses({ CalculatorAddTest.class, CalculatorSubTest.class })\npublic class AllTests {\n\n}\n```\nRun this by: **Run As - JUnit Test**\n\n# Sample 2\n\n## Testing class:\n```\npublic class Animal {\n\tString name;\n\tdouble speed;\n\n\tpublic Animal(String name, double speed) {\n\t\tthis.name = name;\n\t\tthis.speed = speed;\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tpublic double getSpeed() {\n\t\treturn speed;\n\t}\n\n\tpublic double walkSpeed () {\n\t\treturn speed;\n\t}\n\n\tpublic double runSpeed() {\n\t\treturn speed*2;\n\t}\n}\n\n```\n\n##","source":"_posts/JUnit-Beginner.md","raw":"---\ntitle: JUnit - Beginner\ndate: 2018-02-14 07:55:55\ncategories: JUnit\ntags: [JUnit, test, unit, beginner, automation]\n---\n\nNotes, Samples for JUnit.\n\n<!--more-->\n# Sample 1\n\n## Class to be tested:\n```\npackage test;\n\npublic class Calculator {\n\tpublic static int add(int num1, int num2) {\n\t\treturn num1 + num2;\n\t}\n\n\tpublic static int sub(int num1, int num2) {\n\t\treturn num1 - num2;\n\t}\n}\n```\n\n## Test Case:\n```\npackage test;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertNotEquals;\n\nimport org.junit.Test;\n\npublic class CalculatorAddTest {\n\n\t@Test\n\tpublic void pass() {\n\t\tassertEquals(\"Error in add()-1..\", 3, Calculator.add(1, 2));\n\t\tassertEquals(\"Error in add()-2..\", -3, Calculator.add(-1, -2));\n\t\tassertEquals(\"Error in add()-3..\", -1, Calculator.add(-1, -2));\n\t}\n\t\n\t@Test\n\tpublic void fail() {\n\t\tassertNotEquals(\"Error in add()-4..\", 0, Calculator.add(1, 2));\n\t}\n\t\n}\n```\nRun this by: **Run As - JUnit Test**\n\n\n## Test Standalone or Test Runner\n```\npackage test;\n\nimport org.junit.runner.JUnitCore;\nimport org.junit.runner.Result;\nimport org.junit.runner.notification.Failure;\n\npublic class RunTestStandalone {\n\tpublic static void main(String[] args) {\n\t\tResult result = JUnitCore.runClasses(CalculatorAddTest.class);\n\t\tfor (Failure failure : result.getFailures()) {\n\t\t\tSystem.out.println(failure.toString());\n\t\t}\n\t\tSystem.out.println(\"Result Pass? : \" + result.wasSuccessful());\n\t}\n}\n```\nRun this by: **Run As - Java Application**\n\n## Test Suite\n```\nimport org.junit.runner.RunWith;\nimport org.junit.runners.Suite;\nimport org.junit.runners.Suite.SuiteClasses;\n\n@RunWith(Suite.class)\n@SuiteClasses({ CalculatorAddTest.class, CalculatorSubTest.class })\npublic class AllTests {\n\n}\n```\nRun this by: **Run As - JUnit Test**\n\n# Sample 2\n\n## Testing class:\n```\npublic class Animal {\n\tString name;\n\tdouble speed;\n\n\tpublic Animal(String name, double speed) {\n\t\tthis.name = name;\n\t\tthis.speed = speed;\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tpublic double getSpeed() {\n\t\treturn speed;\n\t}\n\n\tpublic double walkSpeed () {\n\t\treturn speed;\n\t}\n\n\tpublic double runSpeed() {\n\t\treturn speed*2;\n\t}\n}\n\n```\n\n##","slug":"JUnit-Beginner","published":1,"updated":"2020-04-30T09:23:19.528Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedi5000jsd5t20gzvvwr","content":"<p>Notes, Samples for JUnit.</p>\n<a id=\"more\"></a>\n<h1 id=\"Sample-1\"><a href=\"#Sample-1\" class=\"headerlink\" title=\"Sample 1\"></a>Sample 1</h1><h2 id=\"Class-to-be-tested\"><a href=\"#Class-to-be-tested\" class=\"headerlink\" title=\"Class to be tested:\"></a>Class to be tested:</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package test;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Calculator &#123;</span><br><span class=\"line\">\tpublic static int add(int num1, int num2) &#123;</span><br><span class=\"line\">\t\treturn num1 + num2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static int sub(int num1, int num2) &#123;</span><br><span class=\"line\">\t\treturn num1 - num2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Test-Case\"><a href=\"#Test-Case\" class=\"headerlink\" title=\"Test Case:\"></a>Test Case:</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package test;</span><br><span class=\"line\"></span><br><span class=\"line\">import static org.junit.Assert.assertEquals;</span><br><span class=\"line\">import static org.junit.Assert.assertNotEquals;</span><br><span class=\"line\"></span><br><span class=\"line\">import org.junit.Test;</span><br><span class=\"line\"></span><br><span class=\"line\">public class CalculatorAddTest &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Test</span><br><span class=\"line\">\tpublic void pass() &#123;</span><br><span class=\"line\">\t\tassertEquals(&quot;Error in add()-1..&quot;, 3, Calculator.add(1, 2));</span><br><span class=\"line\">\t\tassertEquals(&quot;Error in add()-2..&quot;, -3, Calculator.add(-1, -2));</span><br><span class=\"line\">\t\tassertEquals(&quot;Error in add()-3..&quot;, -1, Calculator.add(-1, -2));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@Test</span><br><span class=\"line\">\tpublic void fail() &#123;</span><br><span class=\"line\">\t\tassertNotEquals(&quot;Error in add()-4..&quot;, 0, Calculator.add(1, 2));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Run this by: <strong>Run As - JUnit Test</strong></p>\n<h2 id=\"Test-Standalone-or-Test-Runner\"><a href=\"#Test-Standalone-or-Test-Runner\" class=\"headerlink\" title=\"Test Standalone or Test Runner\"></a>Test Standalone or Test Runner</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package test;</span><br><span class=\"line\"></span><br><span class=\"line\">import org.junit.runner.JUnitCore;</span><br><span class=\"line\">import org.junit.runner.Result;</span><br><span class=\"line\">import org.junit.runner.notification.Failure;</span><br><span class=\"line\"></span><br><span class=\"line\">public class RunTestStandalone &#123;</span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\tResult result = JUnitCore.runClasses(CalculatorAddTest.class);</span><br><span class=\"line\">\t\tfor (Failure failure : result.getFailures()) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(failure.toString());</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Result Pass? : &quot; + result.wasSuccessful());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Run this by: <strong>Run As - Java Application</strong></p>\n<h2 id=\"Test-Suite\"><a href=\"#Test-Suite\" class=\"headerlink\" title=\"Test Suite\"></a>Test Suite</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.junit.runner.RunWith;</span><br><span class=\"line\">import org.junit.runners.Suite;</span><br><span class=\"line\">import org.junit.runners.Suite.SuiteClasses;</span><br><span class=\"line\"></span><br><span class=\"line\">@RunWith(Suite.class)</span><br><span class=\"line\">@SuiteClasses(&#123; CalculatorAddTest.class, CalculatorSubTest.class &#125;)</span><br><span class=\"line\">public class AllTests &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Run this by: <strong>Run As - JUnit Test</strong></p>\n<h1 id=\"Sample-2\"><a href=\"#Sample-2\" class=\"headerlink\" title=\"Sample 2\"></a>Sample 2</h1><h2 id=\"Testing-class\"><a href=\"#Testing-class\" class=\"headerlink\" title=\"Testing class:\"></a>Testing class:</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Animal &#123;</span><br><span class=\"line\">\tString name;</span><br><span class=\"line\">\tdouble speed;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic Animal(String name, double speed) &#123;</span><br><span class=\"line\">\t\tthis.name = name;</span><br><span class=\"line\">\t\tthis.speed = speed;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic String getName() &#123;</span><br><span class=\"line\">\t\treturn name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic double getSpeed() &#123;</span><br><span class=\"line\">\t\treturn speed;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic double walkSpeed () &#123;</span><br><span class=\"line\">\t\treturn speed;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic double runSpeed() &#123;</span><br><span class=\"line\">\t\treturn speed*2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>##</p>\n","site":{"data":{}},"excerpt":"<p>Notes, Samples for JUnit.</p>","more":"<h1 id=\"Sample-1\"><a href=\"#Sample-1\" class=\"headerlink\" title=\"Sample 1\"></a>Sample 1</h1><h2 id=\"Class-to-be-tested\"><a href=\"#Class-to-be-tested\" class=\"headerlink\" title=\"Class to be tested:\"></a>Class to be tested:</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package test;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Calculator &#123;</span><br><span class=\"line\">\tpublic static int add(int num1, int num2) &#123;</span><br><span class=\"line\">\t\treturn num1 + num2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static int sub(int num1, int num2) &#123;</span><br><span class=\"line\">\t\treturn num1 - num2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Test-Case\"><a href=\"#Test-Case\" class=\"headerlink\" title=\"Test Case:\"></a>Test Case:</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package test;</span><br><span class=\"line\"></span><br><span class=\"line\">import static org.junit.Assert.assertEquals;</span><br><span class=\"line\">import static org.junit.Assert.assertNotEquals;</span><br><span class=\"line\"></span><br><span class=\"line\">import org.junit.Test;</span><br><span class=\"line\"></span><br><span class=\"line\">public class CalculatorAddTest &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Test</span><br><span class=\"line\">\tpublic void pass() &#123;</span><br><span class=\"line\">\t\tassertEquals(&quot;Error in add()-1..&quot;, 3, Calculator.add(1, 2));</span><br><span class=\"line\">\t\tassertEquals(&quot;Error in add()-2..&quot;, -3, Calculator.add(-1, -2));</span><br><span class=\"line\">\t\tassertEquals(&quot;Error in add()-3..&quot;, -1, Calculator.add(-1, -2));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@Test</span><br><span class=\"line\">\tpublic void fail() &#123;</span><br><span class=\"line\">\t\tassertNotEquals(&quot;Error in add()-4..&quot;, 0, Calculator.add(1, 2));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Run this by: <strong>Run As - JUnit Test</strong></p>\n<h2 id=\"Test-Standalone-or-Test-Runner\"><a href=\"#Test-Standalone-or-Test-Runner\" class=\"headerlink\" title=\"Test Standalone or Test Runner\"></a>Test Standalone or Test Runner</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package test;</span><br><span class=\"line\"></span><br><span class=\"line\">import org.junit.runner.JUnitCore;</span><br><span class=\"line\">import org.junit.runner.Result;</span><br><span class=\"line\">import org.junit.runner.notification.Failure;</span><br><span class=\"line\"></span><br><span class=\"line\">public class RunTestStandalone &#123;</span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\tResult result = JUnitCore.runClasses(CalculatorAddTest.class);</span><br><span class=\"line\">\t\tfor (Failure failure : result.getFailures()) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(failure.toString());</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Result Pass? : &quot; + result.wasSuccessful());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Run this by: <strong>Run As - Java Application</strong></p>\n<h2 id=\"Test-Suite\"><a href=\"#Test-Suite\" class=\"headerlink\" title=\"Test Suite\"></a>Test Suite</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.junit.runner.RunWith;</span><br><span class=\"line\">import org.junit.runners.Suite;</span><br><span class=\"line\">import org.junit.runners.Suite.SuiteClasses;</span><br><span class=\"line\"></span><br><span class=\"line\">@RunWith(Suite.class)</span><br><span class=\"line\">@SuiteClasses(&#123; CalculatorAddTest.class, CalculatorSubTest.class &#125;)</span><br><span class=\"line\">public class AllTests &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Run this by: <strong>Run As - JUnit Test</strong></p>\n<h1 id=\"Sample-2\"><a href=\"#Sample-2\" class=\"headerlink\" title=\"Sample 2\"></a>Sample 2</h1><h2 id=\"Testing-class\"><a href=\"#Testing-class\" class=\"headerlink\" title=\"Testing class:\"></a>Testing class:</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Animal &#123;</span><br><span class=\"line\">\tString name;</span><br><span class=\"line\">\tdouble speed;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic Animal(String name, double speed) &#123;</span><br><span class=\"line\">\t\tthis.name = name;</span><br><span class=\"line\">\t\tthis.speed = speed;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic String getName() &#123;</span><br><span class=\"line\">\t\treturn name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic double getSpeed() &#123;</span><br><span class=\"line\">\t\treturn speed;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic double walkSpeed () &#123;</span><br><span class=\"line\">\t\treturn speed;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic double runSpeed() &#123;</span><br><span class=\"line\">\t\treturn speed*2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>##</p>"},{"title":"Hexo 的 Next 主题优化","date":"2017-11-26T05:49:21.000Z","_content":"\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n这篇博客用来记录和分享我对博客优化的过程，均为实际经历。欢迎纠正，与君共勉。\n\n## 修改 Next 主题的 Scheme ##\n\nNext 默认的风格是 Muse。现有的四个风格里，我最喜欢 Gemini。\n因为此风格的博客首页里，每篇博客有明显的分割。菜单在左侧，方便访问时转到别的页面。  \n\n**操作如下：**\n1. 打开 D:\\blog\\themes\\next\\_config.yml\n2. 找到 `Scheme Settings`\n3. 去掉 `Gemini` 前面的 `#`。\n```\n# Schemes\n#scheme: Muse\n#scheme: Mist\n#scheme: Pisces\nscheme: Gemini\n```\n\n## 添加访问统计 ##\n\n开始时尝试用 LeanCloud，尝试数次无果，一直得不到访问数据。\n改用 BuSuanZi，效果显著！\n\n博客主页效果：\n\n![博客主页下方访问量](/images/博客主页下方访问量.png)\n\n<!--more-->\n\n文章页面效果：\n\n![文章页面访问量](/images/文章页面访问量.png)\n\n\n**操作如下：**\n1. 打开 D:\\blog\\themes\\next\\_config.yml\n2. 找到 `busuanzi_count`\n3. 如下修改：\n```\nbusuanzi_count:\n  # count values only if the other configs are false\n  enable: true\t// 此处\n  # custom uv span for the whole site\n  site_uv: true\n  site_uv_header: <i class=\"fa fa-user\"></i> Visitor // 此处\n  site_uv_footer:\n  # custom pv span for the whole site\n  site_pv: true\n  site_pv_header: <i class=\"fa fa-eye\"></i> Total Visit // 此处\n  site_pv_footer:\n  # custom pv span for one page only\n  page_pv: true\n  page_pv_header: <i class=\"fa fa-file-o\"></i> View // 此处\n  page_pv_footer:\n```\n\n**统计数字失效解决方案**\n1. 打开 `\\themes\\next\\layout\\_third-party\\analytics\\busuanzi-counter.swig`\n2. 将 src 替换：\n```\n<script async src=\"https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\"></script>\n\n```\n\n## 添加头像 ##\n\n\n**操作如下：**\n1. 将头像照片 `头像1.jpg` 保存到 D:\\blog\\themes\\next\\source\\images 路径下。\n2. 打开 D:\\blog\\themes\\next\\_config.yml\n3. 找到 `Sidebar Avatar`\n4. 如下修改：\n```\n# Sidebar Avatar\n# in theme directory(source/images): /images/avatar.gif\n# in site  directory(source/uploads): /uploads/avatar.gif\navatar: /images/avatar1.JPG\n```\n\n<a name=\"添加页面\"></a>\n## 添加 About 等页面 ##\n\n前后效果对比：\n\n![添加页面之前](/images/添加页面之前.png)\n\n![添加页面之后](/images/添加页面之后.png)\n\n**操作如下：**\n1. 打开 Git Bash：\n``` bash\ncd /d/blog // 进入到 blog 所在文件夹\nhexo new page \"about\"\n```\n2. 打开 D:\\blog\\themes\\next\\_config.yml\n3. 找到 `Menu Settings`\n4. 如下修改：\n```\nmenu:\n  home: / || home\n  about: /about/ || user  // 此处\n  #tags: /tags/ || tags\n  #categories: /categories/ || th\n  archives: /archives/ || archive\n  #schedule: /schedule/ || calendar\n```\n\n\n## 侧边栏的分类和标签页面 ##\n\n侧边栏有三个数字，分别对应文章，分类和标签。其中点击文章，可以到文章列表页面。但是分类和标签无法点击。\n这里很有必要激活这个功能。 在此之前需要已经存在这两个页面。 参考[添加页面](#添加页面)进行添加。\n```\nhexo new page \"categories\"\nhexo new page \"tags\"\n```\n\n**操作如下：**\n1. 打开 D:\\blog\\themes\\next\\layout\\_macro/sidebar.swig\n2. 找到下面代码：\n```\n{% if site.categories.length > 0 %}\n  {% set categoriesPageQuery = site.pages.find({type: 'categories'}, {lean: true}) %}\n  {% set hasCategoriesPage = categoriesPageQuery.length > 0 %}\n  <div class=\"site-state-item site-state-categories\">\n    {% if hasCategoriesPage %}<a href=\"{{ url_for(categoriesPageQuery[0].path) }}\">{% endif %}\n      <span class=\"site-state-item-count\">{{ site.categories.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.categories') }}</span>\n    {% if hasCategoriesPage %}</a>{% endif %}\n  </div>\n{% endif %}\n\n{% if site.tags.length > 0 %}\n  {% set tagsPageQuery = site.pages.find({type: 'tags'}, {lean: true}) %}\n  {% set hasTagsPage = tagsPageQuery.length > 0 %}\n  <div class=\"site-state-item site-state-tags\">\n    {% if hasTagsPage %}<a href=\"{{ url_for(tagsPageQuery[0].path) }}\">{% endif %}\n      <span class=\"site-state-item-count\">{{ site.tags.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.tags') }}</span>\n    {% if hasTagsPage %}</a>{% endif %}\n  </div>\n{% endif %}\n```\n3. 替换成下面代码：\n```\n{% if site.categories.length > 0 %}\n  {% set categoriesPageQuery = site.pages.find({type: 'categories'}, {lean: true}) %}\n  {% set hasCategoriesPage = categoriesPageQuery.length > 0 %}\n  <div class=\"site-state-item site-state-categories\">\n    {% if hasCategoriesPage %}\n\t  <a href=\"{{ url_for(categoriesPageQuery[0].path) }}\">\n\t{% else %}\n      <a href=\"{{ url_for(theme.menu.categories).split('||')[0] | trim }}\">\n\t{% endif %}\n      <span class=\"site-state-item-count\">{{ site.categories.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.categories') }}</span>\n    </a>\n  </div>\n{% endif %}\n\n{% if site.tags.length > 0 %}\n  {% set tagsPageQuery = site.pages.find({type: 'tags'}, {lean: true}) %}\n  {% set hasTagsPage = tagsPageQuery.length > 0 %}\n  <div class=\"site-state-item site-state-tags\">\n    {% if hasTagsPage %}\n\t  <a href=\"{{ url_for(tagsPageQuery[0].path) }}\">\n\t{% else %}\n      <a href=\"{{ url_for(theme.menu.tags).split('||')[0] | trim }}\">  \n\t{% endif %}\n      <span class=\"site-state-item-count\">{{ site.tags.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.tags') }}</span>\n    </a>\n  </div>\n{% endif %}\n```\n\n没有深入研究，但应该是 `hasTagsPage` 没有实现，所以总是没有链接效果。所以给它加了一个 `else`   条件。就可以了。\n\n\n## 分类和标签页面的自动生成 categories & tags ##\n\n一开始我自己手动添加了这两个页面的内容，后来无意看到了正确的打开方式：[主题配置](http://theme-next.iissnan.com/theme-settings.html)\n很简单，分别加上 type 就可以了。\n\n**分类页面：**\n1. 打开 D:\\blog\\source\\categories\\index.md\n2. 内容如下：\n```\n---\ntitle: categories\ndate: 2017-11-26 18:38:13\ntype: \"categories\"\n---\n```\n\n**标签页面：**\n1. 打开 D:\\blog\\source\\tags\\index.md\n2. 内容如下：\n```\n---\ntitle: tags\ndate: 2017-11-26 18:38:13\ntype: \"tags\"\n---\n```\n\n标签页面的效果特别好，对应文章数量多的标签会比较大。效果: [tags页面](https://ryanluoxu.github.io/tags/)\n\n\n## 设置侧边栏社交链接 ##\n\n官方文档：[设置侧边栏社交链接](https://github.com/iissnan/hexo-theme-next/wiki/%E8%AE%BE%E7%BD%AE%E4%BE%A7%E8%BE%B9%E6%A0%8F%E7%A4%BE%E4%BA%A4%E9%93%BE%E6%8E%A5)\n\n但是内容好像没有更新。配置文件已经有，不需要新增。\n\n**操作如下：**\n\n1. 打开 D:\\blog\\themes\\next\\_config.yml\n2. 找到 `Social Links.`\n3. 修改如下：\n```\nsocial:\n  GitHub: https://github.com/Ryanluoxu || github\n  Linkedin: https://www.linkedin.com/in/luo-xu-ryan-675a8041/ ||  linkedin\n  ZhiHu: https://www.zhihu.com/people/luojiuri/activities ||\n  #StackOverflow: https://stackoverflow.com/users/7640451/ryan-l || stack-overflow\n  E-Mail: mailto:luoxu2011@gmail.com || envelope\n  #右键复制: mailto:luoxu2011@gmail.com || envelope\n  #Google: https://plus.google.com/yourname || google\n  #Twitter: https://twitter.com/yourname || twitter\n  #FB Page: https://www.facebook.com/yourname || facebook\n  #VK Group: https://vk.com/yourname || vk\n  #YouTube: https://youtube.com/yourname || youtube\n  #Instagram: https://instagram.com/yourname || instagram\n  #Skype: skype:yourname?call|chat || skype\n\nsocial_icons:\n  enable: true\n  icons_only: false\n  transition: false\n  GitHub: github\n  Linkedin: linkedin\n```\n\n## 设置侧边栏社交链接 ##\n\n参考 [Hexo+Next主题优化](https://zhuanlan.zhihu.com/p/30836436) 的 10. 自定义文章底部版权声明\n\n## 参考 ##\n\n[NexT主题个性化修改与调试方案](http://blog.junyu.io/posts/0009-hexo-next-theme-modify.html)\n","source":"_posts/Hexo-的-Next-主题优化.md","raw":"---\ntitle: Hexo 的 Next 主题优化\ndate: 2017-11-26 13:49:21\ncategories: 搭建博客\ntags: [Hexo, Next, 博客, 主题优化]\n---\n\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n这篇博客用来记录和分享我对博客优化的过程，均为实际经历。欢迎纠正，与君共勉。\n\n## 修改 Next 主题的 Scheme ##\n\nNext 默认的风格是 Muse。现有的四个风格里，我最喜欢 Gemini。\n因为此风格的博客首页里，每篇博客有明显的分割。菜单在左侧，方便访问时转到别的页面。  \n\n**操作如下：**\n1. 打开 D:\\blog\\themes\\next\\_config.yml\n2. 找到 `Scheme Settings`\n3. 去掉 `Gemini` 前面的 `#`。\n```\n# Schemes\n#scheme: Muse\n#scheme: Mist\n#scheme: Pisces\nscheme: Gemini\n```\n\n## 添加访问统计 ##\n\n开始时尝试用 LeanCloud，尝试数次无果，一直得不到访问数据。\n改用 BuSuanZi，效果显著！\n\n博客主页效果：\n\n![博客主页下方访问量](/images/博客主页下方访问量.png)\n\n<!--more-->\n\n文章页面效果：\n\n![文章页面访问量](/images/文章页面访问量.png)\n\n\n**操作如下：**\n1. 打开 D:\\blog\\themes\\next\\_config.yml\n2. 找到 `busuanzi_count`\n3. 如下修改：\n```\nbusuanzi_count:\n  # count values only if the other configs are false\n  enable: true\t// 此处\n  # custom uv span for the whole site\n  site_uv: true\n  site_uv_header: <i class=\"fa fa-user\"></i> Visitor // 此处\n  site_uv_footer:\n  # custom pv span for the whole site\n  site_pv: true\n  site_pv_header: <i class=\"fa fa-eye\"></i> Total Visit // 此处\n  site_pv_footer:\n  # custom pv span for one page only\n  page_pv: true\n  page_pv_header: <i class=\"fa fa-file-o\"></i> View // 此处\n  page_pv_footer:\n```\n\n**统计数字失效解决方案**\n1. 打开 `\\themes\\next\\layout\\_third-party\\analytics\\busuanzi-counter.swig`\n2. 将 src 替换：\n```\n<script async src=\"https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\"></script>\n\n```\n\n## 添加头像 ##\n\n\n**操作如下：**\n1. 将头像照片 `头像1.jpg` 保存到 D:\\blog\\themes\\next\\source\\images 路径下。\n2. 打开 D:\\blog\\themes\\next\\_config.yml\n3. 找到 `Sidebar Avatar`\n4. 如下修改：\n```\n# Sidebar Avatar\n# in theme directory(source/images): /images/avatar.gif\n# in site  directory(source/uploads): /uploads/avatar.gif\navatar: /images/avatar1.JPG\n```\n\n<a name=\"添加页面\"></a>\n## 添加 About 等页面 ##\n\n前后效果对比：\n\n![添加页面之前](/images/添加页面之前.png)\n\n![添加页面之后](/images/添加页面之后.png)\n\n**操作如下：**\n1. 打开 Git Bash：\n``` bash\ncd /d/blog // 进入到 blog 所在文件夹\nhexo new page \"about\"\n```\n2. 打开 D:\\blog\\themes\\next\\_config.yml\n3. 找到 `Menu Settings`\n4. 如下修改：\n```\nmenu:\n  home: / || home\n  about: /about/ || user  // 此处\n  #tags: /tags/ || tags\n  #categories: /categories/ || th\n  archives: /archives/ || archive\n  #schedule: /schedule/ || calendar\n```\n\n\n## 侧边栏的分类和标签页面 ##\n\n侧边栏有三个数字，分别对应文章，分类和标签。其中点击文章，可以到文章列表页面。但是分类和标签无法点击。\n这里很有必要激活这个功能。 在此之前需要已经存在这两个页面。 参考[添加页面](#添加页面)进行添加。\n```\nhexo new page \"categories\"\nhexo new page \"tags\"\n```\n\n**操作如下：**\n1. 打开 D:\\blog\\themes\\next\\layout\\_macro/sidebar.swig\n2. 找到下面代码：\n```\n{% if site.categories.length > 0 %}\n  {% set categoriesPageQuery = site.pages.find({type: 'categories'}, {lean: true}) %}\n  {% set hasCategoriesPage = categoriesPageQuery.length > 0 %}\n  <div class=\"site-state-item site-state-categories\">\n    {% if hasCategoriesPage %}<a href=\"{{ url_for(categoriesPageQuery[0].path) }}\">{% endif %}\n      <span class=\"site-state-item-count\">{{ site.categories.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.categories') }}</span>\n    {% if hasCategoriesPage %}</a>{% endif %}\n  </div>\n{% endif %}\n\n{% if site.tags.length > 0 %}\n  {% set tagsPageQuery = site.pages.find({type: 'tags'}, {lean: true}) %}\n  {% set hasTagsPage = tagsPageQuery.length > 0 %}\n  <div class=\"site-state-item site-state-tags\">\n    {% if hasTagsPage %}<a href=\"{{ url_for(tagsPageQuery[0].path) }}\">{% endif %}\n      <span class=\"site-state-item-count\">{{ site.tags.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.tags') }}</span>\n    {% if hasTagsPage %}</a>{% endif %}\n  </div>\n{% endif %}\n```\n3. 替换成下面代码：\n```\n{% if site.categories.length > 0 %}\n  {% set categoriesPageQuery = site.pages.find({type: 'categories'}, {lean: true}) %}\n  {% set hasCategoriesPage = categoriesPageQuery.length > 0 %}\n  <div class=\"site-state-item site-state-categories\">\n    {% if hasCategoriesPage %}\n\t  <a href=\"{{ url_for(categoriesPageQuery[0].path) }}\">\n\t{% else %}\n      <a href=\"{{ url_for(theme.menu.categories).split('||')[0] | trim }}\">\n\t{% endif %}\n      <span class=\"site-state-item-count\">{{ site.categories.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.categories') }}</span>\n    </a>\n  </div>\n{% endif %}\n\n{% if site.tags.length > 0 %}\n  {% set tagsPageQuery = site.pages.find({type: 'tags'}, {lean: true}) %}\n  {% set hasTagsPage = tagsPageQuery.length > 0 %}\n  <div class=\"site-state-item site-state-tags\">\n    {% if hasTagsPage %}\n\t  <a href=\"{{ url_for(tagsPageQuery[0].path) }}\">\n\t{% else %}\n      <a href=\"{{ url_for(theme.menu.tags).split('||')[0] | trim }}\">  \n\t{% endif %}\n      <span class=\"site-state-item-count\">{{ site.tags.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.tags') }}</span>\n    </a>\n  </div>\n{% endif %}\n```\n\n没有深入研究，但应该是 `hasTagsPage` 没有实现，所以总是没有链接效果。所以给它加了一个 `else`   条件。就可以了。\n\n\n## 分类和标签页面的自动生成 categories & tags ##\n\n一开始我自己手动添加了这两个页面的内容，后来无意看到了正确的打开方式：[主题配置](http://theme-next.iissnan.com/theme-settings.html)\n很简单，分别加上 type 就可以了。\n\n**分类页面：**\n1. 打开 D:\\blog\\source\\categories\\index.md\n2. 内容如下：\n```\n---\ntitle: categories\ndate: 2017-11-26 18:38:13\ntype: \"categories\"\n---\n```\n\n**标签页面：**\n1. 打开 D:\\blog\\source\\tags\\index.md\n2. 内容如下：\n```\n---\ntitle: tags\ndate: 2017-11-26 18:38:13\ntype: \"tags\"\n---\n```\n\n标签页面的效果特别好，对应文章数量多的标签会比较大。效果: [tags页面](https://ryanluoxu.github.io/tags/)\n\n\n## 设置侧边栏社交链接 ##\n\n官方文档：[设置侧边栏社交链接](https://github.com/iissnan/hexo-theme-next/wiki/%E8%AE%BE%E7%BD%AE%E4%BE%A7%E8%BE%B9%E6%A0%8F%E7%A4%BE%E4%BA%A4%E9%93%BE%E6%8E%A5)\n\n但是内容好像没有更新。配置文件已经有，不需要新增。\n\n**操作如下：**\n\n1. 打开 D:\\blog\\themes\\next\\_config.yml\n2. 找到 `Social Links.`\n3. 修改如下：\n```\nsocial:\n  GitHub: https://github.com/Ryanluoxu || github\n  Linkedin: https://www.linkedin.com/in/luo-xu-ryan-675a8041/ ||  linkedin\n  ZhiHu: https://www.zhihu.com/people/luojiuri/activities ||\n  #StackOverflow: https://stackoverflow.com/users/7640451/ryan-l || stack-overflow\n  E-Mail: mailto:luoxu2011@gmail.com || envelope\n  #右键复制: mailto:luoxu2011@gmail.com || envelope\n  #Google: https://plus.google.com/yourname || google\n  #Twitter: https://twitter.com/yourname || twitter\n  #FB Page: https://www.facebook.com/yourname || facebook\n  #VK Group: https://vk.com/yourname || vk\n  #YouTube: https://youtube.com/yourname || youtube\n  #Instagram: https://instagram.com/yourname || instagram\n  #Skype: skype:yourname?call|chat || skype\n\nsocial_icons:\n  enable: true\n  icons_only: false\n  transition: false\n  GitHub: github\n  Linkedin: linkedin\n```\n\n## 设置侧边栏社交链接 ##\n\n参考 [Hexo+Next主题优化](https://zhuanlan.zhihu.com/p/30836436) 的 10. 自定义文章底部版权声明\n\n## 参考 ##\n\n[NexT主题个性化修改与调试方案](http://blog.junyu.io/posts/0009-hexo-next-theme-modify.html)\n","slug":"Hexo-的-Next-主题优化","published":1,"updated":"2020-04-30T10:15:45.266Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedi5000ksd5tieb2h68r","content":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>这篇博客用来记录和分享我对博客优化的过程，均为实际经历。欢迎纠正，与君共勉。</p>\n<h2 id=\"修改-Next-主题的-Scheme\"><a href=\"#修改-Next-主题的-Scheme\" class=\"headerlink\" title=\"修改 Next 主题的 Scheme\"></a>修改 Next 主题的 Scheme</h2><p>Next 默认的风格是 Muse。现有的四个风格里，我最喜欢 Gemini。<br>因为此风格的博客首页里，每篇博客有明显的分割。菜单在左侧，方便访问时转到别的页面。  </p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li>打开 D:\\blog\\themes\\next_config.yml</li>\n<li>找到 <code>Scheme Settings</code></li>\n<li>去掉 <code>Gemini</code> 前面的 <code>#</code>。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Schemes</span><br><span class=\"line\">#scheme: Muse</span><br><span class=\"line\">#scheme: Mist</span><br><span class=\"line\">#scheme: Pisces</span><br><span class=\"line\">scheme: Gemini</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"添加访问统计\"><a href=\"#添加访问统计\" class=\"headerlink\" title=\"添加访问统计\"></a>添加访问统计</h2><p>开始时尝试用 LeanCloud，尝试数次无果，一直得不到访问数据。<br>改用 BuSuanZi，效果显著！</p>\n<p>博客主页效果：</p>\n<p><img src=\"/images/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A1%B5%E4%B8%8B%E6%96%B9%E8%AE%BF%E9%97%AE%E9%87%8F.png\" alt=\"博客主页下方访问量\"></p>\n<a id=\"more\"></a>\n\n<p>文章页面效果：</p>\n<p><img src=\"/images/%E6%96%87%E7%AB%A0%E9%A1%B5%E9%9D%A2%E8%AE%BF%E9%97%AE%E9%87%8F.png\" alt=\"文章页面访问量\"></p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li>打开 D:\\blog\\themes\\next_config.yml</li>\n<li>找到 <code>busuanzi_count</code></li>\n<li>如下修改：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">busuanzi_count:</span><br><span class=\"line\">  # count values only if the other configs are false</span><br><span class=\"line\">  enable: true\t// 此处</span><br><span class=\"line\">  # custom uv span for the whole site</span><br><span class=\"line\">  site_uv: true</span><br><span class=\"line\">  site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt; Visitor // 此处</span><br><span class=\"line\">  site_uv_footer:</span><br><span class=\"line\">  # custom pv span for the whole site</span><br><span class=\"line\">  site_pv: true</span><br><span class=\"line\">  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt; Total Visit // 此处</span><br><span class=\"line\">  site_pv_footer:</span><br><span class=\"line\">  # custom pv span for one page only</span><br><span class=\"line\">  page_pv: true</span><br><span class=\"line\">  page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt; View // 此处</span><br><span class=\"line\">  page_pv_footer:</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p><strong>统计数字失效解决方案</strong></p>\n<ol>\n<li>打开 <code>\\themes\\next\\layout\\_third-party\\analytics\\busuanzi-counter.swig</code></li>\n<li>将 src 替换：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script async src=&quot;https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"添加头像\"><a href=\"#添加头像\" class=\"headerlink\" title=\"添加头像\"></a>添加头像</h2><p><strong>操作如下：</strong></p>\n<ol>\n<li>将头像照片 <code>头像1.jpg</code> 保存到 D:\\blog\\themes\\next\\source\\images 路径下。</li>\n<li>打开 D:\\blog\\themes\\next_config.yml</li>\n<li>找到 <code>Sidebar Avatar</code></li>\n<li>如下修改：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Sidebar Avatar</span><br><span class=\"line\"># in theme directory(source/images): /images/avatar.gif</span><br><span class=\"line\"># in site  directory(source/uploads): /uploads/avatar.gif</span><br><span class=\"line\">avatar: /images/avatar1.JPG</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p><a name=\"添加页面\"></a></p>\n<h2 id=\"添加-About-等页面\"><a href=\"#添加-About-等页面\" class=\"headerlink\" title=\"添加 About 等页面\"></a>添加 About 等页面</h2><p>前后效果对比：</p>\n<p><img src=\"/images/%E6%B7%BB%E5%8A%A0%E9%A1%B5%E9%9D%A2%E4%B9%8B%E5%89%8D.png\" alt=\"添加页面之前\"></p>\n<p><img src=\"/images/%E6%B7%BB%E5%8A%A0%E9%A1%B5%E9%9D%A2%E4%B9%8B%E5%90%8E.png\" alt=\"添加页面之后\"></p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li><p>打开 Git Bash：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /d/blog // 进入到 blog 所在文件夹</span><br><span class=\"line\">hexo new page <span class=\"string\">\"about\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开 D:\\blog\\themes\\next_config.yml</p>\n</li>\n<li><p>找到 <code>Menu Settings</code></p>\n</li>\n<li><p>如下修改：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: / || home</span><br><span class=\"line\">  about: /about/ || user  // 此处</span><br><span class=\"line\">  #tags: /tags/ || tags</span><br><span class=\"line\">  #categories: /categories/ || th</span><br><span class=\"line\">  archives: /archives/ || archive</span><br><span class=\"line\">  #schedule: /schedule/ || calendar</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"侧边栏的分类和标签页面\"><a href=\"#侧边栏的分类和标签页面\" class=\"headerlink\" title=\"侧边栏的分类和标签页面\"></a>侧边栏的分类和标签页面</h2><p>侧边栏有三个数字，分别对应文章，分类和标签。其中点击文章，可以到文章列表页面。但是分类和标签无法点击。<br>这里很有必要激活这个功能。 在此之前需要已经存在这两个页面。 参考<a href=\"#添加页面\">添加页面</a>进行添加。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page &quot;categories&quot;</span><br><span class=\"line\">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure>\n\n<p><strong>操作如下：</strong></p>\n<ol>\n<li><p>打开 D:\\blog\\themes\\next\\layout_macro/sidebar.swig</p>\n</li>\n<li><p>找到下面代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if site.categories.length &gt; 0 %&#125;</span><br><span class=\"line\">  &#123;% set categoriesPageQuery = site.pages.find(&#123;type: &apos;categories&apos;&#125;, &#123;lean: true&#125;) %&#125;</span><br><span class=\"line\">  &#123;% set hasCategoriesPage = categoriesPageQuery.length &gt; 0 %&#125;</span><br><span class=\"line\">  &lt;div class=&quot;site-state-item site-state-categories&quot;&gt;</span><br><span class=\"line\">    &#123;% if hasCategoriesPage %&#125;&lt;a href=&quot;&#123;&#123; url_for(categoriesPageQuery[0].path) &#125;&#125;&quot;&gt;&#123;% endif %&#125;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-count&quot;&gt;&#123;&#123; site.categories.length &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-name&quot;&gt;&#123;&#123; __(&apos;state.categories&apos;) &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">    &#123;% if hasCategoriesPage %&#125;&lt;/a&gt;&#123;% endif %&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% if site.tags.length &gt; 0 %&#125;</span><br><span class=\"line\">  &#123;% set tagsPageQuery = site.pages.find(&#123;type: &apos;tags&apos;&#125;, &#123;lean: true&#125;) %&#125;</span><br><span class=\"line\">  &#123;% set hasTagsPage = tagsPageQuery.length &gt; 0 %&#125;</span><br><span class=\"line\">  &lt;div class=&quot;site-state-item site-state-tags&quot;&gt;</span><br><span class=\"line\">    &#123;% if hasTagsPage %&#125;&lt;a href=&quot;&#123;&#123; url_for(tagsPageQuery[0].path) &#125;&#125;&quot;&gt;&#123;% endif %&#125;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-count&quot;&gt;&#123;&#123; site.tags.length &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-name&quot;&gt;&#123;&#123; __(&apos;state.tags&apos;) &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">    &#123;% if hasTagsPage %&#125;&lt;/a&gt;&#123;% endif %&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>替换成下面代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if site.categories.length &gt; 0 %&#125;</span><br><span class=\"line\">  &#123;% set categoriesPageQuery = site.pages.find(&#123;type: &apos;categories&apos;&#125;, &#123;lean: true&#125;) %&#125;</span><br><span class=\"line\">  &#123;% set hasCategoriesPage = categoriesPageQuery.length &gt; 0 %&#125;</span><br><span class=\"line\">  &lt;div class=&quot;site-state-item site-state-categories&quot;&gt;</span><br><span class=\"line\">    &#123;% if hasCategoriesPage %&#125;</span><br><span class=\"line\">\t  &lt;a href=&quot;&#123;&#123; url_for(categoriesPageQuery[0].path) &#125;&#125;&quot;&gt;</span><br><span class=\"line\">\t&#123;% else %&#125;</span><br><span class=\"line\">      &lt;a href=&quot;&#123;&#123; url_for(theme.menu.categories).split(&apos;||&apos;)[0] | trim &#125;&#125;&quot;&gt;</span><br><span class=\"line\">\t&#123;% endif %&#125;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-count&quot;&gt;&#123;&#123; site.categories.length &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-name&quot;&gt;&#123;&#123; __(&apos;state.categories&apos;) &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">    &lt;/a&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% if site.tags.length &gt; 0 %&#125;</span><br><span class=\"line\">  &#123;% set tagsPageQuery = site.pages.find(&#123;type: &apos;tags&apos;&#125;, &#123;lean: true&#125;) %&#125;</span><br><span class=\"line\">  &#123;% set hasTagsPage = tagsPageQuery.length &gt; 0 %&#125;</span><br><span class=\"line\">  &lt;div class=&quot;site-state-item site-state-tags&quot;&gt;</span><br><span class=\"line\">    &#123;% if hasTagsPage %&#125;</span><br><span class=\"line\">\t  &lt;a href=&quot;&#123;&#123; url_for(tagsPageQuery[0].path) &#125;&#125;&quot;&gt;</span><br><span class=\"line\">\t&#123;% else %&#125;</span><br><span class=\"line\">      &lt;a href=&quot;&#123;&#123; url_for(theme.menu.tags).split(&apos;||&apos;)[0] | trim &#125;&#125;&quot;&gt;  </span><br><span class=\"line\">\t&#123;% endif %&#125;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-count&quot;&gt;&#123;&#123; site.tags.length &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-name&quot;&gt;&#123;&#123; __(&apos;state.tags&apos;) &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">    &lt;/a&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>没有深入研究，但应该是 <code>hasTagsPage</code> 没有实现，所以总是没有链接效果。所以给它加了一个 <code>else</code>   条件。就可以了。</p>\n<h2 id=\"分类和标签页面的自动生成-categories-amp-tags\"><a href=\"#分类和标签页面的自动生成-categories-amp-tags\" class=\"headerlink\" title=\"分类和标签页面的自动生成 categories &amp; tags\"></a>分类和标签页面的自动生成 categories &amp; tags</h2><p>一开始我自己手动添加了这两个页面的内容，后来无意看到了正确的打开方式：<a href=\"http://theme-next.iissnan.com/theme-settings.html\" target=\"_blank\" rel=\"noopener\">主题配置</a><br>很简单，分别加上 type 就可以了。</p>\n<p><strong>分类页面：</strong></p>\n<ol>\n<li>打开 D:\\blog\\source\\categories\\index.md</li>\n<li>内容如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: categories</span><br><span class=\"line\">date: 2017-11-26 18:38:13</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p><strong>标签页面：</strong></p>\n<ol>\n<li>打开 D:\\blog\\source\\tags\\index.md</li>\n<li>内容如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2017-11-26 18:38:13</span><br><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>标签页面的效果特别好，对应文章数量多的标签会比较大。效果: <a href=\"https://ryanluoxu.github.io/tags/\">tags页面</a></p>\n<h2 id=\"设置侧边栏社交链接\"><a href=\"#设置侧边栏社交链接\" class=\"headerlink\" title=\"设置侧边栏社交链接\"></a>设置侧边栏社交链接</h2><p>官方文档：<a href=\"https://github.com/iissnan/hexo-theme-next/wiki/%E8%AE%BE%E7%BD%AE%E4%BE%A7%E8%BE%B9%E6%A0%8F%E7%A4%BE%E4%BA%A4%E9%93%BE%E6%8E%A5\" target=\"_blank\" rel=\"noopener\">设置侧边栏社交链接</a></p>\n<p>但是内容好像没有更新。配置文件已经有，不需要新增。</p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li>打开 D:\\blog\\themes\\next_config.yml</li>\n<li>找到 <code>Social Links.</code></li>\n<li>修改如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">social:</span><br><span class=\"line\">  GitHub: https://github.com/Ryanluoxu || github</span><br><span class=\"line\">  Linkedin: https://www.linkedin.com/in/luo-xu-ryan-675a8041/ ||  linkedin</span><br><span class=\"line\">  ZhiHu: https://www.zhihu.com/people/luojiuri/activities ||</span><br><span class=\"line\">  #StackOverflow: https://stackoverflow.com/users/7640451/ryan-l || stack-overflow</span><br><span class=\"line\">  E-Mail: mailto:luoxu2011@gmail.com || envelope</span><br><span class=\"line\">  #右键复制: mailto:luoxu2011@gmail.com || envelope</span><br><span class=\"line\">  #Google: https://plus.google.com/yourname || google</span><br><span class=\"line\">  #Twitter: https://twitter.com/yourname || twitter</span><br><span class=\"line\">  #FB Page: https://www.facebook.com/yourname || facebook</span><br><span class=\"line\">  #VK Group: https://vk.com/yourname || vk</span><br><span class=\"line\">  #YouTube: https://youtube.com/yourname || youtube</span><br><span class=\"line\">  #Instagram: https://instagram.com/yourname || instagram</span><br><span class=\"line\">  #Skype: skype:yourname?call|chat || skype</span><br><span class=\"line\"></span><br><span class=\"line\">social_icons:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  icons_only: false</span><br><span class=\"line\">  transition: false</span><br><span class=\"line\">  GitHub: github</span><br><span class=\"line\">  Linkedin: linkedin</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"设置侧边栏社交链接-1\"><a href=\"#设置侧边栏社交链接-1\" class=\"headerlink\" title=\"设置侧边栏社交链接\"></a>设置侧边栏社交链接</h2><p>参考 <a href=\"https://zhuanlan.zhihu.com/p/30836436\" target=\"_blank\" rel=\"noopener\">Hexo+Next主题优化</a> 的 10. 自定义文章底部版权声明</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://blog.junyu.io/posts/0009-hexo-next-theme-modify.html\" target=\"_blank\" rel=\"noopener\">NexT主题个性化修改与调试方案</a></p>\n","site":{"data":{}},"excerpt":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>这篇博客用来记录和分享我对博客优化的过程，均为实际经历。欢迎纠正，与君共勉。</p>\n<h2 id=\"修改-Next-主题的-Scheme\"><a href=\"#修改-Next-主题的-Scheme\" class=\"headerlink\" title=\"修改 Next 主题的 Scheme\"></a>修改 Next 主题的 Scheme</h2><p>Next 默认的风格是 Muse。现有的四个风格里，我最喜欢 Gemini。<br>因为此风格的博客首页里，每篇博客有明显的分割。菜单在左侧，方便访问时转到别的页面。  </p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li>打开 D:\\blog\\themes\\next_config.yml</li>\n<li>找到 <code>Scheme Settings</code></li>\n<li>去掉 <code>Gemini</code> 前面的 <code>#</code>。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Schemes</span><br><span class=\"line\">#scheme: Muse</span><br><span class=\"line\">#scheme: Mist</span><br><span class=\"line\">#scheme: Pisces</span><br><span class=\"line\">scheme: Gemini</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"添加访问统计\"><a href=\"#添加访问统计\" class=\"headerlink\" title=\"添加访问统计\"></a>添加访问统计</h2><p>开始时尝试用 LeanCloud，尝试数次无果，一直得不到访问数据。<br>改用 BuSuanZi，效果显著！</p>\n<p>博客主页效果：</p>\n<p><img src=\"/images/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A1%B5%E4%B8%8B%E6%96%B9%E8%AE%BF%E9%97%AE%E9%87%8F.png\" alt=\"博客主页下方访问量\"></p>","more":"<p>文章页面效果：</p>\n<p><img src=\"/images/%E6%96%87%E7%AB%A0%E9%A1%B5%E9%9D%A2%E8%AE%BF%E9%97%AE%E9%87%8F.png\" alt=\"文章页面访问量\"></p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li>打开 D:\\blog\\themes\\next_config.yml</li>\n<li>找到 <code>busuanzi_count</code></li>\n<li>如下修改：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">busuanzi_count:</span><br><span class=\"line\">  # count values only if the other configs are false</span><br><span class=\"line\">  enable: true\t// 此处</span><br><span class=\"line\">  # custom uv span for the whole site</span><br><span class=\"line\">  site_uv: true</span><br><span class=\"line\">  site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt; Visitor // 此处</span><br><span class=\"line\">  site_uv_footer:</span><br><span class=\"line\">  # custom pv span for the whole site</span><br><span class=\"line\">  site_pv: true</span><br><span class=\"line\">  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt; Total Visit // 此处</span><br><span class=\"line\">  site_pv_footer:</span><br><span class=\"line\">  # custom pv span for one page only</span><br><span class=\"line\">  page_pv: true</span><br><span class=\"line\">  page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt; View // 此处</span><br><span class=\"line\">  page_pv_footer:</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p><strong>统计数字失效解决方案</strong></p>\n<ol>\n<li>打开 <code>\\themes\\next\\layout\\_third-party\\analytics\\busuanzi-counter.swig</code></li>\n<li>将 src 替换：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script async src=&quot;https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"添加头像\"><a href=\"#添加头像\" class=\"headerlink\" title=\"添加头像\"></a>添加头像</h2><p><strong>操作如下：</strong></p>\n<ol>\n<li>将头像照片 <code>头像1.jpg</code> 保存到 D:\\blog\\themes\\next\\source\\images 路径下。</li>\n<li>打开 D:\\blog\\themes\\next_config.yml</li>\n<li>找到 <code>Sidebar Avatar</code></li>\n<li>如下修改：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Sidebar Avatar</span><br><span class=\"line\"># in theme directory(source/images): /images/avatar.gif</span><br><span class=\"line\"># in site  directory(source/uploads): /uploads/avatar.gif</span><br><span class=\"line\">avatar: /images/avatar1.JPG</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p><a name=\"添加页面\"></a></p>\n<h2 id=\"添加-About-等页面\"><a href=\"#添加-About-等页面\" class=\"headerlink\" title=\"添加 About 等页面\"></a>添加 About 等页面</h2><p>前后效果对比：</p>\n<p><img src=\"/images/%E6%B7%BB%E5%8A%A0%E9%A1%B5%E9%9D%A2%E4%B9%8B%E5%89%8D.png\" alt=\"添加页面之前\"></p>\n<p><img src=\"/images/%E6%B7%BB%E5%8A%A0%E9%A1%B5%E9%9D%A2%E4%B9%8B%E5%90%8E.png\" alt=\"添加页面之后\"></p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li><p>打开 Git Bash：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /d/blog // 进入到 blog 所在文件夹</span><br><span class=\"line\">hexo new page <span class=\"string\">\"about\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开 D:\\blog\\themes\\next_config.yml</p>\n</li>\n<li><p>找到 <code>Menu Settings</code></p>\n</li>\n<li><p>如下修改：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: / || home</span><br><span class=\"line\">  about: /about/ || user  // 此处</span><br><span class=\"line\">  #tags: /tags/ || tags</span><br><span class=\"line\">  #categories: /categories/ || th</span><br><span class=\"line\">  archives: /archives/ || archive</span><br><span class=\"line\">  #schedule: /schedule/ || calendar</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"侧边栏的分类和标签页面\"><a href=\"#侧边栏的分类和标签页面\" class=\"headerlink\" title=\"侧边栏的分类和标签页面\"></a>侧边栏的分类和标签页面</h2><p>侧边栏有三个数字，分别对应文章，分类和标签。其中点击文章，可以到文章列表页面。但是分类和标签无法点击。<br>这里很有必要激活这个功能。 在此之前需要已经存在这两个页面。 参考<a href=\"#添加页面\">添加页面</a>进行添加。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page &quot;categories&quot;</span><br><span class=\"line\">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure>\n\n<p><strong>操作如下：</strong></p>\n<ol>\n<li><p>打开 D:\\blog\\themes\\next\\layout_macro/sidebar.swig</p>\n</li>\n<li><p>找到下面代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if site.categories.length &gt; 0 %&#125;</span><br><span class=\"line\">  &#123;% set categoriesPageQuery = site.pages.find(&#123;type: &apos;categories&apos;&#125;, &#123;lean: true&#125;) %&#125;</span><br><span class=\"line\">  &#123;% set hasCategoriesPage = categoriesPageQuery.length &gt; 0 %&#125;</span><br><span class=\"line\">  &lt;div class=&quot;site-state-item site-state-categories&quot;&gt;</span><br><span class=\"line\">    &#123;% if hasCategoriesPage %&#125;&lt;a href=&quot;&#123;&#123; url_for(categoriesPageQuery[0].path) &#125;&#125;&quot;&gt;&#123;% endif %&#125;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-count&quot;&gt;&#123;&#123; site.categories.length &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-name&quot;&gt;&#123;&#123; __(&apos;state.categories&apos;) &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">    &#123;% if hasCategoriesPage %&#125;&lt;/a&gt;&#123;% endif %&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% if site.tags.length &gt; 0 %&#125;</span><br><span class=\"line\">  &#123;% set tagsPageQuery = site.pages.find(&#123;type: &apos;tags&apos;&#125;, &#123;lean: true&#125;) %&#125;</span><br><span class=\"line\">  &#123;% set hasTagsPage = tagsPageQuery.length &gt; 0 %&#125;</span><br><span class=\"line\">  &lt;div class=&quot;site-state-item site-state-tags&quot;&gt;</span><br><span class=\"line\">    &#123;% if hasTagsPage %&#125;&lt;a href=&quot;&#123;&#123; url_for(tagsPageQuery[0].path) &#125;&#125;&quot;&gt;&#123;% endif %&#125;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-count&quot;&gt;&#123;&#123; site.tags.length &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-name&quot;&gt;&#123;&#123; __(&apos;state.tags&apos;) &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">    &#123;% if hasTagsPage %&#125;&lt;/a&gt;&#123;% endif %&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>替换成下面代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if site.categories.length &gt; 0 %&#125;</span><br><span class=\"line\">  &#123;% set categoriesPageQuery = site.pages.find(&#123;type: &apos;categories&apos;&#125;, &#123;lean: true&#125;) %&#125;</span><br><span class=\"line\">  &#123;% set hasCategoriesPage = categoriesPageQuery.length &gt; 0 %&#125;</span><br><span class=\"line\">  &lt;div class=&quot;site-state-item site-state-categories&quot;&gt;</span><br><span class=\"line\">    &#123;% if hasCategoriesPage %&#125;</span><br><span class=\"line\">\t  &lt;a href=&quot;&#123;&#123; url_for(categoriesPageQuery[0].path) &#125;&#125;&quot;&gt;</span><br><span class=\"line\">\t&#123;% else %&#125;</span><br><span class=\"line\">      &lt;a href=&quot;&#123;&#123; url_for(theme.menu.categories).split(&apos;||&apos;)[0] | trim &#125;&#125;&quot;&gt;</span><br><span class=\"line\">\t&#123;% endif %&#125;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-count&quot;&gt;&#123;&#123; site.categories.length &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-name&quot;&gt;&#123;&#123; __(&apos;state.categories&apos;) &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">    &lt;/a&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% if site.tags.length &gt; 0 %&#125;</span><br><span class=\"line\">  &#123;% set tagsPageQuery = site.pages.find(&#123;type: &apos;tags&apos;&#125;, &#123;lean: true&#125;) %&#125;</span><br><span class=\"line\">  &#123;% set hasTagsPage = tagsPageQuery.length &gt; 0 %&#125;</span><br><span class=\"line\">  &lt;div class=&quot;site-state-item site-state-tags&quot;&gt;</span><br><span class=\"line\">    &#123;% if hasTagsPage %&#125;</span><br><span class=\"line\">\t  &lt;a href=&quot;&#123;&#123; url_for(tagsPageQuery[0].path) &#125;&#125;&quot;&gt;</span><br><span class=\"line\">\t&#123;% else %&#125;</span><br><span class=\"line\">      &lt;a href=&quot;&#123;&#123; url_for(theme.menu.tags).split(&apos;||&apos;)[0] | trim &#125;&#125;&quot;&gt;  </span><br><span class=\"line\">\t&#123;% endif %&#125;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-count&quot;&gt;&#123;&#123; site.tags.length &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-name&quot;&gt;&#123;&#123; __(&apos;state.tags&apos;) &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">    &lt;/a&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>没有深入研究，但应该是 <code>hasTagsPage</code> 没有实现，所以总是没有链接效果。所以给它加了一个 <code>else</code>   条件。就可以了。</p>\n<h2 id=\"分类和标签页面的自动生成-categories-amp-tags\"><a href=\"#分类和标签页面的自动生成-categories-amp-tags\" class=\"headerlink\" title=\"分类和标签页面的自动生成 categories &amp; tags\"></a>分类和标签页面的自动生成 categories &amp; tags</h2><p>一开始我自己手动添加了这两个页面的内容，后来无意看到了正确的打开方式：<a href=\"http://theme-next.iissnan.com/theme-settings.html\" target=\"_blank\" rel=\"noopener\">主题配置</a><br>很简单，分别加上 type 就可以了。</p>\n<p><strong>分类页面：</strong></p>\n<ol>\n<li>打开 D:\\blog\\source\\categories\\index.md</li>\n<li>内容如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: categories</span><br><span class=\"line\">date: 2017-11-26 18:38:13</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p><strong>标签页面：</strong></p>\n<ol>\n<li>打开 D:\\blog\\source\\tags\\index.md</li>\n<li>内容如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2017-11-26 18:38:13</span><br><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>标签页面的效果特别好，对应文章数量多的标签会比较大。效果: <a href=\"https://ryanluoxu.github.io/tags/\">tags页面</a></p>\n<h2 id=\"设置侧边栏社交链接\"><a href=\"#设置侧边栏社交链接\" class=\"headerlink\" title=\"设置侧边栏社交链接\"></a>设置侧边栏社交链接</h2><p>官方文档：<a href=\"https://github.com/iissnan/hexo-theme-next/wiki/%E8%AE%BE%E7%BD%AE%E4%BE%A7%E8%BE%B9%E6%A0%8F%E7%A4%BE%E4%BA%A4%E9%93%BE%E6%8E%A5\" target=\"_blank\" rel=\"noopener\">设置侧边栏社交链接</a></p>\n<p>但是内容好像没有更新。配置文件已经有，不需要新增。</p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li>打开 D:\\blog\\themes\\next_config.yml</li>\n<li>找到 <code>Social Links.</code></li>\n<li>修改如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">social:</span><br><span class=\"line\">  GitHub: https://github.com/Ryanluoxu || github</span><br><span class=\"line\">  Linkedin: https://www.linkedin.com/in/luo-xu-ryan-675a8041/ ||  linkedin</span><br><span class=\"line\">  ZhiHu: https://www.zhihu.com/people/luojiuri/activities ||</span><br><span class=\"line\">  #StackOverflow: https://stackoverflow.com/users/7640451/ryan-l || stack-overflow</span><br><span class=\"line\">  E-Mail: mailto:luoxu2011@gmail.com || envelope</span><br><span class=\"line\">  #右键复制: mailto:luoxu2011@gmail.com || envelope</span><br><span class=\"line\">  #Google: https://plus.google.com/yourname || google</span><br><span class=\"line\">  #Twitter: https://twitter.com/yourname || twitter</span><br><span class=\"line\">  #FB Page: https://www.facebook.com/yourname || facebook</span><br><span class=\"line\">  #VK Group: https://vk.com/yourname || vk</span><br><span class=\"line\">  #YouTube: https://youtube.com/yourname || youtube</span><br><span class=\"line\">  #Instagram: https://instagram.com/yourname || instagram</span><br><span class=\"line\">  #Skype: skype:yourname?call|chat || skype</span><br><span class=\"line\"></span><br><span class=\"line\">social_icons:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  icons_only: false</span><br><span class=\"line\">  transition: false</span><br><span class=\"line\">  GitHub: github</span><br><span class=\"line\">  Linkedin: linkedin</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"设置侧边栏社交链接-1\"><a href=\"#设置侧边栏社交链接-1\" class=\"headerlink\" title=\"设置侧边栏社交链接\"></a>设置侧边栏社交链接</h2><p>参考 <a href=\"https://zhuanlan.zhihu.com/p/30836436\" target=\"_blank\" rel=\"noopener\">Hexo+Next主题优化</a> 的 10. 自定义文章底部版权声明</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://blog.junyu.io/posts/0009-hexo-next-theme-modify.html\" target=\"_blank\" rel=\"noopener\">NexT主题个性化修改与调试方案</a></p>"},{"title":"Java Master - S10.AbstractClass","date":"2018-02-11T23:38:59.000Z","_content":"Notes and Exersice for Abstract Class of Completed Java Master Class.\n<!--more-->\n\n# Notes\n\nAbstract class is a normal class but with abstract method.\n```\npublic abstract class Animal {\n\tprivate String name;\n\tpublic Animal(String name) {\n\t\tthis.name = name;\n\t}\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\t\n\tpublic abstract void eat();\n}\n```\n\n1. Abstract class can not be instantiated. Abstract method needs to be implemented.\n2. The class extends it have to implement all the abstract classes.\n```\npublic class Dog extends Animal{\n\t\n\tpublic Dog(String name) {\n\t\tsuper(name);\n\t}\n\n\t@Override\n\tpublic void eat() {\n\t\tSystem.out.println(getName() + \" is eating bones..\");\n\t}\n}\n```\n3. Abstract class can be extended by another abstract class\n```\npublic abstract class Bird extends Animal{\n\n\tpublic Bird(String name) {\n\t\tsuper(name);\n\t}\n\n\t@Override\n\tpublic void eat() {\n\t\tSystem.out.println(getName() + \" is eating ..\");\n\t}\n\t\n\tpublic abstract void fly();\n}\n```\n4. Need to be implemented by another class so that we can initiate it.\n```\npublic class Chicken extends Bird{\n\t\n\tpublic Chicken(String name) {\n\t\tsuper(name);\n\t}\n\n\t@Override\n\tpublic void fly() {\n\t\tSystem.out.println(getName() + \" is hardly flying..\");\n\t}\n}\n```\n5. main:\n```\npublic class main {\n\n\tpublic static void main(String[] args) {\n\t\t\n\t\tAnimal myDog = new Dog(\"funny\");\n\t\tmyDog.eat();\n\t\t\n\t\t//Animal myChicken = new Chicken(\"fat\");  X no fly method\n\t\tBird myChicken = new Chicken(\"fat\");\n\t\tmyChicken.eat();\n\t\tmyChicken.fly();\n\t}\n}\n```\n# Common and Difference between Abstract Class and Interface\n## Common\n1. Cannot instantiate them. Methods without an implementation\n\n## Difference\n1. Abstract class can declare fields that are not static and final\n2. Abstract class can define public, protected and private concrete methods\n3. Abstract class can extend only one parent class but implement multiple interfaces\n\nThe purpose of an abtract class is to provide a common definition of a base class that multiple derived classes can share.\n\n# Exercise\n\n## Requirements\n- Create own LinkedList class\n- the item can be added with auto sorting from small to large\n- the item can be removed\n- use traverse method to iterate and print all the items \n\n## Codes\n### abstract class ListItem\n```\npublic abstract class ListItem {\n\n\t// need to access by subclass in the same package\n\tprotected ListItem leftLink;\n\tprotected ListItem rightLink;\n\tprivate Object value;\n\t\n\tpublic ListItem(Object value) {\n\t\tthis.value = value;\n\t}\n\tpublic Object getValue() {\n\t\treturn value;\n\t}\n\tpublic void setValue(Object value) {\n\t\tthis.value = value;\n\t}\n\t\n\tabstract ListItem next();\n\tabstract ListItem previous();\n\tabstract ListItem setNext(ListItem listItem);\n\tabstract ListItem setPrevious(ListItem listItem);\n\t\n\tabstract int compareTo(ListItem listItem);\n}\n```\n### class Node extends ListItem\n```\npublic class Node extends ListItem {\n\n\tpublic Node(Object value) {\n\t\tsuper(value);\n\t}\n\n\t@Override\n\tListItem next() {\n\t\treturn rightLink;\n\t}\n\n\t@Override\n\tListItem previous() {\n\t\treturn leftLink;\n\t}\n\n\t/**\n\t * return listItem, so that simplify the steps: \n\t * currentItem.setPrevious(listItem).setNext(currentItem);\n\t */\n\t\n\t@Override\n\tListItem setNext(ListItem listItem) {\n\t\trightLink = listItem;\n\t\treturn listItem;\n\t}\n\n\t@Override\n\tListItem setPrevious(ListItem listItem) {\n\t\tleftLink = listItem;\n\t\treturn listItem;\n\t}\n\n\t@Override\n\tint compareTo(ListItem listItem) {\n\t\treturn this.getValue().toString().compareTo(listItem.getValue().toString());\n\t}\n\t\n}\n```\n### interface MyList\n```\npublic interface MyList {\n\n\tListItem getRoot();\n\tboolean addItem(ListItem listItem);\n\tboolean removeItem(ListItem listItem);\n\tvoid traverse(ListItem listItem);\n}\n\n```\n### MyLinkedList implements MyList\n```\npublic class MyLinkedList implements MyList {\n\tprivate ListItem root = null;\n\n\t@Override\n\tpublic ListItem getRoot() {\n\t\treturn root;\n\t}\n\n\t/**\n\t * sort in order\n\t * \n\t * search from root\n\t * if newItem is greater, go to next item until end\n\t * if newItem is smaller, insert into\n\t */\n\t\n\t@Override\n\tpublic boolean addItem(ListItem listItem) {\n\t\tif (root == null) {\n\t\t\troot = listItem;\n\t\t\treturn true;\n\t\t} \n\t\tListItem currentItem = root;\n\t\twhile (currentItem != null) {\n\t\t\tint comparison = currentItem.compareTo(listItem);\n\t\t\tif (comparison < 0) { // listItem is greater.\n\t\t\t\tif (currentItem.next()==null) {\n\t\t\t\t\tcurrentItem.setNext(listItem).setPrevious(currentItem);\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tcurrentItem = currentItem.next();\n\t\t\t\t}\n\t\t\t} else if (comparison > 0) { // listItem is smaller\n\t\t\t\tif (currentItem.previous()==null) {\n\t\t\t\t\tcurrentItem.setPrevious(listItem).setNext(currentItem);\n\t\t\t\t\troot = listItem;\n\t\t\t\t} else {\n\t\t\t\t\tcurrentItem.previous().setNext(listItem).setPrevious(currentItem.previous());\n\t\t\t\t\tcurrentItem.setPrevious(listItem).setNext(currentItem);\n\t\t\t\t} \n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"Duplicated item : \" + listItem.getValue() );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t@Override\n\tpublic boolean removeItem(ListItem listItem) {\n\t\tListItem currentItem = this.getRoot();\n\t\twhile (currentItem != null) {\n\t\t\tint comparison = currentItem.compareTo(listItem);\n\t\t\tif (comparison == 0) {\n\t\t\t\tSystem.out.println(\"Deleting item : \" + listItem.getValue());\n\t\t\t\tif (currentItem.previous()==null) {\n\t\t\t\t\tif (currentItem.next()!=null) {\n\t\t\t\t\t\troot = currentItem.next();\n\t\t\t\t\t\troot.setPrevious(null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\troot = null;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (currentItem.next()==null) {\n\t\t\t\t\tcurrentItem.previous().setNext(null);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tcurrentItem.previous().setNext(currentItem.next()).setPrevious(currentItem.previous());\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tcurrentItem = currentItem.next();\n\t\t\t}\n\t\t} \n\t\t\n\t\tSystem.out.println(\"No existing: \" + listItem.getValue());\n\t\treturn false;\n\t\t\n\t}\n\n\t@Override\n\tpublic void traverse(ListItem listItem) {\n\t\tif (root == null) {\n\t\t\tSystem.out.println(\"Empty list..\");\n\t\t} else {\n\t\t\tListItem currentItem = root;\n\t\t\twhile (currentItem != null) {\n\t\t\t\tSystem.out.println(currentItem.getValue());\n\t\t\t\tcurrentItem = currentItem.next();\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n}\n```\n### main\n```\n/**\n * @author luoxu\n * \n * Create own LinkedList class\n * the item can be added with auto sorting from small to large\n * the item can be removed\n * use traverse method to iterate and print all the items \n */\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\tMyList myList = new MyLinkedList();\n\t\t\n\t\tString testData = \"2 3 1 2 5 6 7 4 9 8 7 4\";\n\t\tString[] dataArray =  testData.split(\" \");\n\t\tfor (String data : dataArray) {\n\t\t\tmyList.addItem(new Node(data));\n\t\t}\n\t\t\n\t\tmyList.traverse(myList.getRoot());\n\t\t\n\t\tmyList.removeItem(new Node(\"7\"));\n\t\tmyList.traverse(myList.getRoot());\n\t\tmyList.removeItem(new Node(\"7\"));\n\t\tmyList.traverse(myList.getRoot());\n\t\tmyList.removeItem(new Node(\"9\"));\n\t\tmyList.traverse(myList.getRoot());\n\t\tmyList.removeItem(new Node(\"5\"));\n\t\tmyList.traverse(myList.getRoot());\n\t\tmyList.removeItem(myList.getRoot());\n\t\tmyList.traverse(myList.getRoot());\n\t\tmyList.removeItem(myList.getRoot());\n\t\tmyList.traverse(myList.getRoot());\n\t\tmyList.removeItem(myList.getRoot());\n\t\tmyList.traverse(myList.getRoot());\n\t\tmyList.removeItem(myList.getRoot());\n\t\tmyList.traverse(myList.getRoot());\n\t}\n\n}\n```\n\n## Search Tree\n### SearchTree implements MyList\n```\npublic class SearchTree implements MyList{\n\t\n\t/**\n\t * the difference: single direction\n\t * starting from root to leaf, invalid for reverse\n\t * \n\t */\n\t\n\tprivate ListItem root = null;\n\n\t@Override\n\tpublic ListItem getRoot() {\n\t\treturn root;\n\t}\n\n\t@Override\n\tpublic boolean addItem(ListItem listItem) {\n\t\tif (root == null) {\n\t\t\t// empty tree, listItem become root\n\t\t\troot = listItem;\n\t\t\treturn true;\n\t\t} \n\t\t\n\t\t// otherwise start comparing\n\t\tListItem currentItem = root;\n\t\twhile (currentItem != null) {\n\t\t\tint comparison = currentItem.compareTo(listItem);\n\t\t\tif (comparison < 0) { \n\t\t\t\t// listItem is greater, move right if possible\n\t\t\t\tif (currentItem.next()==null) {\n\t\t\t\t\t// no node to the right, so add at this point\n\t\t\t\t\tcurrentItem.setNext(listItem);\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tcurrentItem = currentItem.next();\n\t\t\t\t}\n\t\t\t} else if (comparison > 0) { \n\t\t\t\t// listItem is smaller, move left if possible\n\t\t\t\tif (currentItem.previous()==null) {\n\t\t\t\t\t// no node to the left, so add at this point\n\t\t\t\t\tcurrentItem.setPrevious(listItem);\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tcurrentItem = currentItem.previous();\n\t\t\t\t} \n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"Duplicated item : \" + listItem.getValue() );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t@Override\n\tpublic boolean removeItem(ListItem listItem) {\n\t\tListItem currentItem = this.getRoot();\n\t\tListItem parentItem = currentItem;\n\t\t\n\t\twhile (currentItem != null) {\n\t\t\tint comparison = currentItem.compareTo(listItem);\n\t\t\t\n\t\t\tif (comparison < 0) {\n\t\t\t\tparentItem = currentItem;\n\t\t\t\tcurrentItem = currentItem.next();\n\t\t\t} else if (comparison > 0) {\n\t\t\t\tparentItem = currentItem;\n\t\t\t\tcurrentItem = currentItem.previous();\n\t\t\t} else {\n\t\t\t\t// found item\n\t\t\t\tperformRemove(currentItem, parentItem);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} \n\t\t\n\t\tSystem.out.println(\"No existing: \" + listItem.getValue());\n\t\treturn false;\n\t}\n\n\tprivate void performRemove(ListItem currentItem, ListItem parentItem) {\n\t\tSystem.out.println(\"Deleting:\" + currentItem.getValue());\n\t\tif (currentItem.next()==null) {\n\t\t\t// no right branch, make parent link to the left branch\n\t\t\tif (parentItem.next() == currentItem) {\n\t\t\t\t// currentItem is the right child of parent\n\t\t\t\tparentItem.setNext(currentItem.previous());\n\t\t\t} else if (parentItem.previous() == currentItem) {\n\t\t\t\t// currentItem is the left child of parent\n\t\t\t\tparentItem.setPrevious(currentItem.previous());\n\t\t\t} else {\n\t\t\t\t// parentItem == currentItem which is root\n\t\t\t\troot = currentItem.previous();\n\t\t\t}\n\t\t} else if (currentItem.previous() == null) {\n\t\t\t// no left branch, make parent link to the right branch\n\t\t\tif (parentItem.next() == currentItem) {\n\t\t\t\t// currentItem is the right child of parent\n\t\t\t\tparentItem.setNext(currentItem.next());\n\t\t\t} else if (parentItem.previous() == currentItem) {\n\t\t\t\t// currentItem is the left child of parent\n\t\t\t\tparentItem.setPrevious(currentItem.next());\n\t\t\t} else {\n\t\t\t\t// parentItem == currentItem which is root\n\t\t\t\troot = currentItem.next();\n\t\t\t}\n\t\t} else {\n\t\t\t// both left and right exist\n\t\t\t// from the right branch, find the smallest value\n\t\t\tListItem current = currentItem.next();\n\t\t\tListItem leftMostParent = currentItem;\n\t\t\twhile (current.previous()!=null) {\n\t\t\t\tleftMostParent = current;\n\t\t\t\tcurrent = current.previous();\n\t\t\t}\n\t\t\t\n\t\t\t// now current is the smallest node in the right branch\n\t\t\t// put it into current deleting node\n\t\t\tcurrentItem.setValue(current.getValue());\n\t\t\t\n\t\t\t// delete smallest node\n\t\t\tif (leftMostParent == currentItem) {\n\t\t\t\t// no leftmost node, so current points to\n\t\t\t\t// the smallest node\n\t\t\t\tcurrentItem.setNext(current.next());\n\t\t\t} else {\n\t\t\t\t// set the smallest node's parent to point to \n\t\t\t\t// the smallest node's right child\n\t\t\t\tleftMostParent.setPrevious(current.next());\n\t\t\t}\n\t\t}\n\t}\n\n\t@Override\n\tpublic void traverse(ListItem listItem) {\n\t\t// recursive method\n\t\tif (listItem != null) {\n\t\t\ttraverse(listItem.previous());\n\t\t\tSystem.out.println(listItem.getValue());\n\t\t\ttraverse(listItem.next());\n\t\t}\n\t}\n\n}\n\n```\n\n### main\n```\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\n\t\tMyList myTree = new SearchTree();\n\t\t\n\t\tString testData = \"2 3 1 2 5 6 7 4 9 8 7 4\";\n\t\tString[] dataArray =  testData.split(\" \");\n\t\tfor (String data : dataArray) {\n\t\t\tmyTree.addItem(new Node(data));\n\t\t}\n\t\t\n\t\tmyTree.traverse(myTree.getRoot());\n\t\t\n\t\tmyTree.removeItem(new Node(\"7\"));\n\t\tmyTree.traverse(myTree.getRoot());\n\t\tmyTree.removeItem(new Node(\"7\"));\n\t\tmyTree.traverse(myTree.getRoot());\n\t\tmyTree.removeItem(new Node(\"9\"));\n\t\tmyTree.traverse(myTree.getRoot());\n\t\tmyTree.removeItem(new Node(\"5\"));\n\t\tmyTree.traverse(myTree.getRoot());\n\t\tmyTree.removeItem(myTree.getRoot());\n\t\tmyTree.traverse(myTree.getRoot());\n\t\tmyTree.removeItem(myTree.getRoot());\n\t\tmyTree.traverse(myTree.getRoot());\n\t\tmyTree.removeItem(myTree.getRoot());\n\t\tmyTree.traverse(myTree.getRoot());\n\t\tmyTree.removeItem(myTree.getRoot());\n\t\tmyTree.traverse(myTree.getRoot());\n\t}\n\n}\n```","source":"_posts/Java-Master-S10-AbstractClass.md","raw":"---\ntitle: Java Master - S10.AbstractClass\ndate: 2018-02-12 07:38:59\ncategories: Java Master Course\ntags: [Java, course, note, Abstract，Abstract Class]\n---\nNotes and Exersice for Abstract Class of Completed Java Master Class.\n<!--more-->\n\n# Notes\n\nAbstract class is a normal class but with abstract method.\n```\npublic abstract class Animal {\n\tprivate String name;\n\tpublic Animal(String name) {\n\t\tthis.name = name;\n\t}\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\t\n\tpublic abstract void eat();\n}\n```\n\n1. Abstract class can not be instantiated. Abstract method needs to be implemented.\n2. The class extends it have to implement all the abstract classes.\n```\npublic class Dog extends Animal{\n\t\n\tpublic Dog(String name) {\n\t\tsuper(name);\n\t}\n\n\t@Override\n\tpublic void eat() {\n\t\tSystem.out.println(getName() + \" is eating bones..\");\n\t}\n}\n```\n3. Abstract class can be extended by another abstract class\n```\npublic abstract class Bird extends Animal{\n\n\tpublic Bird(String name) {\n\t\tsuper(name);\n\t}\n\n\t@Override\n\tpublic void eat() {\n\t\tSystem.out.println(getName() + \" is eating ..\");\n\t}\n\t\n\tpublic abstract void fly();\n}\n```\n4. Need to be implemented by another class so that we can initiate it.\n```\npublic class Chicken extends Bird{\n\t\n\tpublic Chicken(String name) {\n\t\tsuper(name);\n\t}\n\n\t@Override\n\tpublic void fly() {\n\t\tSystem.out.println(getName() + \" is hardly flying..\");\n\t}\n}\n```\n5. main:\n```\npublic class main {\n\n\tpublic static void main(String[] args) {\n\t\t\n\t\tAnimal myDog = new Dog(\"funny\");\n\t\tmyDog.eat();\n\t\t\n\t\t//Animal myChicken = new Chicken(\"fat\");  X no fly method\n\t\tBird myChicken = new Chicken(\"fat\");\n\t\tmyChicken.eat();\n\t\tmyChicken.fly();\n\t}\n}\n```\n# Common and Difference between Abstract Class and Interface\n## Common\n1. Cannot instantiate them. Methods without an implementation\n\n## Difference\n1. Abstract class can declare fields that are not static and final\n2. Abstract class can define public, protected and private concrete methods\n3. Abstract class can extend only one parent class but implement multiple interfaces\n\nThe purpose of an abtract class is to provide a common definition of a base class that multiple derived classes can share.\n\n# Exercise\n\n## Requirements\n- Create own LinkedList class\n- the item can be added with auto sorting from small to large\n- the item can be removed\n- use traverse method to iterate and print all the items \n\n## Codes\n### abstract class ListItem\n```\npublic abstract class ListItem {\n\n\t// need to access by subclass in the same package\n\tprotected ListItem leftLink;\n\tprotected ListItem rightLink;\n\tprivate Object value;\n\t\n\tpublic ListItem(Object value) {\n\t\tthis.value = value;\n\t}\n\tpublic Object getValue() {\n\t\treturn value;\n\t}\n\tpublic void setValue(Object value) {\n\t\tthis.value = value;\n\t}\n\t\n\tabstract ListItem next();\n\tabstract ListItem previous();\n\tabstract ListItem setNext(ListItem listItem);\n\tabstract ListItem setPrevious(ListItem listItem);\n\t\n\tabstract int compareTo(ListItem listItem);\n}\n```\n### class Node extends ListItem\n```\npublic class Node extends ListItem {\n\n\tpublic Node(Object value) {\n\t\tsuper(value);\n\t}\n\n\t@Override\n\tListItem next() {\n\t\treturn rightLink;\n\t}\n\n\t@Override\n\tListItem previous() {\n\t\treturn leftLink;\n\t}\n\n\t/**\n\t * return listItem, so that simplify the steps: \n\t * currentItem.setPrevious(listItem).setNext(currentItem);\n\t */\n\t\n\t@Override\n\tListItem setNext(ListItem listItem) {\n\t\trightLink = listItem;\n\t\treturn listItem;\n\t}\n\n\t@Override\n\tListItem setPrevious(ListItem listItem) {\n\t\tleftLink = listItem;\n\t\treturn listItem;\n\t}\n\n\t@Override\n\tint compareTo(ListItem listItem) {\n\t\treturn this.getValue().toString().compareTo(listItem.getValue().toString());\n\t}\n\t\n}\n```\n### interface MyList\n```\npublic interface MyList {\n\n\tListItem getRoot();\n\tboolean addItem(ListItem listItem);\n\tboolean removeItem(ListItem listItem);\n\tvoid traverse(ListItem listItem);\n}\n\n```\n### MyLinkedList implements MyList\n```\npublic class MyLinkedList implements MyList {\n\tprivate ListItem root = null;\n\n\t@Override\n\tpublic ListItem getRoot() {\n\t\treturn root;\n\t}\n\n\t/**\n\t * sort in order\n\t * \n\t * search from root\n\t * if newItem is greater, go to next item until end\n\t * if newItem is smaller, insert into\n\t */\n\t\n\t@Override\n\tpublic boolean addItem(ListItem listItem) {\n\t\tif (root == null) {\n\t\t\troot = listItem;\n\t\t\treturn true;\n\t\t} \n\t\tListItem currentItem = root;\n\t\twhile (currentItem != null) {\n\t\t\tint comparison = currentItem.compareTo(listItem);\n\t\t\tif (comparison < 0) { // listItem is greater.\n\t\t\t\tif (currentItem.next()==null) {\n\t\t\t\t\tcurrentItem.setNext(listItem).setPrevious(currentItem);\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tcurrentItem = currentItem.next();\n\t\t\t\t}\n\t\t\t} else if (comparison > 0) { // listItem is smaller\n\t\t\t\tif (currentItem.previous()==null) {\n\t\t\t\t\tcurrentItem.setPrevious(listItem).setNext(currentItem);\n\t\t\t\t\troot = listItem;\n\t\t\t\t} else {\n\t\t\t\t\tcurrentItem.previous().setNext(listItem).setPrevious(currentItem.previous());\n\t\t\t\t\tcurrentItem.setPrevious(listItem).setNext(currentItem);\n\t\t\t\t} \n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"Duplicated item : \" + listItem.getValue() );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t@Override\n\tpublic boolean removeItem(ListItem listItem) {\n\t\tListItem currentItem = this.getRoot();\n\t\twhile (currentItem != null) {\n\t\t\tint comparison = currentItem.compareTo(listItem);\n\t\t\tif (comparison == 0) {\n\t\t\t\tSystem.out.println(\"Deleting item : \" + listItem.getValue());\n\t\t\t\tif (currentItem.previous()==null) {\n\t\t\t\t\tif (currentItem.next()!=null) {\n\t\t\t\t\t\troot = currentItem.next();\n\t\t\t\t\t\troot.setPrevious(null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\troot = null;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (currentItem.next()==null) {\n\t\t\t\t\tcurrentItem.previous().setNext(null);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tcurrentItem.previous().setNext(currentItem.next()).setPrevious(currentItem.previous());\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tcurrentItem = currentItem.next();\n\t\t\t}\n\t\t} \n\t\t\n\t\tSystem.out.println(\"No existing: \" + listItem.getValue());\n\t\treturn false;\n\t\t\n\t}\n\n\t@Override\n\tpublic void traverse(ListItem listItem) {\n\t\tif (root == null) {\n\t\t\tSystem.out.println(\"Empty list..\");\n\t\t} else {\n\t\t\tListItem currentItem = root;\n\t\t\twhile (currentItem != null) {\n\t\t\t\tSystem.out.println(currentItem.getValue());\n\t\t\t\tcurrentItem = currentItem.next();\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n}\n```\n### main\n```\n/**\n * @author luoxu\n * \n * Create own LinkedList class\n * the item can be added with auto sorting from small to large\n * the item can be removed\n * use traverse method to iterate and print all the items \n */\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\tMyList myList = new MyLinkedList();\n\t\t\n\t\tString testData = \"2 3 1 2 5 6 7 4 9 8 7 4\";\n\t\tString[] dataArray =  testData.split(\" \");\n\t\tfor (String data : dataArray) {\n\t\t\tmyList.addItem(new Node(data));\n\t\t}\n\t\t\n\t\tmyList.traverse(myList.getRoot());\n\t\t\n\t\tmyList.removeItem(new Node(\"7\"));\n\t\tmyList.traverse(myList.getRoot());\n\t\tmyList.removeItem(new Node(\"7\"));\n\t\tmyList.traverse(myList.getRoot());\n\t\tmyList.removeItem(new Node(\"9\"));\n\t\tmyList.traverse(myList.getRoot());\n\t\tmyList.removeItem(new Node(\"5\"));\n\t\tmyList.traverse(myList.getRoot());\n\t\tmyList.removeItem(myList.getRoot());\n\t\tmyList.traverse(myList.getRoot());\n\t\tmyList.removeItem(myList.getRoot());\n\t\tmyList.traverse(myList.getRoot());\n\t\tmyList.removeItem(myList.getRoot());\n\t\tmyList.traverse(myList.getRoot());\n\t\tmyList.removeItem(myList.getRoot());\n\t\tmyList.traverse(myList.getRoot());\n\t}\n\n}\n```\n\n## Search Tree\n### SearchTree implements MyList\n```\npublic class SearchTree implements MyList{\n\t\n\t/**\n\t * the difference: single direction\n\t * starting from root to leaf, invalid for reverse\n\t * \n\t */\n\t\n\tprivate ListItem root = null;\n\n\t@Override\n\tpublic ListItem getRoot() {\n\t\treturn root;\n\t}\n\n\t@Override\n\tpublic boolean addItem(ListItem listItem) {\n\t\tif (root == null) {\n\t\t\t// empty tree, listItem become root\n\t\t\troot = listItem;\n\t\t\treturn true;\n\t\t} \n\t\t\n\t\t// otherwise start comparing\n\t\tListItem currentItem = root;\n\t\twhile (currentItem != null) {\n\t\t\tint comparison = currentItem.compareTo(listItem);\n\t\t\tif (comparison < 0) { \n\t\t\t\t// listItem is greater, move right if possible\n\t\t\t\tif (currentItem.next()==null) {\n\t\t\t\t\t// no node to the right, so add at this point\n\t\t\t\t\tcurrentItem.setNext(listItem);\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tcurrentItem = currentItem.next();\n\t\t\t\t}\n\t\t\t} else if (comparison > 0) { \n\t\t\t\t// listItem is smaller, move left if possible\n\t\t\t\tif (currentItem.previous()==null) {\n\t\t\t\t\t// no node to the left, so add at this point\n\t\t\t\t\tcurrentItem.setPrevious(listItem);\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tcurrentItem = currentItem.previous();\n\t\t\t\t} \n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"Duplicated item : \" + listItem.getValue() );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t@Override\n\tpublic boolean removeItem(ListItem listItem) {\n\t\tListItem currentItem = this.getRoot();\n\t\tListItem parentItem = currentItem;\n\t\t\n\t\twhile (currentItem != null) {\n\t\t\tint comparison = currentItem.compareTo(listItem);\n\t\t\t\n\t\t\tif (comparison < 0) {\n\t\t\t\tparentItem = currentItem;\n\t\t\t\tcurrentItem = currentItem.next();\n\t\t\t} else if (comparison > 0) {\n\t\t\t\tparentItem = currentItem;\n\t\t\t\tcurrentItem = currentItem.previous();\n\t\t\t} else {\n\t\t\t\t// found item\n\t\t\t\tperformRemove(currentItem, parentItem);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} \n\t\t\n\t\tSystem.out.println(\"No existing: \" + listItem.getValue());\n\t\treturn false;\n\t}\n\n\tprivate void performRemove(ListItem currentItem, ListItem parentItem) {\n\t\tSystem.out.println(\"Deleting:\" + currentItem.getValue());\n\t\tif (currentItem.next()==null) {\n\t\t\t// no right branch, make parent link to the left branch\n\t\t\tif (parentItem.next() == currentItem) {\n\t\t\t\t// currentItem is the right child of parent\n\t\t\t\tparentItem.setNext(currentItem.previous());\n\t\t\t} else if (parentItem.previous() == currentItem) {\n\t\t\t\t// currentItem is the left child of parent\n\t\t\t\tparentItem.setPrevious(currentItem.previous());\n\t\t\t} else {\n\t\t\t\t// parentItem == currentItem which is root\n\t\t\t\troot = currentItem.previous();\n\t\t\t}\n\t\t} else if (currentItem.previous() == null) {\n\t\t\t// no left branch, make parent link to the right branch\n\t\t\tif (parentItem.next() == currentItem) {\n\t\t\t\t// currentItem is the right child of parent\n\t\t\t\tparentItem.setNext(currentItem.next());\n\t\t\t} else if (parentItem.previous() == currentItem) {\n\t\t\t\t// currentItem is the left child of parent\n\t\t\t\tparentItem.setPrevious(currentItem.next());\n\t\t\t} else {\n\t\t\t\t// parentItem == currentItem which is root\n\t\t\t\troot = currentItem.next();\n\t\t\t}\n\t\t} else {\n\t\t\t// both left and right exist\n\t\t\t// from the right branch, find the smallest value\n\t\t\tListItem current = currentItem.next();\n\t\t\tListItem leftMostParent = currentItem;\n\t\t\twhile (current.previous()!=null) {\n\t\t\t\tleftMostParent = current;\n\t\t\t\tcurrent = current.previous();\n\t\t\t}\n\t\t\t\n\t\t\t// now current is the smallest node in the right branch\n\t\t\t// put it into current deleting node\n\t\t\tcurrentItem.setValue(current.getValue());\n\t\t\t\n\t\t\t// delete smallest node\n\t\t\tif (leftMostParent == currentItem) {\n\t\t\t\t// no leftmost node, so current points to\n\t\t\t\t// the smallest node\n\t\t\t\tcurrentItem.setNext(current.next());\n\t\t\t} else {\n\t\t\t\t// set the smallest node's parent to point to \n\t\t\t\t// the smallest node's right child\n\t\t\t\tleftMostParent.setPrevious(current.next());\n\t\t\t}\n\t\t}\n\t}\n\n\t@Override\n\tpublic void traverse(ListItem listItem) {\n\t\t// recursive method\n\t\tif (listItem != null) {\n\t\t\ttraverse(listItem.previous());\n\t\t\tSystem.out.println(listItem.getValue());\n\t\t\ttraverse(listItem.next());\n\t\t}\n\t}\n\n}\n\n```\n\n### main\n```\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\n\t\tMyList myTree = new SearchTree();\n\t\t\n\t\tString testData = \"2 3 1 2 5 6 7 4 9 8 7 4\";\n\t\tString[] dataArray =  testData.split(\" \");\n\t\tfor (String data : dataArray) {\n\t\t\tmyTree.addItem(new Node(data));\n\t\t}\n\t\t\n\t\tmyTree.traverse(myTree.getRoot());\n\t\t\n\t\tmyTree.removeItem(new Node(\"7\"));\n\t\tmyTree.traverse(myTree.getRoot());\n\t\tmyTree.removeItem(new Node(\"7\"));\n\t\tmyTree.traverse(myTree.getRoot());\n\t\tmyTree.removeItem(new Node(\"9\"));\n\t\tmyTree.traverse(myTree.getRoot());\n\t\tmyTree.removeItem(new Node(\"5\"));\n\t\tmyTree.traverse(myTree.getRoot());\n\t\tmyTree.removeItem(myTree.getRoot());\n\t\tmyTree.traverse(myTree.getRoot());\n\t\tmyTree.removeItem(myTree.getRoot());\n\t\tmyTree.traverse(myTree.getRoot());\n\t\tmyTree.removeItem(myTree.getRoot());\n\t\tmyTree.traverse(myTree.getRoot());\n\t\tmyTree.removeItem(myTree.getRoot());\n\t\tmyTree.traverse(myTree.getRoot());\n\t}\n\n}\n```","slug":"Java-Master-S10-AbstractClass","published":1,"updated":"2020-04-30T09:23:19.529Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedi6000lsd5t28xu3y89","content":"<p>Notes and Exersice for Abstract Class of Completed Java Master Class.</p>\n<a id=\"more\"></a>\n\n<h1 id=\"Notes\"><a href=\"#Notes\" class=\"headerlink\" title=\"Notes\"></a>Notes</h1><p>Abstract class is a normal class but with abstract method.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public abstract class Animal &#123;</span><br><span class=\"line\">\tprivate String name;</span><br><span class=\"line\">\tpublic Animal(String name) &#123;</span><br><span class=\"line\">\t\tthis.name = name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic String getName() &#123;</span><br><span class=\"line\">\t\treturn name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic abstract void eat();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>Abstract class can not be instantiated. Abstract method needs to be implemented.</p>\n</li>\n<li><p>The class extends it have to implement all the abstract classes.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Dog extends Animal&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic Dog(String name) &#123;</span><br><span class=\"line\">\t\tsuper(name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic void eat() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(getName() + &quot; is eating bones..&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Abstract class can be extended by another abstract class</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public abstract class Bird extends Animal&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic Bird(String name) &#123;</span><br><span class=\"line\">\t\tsuper(name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic void eat() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(getName() + &quot; is eating ..&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic abstract void fly();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Need to be implemented by another class so that we can initiate it.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Chicken extends Bird&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic Chicken(String name) &#123;</span><br><span class=\"line\">\t\tsuper(name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic void fly() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(getName() + &quot; is hardly flying..&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>main:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class main &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tAnimal myDog = new Dog(&quot;funny&quot;);</span><br><span class=\"line\">\t\tmyDog.eat();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t//Animal myChicken = new Chicken(&quot;fat&quot;);  X no fly method</span><br><span class=\"line\">\t\tBird myChicken = new Chicken(&quot;fat&quot;);</span><br><span class=\"line\">\t\tmyChicken.eat();</span><br><span class=\"line\">\t\tmyChicken.fly();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h1 id=\"Common-and-Difference-between-Abstract-Class-and-Interface\"><a href=\"#Common-and-Difference-between-Abstract-Class-and-Interface\" class=\"headerlink\" title=\"Common and Difference between Abstract Class and Interface\"></a>Common and Difference between Abstract Class and Interface</h1><h2 id=\"Common\"><a href=\"#Common\" class=\"headerlink\" title=\"Common\"></a>Common</h2><ol>\n<li>Cannot instantiate them. Methods without an implementation</li>\n</ol>\n<h2 id=\"Difference\"><a href=\"#Difference\" class=\"headerlink\" title=\"Difference\"></a>Difference</h2><ol>\n<li>Abstract class can declare fields that are not static and final</li>\n<li>Abstract class can define public, protected and private concrete methods</li>\n<li>Abstract class can extend only one parent class but implement multiple interfaces</li>\n</ol>\n<p>The purpose of an abtract class is to provide a common definition of a base class that multiple derived classes can share.</p>\n<h1 id=\"Exercise\"><a href=\"#Exercise\" class=\"headerlink\" title=\"Exercise\"></a>Exercise</h1><h2 id=\"Requirements\"><a href=\"#Requirements\" class=\"headerlink\" title=\"Requirements\"></a>Requirements</h2><ul>\n<li>Create own LinkedList class</li>\n<li>the item can be added with auto sorting from small to large</li>\n<li>the item can be removed</li>\n<li>use traverse method to iterate and print all the items </li>\n</ul>\n<h2 id=\"Codes\"><a href=\"#Codes\" class=\"headerlink\" title=\"Codes\"></a>Codes</h2><h3 id=\"abstract-class-ListItem\"><a href=\"#abstract-class-ListItem\" class=\"headerlink\" title=\"abstract class ListItem\"></a>abstract class ListItem</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public abstract class ListItem &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t// need to access by subclass in the same package</span><br><span class=\"line\">\tprotected ListItem leftLink;</span><br><span class=\"line\">\tprotected ListItem rightLink;</span><br><span class=\"line\">\tprivate Object value;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic ListItem(Object value) &#123;</span><br><span class=\"line\">\t\tthis.value = value;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic Object getValue() &#123;</span><br><span class=\"line\">\t\treturn value;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic void setValue(Object value) &#123;</span><br><span class=\"line\">\t\tthis.value = value;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tabstract ListItem next();</span><br><span class=\"line\">\tabstract ListItem previous();</span><br><span class=\"line\">\tabstract ListItem setNext(ListItem listItem);</span><br><span class=\"line\">\tabstract ListItem setPrevious(ListItem listItem);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tabstract int compareTo(ListItem listItem);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"class-Node-extends-ListItem\"><a href=\"#class-Node-extends-ListItem\" class=\"headerlink\" title=\"class Node extends ListItem\"></a>class Node extends ListItem</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Node extends ListItem &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic Node(Object value) &#123;</span><br><span class=\"line\">\t\tsuper(value);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tListItem next() &#123;</span><br><span class=\"line\">\t\treturn rightLink;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tListItem previous() &#123;</span><br><span class=\"line\">\t\treturn leftLink;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t/**</span><br><span class=\"line\">\t * return listItem, so that simplify the steps: </span><br><span class=\"line\">\t * currentItem.setPrevious(listItem).setNext(currentItem);</span><br><span class=\"line\">\t */</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tListItem setNext(ListItem listItem) &#123;</span><br><span class=\"line\">\t\trightLink = listItem;</span><br><span class=\"line\">\t\treturn listItem;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tListItem setPrevious(ListItem listItem) &#123;</span><br><span class=\"line\">\t\tleftLink = listItem;</span><br><span class=\"line\">\t\treturn listItem;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tint compareTo(ListItem listItem) &#123;</span><br><span class=\"line\">\t\treturn this.getValue().toString().compareTo(listItem.getValue().toString());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"interface-MyList\"><a href=\"#interface-MyList\" class=\"headerlink\" title=\"interface MyList\"></a>interface MyList</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public interface MyList &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tListItem getRoot();</span><br><span class=\"line\">\tboolean addItem(ListItem listItem);</span><br><span class=\"line\">\tboolean removeItem(ListItem listItem);</span><br><span class=\"line\">\tvoid traverse(ListItem listItem);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"MyLinkedList-implements-MyList\"><a href=\"#MyLinkedList-implements-MyList\" class=\"headerlink\" title=\"MyLinkedList implements MyList\"></a>MyLinkedList implements MyList</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class MyLinkedList implements MyList &#123;</span><br><span class=\"line\">\tprivate ListItem root = null;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic ListItem getRoot() &#123;</span><br><span class=\"line\">\t\treturn root;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t/**</span><br><span class=\"line\">\t * sort in order</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t * search from root</span><br><span class=\"line\">\t * if newItem is greater, go to next item until end</span><br><span class=\"line\">\t * if newItem is smaller, insert into</span><br><span class=\"line\">\t */</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic boolean addItem(ListItem listItem) &#123;</span><br><span class=\"line\">\t\tif (root == null) &#123;</span><br><span class=\"line\">\t\t\troot = listItem;</span><br><span class=\"line\">\t\t\treturn true;</span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\">\t\tListItem currentItem = root;</span><br><span class=\"line\">\t\twhile (currentItem != null) &#123;</span><br><span class=\"line\">\t\t\tint comparison = currentItem.compareTo(listItem);</span><br><span class=\"line\">\t\t\tif (comparison &lt; 0) &#123; // listItem is greater.</span><br><span class=\"line\">\t\t\t\tif (currentItem.next()==null) &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentItem.setNext(listItem).setPrevious(currentItem);</span><br><span class=\"line\">\t\t\t\t\treturn true;</span><br><span class=\"line\">\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentItem = currentItem.next();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125; else if (comparison &gt; 0) &#123; // listItem is smaller</span><br><span class=\"line\">\t\t\t\tif (currentItem.previous()==null) &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentItem.setPrevious(listItem).setNext(currentItem);</span><br><span class=\"line\">\t\t\t\t\troot = listItem;</span><br><span class=\"line\">\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentItem.previous().setNext(listItem).setPrevious(currentItem.previous());</span><br><span class=\"line\">\t\t\t\t\tcurrentItem.setPrevious(listItem).setNext(currentItem);</span><br><span class=\"line\">\t\t\t\t&#125; </span><br><span class=\"line\">\t\t\t\treturn true;</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;Duplicated item : &quot; + listItem.getValue() );</span><br><span class=\"line\">\t\t\t\treturn false;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\treturn false;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic boolean removeItem(ListItem listItem) &#123;</span><br><span class=\"line\">\t\tListItem currentItem = this.getRoot();</span><br><span class=\"line\">\t\twhile (currentItem != null) &#123;</span><br><span class=\"line\">\t\t\tint comparison = currentItem.compareTo(listItem);</span><br><span class=\"line\">\t\t\tif (comparison == 0) &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;Deleting item : &quot; + listItem.getValue());</span><br><span class=\"line\">\t\t\t\tif (currentItem.previous()==null) &#123;</span><br><span class=\"line\">\t\t\t\t\tif (currentItem.next()!=null) &#123;</span><br><span class=\"line\">\t\t\t\t\t\troot = currentItem.next();</span><br><span class=\"line\">\t\t\t\t\t\troot.setPrevious(null);</span><br><span class=\"line\">\t\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\t\troot = null;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\treturn true;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tif (currentItem.next()==null) &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentItem.previous().setNext(null);</span><br><span class=\"line\">\t\t\t\t\treturn true;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tcurrentItem.previous().setNext(currentItem.next()).setPrevious(currentItem.previous());</span><br><span class=\"line\">\t\t\t\treturn true;</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tcurrentItem = currentItem.next();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.out.println(&quot;No existing: &quot; + listItem.getValue());</span><br><span class=\"line\">\t\treturn false;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic void traverse(ListItem listItem) &#123;</span><br><span class=\"line\">\t\tif (root == null) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;Empty list..&quot;);</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tListItem currentItem = root;</span><br><span class=\"line\">\t\t\twhile (currentItem != null) &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(currentItem.getValue());</span><br><span class=\"line\">\t\t\t\tcurrentItem = currentItem.next();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"main\"><a href=\"#main\" class=\"headerlink\" title=\"main\"></a>main</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * @author luoxu</span><br><span class=\"line\"> * </span><br><span class=\"line\"> * Create own LinkedList class</span><br><span class=\"line\"> * the item can be added with auto sorting from small to large</span><br><span class=\"line\"> * the item can be removed</span><br><span class=\"line\"> * use traverse method to iterate and print all the items </span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">public class Main &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tMyList myList = new MyLinkedList();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tString testData = &quot;2 3 1 2 5 6 7 4 9 8 7 4&quot;;</span><br><span class=\"line\">\t\tString[] dataArray =  testData.split(&quot; &quot;);</span><br><span class=\"line\">\t\tfor (String data : dataArray) &#123;</span><br><span class=\"line\">\t\t\tmyList.addItem(new Node(data));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tmyList.traverse(myList.getRoot());</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tmyList.removeItem(new Node(&quot;7&quot;));</span><br><span class=\"line\">\t\tmyList.traverse(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.removeItem(new Node(&quot;7&quot;));</span><br><span class=\"line\">\t\tmyList.traverse(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.removeItem(new Node(&quot;9&quot;));</span><br><span class=\"line\">\t\tmyList.traverse(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.removeItem(new Node(&quot;5&quot;));</span><br><span class=\"line\">\t\tmyList.traverse(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.removeItem(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.traverse(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.removeItem(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.traverse(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.removeItem(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.traverse(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.removeItem(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.traverse(myList.getRoot());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Search-Tree\"><a href=\"#Search-Tree\" class=\"headerlink\" title=\"Search Tree\"></a>Search Tree</h2><h3 id=\"SearchTree-implements-MyList\"><a href=\"#SearchTree-implements-MyList\" class=\"headerlink\" title=\"SearchTree implements MyList\"></a>SearchTree implements MyList</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class SearchTree implements MyList&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t/**</span><br><span class=\"line\">\t * the difference: single direction</span><br><span class=\"line\">\t * starting from root to leaf, invalid for reverse</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t */</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tprivate ListItem root = null;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic ListItem getRoot() &#123;</span><br><span class=\"line\">\t\treturn root;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic boolean addItem(ListItem listItem) &#123;</span><br><span class=\"line\">\t\tif (root == null) &#123;</span><br><span class=\"line\">\t\t\t// empty tree, listItem become root</span><br><span class=\"line\">\t\t\troot = listItem;</span><br><span class=\"line\">\t\t\treturn true;</span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t// otherwise start comparing</span><br><span class=\"line\">\t\tListItem currentItem = root;</span><br><span class=\"line\">\t\twhile (currentItem != null) &#123;</span><br><span class=\"line\">\t\t\tint comparison = currentItem.compareTo(listItem);</span><br><span class=\"line\">\t\t\tif (comparison &lt; 0) &#123; </span><br><span class=\"line\">\t\t\t\t// listItem is greater, move right if possible</span><br><span class=\"line\">\t\t\t\tif (currentItem.next()==null) &#123;</span><br><span class=\"line\">\t\t\t\t\t// no node to the right, so add at this point</span><br><span class=\"line\">\t\t\t\t\tcurrentItem.setNext(listItem);</span><br><span class=\"line\">\t\t\t\t\treturn true;</span><br><span class=\"line\">\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentItem = currentItem.next();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125; else if (comparison &gt; 0) &#123; </span><br><span class=\"line\">\t\t\t\t// listItem is smaller, move left if possible</span><br><span class=\"line\">\t\t\t\tif (currentItem.previous()==null) &#123;</span><br><span class=\"line\">\t\t\t\t\t// no node to the left, so add at this point</span><br><span class=\"line\">\t\t\t\t\tcurrentItem.setPrevious(listItem);</span><br><span class=\"line\">\t\t\t\t\treturn true;</span><br><span class=\"line\">\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentItem = currentItem.previous();</span><br><span class=\"line\">\t\t\t\t&#125; </span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;Duplicated item : &quot; + listItem.getValue() );</span><br><span class=\"line\">\t\t\t\treturn false;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\treturn false;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic boolean removeItem(ListItem listItem) &#123;</span><br><span class=\"line\">\t\tListItem currentItem = this.getRoot();</span><br><span class=\"line\">\t\tListItem parentItem = currentItem;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\twhile (currentItem != null) &#123;</span><br><span class=\"line\">\t\t\tint comparison = currentItem.compareTo(listItem);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\tif (comparison &lt; 0) &#123;</span><br><span class=\"line\">\t\t\t\tparentItem = currentItem;</span><br><span class=\"line\">\t\t\t\tcurrentItem = currentItem.next();</span><br><span class=\"line\">\t\t\t&#125; else if (comparison &gt; 0) &#123;</span><br><span class=\"line\">\t\t\t\tparentItem = currentItem;</span><br><span class=\"line\">\t\t\t\tcurrentItem = currentItem.previous();</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t// found item</span><br><span class=\"line\">\t\t\t\tperformRemove(currentItem, parentItem);</span><br><span class=\"line\">\t\t\t\treturn true;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.out.println(&quot;No existing: &quot; + listItem.getValue());</span><br><span class=\"line\">\t\treturn false;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void performRemove(ListItem currentItem, ListItem parentItem) &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Deleting:&quot; + currentItem.getValue());</span><br><span class=\"line\">\t\tif (currentItem.next()==null) &#123;</span><br><span class=\"line\">\t\t\t// no right branch, make parent link to the left branch</span><br><span class=\"line\">\t\t\tif (parentItem.next() == currentItem) &#123;</span><br><span class=\"line\">\t\t\t\t// currentItem is the right child of parent</span><br><span class=\"line\">\t\t\t\tparentItem.setNext(currentItem.previous());</span><br><span class=\"line\">\t\t\t&#125; else if (parentItem.previous() == currentItem) &#123;</span><br><span class=\"line\">\t\t\t\t// currentItem is the left child of parent</span><br><span class=\"line\">\t\t\t\tparentItem.setPrevious(currentItem.previous());</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t// parentItem == currentItem which is root</span><br><span class=\"line\">\t\t\t\troot = currentItem.previous();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; else if (currentItem.previous() == null) &#123;</span><br><span class=\"line\">\t\t\t// no left branch, make parent link to the right branch</span><br><span class=\"line\">\t\t\tif (parentItem.next() == currentItem) &#123;</span><br><span class=\"line\">\t\t\t\t// currentItem is the right child of parent</span><br><span class=\"line\">\t\t\t\tparentItem.setNext(currentItem.next());</span><br><span class=\"line\">\t\t\t&#125; else if (parentItem.previous() == currentItem) &#123;</span><br><span class=\"line\">\t\t\t\t// currentItem is the left child of parent</span><br><span class=\"line\">\t\t\t\tparentItem.setPrevious(currentItem.next());</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t// parentItem == currentItem which is root</span><br><span class=\"line\">\t\t\t\troot = currentItem.next();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t// both left and right exist</span><br><span class=\"line\">\t\t\t// from the right branch, find the smallest value</span><br><span class=\"line\">\t\t\tListItem current = currentItem.next();</span><br><span class=\"line\">\t\t\tListItem leftMostParent = currentItem;</span><br><span class=\"line\">\t\t\twhile (current.previous()!=null) &#123;</span><br><span class=\"line\">\t\t\t\tleftMostParent = current;</span><br><span class=\"line\">\t\t\t\tcurrent = current.previous();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t// now current is the smallest node in the right branch</span><br><span class=\"line\">\t\t\t// put it into current deleting node</span><br><span class=\"line\">\t\t\tcurrentItem.setValue(current.getValue());</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t// delete smallest node</span><br><span class=\"line\">\t\t\tif (leftMostParent == currentItem) &#123;</span><br><span class=\"line\">\t\t\t\t// no leftmost node, so current points to</span><br><span class=\"line\">\t\t\t\t// the smallest node</span><br><span class=\"line\">\t\t\t\tcurrentItem.setNext(current.next());</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t// set the smallest node&apos;s parent to point to </span><br><span class=\"line\">\t\t\t\t// the smallest node&apos;s right child</span><br><span class=\"line\">\t\t\t\tleftMostParent.setPrevious(current.next());</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic void traverse(ListItem listItem) &#123;</span><br><span class=\"line\">\t\t// recursive method</span><br><span class=\"line\">\t\tif (listItem != null) &#123;</span><br><span class=\"line\">\t\t\ttraverse(listItem.previous());</span><br><span class=\"line\">\t\t\tSystem.out.println(listItem.getValue());</span><br><span class=\"line\">\t\t\ttraverse(listItem.next());</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"main-1\"><a href=\"#main-1\" class=\"headerlink\" title=\"main\"></a>main</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Main &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tMyList myTree = new SearchTree();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tString testData = &quot;2 3 1 2 5 6 7 4 9 8 7 4&quot;;</span><br><span class=\"line\">\t\tString[] dataArray =  testData.split(&quot; &quot;);</span><br><span class=\"line\">\t\tfor (String data : dataArray) &#123;</span><br><span class=\"line\">\t\t\tmyTree.addItem(new Node(data));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tmyTree.traverse(myTree.getRoot());</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tmyTree.removeItem(new Node(&quot;7&quot;));</span><br><span class=\"line\">\t\tmyTree.traverse(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.removeItem(new Node(&quot;7&quot;));</span><br><span class=\"line\">\t\tmyTree.traverse(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.removeItem(new Node(&quot;9&quot;));</span><br><span class=\"line\">\t\tmyTree.traverse(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.removeItem(new Node(&quot;5&quot;));</span><br><span class=\"line\">\t\tmyTree.traverse(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.removeItem(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.traverse(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.removeItem(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.traverse(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.removeItem(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.traverse(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.removeItem(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.traverse(myTree.getRoot());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>Notes and Exersice for Abstract Class of Completed Java Master Class.</p>","more":"<h1 id=\"Notes\"><a href=\"#Notes\" class=\"headerlink\" title=\"Notes\"></a>Notes</h1><p>Abstract class is a normal class but with abstract method.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public abstract class Animal &#123;</span><br><span class=\"line\">\tprivate String name;</span><br><span class=\"line\">\tpublic Animal(String name) &#123;</span><br><span class=\"line\">\t\tthis.name = name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic String getName() &#123;</span><br><span class=\"line\">\t\treturn name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic abstract void eat();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>Abstract class can not be instantiated. Abstract method needs to be implemented.</p>\n</li>\n<li><p>The class extends it have to implement all the abstract classes.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Dog extends Animal&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic Dog(String name) &#123;</span><br><span class=\"line\">\t\tsuper(name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic void eat() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(getName() + &quot; is eating bones..&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Abstract class can be extended by another abstract class</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public abstract class Bird extends Animal&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic Bird(String name) &#123;</span><br><span class=\"line\">\t\tsuper(name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic void eat() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(getName() + &quot; is eating ..&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic abstract void fly();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Need to be implemented by another class so that we can initiate it.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Chicken extends Bird&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic Chicken(String name) &#123;</span><br><span class=\"line\">\t\tsuper(name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic void fly() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(getName() + &quot; is hardly flying..&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>main:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class main &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tAnimal myDog = new Dog(&quot;funny&quot;);</span><br><span class=\"line\">\t\tmyDog.eat();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t//Animal myChicken = new Chicken(&quot;fat&quot;);  X no fly method</span><br><span class=\"line\">\t\tBird myChicken = new Chicken(&quot;fat&quot;);</span><br><span class=\"line\">\t\tmyChicken.eat();</span><br><span class=\"line\">\t\tmyChicken.fly();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h1 id=\"Common-and-Difference-between-Abstract-Class-and-Interface\"><a href=\"#Common-and-Difference-between-Abstract-Class-and-Interface\" class=\"headerlink\" title=\"Common and Difference between Abstract Class and Interface\"></a>Common and Difference between Abstract Class and Interface</h1><h2 id=\"Common\"><a href=\"#Common\" class=\"headerlink\" title=\"Common\"></a>Common</h2><ol>\n<li>Cannot instantiate them. Methods without an implementation</li>\n</ol>\n<h2 id=\"Difference\"><a href=\"#Difference\" class=\"headerlink\" title=\"Difference\"></a>Difference</h2><ol>\n<li>Abstract class can declare fields that are not static and final</li>\n<li>Abstract class can define public, protected and private concrete methods</li>\n<li>Abstract class can extend only one parent class but implement multiple interfaces</li>\n</ol>\n<p>The purpose of an abtract class is to provide a common definition of a base class that multiple derived classes can share.</p>\n<h1 id=\"Exercise\"><a href=\"#Exercise\" class=\"headerlink\" title=\"Exercise\"></a>Exercise</h1><h2 id=\"Requirements\"><a href=\"#Requirements\" class=\"headerlink\" title=\"Requirements\"></a>Requirements</h2><ul>\n<li>Create own LinkedList class</li>\n<li>the item can be added with auto sorting from small to large</li>\n<li>the item can be removed</li>\n<li>use traverse method to iterate and print all the items </li>\n</ul>\n<h2 id=\"Codes\"><a href=\"#Codes\" class=\"headerlink\" title=\"Codes\"></a>Codes</h2><h3 id=\"abstract-class-ListItem\"><a href=\"#abstract-class-ListItem\" class=\"headerlink\" title=\"abstract class ListItem\"></a>abstract class ListItem</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public abstract class ListItem &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t// need to access by subclass in the same package</span><br><span class=\"line\">\tprotected ListItem leftLink;</span><br><span class=\"line\">\tprotected ListItem rightLink;</span><br><span class=\"line\">\tprivate Object value;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic ListItem(Object value) &#123;</span><br><span class=\"line\">\t\tthis.value = value;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic Object getValue() &#123;</span><br><span class=\"line\">\t\treturn value;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic void setValue(Object value) &#123;</span><br><span class=\"line\">\t\tthis.value = value;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tabstract ListItem next();</span><br><span class=\"line\">\tabstract ListItem previous();</span><br><span class=\"line\">\tabstract ListItem setNext(ListItem listItem);</span><br><span class=\"line\">\tabstract ListItem setPrevious(ListItem listItem);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tabstract int compareTo(ListItem listItem);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"class-Node-extends-ListItem\"><a href=\"#class-Node-extends-ListItem\" class=\"headerlink\" title=\"class Node extends ListItem\"></a>class Node extends ListItem</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Node extends ListItem &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic Node(Object value) &#123;</span><br><span class=\"line\">\t\tsuper(value);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tListItem next() &#123;</span><br><span class=\"line\">\t\treturn rightLink;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tListItem previous() &#123;</span><br><span class=\"line\">\t\treturn leftLink;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t/**</span><br><span class=\"line\">\t * return listItem, so that simplify the steps: </span><br><span class=\"line\">\t * currentItem.setPrevious(listItem).setNext(currentItem);</span><br><span class=\"line\">\t */</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tListItem setNext(ListItem listItem) &#123;</span><br><span class=\"line\">\t\trightLink = listItem;</span><br><span class=\"line\">\t\treturn listItem;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tListItem setPrevious(ListItem listItem) &#123;</span><br><span class=\"line\">\t\tleftLink = listItem;</span><br><span class=\"line\">\t\treturn listItem;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tint compareTo(ListItem listItem) &#123;</span><br><span class=\"line\">\t\treturn this.getValue().toString().compareTo(listItem.getValue().toString());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"interface-MyList\"><a href=\"#interface-MyList\" class=\"headerlink\" title=\"interface MyList\"></a>interface MyList</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public interface MyList &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tListItem getRoot();</span><br><span class=\"line\">\tboolean addItem(ListItem listItem);</span><br><span class=\"line\">\tboolean removeItem(ListItem listItem);</span><br><span class=\"line\">\tvoid traverse(ListItem listItem);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"MyLinkedList-implements-MyList\"><a href=\"#MyLinkedList-implements-MyList\" class=\"headerlink\" title=\"MyLinkedList implements MyList\"></a>MyLinkedList implements MyList</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class MyLinkedList implements MyList &#123;</span><br><span class=\"line\">\tprivate ListItem root = null;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic ListItem getRoot() &#123;</span><br><span class=\"line\">\t\treturn root;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t/**</span><br><span class=\"line\">\t * sort in order</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t * search from root</span><br><span class=\"line\">\t * if newItem is greater, go to next item until end</span><br><span class=\"line\">\t * if newItem is smaller, insert into</span><br><span class=\"line\">\t */</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic boolean addItem(ListItem listItem) &#123;</span><br><span class=\"line\">\t\tif (root == null) &#123;</span><br><span class=\"line\">\t\t\troot = listItem;</span><br><span class=\"line\">\t\t\treturn true;</span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\">\t\tListItem currentItem = root;</span><br><span class=\"line\">\t\twhile (currentItem != null) &#123;</span><br><span class=\"line\">\t\t\tint comparison = currentItem.compareTo(listItem);</span><br><span class=\"line\">\t\t\tif (comparison &lt; 0) &#123; // listItem is greater.</span><br><span class=\"line\">\t\t\t\tif (currentItem.next()==null) &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentItem.setNext(listItem).setPrevious(currentItem);</span><br><span class=\"line\">\t\t\t\t\treturn true;</span><br><span class=\"line\">\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentItem = currentItem.next();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125; else if (comparison &gt; 0) &#123; // listItem is smaller</span><br><span class=\"line\">\t\t\t\tif (currentItem.previous()==null) &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentItem.setPrevious(listItem).setNext(currentItem);</span><br><span class=\"line\">\t\t\t\t\troot = listItem;</span><br><span class=\"line\">\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentItem.previous().setNext(listItem).setPrevious(currentItem.previous());</span><br><span class=\"line\">\t\t\t\t\tcurrentItem.setPrevious(listItem).setNext(currentItem);</span><br><span class=\"line\">\t\t\t\t&#125; </span><br><span class=\"line\">\t\t\t\treturn true;</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;Duplicated item : &quot; + listItem.getValue() );</span><br><span class=\"line\">\t\t\t\treturn false;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\treturn false;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic boolean removeItem(ListItem listItem) &#123;</span><br><span class=\"line\">\t\tListItem currentItem = this.getRoot();</span><br><span class=\"line\">\t\twhile (currentItem != null) &#123;</span><br><span class=\"line\">\t\t\tint comparison = currentItem.compareTo(listItem);</span><br><span class=\"line\">\t\t\tif (comparison == 0) &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;Deleting item : &quot; + listItem.getValue());</span><br><span class=\"line\">\t\t\t\tif (currentItem.previous()==null) &#123;</span><br><span class=\"line\">\t\t\t\t\tif (currentItem.next()!=null) &#123;</span><br><span class=\"line\">\t\t\t\t\t\troot = currentItem.next();</span><br><span class=\"line\">\t\t\t\t\t\troot.setPrevious(null);</span><br><span class=\"line\">\t\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\t\troot = null;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\treturn true;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tif (currentItem.next()==null) &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentItem.previous().setNext(null);</span><br><span class=\"line\">\t\t\t\t\treturn true;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tcurrentItem.previous().setNext(currentItem.next()).setPrevious(currentItem.previous());</span><br><span class=\"line\">\t\t\t\treturn true;</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tcurrentItem = currentItem.next();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.out.println(&quot;No existing: &quot; + listItem.getValue());</span><br><span class=\"line\">\t\treturn false;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic void traverse(ListItem listItem) &#123;</span><br><span class=\"line\">\t\tif (root == null) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;Empty list..&quot;);</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tListItem currentItem = root;</span><br><span class=\"line\">\t\t\twhile (currentItem != null) &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(currentItem.getValue());</span><br><span class=\"line\">\t\t\t\tcurrentItem = currentItem.next();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"main\"><a href=\"#main\" class=\"headerlink\" title=\"main\"></a>main</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * @author luoxu</span><br><span class=\"line\"> * </span><br><span class=\"line\"> * Create own LinkedList class</span><br><span class=\"line\"> * the item can be added with auto sorting from small to large</span><br><span class=\"line\"> * the item can be removed</span><br><span class=\"line\"> * use traverse method to iterate and print all the items </span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">public class Main &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tMyList myList = new MyLinkedList();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tString testData = &quot;2 3 1 2 5 6 7 4 9 8 7 4&quot;;</span><br><span class=\"line\">\t\tString[] dataArray =  testData.split(&quot; &quot;);</span><br><span class=\"line\">\t\tfor (String data : dataArray) &#123;</span><br><span class=\"line\">\t\t\tmyList.addItem(new Node(data));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tmyList.traverse(myList.getRoot());</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tmyList.removeItem(new Node(&quot;7&quot;));</span><br><span class=\"line\">\t\tmyList.traverse(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.removeItem(new Node(&quot;7&quot;));</span><br><span class=\"line\">\t\tmyList.traverse(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.removeItem(new Node(&quot;9&quot;));</span><br><span class=\"line\">\t\tmyList.traverse(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.removeItem(new Node(&quot;5&quot;));</span><br><span class=\"line\">\t\tmyList.traverse(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.removeItem(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.traverse(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.removeItem(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.traverse(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.removeItem(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.traverse(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.removeItem(myList.getRoot());</span><br><span class=\"line\">\t\tmyList.traverse(myList.getRoot());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Search-Tree\"><a href=\"#Search-Tree\" class=\"headerlink\" title=\"Search Tree\"></a>Search Tree</h2><h3 id=\"SearchTree-implements-MyList\"><a href=\"#SearchTree-implements-MyList\" class=\"headerlink\" title=\"SearchTree implements MyList\"></a>SearchTree implements MyList</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class SearchTree implements MyList&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t/**</span><br><span class=\"line\">\t * the difference: single direction</span><br><span class=\"line\">\t * starting from root to leaf, invalid for reverse</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t */</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tprivate ListItem root = null;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic ListItem getRoot() &#123;</span><br><span class=\"line\">\t\treturn root;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic boolean addItem(ListItem listItem) &#123;</span><br><span class=\"line\">\t\tif (root == null) &#123;</span><br><span class=\"line\">\t\t\t// empty tree, listItem become root</span><br><span class=\"line\">\t\t\troot = listItem;</span><br><span class=\"line\">\t\t\treturn true;</span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t// otherwise start comparing</span><br><span class=\"line\">\t\tListItem currentItem = root;</span><br><span class=\"line\">\t\twhile (currentItem != null) &#123;</span><br><span class=\"line\">\t\t\tint comparison = currentItem.compareTo(listItem);</span><br><span class=\"line\">\t\t\tif (comparison &lt; 0) &#123; </span><br><span class=\"line\">\t\t\t\t// listItem is greater, move right if possible</span><br><span class=\"line\">\t\t\t\tif (currentItem.next()==null) &#123;</span><br><span class=\"line\">\t\t\t\t\t// no node to the right, so add at this point</span><br><span class=\"line\">\t\t\t\t\tcurrentItem.setNext(listItem);</span><br><span class=\"line\">\t\t\t\t\treturn true;</span><br><span class=\"line\">\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentItem = currentItem.next();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125; else if (comparison &gt; 0) &#123; </span><br><span class=\"line\">\t\t\t\t// listItem is smaller, move left if possible</span><br><span class=\"line\">\t\t\t\tif (currentItem.previous()==null) &#123;</span><br><span class=\"line\">\t\t\t\t\t// no node to the left, so add at this point</span><br><span class=\"line\">\t\t\t\t\tcurrentItem.setPrevious(listItem);</span><br><span class=\"line\">\t\t\t\t\treturn true;</span><br><span class=\"line\">\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentItem = currentItem.previous();</span><br><span class=\"line\">\t\t\t\t&#125; </span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;Duplicated item : &quot; + listItem.getValue() );</span><br><span class=\"line\">\t\t\t\treturn false;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\treturn false;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic boolean removeItem(ListItem listItem) &#123;</span><br><span class=\"line\">\t\tListItem currentItem = this.getRoot();</span><br><span class=\"line\">\t\tListItem parentItem = currentItem;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\twhile (currentItem != null) &#123;</span><br><span class=\"line\">\t\t\tint comparison = currentItem.compareTo(listItem);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\tif (comparison &lt; 0) &#123;</span><br><span class=\"line\">\t\t\t\tparentItem = currentItem;</span><br><span class=\"line\">\t\t\t\tcurrentItem = currentItem.next();</span><br><span class=\"line\">\t\t\t&#125; else if (comparison &gt; 0) &#123;</span><br><span class=\"line\">\t\t\t\tparentItem = currentItem;</span><br><span class=\"line\">\t\t\t\tcurrentItem = currentItem.previous();</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t// found item</span><br><span class=\"line\">\t\t\t\tperformRemove(currentItem, parentItem);</span><br><span class=\"line\">\t\t\t\treturn true;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.out.println(&quot;No existing: &quot; + listItem.getValue());</span><br><span class=\"line\">\t\treturn false;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void performRemove(ListItem currentItem, ListItem parentItem) &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Deleting:&quot; + currentItem.getValue());</span><br><span class=\"line\">\t\tif (currentItem.next()==null) &#123;</span><br><span class=\"line\">\t\t\t// no right branch, make parent link to the left branch</span><br><span class=\"line\">\t\t\tif (parentItem.next() == currentItem) &#123;</span><br><span class=\"line\">\t\t\t\t// currentItem is the right child of parent</span><br><span class=\"line\">\t\t\t\tparentItem.setNext(currentItem.previous());</span><br><span class=\"line\">\t\t\t&#125; else if (parentItem.previous() == currentItem) &#123;</span><br><span class=\"line\">\t\t\t\t// currentItem is the left child of parent</span><br><span class=\"line\">\t\t\t\tparentItem.setPrevious(currentItem.previous());</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t// parentItem == currentItem which is root</span><br><span class=\"line\">\t\t\t\troot = currentItem.previous();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; else if (currentItem.previous() == null) &#123;</span><br><span class=\"line\">\t\t\t// no left branch, make parent link to the right branch</span><br><span class=\"line\">\t\t\tif (parentItem.next() == currentItem) &#123;</span><br><span class=\"line\">\t\t\t\t// currentItem is the right child of parent</span><br><span class=\"line\">\t\t\t\tparentItem.setNext(currentItem.next());</span><br><span class=\"line\">\t\t\t&#125; else if (parentItem.previous() == currentItem) &#123;</span><br><span class=\"line\">\t\t\t\t// currentItem is the left child of parent</span><br><span class=\"line\">\t\t\t\tparentItem.setPrevious(currentItem.next());</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t// parentItem == currentItem which is root</span><br><span class=\"line\">\t\t\t\troot = currentItem.next();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t// both left and right exist</span><br><span class=\"line\">\t\t\t// from the right branch, find the smallest value</span><br><span class=\"line\">\t\t\tListItem current = currentItem.next();</span><br><span class=\"line\">\t\t\tListItem leftMostParent = currentItem;</span><br><span class=\"line\">\t\t\twhile (current.previous()!=null) &#123;</span><br><span class=\"line\">\t\t\t\tleftMostParent = current;</span><br><span class=\"line\">\t\t\t\tcurrent = current.previous();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t// now current is the smallest node in the right branch</span><br><span class=\"line\">\t\t\t// put it into current deleting node</span><br><span class=\"line\">\t\t\tcurrentItem.setValue(current.getValue());</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t// delete smallest node</span><br><span class=\"line\">\t\t\tif (leftMostParent == currentItem) &#123;</span><br><span class=\"line\">\t\t\t\t// no leftmost node, so current points to</span><br><span class=\"line\">\t\t\t\t// the smallest node</span><br><span class=\"line\">\t\t\t\tcurrentItem.setNext(current.next());</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t// set the smallest node&apos;s parent to point to </span><br><span class=\"line\">\t\t\t\t// the smallest node&apos;s right child</span><br><span class=\"line\">\t\t\t\tleftMostParent.setPrevious(current.next());</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic void traverse(ListItem listItem) &#123;</span><br><span class=\"line\">\t\t// recursive method</span><br><span class=\"line\">\t\tif (listItem != null) &#123;</span><br><span class=\"line\">\t\t\ttraverse(listItem.previous());</span><br><span class=\"line\">\t\t\tSystem.out.println(listItem.getValue());</span><br><span class=\"line\">\t\t\ttraverse(listItem.next());</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"main-1\"><a href=\"#main-1\" class=\"headerlink\" title=\"main\"></a>main</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Main &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tMyList myTree = new SearchTree();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tString testData = &quot;2 3 1 2 5 6 7 4 9 8 7 4&quot;;</span><br><span class=\"line\">\t\tString[] dataArray =  testData.split(&quot; &quot;);</span><br><span class=\"line\">\t\tfor (String data : dataArray) &#123;</span><br><span class=\"line\">\t\t\tmyTree.addItem(new Node(data));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tmyTree.traverse(myTree.getRoot());</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tmyTree.removeItem(new Node(&quot;7&quot;));</span><br><span class=\"line\">\t\tmyTree.traverse(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.removeItem(new Node(&quot;7&quot;));</span><br><span class=\"line\">\t\tmyTree.traverse(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.removeItem(new Node(&quot;9&quot;));</span><br><span class=\"line\">\t\tmyTree.traverse(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.removeItem(new Node(&quot;5&quot;));</span><br><span class=\"line\">\t\tmyTree.traverse(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.removeItem(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.traverse(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.removeItem(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.traverse(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.removeItem(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.traverse(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.removeItem(myTree.getRoot());</span><br><span class=\"line\">\t\tmyTree.traverse(myTree.getRoot());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Java Master - S10.Interface","date":"2018-02-11T14:55:20.000Z","_content":"Exersice for Interface of Completed Java Master Class.\n<!--more-->\n\n## Requirements\n1. Interface ISaveable\n\t1. save() - return a list which contains values to be saved\n\t2. read(list) - DB provide a list of values, read these values and pass to the corresponding fields of the object\n2. Player implements ISaveable: name, point, health, weapon\n3. Game(main): \n\t1. readValues - simulate getting values from DB and return a list with values\n\t2. saveObject(saveable Object) - save values of this object. return a list which will be saved to DB.\n\t3. loadObject(saveable object) - getting values and pass to the object\n3. Game:\n\t1. create a player and save it\n\t2. load one player using fake values\n\n## Codes\n### ISaveable\n```\npackage javamaster.interface_;\n\nimport java.util.List;\n\npublic interface ISaveable {\n\tList<String> save();\n\tvoid read(List<String> values);\n}\n```\n\n### Player\n```\npackage javamaster.interface_;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Player implements ISaveable{\n\tprivate String name;\n\tprivate int point;\n\tprivate int health;\n\tprivate String weapon;\n\t\n\tpublic Player(String name, int point, int health, String weapon) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.point = point;\n\t\tthis.health = health;\n\t\tthis.weapon = weapon;\n\t}\n\t\n\t@Override\n\tpublic List<String> save() {\n\t\tList<String> values = new ArrayList<>();\n\t\tvalues.add(name);\n\t\tvalues.add(String.valueOf(point));\n\t\tvalues.add(String.valueOf(health));\n\t\tvalues.add(weapon);\n\t\treturn values;\n\t}\n\t@Override\n\tpublic void read(List<String> values) {\n\t\tname = values.get(0);\n\t\tpoint = Integer.valueOf(values.get(1));\n\t\thealth = Integer.valueOf(values.get(2));\n\t\tweapon = values.get(3);\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"Player [name=\" + name + \", point=\" + point + \", health=\" + health + \", weapon=\" + weapon + \"]\";\n\t}\n}\n```\n\n### Game\n```\npackage javamaster.interface_;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Game {\n\n\tpublic static void main(String[] args) {\n\t\tISaveable ryan;\n\t\tISaveable eric;\n\t\t\n\t\tryan = new Player(\"ryan\", 100, 9900, \"sword\");\n\t\tsaveObject(ryan);\n\t\t\n\t\teric = new Player(\"\", 0, 0, \"\");\n\t\tloadObject(eric);\n\t\tSystem.out.println(eric);\n\t\t\n\t}\n\n\tprivate static void loadObject(ISaveable eric) {\n\t\tList<String> values = readValues();\n\t\tSystem.out.println(\"Values to be loaded: \");\n\t\tfor (String string : values) {\n\t\t\tSystem.out.println(string);\n\t\t}\n\t\teric.read(values);\n\t}\n\n\tprivate static List<String> readValues() {\n\t\t// fake data\n\t\tList<String> values = new ArrayList<>();\n\t\tvalues.add(\"eric\");\n\t\tvalues.add(\"200\");\n\t\tvalues.add(\"6000\");\n\t\tvalues.add(\"gun\");\n\t\treturn values;\n\t}\n\n\tprivate static void saveObject(ISaveable saveableObject) {\n\t\tList<String> values = saveableObject.save();\n\t\tSystem.out.println(\"Values to be saved: \");\n\t\tfor (String string : values) {\n\t\t\tSystem.out.println(string);\n\t\t}\n\t\tSystem.out.println(\"\");\n\t}\t\n}\n```","source":"_posts/Java-Master-S10-Interface.md","raw":"---\ntitle: Java Master - S10.Interface\ndate: 2018-02-11 22:55:20\ncategories: Java Master Course\ntags: [Java, course, note, Interface]\n---\nExersice for Interface of Completed Java Master Class.\n<!--more-->\n\n## Requirements\n1. Interface ISaveable\n\t1. save() - return a list which contains values to be saved\n\t2. read(list) - DB provide a list of values, read these values and pass to the corresponding fields of the object\n2. Player implements ISaveable: name, point, health, weapon\n3. Game(main): \n\t1. readValues - simulate getting values from DB and return a list with values\n\t2. saveObject(saveable Object) - save values of this object. return a list which will be saved to DB.\n\t3. loadObject(saveable object) - getting values and pass to the object\n3. Game:\n\t1. create a player and save it\n\t2. load one player using fake values\n\n## Codes\n### ISaveable\n```\npackage javamaster.interface_;\n\nimport java.util.List;\n\npublic interface ISaveable {\n\tList<String> save();\n\tvoid read(List<String> values);\n}\n```\n\n### Player\n```\npackage javamaster.interface_;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Player implements ISaveable{\n\tprivate String name;\n\tprivate int point;\n\tprivate int health;\n\tprivate String weapon;\n\t\n\tpublic Player(String name, int point, int health, String weapon) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.point = point;\n\t\tthis.health = health;\n\t\tthis.weapon = weapon;\n\t}\n\t\n\t@Override\n\tpublic List<String> save() {\n\t\tList<String> values = new ArrayList<>();\n\t\tvalues.add(name);\n\t\tvalues.add(String.valueOf(point));\n\t\tvalues.add(String.valueOf(health));\n\t\tvalues.add(weapon);\n\t\treturn values;\n\t}\n\t@Override\n\tpublic void read(List<String> values) {\n\t\tname = values.get(0);\n\t\tpoint = Integer.valueOf(values.get(1));\n\t\thealth = Integer.valueOf(values.get(2));\n\t\tweapon = values.get(3);\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"Player [name=\" + name + \", point=\" + point + \", health=\" + health + \", weapon=\" + weapon + \"]\";\n\t}\n}\n```\n\n### Game\n```\npackage javamaster.interface_;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Game {\n\n\tpublic static void main(String[] args) {\n\t\tISaveable ryan;\n\t\tISaveable eric;\n\t\t\n\t\tryan = new Player(\"ryan\", 100, 9900, \"sword\");\n\t\tsaveObject(ryan);\n\t\t\n\t\teric = new Player(\"\", 0, 0, \"\");\n\t\tloadObject(eric);\n\t\tSystem.out.println(eric);\n\t\t\n\t}\n\n\tprivate static void loadObject(ISaveable eric) {\n\t\tList<String> values = readValues();\n\t\tSystem.out.println(\"Values to be loaded: \");\n\t\tfor (String string : values) {\n\t\t\tSystem.out.println(string);\n\t\t}\n\t\teric.read(values);\n\t}\n\n\tprivate static List<String> readValues() {\n\t\t// fake data\n\t\tList<String> values = new ArrayList<>();\n\t\tvalues.add(\"eric\");\n\t\tvalues.add(\"200\");\n\t\tvalues.add(\"6000\");\n\t\tvalues.add(\"gun\");\n\t\treturn values;\n\t}\n\n\tprivate static void saveObject(ISaveable saveableObject) {\n\t\tList<String> values = saveableObject.save();\n\t\tSystem.out.println(\"Values to be saved: \");\n\t\tfor (String string : values) {\n\t\t\tSystem.out.println(string);\n\t\t}\n\t\tSystem.out.println(\"\");\n\t}\t\n}\n```","slug":"Java-Master-S10-Interface","published":1,"updated":"2020-04-30T09:23:19.529Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedi6000msd5t4rkqej5i","content":"<p>Exersice for Interface of Completed Java Master Class.</p>\n<a id=\"more\"></a>\n\n<h2 id=\"Requirements\"><a href=\"#Requirements\" class=\"headerlink\" title=\"Requirements\"></a>Requirements</h2><ol>\n<li>Interface ISaveable<ol>\n<li>save() - return a list which contains values to be saved</li>\n<li>read(list) - DB provide a list of values, read these values and pass to the corresponding fields of the object</li>\n</ol>\n</li>\n<li>Player implements ISaveable: name, point, health, weapon</li>\n<li>Game(main): <ol>\n<li>readValues - simulate getting values from DB and return a list with values</li>\n<li>saveObject(saveable Object) - save values of this object. return a list which will be saved to DB.</li>\n<li>loadObject(saveable object) - getting values and pass to the object</li>\n</ol>\n</li>\n<li>Game:<ol>\n<li>create a player and save it</li>\n<li>load one player using fake values</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"Codes\"><a href=\"#Codes\" class=\"headerlink\" title=\"Codes\"></a>Codes</h2><h3 id=\"ISaveable\"><a href=\"#ISaveable\" class=\"headerlink\" title=\"ISaveable\"></a>ISaveable</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package javamaster.interface_;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\">public interface ISaveable &#123;</span><br><span class=\"line\">\tList&lt;String&gt; save();</span><br><span class=\"line\">\tvoid read(List&lt;String&gt; values);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Player\"><a href=\"#Player\" class=\"headerlink\" title=\"Player\"></a>Player</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package javamaster.interface_;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.ArrayList;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Player implements ISaveable&#123;</span><br><span class=\"line\">\tprivate String name;</span><br><span class=\"line\">\tprivate int point;</span><br><span class=\"line\">\tprivate int health;</span><br><span class=\"line\">\tprivate String weapon;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic Player(String name, int point, int health, String weapon) &#123;</span><br><span class=\"line\">\t\tsuper();</span><br><span class=\"line\">\t\tthis.name = name;</span><br><span class=\"line\">\t\tthis.point = point;</span><br><span class=\"line\">\t\tthis.health = health;</span><br><span class=\"line\">\t\tthis.weapon = weapon;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic List&lt;String&gt; save() &#123;</span><br><span class=\"line\">\t\tList&lt;String&gt; values = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t\tvalues.add(name);</span><br><span class=\"line\">\t\tvalues.add(String.valueOf(point));</span><br><span class=\"line\">\t\tvalues.add(String.valueOf(health));</span><br><span class=\"line\">\t\tvalues.add(weapon);</span><br><span class=\"line\">\t\treturn values;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic void read(List&lt;String&gt; values) &#123;</span><br><span class=\"line\">\t\tname = values.get(0);</span><br><span class=\"line\">\t\tpoint = Integer.valueOf(values.get(1));</span><br><span class=\"line\">\t\thealth = Integer.valueOf(values.get(2));</span><br><span class=\"line\">\t\tweapon = values.get(3);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic String toString() &#123;</span><br><span class=\"line\">\t\treturn &quot;Player [name=&quot; + name + &quot;, point=&quot; + point + &quot;, health=&quot; + health + &quot;, weapon=&quot; + weapon + &quot;]&quot;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Game\"><a href=\"#Game\" class=\"headerlink\" title=\"Game\"></a>Game</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package javamaster.interface_;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.ArrayList;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Game &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\tISaveable ryan;</span><br><span class=\"line\">\t\tISaveable eric;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tryan = new Player(&quot;ryan&quot;, 100, 9900, &quot;sword&quot;);</span><br><span class=\"line\">\t\tsaveObject(ryan);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\teric = new Player(&quot;&quot;, 0, 0, &quot;&quot;);</span><br><span class=\"line\">\t\tloadObject(eric);</span><br><span class=\"line\">\t\tSystem.out.println(eric);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void loadObject(ISaveable eric) &#123;</span><br><span class=\"line\">\t\tList&lt;String&gt; values = readValues();</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Values to be loaded: &quot;);</span><br><span class=\"line\">\t\tfor (String string : values) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(string);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\teric.read(values);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static List&lt;String&gt; readValues() &#123;</span><br><span class=\"line\">\t\t// fake data</span><br><span class=\"line\">\t\tList&lt;String&gt; values = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t\tvalues.add(&quot;eric&quot;);</span><br><span class=\"line\">\t\tvalues.add(&quot;200&quot;);</span><br><span class=\"line\">\t\tvalues.add(&quot;6000&quot;);</span><br><span class=\"line\">\t\tvalues.add(&quot;gun&quot;);</span><br><span class=\"line\">\t\treturn values;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void saveObject(ISaveable saveableObject) &#123;</span><br><span class=\"line\">\t\tList&lt;String&gt; values = saveableObject.save();</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Values to be saved: &quot;);</span><br><span class=\"line\">\t\tfor (String string : values) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(string);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>Exersice for Interface of Completed Java Master Class.</p>","more":"<h2 id=\"Requirements\"><a href=\"#Requirements\" class=\"headerlink\" title=\"Requirements\"></a>Requirements</h2><ol>\n<li>Interface ISaveable<ol>\n<li>save() - return a list which contains values to be saved</li>\n<li>read(list) - DB provide a list of values, read these values and pass to the corresponding fields of the object</li>\n</ol>\n</li>\n<li>Player implements ISaveable: name, point, health, weapon</li>\n<li>Game(main): <ol>\n<li>readValues - simulate getting values from DB and return a list with values</li>\n<li>saveObject(saveable Object) - save values of this object. return a list which will be saved to DB.</li>\n<li>loadObject(saveable object) - getting values and pass to the object</li>\n</ol>\n</li>\n<li>Game:<ol>\n<li>create a player and save it</li>\n<li>load one player using fake values</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"Codes\"><a href=\"#Codes\" class=\"headerlink\" title=\"Codes\"></a>Codes</h2><h3 id=\"ISaveable\"><a href=\"#ISaveable\" class=\"headerlink\" title=\"ISaveable\"></a>ISaveable</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package javamaster.interface_;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\">public interface ISaveable &#123;</span><br><span class=\"line\">\tList&lt;String&gt; save();</span><br><span class=\"line\">\tvoid read(List&lt;String&gt; values);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Player\"><a href=\"#Player\" class=\"headerlink\" title=\"Player\"></a>Player</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package javamaster.interface_;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.ArrayList;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Player implements ISaveable&#123;</span><br><span class=\"line\">\tprivate String name;</span><br><span class=\"line\">\tprivate int point;</span><br><span class=\"line\">\tprivate int health;</span><br><span class=\"line\">\tprivate String weapon;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic Player(String name, int point, int health, String weapon) &#123;</span><br><span class=\"line\">\t\tsuper();</span><br><span class=\"line\">\t\tthis.name = name;</span><br><span class=\"line\">\t\tthis.point = point;</span><br><span class=\"line\">\t\tthis.health = health;</span><br><span class=\"line\">\t\tthis.weapon = weapon;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic List&lt;String&gt; save() &#123;</span><br><span class=\"line\">\t\tList&lt;String&gt; values = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t\tvalues.add(name);</span><br><span class=\"line\">\t\tvalues.add(String.valueOf(point));</span><br><span class=\"line\">\t\tvalues.add(String.valueOf(health));</span><br><span class=\"line\">\t\tvalues.add(weapon);</span><br><span class=\"line\">\t\treturn values;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic void read(List&lt;String&gt; values) &#123;</span><br><span class=\"line\">\t\tname = values.get(0);</span><br><span class=\"line\">\t\tpoint = Integer.valueOf(values.get(1));</span><br><span class=\"line\">\t\thealth = Integer.valueOf(values.get(2));</span><br><span class=\"line\">\t\tweapon = values.get(3);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic String toString() &#123;</span><br><span class=\"line\">\t\treturn &quot;Player [name=&quot; + name + &quot;, point=&quot; + point + &quot;, health=&quot; + health + &quot;, weapon=&quot; + weapon + &quot;]&quot;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Game\"><a href=\"#Game\" class=\"headerlink\" title=\"Game\"></a>Game</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package javamaster.interface_;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.ArrayList;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Game &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\tISaveable ryan;</span><br><span class=\"line\">\t\tISaveable eric;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tryan = new Player(&quot;ryan&quot;, 100, 9900, &quot;sword&quot;);</span><br><span class=\"line\">\t\tsaveObject(ryan);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\teric = new Player(&quot;&quot;, 0, 0, &quot;&quot;);</span><br><span class=\"line\">\t\tloadObject(eric);</span><br><span class=\"line\">\t\tSystem.out.println(eric);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void loadObject(ISaveable eric) &#123;</span><br><span class=\"line\">\t\tList&lt;String&gt; values = readValues();</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Values to be loaded: &quot;);</span><br><span class=\"line\">\t\tfor (String string : values) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(string);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\teric.read(values);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static List&lt;String&gt; readValues() &#123;</span><br><span class=\"line\">\t\t// fake data</span><br><span class=\"line\">\t\tList&lt;String&gt; values = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t\tvalues.add(&quot;eric&quot;);</span><br><span class=\"line\">\t\tvalues.add(&quot;200&quot;);</span><br><span class=\"line\">\t\tvalues.add(&quot;6000&quot;);</span><br><span class=\"line\">\t\tvalues.add(&quot;gun&quot;);</span><br><span class=\"line\">\t\treturn values;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void saveObject(ISaveable saveableObject) &#123;</span><br><span class=\"line\">\t\tList&lt;String&gt; values = saveableObject.save();</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Values to be saved: &quot;);</span><br><span class=\"line\">\t\tfor (String string : values) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(string);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Hanoi Tower 汉诺塔 - Python 示例","date":"2020-06-04T12:12:36.000Z","_content":"\n最近看的一个教程里，提到了汉诺塔的问题，参考别人的代码自己用python实现了一番。\n\n## 4层的效果是这样：\n```\nA:[4, 3, 2, 1]\nB:[]\nC:[]\nstart moving:\nmove 1 from A to B.\nmove 2 from A to C.\nmove 1 from B to C.\nmove 3 from A to B.\nmove 1 from C to A.\nmove 2 from C to B.\nmove 1 from A to B.\nmove 4 from A to C.\nmove 1 from B to C.\nmove 2 from B to A.\nmove 1 from C to A.\nmove 3 from B to C.\nmove 1 from A to B.\nmove 2 from A to C.\nmove 1 from B to C.\nA:[]\nB:[]\nC:[4, 3, 2, 1]\n```\n\n<!--more-->\n\n## 核心的代码其实只需要：\n```Python\ndef move(n,a,b,c):\n    if n==1:\n        c.append(a.pop())\n        return\n    move(n-1,a,c,b)\n    c.append(a.pop())\n    move(n-1,b,a,c)\nmove(3,[3,2,1],[],[])\n```\n\n## 完整代码：\n为了更直观一些，定义了 Stick 类。\n```Python\n# ABC三根柱子，A上有N个盘子，如何才能将盘子移到C柱子上，每次只能移动一个，并且大盘总是在小盘下面。\nclass Stick:\n    def __init__(self,name,list):\n        self.name=name\n        self.list=list\n    def pop(self):\n        return self.list.pop()\n    def append(self, element):\n        self.list.append(element)\n    def __str__(self):\n        return self.name+':'+str(self.list)\n\ndef move(n,a,b,c):\n    # 1. 将 a 的 n-1 个放到 b\n    # 2. 将 a 的 n 个放到 c\n    # 3. 将 b 的 n-1 个放到 c\n    if n==1:\n        move_action(a,c) # c.append(a.pop())\n        return\n    move(n-1,a,c,b)\n    move_action(a,c) # c.append(a.pop())\n    move(n-1,b,a,c)\n\ndef move_action(source, target):\n    size = len(source.list)\n    print('move {0} from {1} to {2}.'.format(source.list[size-1],source.name,target.name))\n    target.append(source.pop())\n\na=Stick('A',[4,3,2,1])\nb=Stick('B',[])\nc=Stick('C',[])\nprint(a)\nprint(b)\nprint(c)\n\nprint('start moving:')\nn = len(a.list)\nmove(n,a,b,c)\nprint(a)\nprint(b)\nprint(c)\n```\n\n## 5层的结果：\n```\nA:[5, 4, 3, 2, 1]\nB:[]\nC:[]\nstart moving:\nmove 1 from A to C.\nmove 2 from A to B.\nmove 1 from C to B.\nmove 3 from A to C.\nmove 1 from B to A.\nmove 2 from B to C.\nmove 1 from A to C.\nmove 4 from A to B.\nmove 1 from C to B.\nmove 2 from C to A.\nmove 1 from B to A.\nmove 3 from C to B.\nmove 1 from A to C.\nmove 2 from A to B.\nmove 1 from C to B.\nmove 5 from A to C.\nmove 1 from B to A.\nmove 2 from B to C.\nmove 1 from A to C.\nmove 3 from B to A.\nmove 1 from C to B.\nmove 2 from C to A.\nmove 1 from B to A.\nmove 4 from B to C.\nmove 1 from A to C.\nmove 2 from A to B.\nmove 1 from C to B.\nmove 3 from A to C.\nmove 1 from B to A.\nmove 2 from B to C.\nmove 1 from A to C.\nA:[]\nB:[]\nC:[5, 4, 3, 2, 1]\n```\n","source":"_posts/Hanoi-Tower-汉诺塔-Python-示例.md","raw":"---\ntitle: Hanoi Tower 汉诺塔 - Python 示例\ndate: 2020-06-04 20:12:36\ncategories: Python\ntags: [Python, algorithm, hanoi]\n---\n\n最近看的一个教程里，提到了汉诺塔的问题，参考别人的代码自己用python实现了一番。\n\n## 4层的效果是这样：\n```\nA:[4, 3, 2, 1]\nB:[]\nC:[]\nstart moving:\nmove 1 from A to B.\nmove 2 from A to C.\nmove 1 from B to C.\nmove 3 from A to B.\nmove 1 from C to A.\nmove 2 from C to B.\nmove 1 from A to B.\nmove 4 from A to C.\nmove 1 from B to C.\nmove 2 from B to A.\nmove 1 from C to A.\nmove 3 from B to C.\nmove 1 from A to B.\nmove 2 from A to C.\nmove 1 from B to C.\nA:[]\nB:[]\nC:[4, 3, 2, 1]\n```\n\n<!--more-->\n\n## 核心的代码其实只需要：\n```Python\ndef move(n,a,b,c):\n    if n==1:\n        c.append(a.pop())\n        return\n    move(n-1,a,c,b)\n    c.append(a.pop())\n    move(n-1,b,a,c)\nmove(3,[3,2,1],[],[])\n```\n\n## 完整代码：\n为了更直观一些，定义了 Stick 类。\n```Python\n# ABC三根柱子，A上有N个盘子，如何才能将盘子移到C柱子上，每次只能移动一个，并且大盘总是在小盘下面。\nclass Stick:\n    def __init__(self,name,list):\n        self.name=name\n        self.list=list\n    def pop(self):\n        return self.list.pop()\n    def append(self, element):\n        self.list.append(element)\n    def __str__(self):\n        return self.name+':'+str(self.list)\n\ndef move(n,a,b,c):\n    # 1. 将 a 的 n-1 个放到 b\n    # 2. 将 a 的 n 个放到 c\n    # 3. 将 b 的 n-1 个放到 c\n    if n==1:\n        move_action(a,c) # c.append(a.pop())\n        return\n    move(n-1,a,c,b)\n    move_action(a,c) # c.append(a.pop())\n    move(n-1,b,a,c)\n\ndef move_action(source, target):\n    size = len(source.list)\n    print('move {0} from {1} to {2}.'.format(source.list[size-1],source.name,target.name))\n    target.append(source.pop())\n\na=Stick('A',[4,3,2,1])\nb=Stick('B',[])\nc=Stick('C',[])\nprint(a)\nprint(b)\nprint(c)\n\nprint('start moving:')\nn = len(a.list)\nmove(n,a,b,c)\nprint(a)\nprint(b)\nprint(c)\n```\n\n## 5层的结果：\n```\nA:[5, 4, 3, 2, 1]\nB:[]\nC:[]\nstart moving:\nmove 1 from A to C.\nmove 2 from A to B.\nmove 1 from C to B.\nmove 3 from A to C.\nmove 1 from B to A.\nmove 2 from B to C.\nmove 1 from A to C.\nmove 4 from A to B.\nmove 1 from C to B.\nmove 2 from C to A.\nmove 1 from B to A.\nmove 3 from C to B.\nmove 1 from A to C.\nmove 2 from A to B.\nmove 1 from C to B.\nmove 5 from A to C.\nmove 1 from B to A.\nmove 2 from B to C.\nmove 1 from A to C.\nmove 3 from B to A.\nmove 1 from C to B.\nmove 2 from C to A.\nmove 1 from B to A.\nmove 4 from B to C.\nmove 1 from A to C.\nmove 2 from A to B.\nmove 1 from C to B.\nmove 3 from A to C.\nmove 1 from B to A.\nmove 2 from B to C.\nmove 1 from A to C.\nA:[]\nB:[]\nC:[5, 4, 3, 2, 1]\n```\n","slug":"Hanoi-Tower-汉诺塔-Python-示例","published":1,"updated":"2020-06-04T12:31:07.010Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedi7000nsd5tg6behjez","content":"<p>最近看的一个教程里，提到了汉诺塔的问题，参考别人的代码自己用python实现了一番。</p>\n<h2 id=\"4层的效果是这样：\"><a href=\"#4层的效果是这样：\" class=\"headerlink\" title=\"4层的效果是这样：\"></a>4层的效果是这样：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A:[4, 3, 2, 1]</span><br><span class=\"line\">B:[]</span><br><span class=\"line\">C:[]</span><br><span class=\"line\">start moving:</span><br><span class=\"line\">move 1 from A to B.</span><br><span class=\"line\">move 2 from A to C.</span><br><span class=\"line\">move 1 from B to C.</span><br><span class=\"line\">move 3 from A to B.</span><br><span class=\"line\">move 1 from C to A.</span><br><span class=\"line\">move 2 from C to B.</span><br><span class=\"line\">move 1 from A to B.</span><br><span class=\"line\">move 4 from A to C.</span><br><span class=\"line\">move 1 from B to C.</span><br><span class=\"line\">move 2 from B to A.</span><br><span class=\"line\">move 1 from C to A.</span><br><span class=\"line\">move 3 from B to C.</span><br><span class=\"line\">move 1 from A to B.</span><br><span class=\"line\">move 2 from A to C.</span><br><span class=\"line\">move 1 from B to C.</span><br><span class=\"line\">A:[]</span><br><span class=\"line\">B:[]</span><br><span class=\"line\">C:[4, 3, 2, 1]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<h2 id=\"核心的代码其实只需要：\"><a href=\"#核心的代码其实只需要：\" class=\"headerlink\" title=\"核心的代码其实只需要：\"></a>核心的代码其实只需要：</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">move</span><span class=\"params\">(n,a,b,c)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> n==<span class=\"number\">1</span>:</span><br><span class=\"line\">        c.append(a.pop())</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    move(n<span class=\"number\">-1</span>,a,c,b)</span><br><span class=\"line\">    c.append(a.pop())</span><br><span class=\"line\">    move(n<span class=\"number\">-1</span>,b,a,c)</span><br><span class=\"line\">move(<span class=\"number\">3</span>,[<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>],[],[])</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"完整代码：\"><a href=\"#完整代码：\" class=\"headerlink\" title=\"完整代码：\"></a>完整代码：</h2><p>为了更直观一些，定义了 Stick 类。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ABC三根柱子，A上有N个盘子，如何才能将盘子移到C柱子上，每次只能移动一个，并且大盘总是在小盘下面。</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Stick</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self,name,list)</span>:</span></span><br><span class=\"line\">        self.name=name</span><br><span class=\"line\">        self.list=list</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pop</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.list.pop()</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">append</span><span class=\"params\">(self, element)</span>:</span></span><br><span class=\"line\">        self.list.append(element)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.name+<span class=\"string\">':'</span>+str(self.list)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">move</span><span class=\"params\">(n,a,b,c)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># 1. 将 a 的 n-1 个放到 b</span></span><br><span class=\"line\">    <span class=\"comment\"># 2. 将 a 的 n 个放到 c</span></span><br><span class=\"line\">    <span class=\"comment\"># 3. 将 b 的 n-1 个放到 c</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> n==<span class=\"number\">1</span>:</span><br><span class=\"line\">        move_action(a,c) <span class=\"comment\"># c.append(a.pop())</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    move(n<span class=\"number\">-1</span>,a,c,b)</span><br><span class=\"line\">    move_action(a,c) <span class=\"comment\"># c.append(a.pop())</span></span><br><span class=\"line\">    move(n<span class=\"number\">-1</span>,b,a,c)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">move_action</span><span class=\"params\">(source, target)</span>:</span></span><br><span class=\"line\">    size = len(source.list)</span><br><span class=\"line\">    print(<span class=\"string\">'move &#123;0&#125; from &#123;1&#125; to &#123;2&#125;.'</span>.format(source.list[size<span class=\"number\">-1</span>],source.name,target.name))</span><br><span class=\"line\">    target.append(source.pop())</span><br><span class=\"line\"></span><br><span class=\"line\">a=Stick(<span class=\"string\">'A'</span>,[<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>])</span><br><span class=\"line\">b=Stick(<span class=\"string\">'B'</span>,[])</span><br><span class=\"line\">c=Stick(<span class=\"string\">'C'</span>,[])</span><br><span class=\"line\">print(a)</span><br><span class=\"line\">print(b)</span><br><span class=\"line\">print(c)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">'start moving:'</span>)</span><br><span class=\"line\">n = len(a.list)</span><br><span class=\"line\">move(n,a,b,c)</span><br><span class=\"line\">print(a)</span><br><span class=\"line\">print(b)</span><br><span class=\"line\">print(c)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5层的结果：\"><a href=\"#5层的结果：\" class=\"headerlink\" title=\"5层的结果：\"></a>5层的结果：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A:[5, 4, 3, 2, 1]</span><br><span class=\"line\">B:[]</span><br><span class=\"line\">C:[]</span><br><span class=\"line\">start moving:</span><br><span class=\"line\">move 1 from A to C.</span><br><span class=\"line\">move 2 from A to B.</span><br><span class=\"line\">move 1 from C to B.</span><br><span class=\"line\">move 3 from A to C.</span><br><span class=\"line\">move 1 from B to A.</span><br><span class=\"line\">move 2 from B to C.</span><br><span class=\"line\">move 1 from A to C.</span><br><span class=\"line\">move 4 from A to B.</span><br><span class=\"line\">move 1 from C to B.</span><br><span class=\"line\">move 2 from C to A.</span><br><span class=\"line\">move 1 from B to A.</span><br><span class=\"line\">move 3 from C to B.</span><br><span class=\"line\">move 1 from A to C.</span><br><span class=\"line\">move 2 from A to B.</span><br><span class=\"line\">move 1 from C to B.</span><br><span class=\"line\">move 5 from A to C.</span><br><span class=\"line\">move 1 from B to A.</span><br><span class=\"line\">move 2 from B to C.</span><br><span class=\"line\">move 1 from A to C.</span><br><span class=\"line\">move 3 from B to A.</span><br><span class=\"line\">move 1 from C to B.</span><br><span class=\"line\">move 2 from C to A.</span><br><span class=\"line\">move 1 from B to A.</span><br><span class=\"line\">move 4 from B to C.</span><br><span class=\"line\">move 1 from A to C.</span><br><span class=\"line\">move 2 from A to B.</span><br><span class=\"line\">move 1 from C to B.</span><br><span class=\"line\">move 3 from A to C.</span><br><span class=\"line\">move 1 from B to A.</span><br><span class=\"line\">move 2 from B to C.</span><br><span class=\"line\">move 1 from A to C.</span><br><span class=\"line\">A:[]</span><br><span class=\"line\">B:[]</span><br><span class=\"line\">C:[5, 4, 3, 2, 1]</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>最近看的一个教程里，提到了汉诺塔的问题，参考别人的代码自己用python实现了一番。</p>\n<h2 id=\"4层的效果是这样：\"><a href=\"#4层的效果是这样：\" class=\"headerlink\" title=\"4层的效果是这样：\"></a>4层的效果是这样：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A:[4, 3, 2, 1]</span><br><span class=\"line\">B:[]</span><br><span class=\"line\">C:[]</span><br><span class=\"line\">start moving:</span><br><span class=\"line\">move 1 from A to B.</span><br><span class=\"line\">move 2 from A to C.</span><br><span class=\"line\">move 1 from B to C.</span><br><span class=\"line\">move 3 from A to B.</span><br><span class=\"line\">move 1 from C to A.</span><br><span class=\"line\">move 2 from C to B.</span><br><span class=\"line\">move 1 from A to B.</span><br><span class=\"line\">move 4 from A to C.</span><br><span class=\"line\">move 1 from B to C.</span><br><span class=\"line\">move 2 from B to A.</span><br><span class=\"line\">move 1 from C to A.</span><br><span class=\"line\">move 3 from B to C.</span><br><span class=\"line\">move 1 from A to B.</span><br><span class=\"line\">move 2 from A to C.</span><br><span class=\"line\">move 1 from B to C.</span><br><span class=\"line\">A:[]</span><br><span class=\"line\">B:[]</span><br><span class=\"line\">C:[4, 3, 2, 1]</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"核心的代码其实只需要：\"><a href=\"#核心的代码其实只需要：\" class=\"headerlink\" title=\"核心的代码其实只需要：\"></a>核心的代码其实只需要：</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">move</span><span class=\"params\">(n,a,b,c)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> n==<span class=\"number\">1</span>:</span><br><span class=\"line\">        c.append(a.pop())</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    move(n<span class=\"number\">-1</span>,a,c,b)</span><br><span class=\"line\">    c.append(a.pop())</span><br><span class=\"line\">    move(n<span class=\"number\">-1</span>,b,a,c)</span><br><span class=\"line\">move(<span class=\"number\">3</span>,[<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>],[],[])</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"完整代码：\"><a href=\"#完整代码：\" class=\"headerlink\" title=\"完整代码：\"></a>完整代码：</h2><p>为了更直观一些，定义了 Stick 类。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ABC三根柱子，A上有N个盘子，如何才能将盘子移到C柱子上，每次只能移动一个，并且大盘总是在小盘下面。</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Stick</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self,name,list)</span>:</span></span><br><span class=\"line\">        self.name=name</span><br><span class=\"line\">        self.list=list</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pop</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.list.pop()</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">append</span><span class=\"params\">(self, element)</span>:</span></span><br><span class=\"line\">        self.list.append(element)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.name+<span class=\"string\">':'</span>+str(self.list)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">move</span><span class=\"params\">(n,a,b,c)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># 1. 将 a 的 n-1 个放到 b</span></span><br><span class=\"line\">    <span class=\"comment\"># 2. 将 a 的 n 个放到 c</span></span><br><span class=\"line\">    <span class=\"comment\"># 3. 将 b 的 n-1 个放到 c</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> n==<span class=\"number\">1</span>:</span><br><span class=\"line\">        move_action(a,c) <span class=\"comment\"># c.append(a.pop())</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    move(n<span class=\"number\">-1</span>,a,c,b)</span><br><span class=\"line\">    move_action(a,c) <span class=\"comment\"># c.append(a.pop())</span></span><br><span class=\"line\">    move(n<span class=\"number\">-1</span>,b,a,c)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">move_action</span><span class=\"params\">(source, target)</span>:</span></span><br><span class=\"line\">    size = len(source.list)</span><br><span class=\"line\">    print(<span class=\"string\">'move &#123;0&#125; from &#123;1&#125; to &#123;2&#125;.'</span>.format(source.list[size<span class=\"number\">-1</span>],source.name,target.name))</span><br><span class=\"line\">    target.append(source.pop())</span><br><span class=\"line\"></span><br><span class=\"line\">a=Stick(<span class=\"string\">'A'</span>,[<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>])</span><br><span class=\"line\">b=Stick(<span class=\"string\">'B'</span>,[])</span><br><span class=\"line\">c=Stick(<span class=\"string\">'C'</span>,[])</span><br><span class=\"line\">print(a)</span><br><span class=\"line\">print(b)</span><br><span class=\"line\">print(c)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">'start moving:'</span>)</span><br><span class=\"line\">n = len(a.list)</span><br><span class=\"line\">move(n,a,b,c)</span><br><span class=\"line\">print(a)</span><br><span class=\"line\">print(b)</span><br><span class=\"line\">print(c)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5层的结果：\"><a href=\"#5层的结果：\" class=\"headerlink\" title=\"5层的结果：\"></a>5层的结果：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A:[5, 4, 3, 2, 1]</span><br><span class=\"line\">B:[]</span><br><span class=\"line\">C:[]</span><br><span class=\"line\">start moving:</span><br><span class=\"line\">move 1 from A to C.</span><br><span class=\"line\">move 2 from A to B.</span><br><span class=\"line\">move 1 from C to B.</span><br><span class=\"line\">move 3 from A to C.</span><br><span class=\"line\">move 1 from B to A.</span><br><span class=\"line\">move 2 from B to C.</span><br><span class=\"line\">move 1 from A to C.</span><br><span class=\"line\">move 4 from A to B.</span><br><span class=\"line\">move 1 from C to B.</span><br><span class=\"line\">move 2 from C to A.</span><br><span class=\"line\">move 1 from B to A.</span><br><span class=\"line\">move 3 from C to B.</span><br><span class=\"line\">move 1 from A to C.</span><br><span class=\"line\">move 2 from A to B.</span><br><span class=\"line\">move 1 from C to B.</span><br><span class=\"line\">move 5 from A to C.</span><br><span class=\"line\">move 1 from B to A.</span><br><span class=\"line\">move 2 from B to C.</span><br><span class=\"line\">move 1 from A to C.</span><br><span class=\"line\">move 3 from B to A.</span><br><span class=\"line\">move 1 from C to B.</span><br><span class=\"line\">move 2 from C to A.</span><br><span class=\"line\">move 1 from B to A.</span><br><span class=\"line\">move 4 from B to C.</span><br><span class=\"line\">move 1 from A to C.</span><br><span class=\"line\">move 2 from A to B.</span><br><span class=\"line\">move 1 from C to B.</span><br><span class=\"line\">move 3 from A to C.</span><br><span class=\"line\">move 1 from B to A.</span><br><span class=\"line\">move 2 from B to C.</span><br><span class=\"line\">move 1 from A to C.</span><br><span class=\"line\">A:[]</span><br><span class=\"line\">B:[]</span><br><span class=\"line\">C:[5, 4, 3, 2, 1]</span><br></pre></td></tr></table></figure>"},{"title":"Java Master - S11.GenericsClass","date":"2018-02-25T15:25:23.000Z","_content":"\nNotes and Exersice for Generics Class of Completed Java Master Class.\n<!--more-->\n\n# Notes\n## Help to find out error at compile time.\n```\nArrayList myList = new ArrayList();\nmyList.add(1);\nmyList.add(\"Hi\");\n```\nHere, different types of data will be added into myList. Error will occur at run time.\n```\nArrayList<Integer> myList = new ArrayList<>();\nmyList.add(1);\nmyList.add(\"Hi\");\t// will show error\n```\nSo error can be handled at compile time.\n\n## Define type for class to avoid adding other type of data\n```\nTeam<FootballPlayer> myTeam = new Team<>();\nmyTeam.add(new BasketballPlayer(\"mike\")) // X Error\n```\n## Make sure T is correct type\n- Team<T> will allow Team<String>\n- But T here has to be Player\n```\nclass Team<T extends Player> {}\n```\n- so that Team<String> shows error at compile time\n- at the same time, no need to cast player inside class\n\n## Make sure parameter is certain type\n```\nclass Team<T extends Player> {\n\tvoid playWith(Team<T> team){..};\n}\n```\n- T in Team<T> must be one of Player class\n- when passing parameter, team will follow the same team type. \n\n# Demo: create own generics class\n## Player\n```\npublic class Player {\n\n\tprivate String name;\n\n\tpublic Player(String name) {\n\t\tsuper();\n\t\tthis.name = name;\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\t\n}\n```\n## FootballPlayer\n```\npublic class FootballPlayer extends Player{\n\n\tpublic FootballPlayer(String name) {\n\t\tsuper(name);\n\t}\n}\n```\n## BasketballPlayer\n```\npublic class BasketballPlayer extends Player {\n\n\tpublic BasketballPlayer(String name) {\n\t\tsuper(name);\n\t}\n}\n```\n## Team\n```\nimport java.util.List;\n\npublic class Team<T extends Player> {\n\n\tprivate String name;\n\tprivate List<T> members;\n\t\n\tpublic Team(String name) {\n\t\tsuper();\n\t\tthis.name = name;\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tvoid addPlayer(T player) {\n\t\tmembers.add(player);\n\t}\n}\n```\n## Main\n```\npublic class GenericsMain {\n\n\tpublic static void main(String[] args) {\n\n\t\tBasketballPlayer michael = new BasketballPlayer(\"Michael\");\n\t\tFootballPlayer beckham = new FootballPlayer(\"BeckHam\");\n\t\t\n\t\tTeam team1 = new Team(\"1st team\"); // warning\n\t\tTeam<String> team2 = new Team<>(\"2nd team\"); // error \n\t\t\n\t\tTeam<Player> team3 = new Team<>(\"3rd team\");\n\t\tteam3.addPlayer(beckham);\n\t\tteam3.addPlayer(michael);\n\t\t// able to add both types of player\n\t\t\n\t\tTeam<FootballPlayer> team4 = new Team<>(\"4th team\");\n\t\tteam4.addPlayer(beckham);\n\t\tteam4.addPlayer(michael);\t// error\n\t\t// only accept football player\n\t}\n}\n```\n\n","source":"_posts/Java-Master-S11-GenericsClass.md","raw":"---\ntitle: Java Master - S11.GenericsClass\ndate: 2018-02-25 23:25:23\ncategories: Java Master Course\ntags: [Java, course, note, generics]\n---\n\nNotes and Exersice for Generics Class of Completed Java Master Class.\n<!--more-->\n\n# Notes\n## Help to find out error at compile time.\n```\nArrayList myList = new ArrayList();\nmyList.add(1);\nmyList.add(\"Hi\");\n```\nHere, different types of data will be added into myList. Error will occur at run time.\n```\nArrayList<Integer> myList = new ArrayList<>();\nmyList.add(1);\nmyList.add(\"Hi\");\t// will show error\n```\nSo error can be handled at compile time.\n\n## Define type for class to avoid adding other type of data\n```\nTeam<FootballPlayer> myTeam = new Team<>();\nmyTeam.add(new BasketballPlayer(\"mike\")) // X Error\n```\n## Make sure T is correct type\n- Team<T> will allow Team<String>\n- But T here has to be Player\n```\nclass Team<T extends Player> {}\n```\n- so that Team<String> shows error at compile time\n- at the same time, no need to cast player inside class\n\n## Make sure parameter is certain type\n```\nclass Team<T extends Player> {\n\tvoid playWith(Team<T> team){..};\n}\n```\n- T in Team<T> must be one of Player class\n- when passing parameter, team will follow the same team type. \n\n# Demo: create own generics class\n## Player\n```\npublic class Player {\n\n\tprivate String name;\n\n\tpublic Player(String name) {\n\t\tsuper();\n\t\tthis.name = name;\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\t\n}\n```\n## FootballPlayer\n```\npublic class FootballPlayer extends Player{\n\n\tpublic FootballPlayer(String name) {\n\t\tsuper(name);\n\t}\n}\n```\n## BasketballPlayer\n```\npublic class BasketballPlayer extends Player {\n\n\tpublic BasketballPlayer(String name) {\n\t\tsuper(name);\n\t}\n}\n```\n## Team\n```\nimport java.util.List;\n\npublic class Team<T extends Player> {\n\n\tprivate String name;\n\tprivate List<T> members;\n\t\n\tpublic Team(String name) {\n\t\tsuper();\n\t\tthis.name = name;\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tvoid addPlayer(T player) {\n\t\tmembers.add(player);\n\t}\n}\n```\n## Main\n```\npublic class GenericsMain {\n\n\tpublic static void main(String[] args) {\n\n\t\tBasketballPlayer michael = new BasketballPlayer(\"Michael\");\n\t\tFootballPlayer beckham = new FootballPlayer(\"BeckHam\");\n\t\t\n\t\tTeam team1 = new Team(\"1st team\"); // warning\n\t\tTeam<String> team2 = new Team<>(\"2nd team\"); // error \n\t\t\n\t\tTeam<Player> team3 = new Team<>(\"3rd team\");\n\t\tteam3.addPlayer(beckham);\n\t\tteam3.addPlayer(michael);\n\t\t// able to add both types of player\n\t\t\n\t\tTeam<FootballPlayer> team4 = new Team<>(\"4th team\");\n\t\tteam4.addPlayer(beckham);\n\t\tteam4.addPlayer(michael);\t// error\n\t\t// only accept football player\n\t}\n}\n```\n\n","slug":"Java-Master-S11-GenericsClass","published":1,"updated":"2020-04-30T09:23:19.529Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedi8000osd5t77w3xz95","content":"<p>Notes and Exersice for Generics Class of Completed Java Master Class.</p>\n<a id=\"more\"></a>\n\n<h1 id=\"Notes\"><a href=\"#Notes\" class=\"headerlink\" title=\"Notes\"></a>Notes</h1><h2 id=\"Help-to-find-out-error-at-compile-time\"><a href=\"#Help-to-find-out-error-at-compile-time\" class=\"headerlink\" title=\"Help to find out error at compile time.\"></a>Help to find out error at compile time.</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ArrayList myList = new ArrayList();</span><br><span class=\"line\">myList.add(1);</span><br><span class=\"line\">myList.add(&quot;Hi&quot;);</span><br></pre></td></tr></table></figure>\n\n<p>Here, different types of data will be added into myList. Error will occur at run time.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ArrayList&lt;Integer&gt; myList = new ArrayList&lt;&gt;();</span><br><span class=\"line\">myList.add(1);</span><br><span class=\"line\">myList.add(&quot;Hi&quot;);\t// will show error</span><br></pre></td></tr></table></figure>\n\n<p>So error can be handled at compile time.</p>\n<h2 id=\"Define-type-for-class-to-avoid-adding-other-type-of-data\"><a href=\"#Define-type-for-class-to-avoid-adding-other-type-of-data\" class=\"headerlink\" title=\"Define type for class to avoid adding other type of data\"></a>Define type for class to avoid adding other type of data</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Team&lt;FootballPlayer&gt; myTeam = new Team&lt;&gt;();</span><br><span class=\"line\">myTeam.add(new BasketballPlayer(&quot;mike&quot;)) // X Error</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Make-sure-T-is-correct-type\"><a href=\"#Make-sure-T-is-correct-type\" class=\"headerlink\" title=\"Make sure T is correct type\"></a>Make sure T is correct type</h2><ul>\n<li><p>Team<t> will allow Team<string></string></t></p>\n</li>\n<li><p>But T here has to be Player</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Team&lt;T extends Player&gt; &#123;&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>so that Team<string> shows error at compile time</string></p>\n</li>\n<li><p>at the same time, no need to cast player inside class</p>\n</li>\n</ul>\n<h2 id=\"Make-sure-parameter-is-certain-type\"><a href=\"#Make-sure-parameter-is-certain-type\" class=\"headerlink\" title=\"Make sure parameter is certain type\"></a>Make sure parameter is certain type</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Team&lt;T extends Player&gt; &#123;</span><br><span class=\"line\">\tvoid playWith(Team&lt;T&gt; team)&#123;..&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>T in Team<t> must be one of Player class</t></li>\n<li>when passing parameter, team will follow the same team type. </li>\n</ul>\n<h1 id=\"Demo-create-own-generics-class\"><a href=\"#Demo-create-own-generics-class\" class=\"headerlink\" title=\"Demo: create own generics class\"></a>Demo: create own generics class</h1><h2 id=\"Player\"><a href=\"#Player\" class=\"headerlink\" title=\"Player\"></a>Player</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Player &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String name;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic Player(String name) &#123;</span><br><span class=\"line\">\t\tsuper();</span><br><span class=\"line\">\t\tthis.name = name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic String getName() &#123;</span><br><span class=\"line\">\t\treturn name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"FootballPlayer\"><a href=\"#FootballPlayer\" class=\"headerlink\" title=\"FootballPlayer\"></a>FootballPlayer</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class FootballPlayer extends Player&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic FootballPlayer(String name) &#123;</span><br><span class=\"line\">\t\tsuper(name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"BasketballPlayer\"><a href=\"#BasketballPlayer\" class=\"headerlink\" title=\"BasketballPlayer\"></a>BasketballPlayer</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class BasketballPlayer extends Player &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic BasketballPlayer(String name) &#123;</span><br><span class=\"line\">\t\tsuper(name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Team\"><a href=\"#Team\" class=\"headerlink\" title=\"Team\"></a>Team</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Team&lt;T extends Player&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String name;</span><br><span class=\"line\">\tprivate List&lt;T&gt; members;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic Team(String name) &#123;</span><br><span class=\"line\">\t\tsuper();</span><br><span class=\"line\">\t\tthis.name = name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic String getName() &#123;</span><br><span class=\"line\">\t\treturn name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvoid addPlayer(T player) &#123;</span><br><span class=\"line\">\t\tmembers.add(player);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Main\"><a href=\"#Main\" class=\"headerlink\" title=\"Main\"></a>Main</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class GenericsMain &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tBasketballPlayer michael = new BasketballPlayer(&quot;Michael&quot;);</span><br><span class=\"line\">\t\tFootballPlayer beckham = new FootballPlayer(&quot;BeckHam&quot;);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tTeam team1 = new Team(&quot;1st team&quot;); // warning</span><br><span class=\"line\">\t\tTeam&lt;String&gt; team2 = new Team&lt;&gt;(&quot;2nd team&quot;); // error </span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tTeam&lt;Player&gt; team3 = new Team&lt;&gt;(&quot;3rd team&quot;);</span><br><span class=\"line\">\t\tteam3.addPlayer(beckham);</span><br><span class=\"line\">\t\tteam3.addPlayer(michael);</span><br><span class=\"line\">\t\t// able to add both types of player</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tTeam&lt;FootballPlayer&gt; team4 = new Team&lt;&gt;(&quot;4th team&quot;);</span><br><span class=\"line\">\t\tteam4.addPlayer(beckham);</span><br><span class=\"line\">\t\tteam4.addPlayer(michael);\t// error</span><br><span class=\"line\">\t\t// only accept football player</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>Notes and Exersice for Generics Class of Completed Java Master Class.</p>","more":"<h1 id=\"Notes\"><a href=\"#Notes\" class=\"headerlink\" title=\"Notes\"></a>Notes</h1><h2 id=\"Help-to-find-out-error-at-compile-time\"><a href=\"#Help-to-find-out-error-at-compile-time\" class=\"headerlink\" title=\"Help to find out error at compile time.\"></a>Help to find out error at compile time.</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ArrayList myList = new ArrayList();</span><br><span class=\"line\">myList.add(1);</span><br><span class=\"line\">myList.add(&quot;Hi&quot;);</span><br></pre></td></tr></table></figure>\n\n<p>Here, different types of data will be added into myList. Error will occur at run time.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ArrayList&lt;Integer&gt; myList = new ArrayList&lt;&gt;();</span><br><span class=\"line\">myList.add(1);</span><br><span class=\"line\">myList.add(&quot;Hi&quot;);\t// will show error</span><br></pre></td></tr></table></figure>\n\n<p>So error can be handled at compile time.</p>\n<h2 id=\"Define-type-for-class-to-avoid-adding-other-type-of-data\"><a href=\"#Define-type-for-class-to-avoid-adding-other-type-of-data\" class=\"headerlink\" title=\"Define type for class to avoid adding other type of data\"></a>Define type for class to avoid adding other type of data</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Team&lt;FootballPlayer&gt; myTeam = new Team&lt;&gt;();</span><br><span class=\"line\">myTeam.add(new BasketballPlayer(&quot;mike&quot;)) // X Error</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Make-sure-T-is-correct-type\"><a href=\"#Make-sure-T-is-correct-type\" class=\"headerlink\" title=\"Make sure T is correct type\"></a>Make sure T is correct type</h2><ul>\n<li><p>Team<t> will allow Team<string></string></t></p>\n</li>\n<li><p>But T here has to be Player</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Team&lt;T extends Player&gt; &#123;&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>so that Team<string> shows error at compile time</string></p>\n</li>\n<li><p>at the same time, no need to cast player inside class</p>\n</li>\n</ul>\n<h2 id=\"Make-sure-parameter-is-certain-type\"><a href=\"#Make-sure-parameter-is-certain-type\" class=\"headerlink\" title=\"Make sure parameter is certain type\"></a>Make sure parameter is certain type</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Team&lt;T extends Player&gt; &#123;</span><br><span class=\"line\">\tvoid playWith(Team&lt;T&gt; team)&#123;..&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>T in Team<t> must be one of Player class</t></li>\n<li>when passing parameter, team will follow the same team type. </li>\n</ul>\n<h1 id=\"Demo-create-own-generics-class\"><a href=\"#Demo-create-own-generics-class\" class=\"headerlink\" title=\"Demo: create own generics class\"></a>Demo: create own generics class</h1><h2 id=\"Player\"><a href=\"#Player\" class=\"headerlink\" title=\"Player\"></a>Player</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Player &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String name;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic Player(String name) &#123;</span><br><span class=\"line\">\t\tsuper();</span><br><span class=\"line\">\t\tthis.name = name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic String getName() &#123;</span><br><span class=\"line\">\t\treturn name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"FootballPlayer\"><a href=\"#FootballPlayer\" class=\"headerlink\" title=\"FootballPlayer\"></a>FootballPlayer</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class FootballPlayer extends Player&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic FootballPlayer(String name) &#123;</span><br><span class=\"line\">\t\tsuper(name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"BasketballPlayer\"><a href=\"#BasketballPlayer\" class=\"headerlink\" title=\"BasketballPlayer\"></a>BasketballPlayer</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class BasketballPlayer extends Player &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic BasketballPlayer(String name) &#123;</span><br><span class=\"line\">\t\tsuper(name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Team\"><a href=\"#Team\" class=\"headerlink\" title=\"Team\"></a>Team</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Team&lt;T extends Player&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String name;</span><br><span class=\"line\">\tprivate List&lt;T&gt; members;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic Team(String name) &#123;</span><br><span class=\"line\">\t\tsuper();</span><br><span class=\"line\">\t\tthis.name = name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic String getName() &#123;</span><br><span class=\"line\">\t\treturn name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvoid addPlayer(T player) &#123;</span><br><span class=\"line\">\t\tmembers.add(player);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Main\"><a href=\"#Main\" class=\"headerlink\" title=\"Main\"></a>Main</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class GenericsMain &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tBasketballPlayer michael = new BasketballPlayer(&quot;Michael&quot;);</span><br><span class=\"line\">\t\tFootballPlayer beckham = new FootballPlayer(&quot;BeckHam&quot;);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tTeam team1 = new Team(&quot;1st team&quot;); // warning</span><br><span class=\"line\">\t\tTeam&lt;String&gt; team2 = new Team&lt;&gt;(&quot;2nd team&quot;); // error </span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tTeam&lt;Player&gt; team3 = new Team&lt;&gt;(&quot;3rd team&quot;);</span><br><span class=\"line\">\t\tteam3.addPlayer(beckham);</span><br><span class=\"line\">\t\tteam3.addPlayer(michael);</span><br><span class=\"line\">\t\t// able to add both types of player</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tTeam&lt;FootballPlayer&gt; team4 = new Team&lt;&gt;(&quot;4th team&quot;);</span><br><span class=\"line\">\t\tteam4.addPlayer(beckham);</span><br><span class=\"line\">\t\tteam4.addPlayer(michael);\t// error</span><br><span class=\"line\">\t\t// only accept football player</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Java Master - S9.LinkedList","date":"2018-01-31T23:54:57.000Z","_content":"Notes and Exersice for LinkedList of Completed Java Master Class.\n<!--more-->\n\n# Notes\n- In LinkedList, each elements are linked with previous element and following element.\n- LinkedList is faster when adding or removing elements.\n- ArrayList is faster when we want to take value by giving index number\n\nNow we have a list:\n\t- java\n\t- python\n\t- sql\n\t- c\n\t- html\n\t- ruby \nIf we want to remove \"python\".\n## For ArrayList\nAll the elements behind \"python\" will be relocated with new index.\n## For LinkedList\nBreak reference between python to java and sql. java will refer to sql. the changes are only within that area.\n\n# Exercise\n## Requirements\n- Three classes: \n\t- Song: title, duration\n\t- Album: title, singer, songList\n\t- Player(main)\n- Process:\n\t1. Automatically create an albumList including 2 albums, 5 songs for each album.\n\t2. Print all albums with songs\n\t3. Ask users to add songs into playList by choosing album then song. Press 0 to finish adding.\n\t4. Print menu for users: \n\t\t- Quit\n\t\t- Skip forward to the next song\n\t\t- skip backwards to a previous song.  \n\t\t- Replay the current song.\n\t\t- List the songs in the playlist\n\t\t- Remove the current song from the playlist\n- hint: listiterator.remove()\n\n## Codes\n\n### Song.java\n```\npackage javamaster.linkedlist;\n\npublic class Song {\n\tprivate String title;\n\tprivate String duration;\n\tpublic String getTitle() {\n\t\treturn title;\n\t}\n\tpublic void setTitle(String title) {\n\t\tthis.title = title;\n\t}\n\tpublic String getDuration() {\n\t\treturn duration;\n\t}\n\tpublic void setDuration(String duration) {\n\t\tthis.duration = duration;\n\t}\n\tpublic Song(String title, String duration) {\n\t\tsuper();\n\t\tthis.title = title;\n\t\tthis.duration = duration;\n\t}\n\t@Override\n\tpublic String toString() {\n\t\treturn title + \"\\t\" + duration;\n\t}\n}\n```\n\n### Album.java\n```\npackage javamaster.linkedlist;\n\nimport java.util.List;\n\npublic class Album {\n\tprivate String albumTitle;\n\tprivate String singer;\n\tprivate List<Song> songList;\n\t\n\tpublic Album(String albumTitle, String singer, List<Song> songList) {\n\t\tsuper();\n\t\tthis.albumTitle = albumTitle;\n\t\tthis.singer = singer;\n\t\tthis.songList = songList;\n\t}\n\tpublic String getAlbumTitle() {\n\t\treturn albumTitle;\n\t}\n\tpublic void setAlbumTitle(String albumTitle) {\n\t\tthis.albumTitle = albumTitle;\n\t}\n\tpublic String getSinger() {\n\t\treturn singer;\n\t}\n\tpublic void setSinger(String singer) {\n\t\tthis.singer = singer;\n\t}\n\tpublic List<Song> getSongList() {\n\t\treturn songList;\n\t}\n\tpublic void setSongList(List<Song> songList) {\n\t\tthis.songList = songList;\n\t}\n\t@Override\n\tpublic String toString() {\n\t\treturn albumTitle + \"\\t\" + singer;\n\t}\n}\n```\n\n### Player.java\n```\npackage javamaster.linkedlist;\n\nimport java.util.ArrayList;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.ListIterator;\nimport java.util.Scanner;\n\npublic class Player {\n\t\n\tstatic List<Song> playList = new LinkedList<>();\n\tstatic ListIterator<Song> iterator;\n\tstatic boolean forward;\n\tstatic Song currentSong;\n    static Scanner scanner = new Scanner(System.in);\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\tList<Album> albumList = createAlbumList();\n\t\t\n\t\tprintAlbumSong(albumList);\n\t\t\n\t\taddSongToPlayList(albumList);\n\t\t\n\t\t// start player\n\t\tSystem.out.println(\"Starting player..\");\n\t\titerator = playList.listIterator();\n\t\tif (iterator.hasNext()) {\n\t\t\tcurrentSong = iterator.next();\n\t\t\tSystem.out.println(\"Now is playing >> \" + currentSong);\n\t\t\t\n\t\t\t// operate player\n\t\t\tboolean exit = false;\n\t\t\tforward = true;\n\t\t\tSystem.out.println(\"\");\n\t\t\t\n\t\t\tprintMenu();\n\t\t\twhile (!exit) {\n\t\t\t\tString choice = null;\n\t\t\t\tSystem.out.print(\"Please choose : \");\n\t\t\t\tchoice = scanner.next();\n\t\t\t\tSystem.out.println(\"\");\n\t\t\t\t\n\t\t\t\tswitch (choice) {\n\t\t\t\tcase \"0\":\n\t\t\t\t\tSystem.out.println(\"See you..\");\n\t\t\t\t\texit = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"1\":\n\t\t\t\t\tplayNextSong();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"2\":\n\t\t\t\t\tplayLastSong();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"3\":\n\t\t\t\t\treplay();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"4\":\n\t\t\t\t\tlistSong();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"5\":\n\t\t\t\t\tremoveCurrentSong();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"6\":\n\t\t\t\t\tprintMenu();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tSystem.err.println(\"No song found in playlist..\");\n\t\t}\n\t}\n\n\tprivate static List<Album> createAlbumList() {\n\t\tList<Album> albumList = new ArrayList<>();\n\t\tList<Song> songList = new ArrayList<>();\n\t\tsongList.add(new Song(\"tears in heaven\", \"3:30\"));\n\t\tsongList.add(new Song(\"rolling in the deep\", \"4:30\"));\n\t\tsongList.add(new Song(\"complicated\", \"3:50\"));\n\t\tsongList.add(new Song(\"satisfied\", \"2:40\"));\n\t\tsongList.add(new Song(\"faded\", \"4:10\"));\n\t\talbumList.add(new Album(\"The Sea\", \"Anyone\", songList));\n\t\t\n\t\tsongList = new ArrayList<>();\n\t\tsongList.add(new Song(\"java\", \"4:50\"));\n\t\tsongList.add(new Song(\"python\", \"2:30\"));\n\t\tsongList.add(new Song(\"R\", \"1:50\"));\n\t\tsongList.add(new Song(\"C++\", \"5:40\"));\n\t\tsongList.add(new Song(\"C#\", \"2:10\"));\n\t\talbumList.add(new Album(\"The Sky\", \"Programmer\", songList));\n\t\treturn albumList;\n\t}\n\n\tprivate static void addSongToPlayList(List<Album> albumList) {\n\t\tint albumChoice = -1;\n\t\tint songChoice = -1;\n\t\tboolean finishAddSong = false;\n\t\tSystem.out.println(\"Add songs to playlist:\");\n\t\twhile (!finishAddSong) {\n\t\t\tSystem.out.print(\"choose album number (press 0 to finish) : \");\n\t\t\ttry {\n\t\t\t\talbumChoice = scanner.nextInt();\n\t\t\t\tscanner.nextLine();\n\t\t\t\tif (albumChoice == 0) {\n\t\t\t\t\tfinishAddSong = true;\n\t\t\t\t} else if(albumChoice > 0 && albumChoice <= albumList.size()) {\n\t\t\t\t\tList<Song> songs = albumList.get(albumChoice-1).getSongList();\n\t\t\t\t\tSystem.out.print(\"choose song number: \");\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsongChoice = scanner.nextInt();\n\t\t\t\t\t\tscanner.nextLine();\n\t\t\t\t\t\tif(songChoice > 0 && songChoice <= songs.size()) {\n\t\t\t\t\t\t\tplayList.add(songs.get(songChoice-1));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tSystem.err.println(\"Invalid choice ..\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\tSystem.out.println(e);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tSystem.err.println(\"Invalid choice ..\");\n\t\t\t\t}\n\t\t\t} catch (Exception e) {\n\t\t\t\tSystem.out.println(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void printAlbumSong(List<Album> albumList) {\n\t\tListIterator<Album> albumIterator = albumList.listIterator();\n\t\tListIterator<Song> songIterator;\n\t\tSystem.out.println(\"You have: \");\n\t\twhile (albumIterator.hasNext()) {\n\t\t\tAlbum album = (Album) albumIterator.next();\n\t\t\tSystem.out.println(\"Album [\" + albumIterator.nextIndex() + \"] : \" + album);\n\t\t\tsongIterator = album.getSongList().listIterator();\n\t\t\twhile (songIterator.hasNext()) {\n\t\t\t\tSong song = (Song) songIterator.next();\n\t\t\t\tSystem.out.println(\"Song [\" + songIterator.nextIndex() + \"] : \" + song);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void removeCurrentSong() {\n\t\tif (currentSong != null) {\n\t\t\tSystem.out.println(\"Removing >> \"  + currentSong);\n\t\t\titerator.remove();\n\t\t\tif (iterator.hasNext() || iterator.hasPrevious()) {\n\t\t\t\tif (forward) {\n\t\t\t\t\tif (!iterator.hasNext()) {\n\t\t\t\t\t\titerator.previous();\n\t\t\t\t\t}\n\t\t\t\t\tplayNextSong();\n\t\t\t\t} else {\n\t\t\t\t\tif (!iterator.hasPrevious()) {\n\t\t\t\t\t\titerator.next();\n\t\t\t\t\t}\n\t\t\t\t\tplayLastSong();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"No song in the list..\");\n\t\t\t\tcurrentSong = null;\n\t\t\t}\n\t\t} else {\n\t\t\tSystem.out.println(\"No song in the list..\");\n\t\t}\n\t}\n\n\tprivate static void listSong() {\n\t\tSystem.out.println(\"--- Play List ---\");\n\t\tfor (Song song : playList) {\n\t\t\tSystem.out.println(song);\n\t\t}\n\t\tSystem.out.println(\"\");\n\t}\n\n\tprivate static void replay() {\n\t\tSystem.out.println(\"Now is playing >> \" + currentSong);\n\t}\n\n\tprivate static void playLastSong() {\n\t\tif (!forward) {\n\t\t\tif (iterator.hasPrevious()) {\n\t\t\t\tcurrentSong = iterator.previous();\n\t\t\t\tSystem.out.println(\"Now is playing >> \" + currentSong);\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"You are at the start of list..\");\n\t\t\t}\n\t\t} else {\n\t\t\tif (iterator.hasPrevious()) {\n\t\t\t\titerator.previous();\n\t\t\t\tif (iterator.hasPrevious()) {\n\t\t\t\t\tcurrentSong = iterator.previous();\n\t\t\t\t\tSystem.out.println(\"Now is playing >> \" + currentSong);\n\t\t\t\t\tforward = false;\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(\"You are at the start of list..\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"You are at the start of list..\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void playNextSong() {\n\t\tif (forward) {\n\t\t\tif (iterator.hasNext()) {\n\t\t\t\tcurrentSong = iterator.next();\n\t\t\t\tSystem.out.println(\"Now is playing >> \" + currentSong);\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"You are at the end of list..\");\n\t\t\t}\n\t\t} else {\n\t\t\tif (iterator.hasNext()) {\n\t\t\t\titerator.next();\n\t\t\t\tif (iterator.hasNext()) {\n\t\t\t\t\tcurrentSong = iterator.next();\n\t\t\t\t\tSystem.out.println(\"Now is playing >> \" + currentSong);\n\t\t\t\t\tforward = true;\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(\"You are at the end of list..\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"You are at the end of list..\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void printMenu() {\n\t\tSystem.out.println(\"--- Player Menu  ---\");\n\t\tSystem.out.println(\"0. Quit\");\n\t\tSystem.out.println(\"1. Skip forward\");\n\t\tSystem.out.println(\"2. Skip backfard\");\n\t\tSystem.out.println(\"3. Replay\");\n\t\tSystem.out.println(\"4. List songs\");\n\t\tSystem.out.println(\"5. Remove current song\");\n\t\tSystem.out.println(\"6. Show menu\");\n\t\tSystem.out.println(\"\");\n\t}\n}\n```","source":"_posts/Java-Master-S9-LinkedList.md","raw":"---\ntitle: Java Master - S9.LinkedList\ndate: 2018-02-01 07:54:57\ncategories: Java Master Course\ntags: [Java, course, note, LinkedList]\n---\nNotes and Exersice for LinkedList of Completed Java Master Class.\n<!--more-->\n\n# Notes\n- In LinkedList, each elements are linked with previous element and following element.\n- LinkedList is faster when adding or removing elements.\n- ArrayList is faster when we want to take value by giving index number\n\nNow we have a list:\n\t- java\n\t- python\n\t- sql\n\t- c\n\t- html\n\t- ruby \nIf we want to remove \"python\".\n## For ArrayList\nAll the elements behind \"python\" will be relocated with new index.\n## For LinkedList\nBreak reference between python to java and sql. java will refer to sql. the changes are only within that area.\n\n# Exercise\n## Requirements\n- Three classes: \n\t- Song: title, duration\n\t- Album: title, singer, songList\n\t- Player(main)\n- Process:\n\t1. Automatically create an albumList including 2 albums, 5 songs for each album.\n\t2. Print all albums with songs\n\t3. Ask users to add songs into playList by choosing album then song. Press 0 to finish adding.\n\t4. Print menu for users: \n\t\t- Quit\n\t\t- Skip forward to the next song\n\t\t- skip backwards to a previous song.  \n\t\t- Replay the current song.\n\t\t- List the songs in the playlist\n\t\t- Remove the current song from the playlist\n- hint: listiterator.remove()\n\n## Codes\n\n### Song.java\n```\npackage javamaster.linkedlist;\n\npublic class Song {\n\tprivate String title;\n\tprivate String duration;\n\tpublic String getTitle() {\n\t\treturn title;\n\t}\n\tpublic void setTitle(String title) {\n\t\tthis.title = title;\n\t}\n\tpublic String getDuration() {\n\t\treturn duration;\n\t}\n\tpublic void setDuration(String duration) {\n\t\tthis.duration = duration;\n\t}\n\tpublic Song(String title, String duration) {\n\t\tsuper();\n\t\tthis.title = title;\n\t\tthis.duration = duration;\n\t}\n\t@Override\n\tpublic String toString() {\n\t\treturn title + \"\\t\" + duration;\n\t}\n}\n```\n\n### Album.java\n```\npackage javamaster.linkedlist;\n\nimport java.util.List;\n\npublic class Album {\n\tprivate String albumTitle;\n\tprivate String singer;\n\tprivate List<Song> songList;\n\t\n\tpublic Album(String albumTitle, String singer, List<Song> songList) {\n\t\tsuper();\n\t\tthis.albumTitle = albumTitle;\n\t\tthis.singer = singer;\n\t\tthis.songList = songList;\n\t}\n\tpublic String getAlbumTitle() {\n\t\treturn albumTitle;\n\t}\n\tpublic void setAlbumTitle(String albumTitle) {\n\t\tthis.albumTitle = albumTitle;\n\t}\n\tpublic String getSinger() {\n\t\treturn singer;\n\t}\n\tpublic void setSinger(String singer) {\n\t\tthis.singer = singer;\n\t}\n\tpublic List<Song> getSongList() {\n\t\treturn songList;\n\t}\n\tpublic void setSongList(List<Song> songList) {\n\t\tthis.songList = songList;\n\t}\n\t@Override\n\tpublic String toString() {\n\t\treturn albumTitle + \"\\t\" + singer;\n\t}\n}\n```\n\n### Player.java\n```\npackage javamaster.linkedlist;\n\nimport java.util.ArrayList;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.ListIterator;\nimport java.util.Scanner;\n\npublic class Player {\n\t\n\tstatic List<Song> playList = new LinkedList<>();\n\tstatic ListIterator<Song> iterator;\n\tstatic boolean forward;\n\tstatic Song currentSong;\n    static Scanner scanner = new Scanner(System.in);\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\tList<Album> albumList = createAlbumList();\n\t\t\n\t\tprintAlbumSong(albumList);\n\t\t\n\t\taddSongToPlayList(albumList);\n\t\t\n\t\t// start player\n\t\tSystem.out.println(\"Starting player..\");\n\t\titerator = playList.listIterator();\n\t\tif (iterator.hasNext()) {\n\t\t\tcurrentSong = iterator.next();\n\t\t\tSystem.out.println(\"Now is playing >> \" + currentSong);\n\t\t\t\n\t\t\t// operate player\n\t\t\tboolean exit = false;\n\t\t\tforward = true;\n\t\t\tSystem.out.println(\"\");\n\t\t\t\n\t\t\tprintMenu();\n\t\t\twhile (!exit) {\n\t\t\t\tString choice = null;\n\t\t\t\tSystem.out.print(\"Please choose : \");\n\t\t\t\tchoice = scanner.next();\n\t\t\t\tSystem.out.println(\"\");\n\t\t\t\t\n\t\t\t\tswitch (choice) {\n\t\t\t\tcase \"0\":\n\t\t\t\t\tSystem.out.println(\"See you..\");\n\t\t\t\t\texit = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"1\":\n\t\t\t\t\tplayNextSong();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"2\":\n\t\t\t\t\tplayLastSong();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"3\":\n\t\t\t\t\treplay();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"4\":\n\t\t\t\t\tlistSong();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"5\":\n\t\t\t\t\tremoveCurrentSong();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"6\":\n\t\t\t\t\tprintMenu();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tSystem.err.println(\"No song found in playlist..\");\n\t\t}\n\t}\n\n\tprivate static List<Album> createAlbumList() {\n\t\tList<Album> albumList = new ArrayList<>();\n\t\tList<Song> songList = new ArrayList<>();\n\t\tsongList.add(new Song(\"tears in heaven\", \"3:30\"));\n\t\tsongList.add(new Song(\"rolling in the deep\", \"4:30\"));\n\t\tsongList.add(new Song(\"complicated\", \"3:50\"));\n\t\tsongList.add(new Song(\"satisfied\", \"2:40\"));\n\t\tsongList.add(new Song(\"faded\", \"4:10\"));\n\t\talbumList.add(new Album(\"The Sea\", \"Anyone\", songList));\n\t\t\n\t\tsongList = new ArrayList<>();\n\t\tsongList.add(new Song(\"java\", \"4:50\"));\n\t\tsongList.add(new Song(\"python\", \"2:30\"));\n\t\tsongList.add(new Song(\"R\", \"1:50\"));\n\t\tsongList.add(new Song(\"C++\", \"5:40\"));\n\t\tsongList.add(new Song(\"C#\", \"2:10\"));\n\t\talbumList.add(new Album(\"The Sky\", \"Programmer\", songList));\n\t\treturn albumList;\n\t}\n\n\tprivate static void addSongToPlayList(List<Album> albumList) {\n\t\tint albumChoice = -1;\n\t\tint songChoice = -1;\n\t\tboolean finishAddSong = false;\n\t\tSystem.out.println(\"Add songs to playlist:\");\n\t\twhile (!finishAddSong) {\n\t\t\tSystem.out.print(\"choose album number (press 0 to finish) : \");\n\t\t\ttry {\n\t\t\t\talbumChoice = scanner.nextInt();\n\t\t\t\tscanner.nextLine();\n\t\t\t\tif (albumChoice == 0) {\n\t\t\t\t\tfinishAddSong = true;\n\t\t\t\t} else if(albumChoice > 0 && albumChoice <= albumList.size()) {\n\t\t\t\t\tList<Song> songs = albumList.get(albumChoice-1).getSongList();\n\t\t\t\t\tSystem.out.print(\"choose song number: \");\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsongChoice = scanner.nextInt();\n\t\t\t\t\t\tscanner.nextLine();\n\t\t\t\t\t\tif(songChoice > 0 && songChoice <= songs.size()) {\n\t\t\t\t\t\t\tplayList.add(songs.get(songChoice-1));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tSystem.err.println(\"Invalid choice ..\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\tSystem.out.println(e);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tSystem.err.println(\"Invalid choice ..\");\n\t\t\t\t}\n\t\t\t} catch (Exception e) {\n\t\t\t\tSystem.out.println(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void printAlbumSong(List<Album> albumList) {\n\t\tListIterator<Album> albumIterator = albumList.listIterator();\n\t\tListIterator<Song> songIterator;\n\t\tSystem.out.println(\"You have: \");\n\t\twhile (albumIterator.hasNext()) {\n\t\t\tAlbum album = (Album) albumIterator.next();\n\t\t\tSystem.out.println(\"Album [\" + albumIterator.nextIndex() + \"] : \" + album);\n\t\t\tsongIterator = album.getSongList().listIterator();\n\t\t\twhile (songIterator.hasNext()) {\n\t\t\t\tSong song = (Song) songIterator.next();\n\t\t\t\tSystem.out.println(\"Song [\" + songIterator.nextIndex() + \"] : \" + song);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void removeCurrentSong() {\n\t\tif (currentSong != null) {\n\t\t\tSystem.out.println(\"Removing >> \"  + currentSong);\n\t\t\titerator.remove();\n\t\t\tif (iterator.hasNext() || iterator.hasPrevious()) {\n\t\t\t\tif (forward) {\n\t\t\t\t\tif (!iterator.hasNext()) {\n\t\t\t\t\t\titerator.previous();\n\t\t\t\t\t}\n\t\t\t\t\tplayNextSong();\n\t\t\t\t} else {\n\t\t\t\t\tif (!iterator.hasPrevious()) {\n\t\t\t\t\t\titerator.next();\n\t\t\t\t\t}\n\t\t\t\t\tplayLastSong();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"No song in the list..\");\n\t\t\t\tcurrentSong = null;\n\t\t\t}\n\t\t} else {\n\t\t\tSystem.out.println(\"No song in the list..\");\n\t\t}\n\t}\n\n\tprivate static void listSong() {\n\t\tSystem.out.println(\"--- Play List ---\");\n\t\tfor (Song song : playList) {\n\t\t\tSystem.out.println(song);\n\t\t}\n\t\tSystem.out.println(\"\");\n\t}\n\n\tprivate static void replay() {\n\t\tSystem.out.println(\"Now is playing >> \" + currentSong);\n\t}\n\n\tprivate static void playLastSong() {\n\t\tif (!forward) {\n\t\t\tif (iterator.hasPrevious()) {\n\t\t\t\tcurrentSong = iterator.previous();\n\t\t\t\tSystem.out.println(\"Now is playing >> \" + currentSong);\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"You are at the start of list..\");\n\t\t\t}\n\t\t} else {\n\t\t\tif (iterator.hasPrevious()) {\n\t\t\t\titerator.previous();\n\t\t\t\tif (iterator.hasPrevious()) {\n\t\t\t\t\tcurrentSong = iterator.previous();\n\t\t\t\t\tSystem.out.println(\"Now is playing >> \" + currentSong);\n\t\t\t\t\tforward = false;\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(\"You are at the start of list..\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"You are at the start of list..\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void playNextSong() {\n\t\tif (forward) {\n\t\t\tif (iterator.hasNext()) {\n\t\t\t\tcurrentSong = iterator.next();\n\t\t\t\tSystem.out.println(\"Now is playing >> \" + currentSong);\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"You are at the end of list..\");\n\t\t\t}\n\t\t} else {\n\t\t\tif (iterator.hasNext()) {\n\t\t\t\titerator.next();\n\t\t\t\tif (iterator.hasNext()) {\n\t\t\t\t\tcurrentSong = iterator.next();\n\t\t\t\t\tSystem.out.println(\"Now is playing >> \" + currentSong);\n\t\t\t\t\tforward = true;\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(\"You are at the end of list..\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"You are at the end of list..\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void printMenu() {\n\t\tSystem.out.println(\"--- Player Menu  ---\");\n\t\tSystem.out.println(\"0. Quit\");\n\t\tSystem.out.println(\"1. Skip forward\");\n\t\tSystem.out.println(\"2. Skip backfard\");\n\t\tSystem.out.println(\"3. Replay\");\n\t\tSystem.out.println(\"4. List songs\");\n\t\tSystem.out.println(\"5. Remove current song\");\n\t\tSystem.out.println(\"6. Show menu\");\n\t\tSystem.out.println(\"\");\n\t}\n}\n```","slug":"Java-Master-S9-LinkedList","published":1,"updated":"2020-04-30T09:23:19.529Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedi8000psd5tbugvyxm6","content":"<p>Notes and Exersice for LinkedList of Completed Java Master Class.</p>\n<a id=\"more\"></a>\n\n<h1 id=\"Notes\"><a href=\"#Notes\" class=\"headerlink\" title=\"Notes\"></a>Notes</h1><ul>\n<li>In LinkedList, each elements are linked with previous element and following element.</li>\n<li>LinkedList is faster when adding or removing elements.</li>\n<li>ArrayList is faster when we want to take value by giving index number</li>\n</ul>\n<p>Now we have a list:<br>    - java<br>    - python<br>    - sql<br>    - c<br>    - html<br>    - ruby<br>If we want to remove “python”.</p>\n<h2 id=\"For-ArrayList\"><a href=\"#For-ArrayList\" class=\"headerlink\" title=\"For ArrayList\"></a>For ArrayList</h2><p>All the elements behind “python” will be relocated with new index.</p>\n<h2 id=\"For-LinkedList\"><a href=\"#For-LinkedList\" class=\"headerlink\" title=\"For LinkedList\"></a>For LinkedList</h2><p>Break reference between python to java and sql. java will refer to sql. the changes are only within that area.</p>\n<h1 id=\"Exercise\"><a href=\"#Exercise\" class=\"headerlink\" title=\"Exercise\"></a>Exercise</h1><h2 id=\"Requirements\"><a href=\"#Requirements\" class=\"headerlink\" title=\"Requirements\"></a>Requirements</h2><ul>\n<li>Three classes: <ul>\n<li>Song: title, duration</li>\n<li>Album: title, singer, songList</li>\n<li>Player(main)</li>\n</ul>\n</li>\n<li>Process:<ol>\n<li>Automatically create an albumList including 2 albums, 5 songs for each album.</li>\n<li>Print all albums with songs</li>\n<li>Ask users to add songs into playList by choosing album then song. Press 0 to finish adding.</li>\n<li>Print menu for users: <ul>\n<li>Quit</li>\n<li>Skip forward to the next song</li>\n<li>skip backwards to a previous song.  </li>\n<li>Replay the current song.</li>\n<li>List the songs in the playlist</li>\n<li>Remove the current song from the playlist</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>hint: listiterator.remove()</li>\n</ul>\n<h2 id=\"Codes\"><a href=\"#Codes\" class=\"headerlink\" title=\"Codes\"></a>Codes</h2><h3 id=\"Song-java\"><a href=\"#Song-java\" class=\"headerlink\" title=\"Song.java\"></a>Song.java</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package javamaster.linkedlist;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Song &#123;</span><br><span class=\"line\">\tprivate String title;</span><br><span class=\"line\">\tprivate String duration;</span><br><span class=\"line\">\tpublic String getTitle() &#123;</span><br><span class=\"line\">\t\treturn title;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic void setTitle(String title) &#123;</span><br><span class=\"line\">\t\tthis.title = title;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic String getDuration() &#123;</span><br><span class=\"line\">\t\treturn duration;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic void setDuration(String duration) &#123;</span><br><span class=\"line\">\t\tthis.duration = duration;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic Song(String title, String duration) &#123;</span><br><span class=\"line\">\t\tsuper();</span><br><span class=\"line\">\t\tthis.title = title;</span><br><span class=\"line\">\t\tthis.duration = duration;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic String toString() &#123;</span><br><span class=\"line\">\t\treturn title + &quot;\\t&quot; + duration;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Album-java\"><a href=\"#Album-java\" class=\"headerlink\" title=\"Album.java\"></a>Album.java</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package javamaster.linkedlist;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Album &#123;</span><br><span class=\"line\">\tprivate String albumTitle;</span><br><span class=\"line\">\tprivate String singer;</span><br><span class=\"line\">\tprivate List&lt;Song&gt; songList;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic Album(String albumTitle, String singer, List&lt;Song&gt; songList) &#123;</span><br><span class=\"line\">\t\tsuper();</span><br><span class=\"line\">\t\tthis.albumTitle = albumTitle;</span><br><span class=\"line\">\t\tthis.singer = singer;</span><br><span class=\"line\">\t\tthis.songList = songList;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic String getAlbumTitle() &#123;</span><br><span class=\"line\">\t\treturn albumTitle;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic void setAlbumTitle(String albumTitle) &#123;</span><br><span class=\"line\">\t\tthis.albumTitle = albumTitle;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic String getSinger() &#123;</span><br><span class=\"line\">\t\treturn singer;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic void setSinger(String singer) &#123;</span><br><span class=\"line\">\t\tthis.singer = singer;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic List&lt;Song&gt; getSongList() &#123;</span><br><span class=\"line\">\t\treturn songList;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic void setSongList(List&lt;Song&gt; songList) &#123;</span><br><span class=\"line\">\t\tthis.songList = songList;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic String toString() &#123;</span><br><span class=\"line\">\t\treturn albumTitle + &quot;\\t&quot; + singer;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Player-java\"><a href=\"#Player-java\" class=\"headerlink\" title=\"Player.java\"></a>Player.java</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package javamaster.linkedlist;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.ArrayList;</span><br><span class=\"line\">import java.util.LinkedList;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\">import java.util.ListIterator;</span><br><span class=\"line\">import java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Player &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tstatic List&lt;Song&gt; playList = new LinkedList&lt;&gt;();</span><br><span class=\"line\">\tstatic ListIterator&lt;Song&gt; iterator;</span><br><span class=\"line\">\tstatic boolean forward;</span><br><span class=\"line\">\tstatic Song currentSong;</span><br><span class=\"line\">    static Scanner scanner = new Scanner(System.in);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tList&lt;Album&gt; albumList = createAlbumList();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tprintAlbumSong(albumList);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\taddSongToPlayList(albumList);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t// start player</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Starting player..&quot;);</span><br><span class=\"line\">\t\titerator = playList.listIterator();</span><br><span class=\"line\">\t\tif (iterator.hasNext()) &#123;</span><br><span class=\"line\">\t\t\tcurrentSong = iterator.next();</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;Now is playing &gt;&gt; &quot; + currentSong);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t// operate player</span><br><span class=\"line\">\t\t\tboolean exit = false;</span><br><span class=\"line\">\t\t\tforward = true;</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\tprintMenu();</span><br><span class=\"line\">\t\t\twhile (!exit) &#123;</span><br><span class=\"line\">\t\t\t\tString choice = null;</span><br><span class=\"line\">\t\t\t\tSystem.out.print(&quot;Please choose : &quot;);</span><br><span class=\"line\">\t\t\t\tchoice = scanner.next();</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\tswitch (choice) &#123;</span><br><span class=\"line\">\t\t\t\tcase &quot;0&quot;:</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(&quot;See you..&quot;);</span><br><span class=\"line\">\t\t\t\t\texit = true;</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\tcase &quot;1&quot;:</span><br><span class=\"line\">\t\t\t\t\tplayNextSong();</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\tcase &quot;2&quot;:</span><br><span class=\"line\">\t\t\t\t\tplayLastSong();</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\tcase &quot;3&quot;:</span><br><span class=\"line\">\t\t\t\t\treplay();</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\tcase &quot;4&quot;:</span><br><span class=\"line\">\t\t\t\t\tlistSong();</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\tcase &quot;5&quot;:</span><br><span class=\"line\">\t\t\t\t\tremoveCurrentSong();</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\tcase &quot;6&quot;:</span><br><span class=\"line\">\t\t\t\t\tprintMenu();</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\tdefault:</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tSystem.err.println(&quot;No song found in playlist..&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static List&lt;Album&gt; createAlbumList() &#123;</span><br><span class=\"line\">\t\tList&lt;Album&gt; albumList = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t\tList&lt;Song&gt; songList = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;tears in heaven&quot;, &quot;3:30&quot;));</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;rolling in the deep&quot;, &quot;4:30&quot;));</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;complicated&quot;, &quot;3:50&quot;));</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;satisfied&quot;, &quot;2:40&quot;));</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;faded&quot;, &quot;4:10&quot;));</span><br><span class=\"line\">\t\talbumList.add(new Album(&quot;The Sea&quot;, &quot;Anyone&quot;, songList));</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tsongList = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;java&quot;, &quot;4:50&quot;));</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;python&quot;, &quot;2:30&quot;));</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;R&quot;, &quot;1:50&quot;));</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;C++&quot;, &quot;5:40&quot;));</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;C#&quot;, &quot;2:10&quot;));</span><br><span class=\"line\">\t\talbumList.add(new Album(&quot;The Sky&quot;, &quot;Programmer&quot;, songList));</span><br><span class=\"line\">\t\treturn albumList;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void addSongToPlayList(List&lt;Album&gt; albumList) &#123;</span><br><span class=\"line\">\t\tint albumChoice = -1;</span><br><span class=\"line\">\t\tint songChoice = -1;</span><br><span class=\"line\">\t\tboolean finishAddSong = false;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Add songs to playlist:&quot;);</span><br><span class=\"line\">\t\twhile (!finishAddSong) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.print(&quot;choose album number (press 0 to finish) : &quot;);</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\talbumChoice = scanner.nextInt();</span><br><span class=\"line\">\t\t\t\tscanner.nextLine();</span><br><span class=\"line\">\t\t\t\tif (albumChoice == 0) &#123;</span><br><span class=\"line\">\t\t\t\t\tfinishAddSong = true;</span><br><span class=\"line\">\t\t\t\t&#125; else if(albumChoice &gt; 0 &amp;&amp; albumChoice &lt;= albumList.size()) &#123;</span><br><span class=\"line\">\t\t\t\t\tList&lt;Song&gt; songs = albumList.get(albumChoice-1).getSongList();</span><br><span class=\"line\">\t\t\t\t\tSystem.out.print(&quot;choose song number: &quot;);</span><br><span class=\"line\">\t\t\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\t\t\tsongChoice = scanner.nextInt();</span><br><span class=\"line\">\t\t\t\t\t\tscanner.nextLine();</span><br><span class=\"line\">\t\t\t\t\t\tif(songChoice &gt; 0 &amp;&amp; songChoice &lt;= songs.size()) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\tplayList.add(songs.get(songChoice-1));</span><br><span class=\"line\">\t\t\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\tSystem.err.println(&quot;Invalid choice ..&quot;);</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tSystem.out.println(e);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\tSystem.err.println(&quot;Invalid choice ..&quot;);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(e);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void printAlbumSong(List&lt;Album&gt; albumList) &#123;</span><br><span class=\"line\">\t\tListIterator&lt;Album&gt; albumIterator = albumList.listIterator();</span><br><span class=\"line\">\t\tListIterator&lt;Song&gt; songIterator;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;You have: &quot;);</span><br><span class=\"line\">\t\twhile (albumIterator.hasNext()) &#123;</span><br><span class=\"line\">\t\t\tAlbum album = (Album) albumIterator.next();</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;Album [&quot; + albumIterator.nextIndex() + &quot;] : &quot; + album);</span><br><span class=\"line\">\t\t\tsongIterator = album.getSongList().listIterator();</span><br><span class=\"line\">\t\t\twhile (songIterator.hasNext()) &#123;</span><br><span class=\"line\">\t\t\t\tSong song = (Song) songIterator.next();</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;Song [&quot; + songIterator.nextIndex() + &quot;] : &quot; + song);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void removeCurrentSong() &#123;</span><br><span class=\"line\">\t\tif (currentSong != null) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;Removing &gt;&gt; &quot;  + currentSong);</span><br><span class=\"line\">\t\t\titerator.remove();</span><br><span class=\"line\">\t\t\tif (iterator.hasNext() || iterator.hasPrevious()) &#123;</span><br><span class=\"line\">\t\t\t\tif (forward) &#123;</span><br><span class=\"line\">\t\t\t\t\tif (!iterator.hasNext()) &#123;</span><br><span class=\"line\">\t\t\t\t\t\titerator.previous();</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\tplayNextSong();</span><br><span class=\"line\">\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\tif (!iterator.hasPrevious()) &#123;</span><br><span class=\"line\">\t\t\t\t\t\titerator.next();</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\tplayLastSong();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;No song in the list..&quot;);</span><br><span class=\"line\">\t\t\t\tcurrentSong = null;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;No song in the list..&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void listSong() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;--- Play List ---&quot;);</span><br><span class=\"line\">\t\tfor (Song song : playList) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(song);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void replay() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Now is playing &gt;&gt; &quot; + currentSong);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void playLastSong() &#123;</span><br><span class=\"line\">\t\tif (!forward) &#123;</span><br><span class=\"line\">\t\t\tif (iterator.hasPrevious()) &#123;</span><br><span class=\"line\">\t\t\t\tcurrentSong = iterator.previous();</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;Now is playing &gt;&gt; &quot; + currentSong);</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;You are at the start of list..&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tif (iterator.hasPrevious()) &#123;</span><br><span class=\"line\">\t\t\t\titerator.previous();</span><br><span class=\"line\">\t\t\t\tif (iterator.hasPrevious()) &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentSong = iterator.previous();</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(&quot;Now is playing &gt;&gt; &quot; + currentSong);</span><br><span class=\"line\">\t\t\t\t\tforward = false;</span><br><span class=\"line\">\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(&quot;You are at the start of list..&quot;);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;You are at the start of list..&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void playNextSong() &#123;</span><br><span class=\"line\">\t\tif (forward) &#123;</span><br><span class=\"line\">\t\t\tif (iterator.hasNext()) &#123;</span><br><span class=\"line\">\t\t\t\tcurrentSong = iterator.next();</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;Now is playing &gt;&gt; &quot; + currentSong);</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;You are at the end of list..&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tif (iterator.hasNext()) &#123;</span><br><span class=\"line\">\t\t\t\titerator.next();</span><br><span class=\"line\">\t\t\t\tif (iterator.hasNext()) &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentSong = iterator.next();</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(&quot;Now is playing &gt;&gt; &quot; + currentSong);</span><br><span class=\"line\">\t\t\t\t\tforward = true;</span><br><span class=\"line\">\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(&quot;You are at the end of list..&quot;);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;You are at the end of list..&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void printMenu() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;--- Player Menu  ---&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;0. Quit&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;1. Skip forward&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;2. Skip backfard&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;3. Replay&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;4. List songs&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;5. Remove current song&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;6. Show menu&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>Notes and Exersice for LinkedList of Completed Java Master Class.</p>","more":"<h1 id=\"Notes\"><a href=\"#Notes\" class=\"headerlink\" title=\"Notes\"></a>Notes</h1><ul>\n<li>In LinkedList, each elements are linked with previous element and following element.</li>\n<li>LinkedList is faster when adding or removing elements.</li>\n<li>ArrayList is faster when we want to take value by giving index number</li>\n</ul>\n<p>Now we have a list:<br>    - java<br>    - python<br>    - sql<br>    - c<br>    - html<br>    - ruby<br>If we want to remove “python”.</p>\n<h2 id=\"For-ArrayList\"><a href=\"#For-ArrayList\" class=\"headerlink\" title=\"For ArrayList\"></a>For ArrayList</h2><p>All the elements behind “python” will be relocated with new index.</p>\n<h2 id=\"For-LinkedList\"><a href=\"#For-LinkedList\" class=\"headerlink\" title=\"For LinkedList\"></a>For LinkedList</h2><p>Break reference between python to java and sql. java will refer to sql. the changes are only within that area.</p>\n<h1 id=\"Exercise\"><a href=\"#Exercise\" class=\"headerlink\" title=\"Exercise\"></a>Exercise</h1><h2 id=\"Requirements\"><a href=\"#Requirements\" class=\"headerlink\" title=\"Requirements\"></a>Requirements</h2><ul>\n<li>Three classes: <ul>\n<li>Song: title, duration</li>\n<li>Album: title, singer, songList</li>\n<li>Player(main)</li>\n</ul>\n</li>\n<li>Process:<ol>\n<li>Automatically create an albumList including 2 albums, 5 songs for each album.</li>\n<li>Print all albums with songs</li>\n<li>Ask users to add songs into playList by choosing album then song. Press 0 to finish adding.</li>\n<li>Print menu for users: <ul>\n<li>Quit</li>\n<li>Skip forward to the next song</li>\n<li>skip backwards to a previous song.  </li>\n<li>Replay the current song.</li>\n<li>List the songs in the playlist</li>\n<li>Remove the current song from the playlist</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>hint: listiterator.remove()</li>\n</ul>\n<h2 id=\"Codes\"><a href=\"#Codes\" class=\"headerlink\" title=\"Codes\"></a>Codes</h2><h3 id=\"Song-java\"><a href=\"#Song-java\" class=\"headerlink\" title=\"Song.java\"></a>Song.java</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package javamaster.linkedlist;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Song &#123;</span><br><span class=\"line\">\tprivate String title;</span><br><span class=\"line\">\tprivate String duration;</span><br><span class=\"line\">\tpublic String getTitle() &#123;</span><br><span class=\"line\">\t\treturn title;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic void setTitle(String title) &#123;</span><br><span class=\"line\">\t\tthis.title = title;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic String getDuration() &#123;</span><br><span class=\"line\">\t\treturn duration;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic void setDuration(String duration) &#123;</span><br><span class=\"line\">\t\tthis.duration = duration;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic Song(String title, String duration) &#123;</span><br><span class=\"line\">\t\tsuper();</span><br><span class=\"line\">\t\tthis.title = title;</span><br><span class=\"line\">\t\tthis.duration = duration;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic String toString() &#123;</span><br><span class=\"line\">\t\treturn title + &quot;\\t&quot; + duration;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Album-java\"><a href=\"#Album-java\" class=\"headerlink\" title=\"Album.java\"></a>Album.java</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package javamaster.linkedlist;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Album &#123;</span><br><span class=\"line\">\tprivate String albumTitle;</span><br><span class=\"line\">\tprivate String singer;</span><br><span class=\"line\">\tprivate List&lt;Song&gt; songList;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic Album(String albumTitle, String singer, List&lt;Song&gt; songList) &#123;</span><br><span class=\"line\">\t\tsuper();</span><br><span class=\"line\">\t\tthis.albumTitle = albumTitle;</span><br><span class=\"line\">\t\tthis.singer = singer;</span><br><span class=\"line\">\t\tthis.songList = songList;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic String getAlbumTitle() &#123;</span><br><span class=\"line\">\t\treturn albumTitle;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic void setAlbumTitle(String albumTitle) &#123;</span><br><span class=\"line\">\t\tthis.albumTitle = albumTitle;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic String getSinger() &#123;</span><br><span class=\"line\">\t\treturn singer;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic void setSinger(String singer) &#123;</span><br><span class=\"line\">\t\tthis.singer = singer;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic List&lt;Song&gt; getSongList() &#123;</span><br><span class=\"line\">\t\treturn songList;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic void setSongList(List&lt;Song&gt; songList) &#123;</span><br><span class=\"line\">\t\tthis.songList = songList;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\tpublic String toString() &#123;</span><br><span class=\"line\">\t\treturn albumTitle + &quot;\\t&quot; + singer;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Player-java\"><a href=\"#Player-java\" class=\"headerlink\" title=\"Player.java\"></a>Player.java</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package javamaster.linkedlist;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.ArrayList;</span><br><span class=\"line\">import java.util.LinkedList;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\">import java.util.ListIterator;</span><br><span class=\"line\">import java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Player &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tstatic List&lt;Song&gt; playList = new LinkedList&lt;&gt;();</span><br><span class=\"line\">\tstatic ListIterator&lt;Song&gt; iterator;</span><br><span class=\"line\">\tstatic boolean forward;</span><br><span class=\"line\">\tstatic Song currentSong;</span><br><span class=\"line\">    static Scanner scanner = new Scanner(System.in);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tList&lt;Album&gt; albumList = createAlbumList();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tprintAlbumSong(albumList);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\taddSongToPlayList(albumList);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t// start player</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Starting player..&quot;);</span><br><span class=\"line\">\t\titerator = playList.listIterator();</span><br><span class=\"line\">\t\tif (iterator.hasNext()) &#123;</span><br><span class=\"line\">\t\t\tcurrentSong = iterator.next();</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;Now is playing &gt;&gt; &quot; + currentSong);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t// operate player</span><br><span class=\"line\">\t\t\tboolean exit = false;</span><br><span class=\"line\">\t\t\tforward = true;</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\tprintMenu();</span><br><span class=\"line\">\t\t\twhile (!exit) &#123;</span><br><span class=\"line\">\t\t\t\tString choice = null;</span><br><span class=\"line\">\t\t\t\tSystem.out.print(&quot;Please choose : &quot;);</span><br><span class=\"line\">\t\t\t\tchoice = scanner.next();</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\tswitch (choice) &#123;</span><br><span class=\"line\">\t\t\t\tcase &quot;0&quot;:</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(&quot;See you..&quot;);</span><br><span class=\"line\">\t\t\t\t\texit = true;</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\tcase &quot;1&quot;:</span><br><span class=\"line\">\t\t\t\t\tplayNextSong();</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\tcase &quot;2&quot;:</span><br><span class=\"line\">\t\t\t\t\tplayLastSong();</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\tcase &quot;3&quot;:</span><br><span class=\"line\">\t\t\t\t\treplay();</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\tcase &quot;4&quot;:</span><br><span class=\"line\">\t\t\t\t\tlistSong();</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\tcase &quot;5&quot;:</span><br><span class=\"line\">\t\t\t\t\tremoveCurrentSong();</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\tcase &quot;6&quot;:</span><br><span class=\"line\">\t\t\t\t\tprintMenu();</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\tdefault:</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tSystem.err.println(&quot;No song found in playlist..&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static List&lt;Album&gt; createAlbumList() &#123;</span><br><span class=\"line\">\t\tList&lt;Album&gt; albumList = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t\tList&lt;Song&gt; songList = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;tears in heaven&quot;, &quot;3:30&quot;));</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;rolling in the deep&quot;, &quot;4:30&quot;));</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;complicated&quot;, &quot;3:50&quot;));</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;satisfied&quot;, &quot;2:40&quot;));</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;faded&quot;, &quot;4:10&quot;));</span><br><span class=\"line\">\t\talbumList.add(new Album(&quot;The Sea&quot;, &quot;Anyone&quot;, songList));</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tsongList = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;java&quot;, &quot;4:50&quot;));</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;python&quot;, &quot;2:30&quot;));</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;R&quot;, &quot;1:50&quot;));</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;C++&quot;, &quot;5:40&quot;));</span><br><span class=\"line\">\t\tsongList.add(new Song(&quot;C#&quot;, &quot;2:10&quot;));</span><br><span class=\"line\">\t\talbumList.add(new Album(&quot;The Sky&quot;, &quot;Programmer&quot;, songList));</span><br><span class=\"line\">\t\treturn albumList;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void addSongToPlayList(List&lt;Album&gt; albumList) &#123;</span><br><span class=\"line\">\t\tint albumChoice = -1;</span><br><span class=\"line\">\t\tint songChoice = -1;</span><br><span class=\"line\">\t\tboolean finishAddSong = false;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Add songs to playlist:&quot;);</span><br><span class=\"line\">\t\twhile (!finishAddSong) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.print(&quot;choose album number (press 0 to finish) : &quot;);</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\talbumChoice = scanner.nextInt();</span><br><span class=\"line\">\t\t\t\tscanner.nextLine();</span><br><span class=\"line\">\t\t\t\tif (albumChoice == 0) &#123;</span><br><span class=\"line\">\t\t\t\t\tfinishAddSong = true;</span><br><span class=\"line\">\t\t\t\t&#125; else if(albumChoice &gt; 0 &amp;&amp; albumChoice &lt;= albumList.size()) &#123;</span><br><span class=\"line\">\t\t\t\t\tList&lt;Song&gt; songs = albumList.get(albumChoice-1).getSongList();</span><br><span class=\"line\">\t\t\t\t\tSystem.out.print(&quot;choose song number: &quot;);</span><br><span class=\"line\">\t\t\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\t\t\tsongChoice = scanner.nextInt();</span><br><span class=\"line\">\t\t\t\t\t\tscanner.nextLine();</span><br><span class=\"line\">\t\t\t\t\t\tif(songChoice &gt; 0 &amp;&amp; songChoice &lt;= songs.size()) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\tplayList.add(songs.get(songChoice-1));</span><br><span class=\"line\">\t\t\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\tSystem.err.println(&quot;Invalid choice ..&quot;);</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tSystem.out.println(e);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\tSystem.err.println(&quot;Invalid choice ..&quot;);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(e);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void printAlbumSong(List&lt;Album&gt; albumList) &#123;</span><br><span class=\"line\">\t\tListIterator&lt;Album&gt; albumIterator = albumList.listIterator();</span><br><span class=\"line\">\t\tListIterator&lt;Song&gt; songIterator;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;You have: &quot;);</span><br><span class=\"line\">\t\twhile (albumIterator.hasNext()) &#123;</span><br><span class=\"line\">\t\t\tAlbum album = (Album) albumIterator.next();</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;Album [&quot; + albumIterator.nextIndex() + &quot;] : &quot; + album);</span><br><span class=\"line\">\t\t\tsongIterator = album.getSongList().listIterator();</span><br><span class=\"line\">\t\t\twhile (songIterator.hasNext()) &#123;</span><br><span class=\"line\">\t\t\t\tSong song = (Song) songIterator.next();</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;Song [&quot; + songIterator.nextIndex() + &quot;] : &quot; + song);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void removeCurrentSong() &#123;</span><br><span class=\"line\">\t\tif (currentSong != null) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;Removing &gt;&gt; &quot;  + currentSong);</span><br><span class=\"line\">\t\t\titerator.remove();</span><br><span class=\"line\">\t\t\tif (iterator.hasNext() || iterator.hasPrevious()) &#123;</span><br><span class=\"line\">\t\t\t\tif (forward) &#123;</span><br><span class=\"line\">\t\t\t\t\tif (!iterator.hasNext()) &#123;</span><br><span class=\"line\">\t\t\t\t\t\titerator.previous();</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\tplayNextSong();</span><br><span class=\"line\">\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\tif (!iterator.hasPrevious()) &#123;</span><br><span class=\"line\">\t\t\t\t\t\titerator.next();</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\tplayLastSong();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;No song in the list..&quot;);</span><br><span class=\"line\">\t\t\t\tcurrentSong = null;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;No song in the list..&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void listSong() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;--- Play List ---&quot;);</span><br><span class=\"line\">\t\tfor (Song song : playList) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(song);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void replay() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Now is playing &gt;&gt; &quot; + currentSong);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void playLastSong() &#123;</span><br><span class=\"line\">\t\tif (!forward) &#123;</span><br><span class=\"line\">\t\t\tif (iterator.hasPrevious()) &#123;</span><br><span class=\"line\">\t\t\t\tcurrentSong = iterator.previous();</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;Now is playing &gt;&gt; &quot; + currentSong);</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;You are at the start of list..&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tif (iterator.hasPrevious()) &#123;</span><br><span class=\"line\">\t\t\t\titerator.previous();</span><br><span class=\"line\">\t\t\t\tif (iterator.hasPrevious()) &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentSong = iterator.previous();</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(&quot;Now is playing &gt;&gt; &quot; + currentSong);</span><br><span class=\"line\">\t\t\t\t\tforward = false;</span><br><span class=\"line\">\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(&quot;You are at the start of list..&quot;);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;You are at the start of list..&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void playNextSong() &#123;</span><br><span class=\"line\">\t\tif (forward) &#123;</span><br><span class=\"line\">\t\t\tif (iterator.hasNext()) &#123;</span><br><span class=\"line\">\t\t\t\tcurrentSong = iterator.next();</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;Now is playing &gt;&gt; &quot; + currentSong);</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;You are at the end of list..&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tif (iterator.hasNext()) &#123;</span><br><span class=\"line\">\t\t\t\titerator.next();</span><br><span class=\"line\">\t\t\t\tif (iterator.hasNext()) &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentSong = iterator.next();</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(&quot;Now is playing &gt;&gt; &quot; + currentSong);</span><br><span class=\"line\">\t\t\t\t\tforward = true;</span><br><span class=\"line\">\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(&quot;You are at the end of list..&quot;);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;You are at the end of list..&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void printMenu() &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;--- Player Menu  ---&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;0. Quit&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;1. Skip forward&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;2. Skip backfard&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;3. Replay&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;4. List songs&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;5. Remove current song&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;6. Show menu&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(&quot;&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Linux Command","date":"2017-12-05T06:22:02.000Z","_content":"\n## User & Password ##\nWe have below users and their password:\n- root\n- ryan (sudoer)\n- grace\nLogin as ryan:\n\n- check password expiration\n```bash\nchage -1 ryan\t# number 1\n```\n<!--more-->\n- change password\n```bash\npasswd\t\t\t# for user self\n```\n- login as `root`\n```bash\nsu - root\n```\n- change password for `grace`\n```bash\npasswd grace\n```\n- login as `grace`\n```bash\nsu grace\n```\n- become `root`\n```bash\nsudo su - root\n```\n- set password never expire, must done by root\n```bash\nchage ryan\n\t\n\tMinimum password age:0\n\tMaximum password age:99999\n\tLast password change: enter\n\tExpiration warning: enter\n\tPassword Inactive: enter\n\tAccount expiration date: -1\n```\n\n## File & Directory ##\n\n- check directory size\n```bash\ndu -sh <path>\n```\n- monitor log\n```bash\ntail -100f <file>\n```\n- monitor log and catch specific content\n```bash\ntail -100f <file> | grep \"<content>\"\n```\n- change file modified time\n```\ntouch  -d 20170101 <file>\n```\n- delete files that mtime > 7\n```\nfind $dir -type f -mtime +7 -name '*.txt' -execdir rm -- '{}' \\;\n```\n\t1209-16:32  will delete files before 1201-16:32. Completed data for 7 days from 1202 to 1208\n- copy and move\n```\n[cp / scp / mv] <originFile> <targetFile> / <targetDir>\nscp ryan@IP:~/test.txt ~\n```\n- create file\n```\ntouch <file>\n```\n- remove\n```\nrm <file>\nrm -r <dir> # delete all the files and dirs in this dir (include)\n```\n- count number of files\n```\nfileNumber=`ls -1R <dir> | wc -l`\n```\n- zip and unzip\n```\ngzip <file>\ngunzip *.gz\n```\n- permission\n```\nchmod 755 <file>\n```\n\n## Run Program ##\n- nohup\n```\ncd ~/myApp\nnohup ./runApp.sh &\n```\n\t-1- runApp will be kept running at the background\n\t-2- the output like echo will be put into `~/myApp/nohup.out`\n- job process id\n```\njobPid=\"$(ps -ef | grep ksh | grep runApp.sh | awk '{print $2}')\"\n```\n- kill job\n```\nkill -9 <jobPid>\n```\n- pass parameter\n```\nrunApp.sh xyz\t# so in runApp.sh, $1=\"xyz\"\n```\n\n## Operation ##\n- if else\n```\nif [\"\"=\"\"]; then\n\taction\nelse\n\taction\nfi\n```\n\n## Compile / Build Java Program ##\n```bash\nreleasePath=~/myApp\nbuildPath=$releasePath/application\n~/apache-ant/bin/ant -Dreleasepath=$releasePath -Dbuildpath=$buildPath -Dant.project=<appName> -Dlibpath=$releasePath/lib\n\nstatus=$?\nif [$status -eq 0]; then\n\techo \"compilation is successful..\"\nelse\n\techo \"compilation is unsuccessful..\"\nfi\n```\n\n\n## Others ##\n- press to continue\n```\necho \"Press to continue..\"\nread q\n```\n\n","source":"_posts/Linux-Command.md","raw":"---\ntitle: Linux Command\ndate: 2017-12-05 14:22:02\ncategories: Linux\ntags: [Linux, command, shell]\n---\n\n## User & Password ##\nWe have below users and their password:\n- root\n- ryan (sudoer)\n- grace\nLogin as ryan:\n\n- check password expiration\n```bash\nchage -1 ryan\t# number 1\n```\n<!--more-->\n- change password\n```bash\npasswd\t\t\t# for user self\n```\n- login as `root`\n```bash\nsu - root\n```\n- change password for `grace`\n```bash\npasswd grace\n```\n- login as `grace`\n```bash\nsu grace\n```\n- become `root`\n```bash\nsudo su - root\n```\n- set password never expire, must done by root\n```bash\nchage ryan\n\t\n\tMinimum password age:0\n\tMaximum password age:99999\n\tLast password change: enter\n\tExpiration warning: enter\n\tPassword Inactive: enter\n\tAccount expiration date: -1\n```\n\n## File & Directory ##\n\n- check directory size\n```bash\ndu -sh <path>\n```\n- monitor log\n```bash\ntail -100f <file>\n```\n- monitor log and catch specific content\n```bash\ntail -100f <file> | grep \"<content>\"\n```\n- change file modified time\n```\ntouch  -d 20170101 <file>\n```\n- delete files that mtime > 7\n```\nfind $dir -type f -mtime +7 -name '*.txt' -execdir rm -- '{}' \\;\n```\n\t1209-16:32  will delete files before 1201-16:32. Completed data for 7 days from 1202 to 1208\n- copy and move\n```\n[cp / scp / mv] <originFile> <targetFile> / <targetDir>\nscp ryan@IP:~/test.txt ~\n```\n- create file\n```\ntouch <file>\n```\n- remove\n```\nrm <file>\nrm -r <dir> # delete all the files and dirs in this dir (include)\n```\n- count number of files\n```\nfileNumber=`ls -1R <dir> | wc -l`\n```\n- zip and unzip\n```\ngzip <file>\ngunzip *.gz\n```\n- permission\n```\nchmod 755 <file>\n```\n\n## Run Program ##\n- nohup\n```\ncd ~/myApp\nnohup ./runApp.sh &\n```\n\t-1- runApp will be kept running at the background\n\t-2- the output like echo will be put into `~/myApp/nohup.out`\n- job process id\n```\njobPid=\"$(ps -ef | grep ksh | grep runApp.sh | awk '{print $2}')\"\n```\n- kill job\n```\nkill -9 <jobPid>\n```\n- pass parameter\n```\nrunApp.sh xyz\t# so in runApp.sh, $1=\"xyz\"\n```\n\n## Operation ##\n- if else\n```\nif [\"\"=\"\"]; then\n\taction\nelse\n\taction\nfi\n```\n\n## Compile / Build Java Program ##\n```bash\nreleasePath=~/myApp\nbuildPath=$releasePath/application\n~/apache-ant/bin/ant -Dreleasepath=$releasePath -Dbuildpath=$buildPath -Dant.project=<appName> -Dlibpath=$releasePath/lib\n\nstatus=$?\nif [$status -eq 0]; then\n\techo \"compilation is successful..\"\nelse\n\techo \"compilation is unsuccessful..\"\nfi\n```\n\n\n## Others ##\n- press to continue\n```\necho \"Press to continue..\"\nread q\n```\n\n","slug":"Linux-Command","published":1,"updated":"2020-04-30T09:23:19.529Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedi9000qsd5tnuq71sjk","content":"<h2 id=\"User-amp-Password\"><a href=\"#User-amp-Password\" class=\"headerlink\" title=\"User &amp; Password\"></a>User &amp; Password</h2><p>We have below users and their password:</p>\n<ul>\n<li><p>root</p>\n</li>\n<li><p>ryan (sudoer)</p>\n</li>\n<li><p>grace<br>Login as ryan:</p>\n</li>\n<li><p>check password expiration</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chage -1 ryan\t<span class=\"comment\"># number 1</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<a id=\"more\"></a>\n<ul>\n<li><p>change password</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwd\t\t\t<span class=\"comment\"># for user self</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>login as <code>root</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su - root</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>change password for <code>grace</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwd grace</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>login as <code>grace</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su grace</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>become <code>root</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su - root</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>set password never expire, must done by root</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chage ryan</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tMinimum password age:0</span><br><span class=\"line\">\tMaximum password age:99999</span><br><span class=\"line\">\tLast password change: enter</span><br><span class=\"line\">\tExpiration warning: enter</span><br><span class=\"line\">\tPassword Inactive: enter</span><br><span class=\"line\">\tAccount expiration date: -1</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"File-amp-Directory\"><a href=\"#File-amp-Directory\" class=\"headerlink\" title=\"File &amp; Directory\"></a>File &amp; Directory</h2><ul>\n<li><p>check directory size</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">du -sh &lt;path&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>monitor log</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tail -100f &lt;file&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>monitor log and catch specific content</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tail -100f &lt;file&gt; | grep <span class=\"string\">\"&lt;content&gt;\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>change file modified time</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch  -d 20170101 &lt;file&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>delete files that mtime &gt; 7</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find $dir -type f -mtime +7 -name &apos;*.txt&apos; -execdir rm -- &apos;&#123;&#125;&apos; \\;</span><br></pre></td></tr></table></figure>\n\n<p>  1209-16:32  will delete files before 1201-16:32. Completed data for 7 days from 1202 to 1208</p>\n</li>\n<li><p>copy and move</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[cp / scp / mv] &lt;originFile&gt; &lt;targetFile&gt; / &lt;targetDir&gt;</span><br><span class=\"line\">scp ryan@IP:~/test.txt ~</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>create file</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch &lt;file&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>remove</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm &lt;file&gt;</span><br><span class=\"line\">rm -r &lt;dir&gt; # delete all the files and dirs in this dir (include)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>count number of files</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fileNumber=`ls -1R &lt;dir&gt; | wc -l`</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>zip and unzip</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gzip &lt;file&gt;</span><br><span class=\"line\">gunzip *.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>permission</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 755 &lt;file&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"Run-Program\"><a href=\"#Run-Program\" class=\"headerlink\" title=\"Run Program\"></a>Run Program</h2><ul>\n<li><p>nohup</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/myApp</span><br><span class=\"line\">nohup ./runApp.sh &amp;</span><br></pre></td></tr></table></figure>\n\n<p>  -1- runApp will be kept running at the background<br>  -2- the output like echo will be put into <code>~/myApp/nohup.out</code></p>\n</li>\n<li><p>job process id</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jobPid=&quot;$(ps -ef | grep ksh | grep runApp.sh | awk &apos;&#123;print $2&#125;&apos;)&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>kill job</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kill -9 &lt;jobPid&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>pass parameter</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">runApp.sh xyz\t# so in runApp.sh, $1=&quot;xyz&quot;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"Operation\"><a href=\"#Operation\" class=\"headerlink\" title=\"Operation\"></a>Operation</h2><ul>\n<li>if else<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [&quot;&quot;=&quot;&quot;]; then</span><br><span class=\"line\">\taction</span><br><span class=\"line\">else</span><br><span class=\"line\">\taction</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"Compile-Build-Java-Program\"><a href=\"#Compile-Build-Java-Program\" class=\"headerlink\" title=\"Compile / Build Java Program\"></a>Compile / Build Java Program</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">releasePath=~/myApp</span><br><span class=\"line\">buildPath=<span class=\"variable\">$releasePath</span>/application</span><br><span class=\"line\">~/apache-ant/bin/ant -Dreleasepath=<span class=\"variable\">$releasePath</span> -Dbuildpath=<span class=\"variable\">$buildPath</span> -Dant.project=&lt;appName&gt; -Dlibpath=<span class=\"variable\">$releasePath</span>/lib</span><br><span class=\"line\"></span><br><span class=\"line\">status=$?</span><br><span class=\"line\"><span class=\"keyword\">if</span> [<span class=\"variable\">$status</span> -eq 0]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"compilation is successful..\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"compilation is unsuccessful..\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Others\"><a href=\"#Others\" class=\"headerlink\" title=\"Others\"></a>Others</h2><ul>\n<li>press to continue<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;Press to continue..&quot;</span><br><span class=\"line\">read q</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h2 id=\"User-amp-Password\"><a href=\"#User-amp-Password\" class=\"headerlink\" title=\"User &amp; Password\"></a>User &amp; Password</h2><p>We have below users and their password:</p>\n<ul>\n<li><p>root</p>\n</li>\n<li><p>ryan (sudoer)</p>\n</li>\n<li><p>grace<br>Login as ryan:</p>\n</li>\n<li><p>check password expiration</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chage -1 ryan\t<span class=\"comment\"># number 1</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>","more":"<ul>\n<li><p>change password</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwd\t\t\t<span class=\"comment\"># for user self</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>login as <code>root</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su - root</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>change password for <code>grace</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwd grace</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>login as <code>grace</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su grace</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>become <code>root</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su - root</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>set password never expire, must done by root</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chage ryan</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tMinimum password age:0</span><br><span class=\"line\">\tMaximum password age:99999</span><br><span class=\"line\">\tLast password change: enter</span><br><span class=\"line\">\tExpiration warning: enter</span><br><span class=\"line\">\tPassword Inactive: enter</span><br><span class=\"line\">\tAccount expiration date: -1</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"File-amp-Directory\"><a href=\"#File-amp-Directory\" class=\"headerlink\" title=\"File &amp; Directory\"></a>File &amp; Directory</h2><ul>\n<li><p>check directory size</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">du -sh &lt;path&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>monitor log</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tail -100f &lt;file&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>monitor log and catch specific content</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tail -100f &lt;file&gt; | grep <span class=\"string\">\"&lt;content&gt;\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>change file modified time</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch  -d 20170101 &lt;file&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>delete files that mtime &gt; 7</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find $dir -type f -mtime +7 -name &apos;*.txt&apos; -execdir rm -- &apos;&#123;&#125;&apos; \\;</span><br></pre></td></tr></table></figure>\n\n<p>  1209-16:32  will delete files before 1201-16:32. Completed data for 7 days from 1202 to 1208</p>\n</li>\n<li><p>copy and move</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[cp / scp / mv] &lt;originFile&gt; &lt;targetFile&gt; / &lt;targetDir&gt;</span><br><span class=\"line\">scp ryan@IP:~/test.txt ~</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>create file</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch &lt;file&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>remove</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm &lt;file&gt;</span><br><span class=\"line\">rm -r &lt;dir&gt; # delete all the files and dirs in this dir (include)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>count number of files</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fileNumber=`ls -1R &lt;dir&gt; | wc -l`</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>zip and unzip</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gzip &lt;file&gt;</span><br><span class=\"line\">gunzip *.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>permission</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 755 &lt;file&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"Run-Program\"><a href=\"#Run-Program\" class=\"headerlink\" title=\"Run Program\"></a>Run Program</h2><ul>\n<li><p>nohup</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/myApp</span><br><span class=\"line\">nohup ./runApp.sh &amp;</span><br></pre></td></tr></table></figure>\n\n<p>  -1- runApp will be kept running at the background<br>  -2- the output like echo will be put into <code>~/myApp/nohup.out</code></p>\n</li>\n<li><p>job process id</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jobPid=&quot;$(ps -ef | grep ksh | grep runApp.sh | awk &apos;&#123;print $2&#125;&apos;)&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>kill job</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kill -9 &lt;jobPid&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>pass parameter</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">runApp.sh xyz\t# so in runApp.sh, $1=&quot;xyz&quot;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"Operation\"><a href=\"#Operation\" class=\"headerlink\" title=\"Operation\"></a>Operation</h2><ul>\n<li>if else<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [&quot;&quot;=&quot;&quot;]; then</span><br><span class=\"line\">\taction</span><br><span class=\"line\">else</span><br><span class=\"line\">\taction</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"Compile-Build-Java-Program\"><a href=\"#Compile-Build-Java-Program\" class=\"headerlink\" title=\"Compile / Build Java Program\"></a>Compile / Build Java Program</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">releasePath=~/myApp</span><br><span class=\"line\">buildPath=<span class=\"variable\">$releasePath</span>/application</span><br><span class=\"line\">~/apache-ant/bin/ant -Dreleasepath=<span class=\"variable\">$releasePath</span> -Dbuildpath=<span class=\"variable\">$buildPath</span> -Dant.project=&lt;appName&gt; -Dlibpath=<span class=\"variable\">$releasePath</span>/lib</span><br><span class=\"line\"></span><br><span class=\"line\">status=$?</span><br><span class=\"line\"><span class=\"keyword\">if</span> [<span class=\"variable\">$status</span> -eq 0]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"compilation is successful..\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"compilation is unsuccessful..\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Others\"><a href=\"#Others\" class=\"headerlink\" title=\"Others\"></a>Others</h2><ul>\n<li>press to continue<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;Press to continue..&quot;</span><br><span class=\"line\">read q</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>"},{"title":"Linux - SSH or SCP without password","date":"2017-11-28T15:24:20.000Z","_content":"\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n点这里跳过废话：[直奔主题 Show me the code](#直奔主题)\n\n有这样一个任务: 将同事发送的原始数据处理好之后，放进数据库。\n其中一个关键的步骤，就是原始数据的转移。\n\n通常我们有两个服务器，一个是 Public_Server，一个是 Private_Server。 \n公开 Public_Server 的用户名和密码，这样其他同事都可以自由地往里面存放数据。\n然后我们操作 Private_Server 来获取那些数据，再进一步处理。\n\n> 好处：\n> - 保护处理数据的程序和数据库\n> - 有时需要换服务器，避免通知所有人更新服务器的地址和登录信息\n> - Public_Server 就像一个保护屏，做了一个分割，提高了安全性。\n\n<!--more-->\n转移数据，作为整个工序里很小的一个步骤，通常我们会直接写进一个脚本里，这部分都会自动完成。\n但是在服务器之间做这个操作，会需要提供密码，此时，整个脚本程序就会停下来。如果需要人来输入密码，就失去了脚本的意义了。\n所以事先在两个服务器之间建立信任，这样，需要 SCP 或者 SSH 的时候，都不需要再输入密码。\n\n<a name=\"直奔主题\"/>\n**具体操作如下：**\n\n假设：\n\n- Public_Server: \n```\nIP： 199.99.999.99\nUserId: people \n```\n- Private_Server:\n```\nUserId: ryan\n```\n\n在 Private_Server 上操作：\n\n1. 创建钥匙。\n```bash\nssh-keygen -t rsa\n```\n\t一路回车之后，做了两个钥匙。自己的钥匙是这个：\n```bash\n/home/ryan/.ssh/id_rsa\n```\n\t公开的钥匙是这个：\n```bash\n/home/ryan/.ssh/id_rsa.pub\n```\n2. SSH 连接到 Public_Server, 并且创建 .ssh 文件夹\n```bash\nssh people@199.99.999.99\t# 输入密码，进入到 public server\ncd ~\t\t\t\t\t# 进入 people 用户的 Home\nmkdir .ssh\t\t\t\t# 创建 .ssh 文件夹(/home/people/.ssh)\nexit\t\t\t\t\t# 退出，回到 private server\n```\n3. 将公开的钥匙复制到 public server 的 .ssh 文件夹里，命名为 authorized_keys，需要密码\n```bash\nscp /home/ryan/.ssh/id_rsa people@199.99.999.99:/home/people/.ssh/authorized_keys\n```\n4. 之后再进行 \n```bash\nssh people@199.99.999.99\n```\n\t或者\n```bash\nscp /home/ryan/anyfile.txt people@199.99.999.99:/home/people/\n```\n\t都不需要提供密码。","source":"_posts/Linux-SSH-or-SCP-without-password.md","raw":"---\ntitle: Linux - SSH or SCP without password\ndate: 2017-11-28 23:24:20\ncategories: Linux\ntags: [Linux, SSH, SCP, password, server]\n---\n\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n点这里跳过废话：[直奔主题 Show me the code](#直奔主题)\n\n有这样一个任务: 将同事发送的原始数据处理好之后，放进数据库。\n其中一个关键的步骤，就是原始数据的转移。\n\n通常我们有两个服务器，一个是 Public_Server，一个是 Private_Server。 \n公开 Public_Server 的用户名和密码，这样其他同事都可以自由地往里面存放数据。\n然后我们操作 Private_Server 来获取那些数据，再进一步处理。\n\n> 好处：\n> - 保护处理数据的程序和数据库\n> - 有时需要换服务器，避免通知所有人更新服务器的地址和登录信息\n> - Public_Server 就像一个保护屏，做了一个分割，提高了安全性。\n\n<!--more-->\n转移数据，作为整个工序里很小的一个步骤，通常我们会直接写进一个脚本里，这部分都会自动完成。\n但是在服务器之间做这个操作，会需要提供密码，此时，整个脚本程序就会停下来。如果需要人来输入密码，就失去了脚本的意义了。\n所以事先在两个服务器之间建立信任，这样，需要 SCP 或者 SSH 的时候，都不需要再输入密码。\n\n<a name=\"直奔主题\"/>\n**具体操作如下：**\n\n假设：\n\n- Public_Server: \n```\nIP： 199.99.999.99\nUserId: people \n```\n- Private_Server:\n```\nUserId: ryan\n```\n\n在 Private_Server 上操作：\n\n1. 创建钥匙。\n```bash\nssh-keygen -t rsa\n```\n\t一路回车之后，做了两个钥匙。自己的钥匙是这个：\n```bash\n/home/ryan/.ssh/id_rsa\n```\n\t公开的钥匙是这个：\n```bash\n/home/ryan/.ssh/id_rsa.pub\n```\n2. SSH 连接到 Public_Server, 并且创建 .ssh 文件夹\n```bash\nssh people@199.99.999.99\t# 输入密码，进入到 public server\ncd ~\t\t\t\t\t# 进入 people 用户的 Home\nmkdir .ssh\t\t\t\t# 创建 .ssh 文件夹(/home/people/.ssh)\nexit\t\t\t\t\t# 退出，回到 private server\n```\n3. 将公开的钥匙复制到 public server 的 .ssh 文件夹里，命名为 authorized_keys，需要密码\n```bash\nscp /home/ryan/.ssh/id_rsa people@199.99.999.99:/home/people/.ssh/authorized_keys\n```\n4. 之后再进行 \n```bash\nssh people@199.99.999.99\n```\n\t或者\n```bash\nscp /home/ryan/anyfile.txt people@199.99.999.99:/home/people/\n```\n\t都不需要提供密码。","slug":"Linux-SSH-or-SCP-without-password","published":1,"updated":"2020-04-30T09:23:19.530Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedi9000rsd5tsimcx0l4","content":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>点这里跳过废话：<a href=\"#直奔主题\">直奔主题 Show me the code</a></p>\n<p>有这样一个任务: 将同事发送的原始数据处理好之后，放进数据库。<br>其中一个关键的步骤，就是原始数据的转移。</p>\n<p>通常我们有两个服务器，一个是 Public_Server，一个是 Private_Server。<br>公开 Public_Server 的用户名和密码，这样其他同事都可以自由地往里面存放数据。<br>然后我们操作 Private_Server 来获取那些数据，再进一步处理。</p>\n<blockquote>\n<p>好处：</p>\n<ul>\n<li>保护处理数据的程序和数据库</li>\n<li>有时需要换服务器，避免通知所有人更新服务器的地址和登录信息</li>\n<li>Public_Server 就像一个保护屏，做了一个分割，提高了安全性。</li>\n</ul>\n</blockquote>\n<a id=\"more\"></a>\n<p>转移数据，作为整个工序里很小的一个步骤，通常我们会直接写进一个脚本里，这部分都会自动完成。<br>但是在服务器之间做这个操作，会需要提供密码，此时，整个脚本程序就会停下来。如果需要人来输入密码，就失去了脚本的意义了。<br>所以事先在两个服务器之间建立信任，这样，需要 SCP 或者 SSH 的时候，都不需要再输入密码。</p>\n<a name=\"直奔主题\">\n**具体操作如下：**\n\n<p>假设：</p>\n<ul>\n<li><p>Public_Server: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IP： 199.99.999.99</span><br><span class=\"line\">UserId: people</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Private_Server:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UserId: ryan</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>在 Private_Server 上操作：</p>\n<ol>\n<li><p>创建钥匙。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>\n\n<p> 一路回车之后，做了两个钥匙。自己的钥匙是这个：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/home/ryan/.ssh/id_rsa</span><br></pre></td></tr></table></figure>\n\n<p> 公开的钥匙是这个：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/home/ryan/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>SSH 连接到 Public_Server, 并且创建 .ssh 文件夹</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh people@199.99.999.99\t<span class=\"comment\"># 输入密码，进入到 public server</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~\t\t\t\t\t<span class=\"comment\"># 进入 people 用户的 Home</span></span><br><span class=\"line\">mkdir .ssh\t\t\t\t<span class=\"comment\"># 创建 .ssh 文件夹(/home/people/.ssh)</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span>\t\t\t\t\t<span class=\"comment\"># 退出，回到 private server</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将公开的钥匙复制到 public server 的 .ssh 文件夹里，命名为 authorized_keys，需要密码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp /home/ryan/.ssh/id_rsa people@199.99.999.99:/home/people/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>之后再进行 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh people@199.99.999.99</span><br></pre></td></tr></table></figure>\n\n<p> 或者</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp /home/ryan/anyfile.txt people@199.99.999.99:/home/people/</span><br></pre></td></tr></table></figure>\n\n<p> 都不需要提供密码。</p>\n</li>\n</ol>\n</a>","site":{"data":{}},"excerpt":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>点这里跳过废话：<a href=\"#直奔主题\">直奔主题 Show me the code</a></p>\n<p>有这样一个任务: 将同事发送的原始数据处理好之后，放进数据库。<br>其中一个关键的步骤，就是原始数据的转移。</p>\n<p>通常我们有两个服务器，一个是 Public_Server，一个是 Private_Server。<br>公开 Public_Server 的用户名和密码，这样其他同事都可以自由地往里面存放数据。<br>然后我们操作 Private_Server 来获取那些数据，再进一步处理。</p>\n<blockquote>\n<p>好处：</p>\n<ul>\n<li>保护处理数据的程序和数据库</li>\n<li>有时需要换服务器，避免通知所有人更新服务器的地址和登录信息</li>\n<li>Public_Server 就像一个保护屏，做了一个分割，提高了安全性。</li>\n</ul>\n</blockquote>","more":"<p>转移数据，作为整个工序里很小的一个步骤，通常我们会直接写进一个脚本里，这部分都会自动完成。<br>但是在服务器之间做这个操作，会需要提供密码，此时，整个脚本程序就会停下来。如果需要人来输入密码，就失去了脚本的意义了。<br>所以事先在两个服务器之间建立信任，这样，需要 SCP 或者 SSH 的时候，都不需要再输入密码。</p>\n<a name=\"直奔主题\">\n**具体操作如下：**\n\n<p>假设：</p>\n<ul>\n<li><p>Public_Server: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IP： 199.99.999.99</span><br><span class=\"line\">UserId: people</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Private_Server:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UserId: ryan</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>在 Private_Server 上操作：</p>\n<ol>\n<li><p>创建钥匙。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>\n\n<p> 一路回车之后，做了两个钥匙。自己的钥匙是这个：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/home/ryan/.ssh/id_rsa</span><br></pre></td></tr></table></figure>\n\n<p> 公开的钥匙是这个：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/home/ryan/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>SSH 连接到 Public_Server, 并且创建 .ssh 文件夹</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh people@199.99.999.99\t<span class=\"comment\"># 输入密码，进入到 public server</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~\t\t\t\t\t<span class=\"comment\"># 进入 people 用户的 Home</span></span><br><span class=\"line\">mkdir .ssh\t\t\t\t<span class=\"comment\"># 创建 .ssh 文件夹(/home/people/.ssh)</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span>\t\t\t\t\t<span class=\"comment\"># 退出，回到 private server</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将公开的钥匙复制到 public server 的 .ssh 文件夹里，命名为 authorized_keys，需要密码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp /home/ryan/.ssh/id_rsa people@199.99.999.99:/home/people/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>之后再进行 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh people@199.99.999.99</span><br></pre></td></tr></table></figure>\n\n<p> 或者</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp /home/ryan/anyfile.txt people@199.99.999.99:/home/people/</span><br></pre></td></tr></table></figure>\n\n<p> 都不需要提供密码。</p>\n</li>\n</ol>\n</a>"},{"title":"Linux - vi basic","date":"2017-12-01T19:50:28.000Z","_content":"\n\n## Basic Command ##\n\n### 打开文件 ###\n打开 /d/blog/_config.yml\n```bash\nvi /d/blog/_config.yml\n```\n\n### 搜索 ###\n搜索 theme: `/theme`\n回车，按 `n` 搜索下一个，直到搜索到目标。\n<!--more-->\n\n### 进入插入模式 ###\n按 `i` 进入插入模式。屏幕左下角会显示：\n```bash\n-- INSERT --\n```\n此时可以进行输入和删除。\n\n### 保存及退出 ###\n退出前，按 `esc` 离开插入模式。\n\n- 不保存，退出: `：q!`\n- 查看之后，没有做修改，直接退出: `:q`\n- 保存: `:w`\n- 保存修改，退出: `:wq` 或者 `ZZ`\n\n\n## 命令模式（非插入模式）下 ##\n\n### 移动 ###\n- 下一页：`ctrl+b`\n- 上一页：`ctrl+f`\n- 至屏幕顶行：`H` \n- 至屏幕中间行：`M` \n- 至屏幕最后行：`L`\n\n### 删除 ###\n- 删除所在行：`dd`\n\n### 复制，粘贴 ###\n- 复制所在行：`yy`\n- 复制以下#行（包括本行）：`#yy`\n- 粘贴：`p`\n\n\n","source":"_posts/Linux-vi-basic.md","raw":"---\ntitle: Linux - vi basic\ndate: 2017-12-02 03:50:28\ncategories: Linux\ntags: [Linux, vi, command]\n---\n\n\n## Basic Command ##\n\n### 打开文件 ###\n打开 /d/blog/_config.yml\n```bash\nvi /d/blog/_config.yml\n```\n\n### 搜索 ###\n搜索 theme: `/theme`\n回车，按 `n` 搜索下一个，直到搜索到目标。\n<!--more-->\n\n### 进入插入模式 ###\n按 `i` 进入插入模式。屏幕左下角会显示：\n```bash\n-- INSERT --\n```\n此时可以进行输入和删除。\n\n### 保存及退出 ###\n退出前，按 `esc` 离开插入模式。\n\n- 不保存，退出: `：q!`\n- 查看之后，没有做修改，直接退出: `:q`\n- 保存: `:w`\n- 保存修改，退出: `:wq` 或者 `ZZ`\n\n\n## 命令模式（非插入模式）下 ##\n\n### 移动 ###\n- 下一页：`ctrl+b`\n- 上一页：`ctrl+f`\n- 至屏幕顶行：`H` \n- 至屏幕中间行：`M` \n- 至屏幕最后行：`L`\n\n### 删除 ###\n- 删除所在行：`dd`\n\n### 复制，粘贴 ###\n- 复制所在行：`yy`\n- 复制以下#行（包括本行）：`#yy`\n- 粘贴：`p`\n\n\n","slug":"Linux-vi-basic","published":1,"updated":"2020-04-30T09:23:19.530Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedia000ssd5tcjfrfoqs","content":"<h2 id=\"Basic-Command\"><a href=\"#Basic-Command\" class=\"headerlink\" title=\"Basic Command\"></a>Basic Command</h2><h3 id=\"打开文件\"><a href=\"#打开文件\" class=\"headerlink\" title=\"打开文件\"></a>打开文件</h3><p>打开 /d/blog/_config.yml</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /d/blog/_config.yml</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h3><p>搜索 theme: <code>/theme</code><br>回车，按 <code>n</code> 搜索下一个，直到搜索到目标。</p>\n<a id=\"more\"></a>\n\n<h3 id=\"进入插入模式\"><a href=\"#进入插入模式\" class=\"headerlink\" title=\"进入插入模式\"></a>进入插入模式</h3><p>按 <code>i</code> 进入插入模式。屏幕左下角会显示：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- INSERT --</span><br></pre></td></tr></table></figure>\n\n<p>此时可以进行输入和删除。</p>\n<h3 id=\"保存及退出\"><a href=\"#保存及退出\" class=\"headerlink\" title=\"保存及退出\"></a>保存及退出</h3><p>退出前，按 <code>esc</code> 离开插入模式。</p>\n<ul>\n<li>不保存，退出: <code>：q!</code></li>\n<li>查看之后，没有做修改，直接退出: <code>:q</code></li>\n<li>保存: <code>:w</code></li>\n<li>保存修改，退出: <code>:wq</code> 或者 <code>ZZ</code></li>\n</ul>\n<h2 id=\"命令模式（非插入模式）下\"><a href=\"#命令模式（非插入模式）下\" class=\"headerlink\" title=\"命令模式（非插入模式）下\"></a>命令模式（非插入模式）下</h2><h3 id=\"移动\"><a href=\"#移动\" class=\"headerlink\" title=\"移动\"></a>移动</h3><ul>\n<li>下一页：<code>ctrl+b</code></li>\n<li>上一页：<code>ctrl+f</code></li>\n<li>至屏幕顶行：<code>H</code> </li>\n<li>至屏幕中间行：<code>M</code> </li>\n<li>至屏幕最后行：<code>L</code></li>\n</ul>\n<h3 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h3><ul>\n<li>删除所在行：<code>dd</code></li>\n</ul>\n<h3 id=\"复制，粘贴\"><a href=\"#复制，粘贴\" class=\"headerlink\" title=\"复制，粘贴\"></a>复制，粘贴</h3><ul>\n<li>复制所在行：<code>yy</code></li>\n<li>复制以下#行（包括本行）：<code>#yy</code></li>\n<li>粘贴：<code>p</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h2 id=\"Basic-Command\"><a href=\"#Basic-Command\" class=\"headerlink\" title=\"Basic Command\"></a>Basic Command</h2><h3 id=\"打开文件\"><a href=\"#打开文件\" class=\"headerlink\" title=\"打开文件\"></a>打开文件</h3><p>打开 /d/blog/_config.yml</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /d/blog/_config.yml</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h3><p>搜索 theme: <code>/theme</code><br>回车，按 <code>n</code> 搜索下一个，直到搜索到目标。</p>","more":"<h3 id=\"进入插入模式\"><a href=\"#进入插入模式\" class=\"headerlink\" title=\"进入插入模式\"></a>进入插入模式</h3><p>按 <code>i</code> 进入插入模式。屏幕左下角会显示：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- INSERT --</span><br></pre></td></tr></table></figure>\n\n<p>此时可以进行输入和删除。</p>\n<h3 id=\"保存及退出\"><a href=\"#保存及退出\" class=\"headerlink\" title=\"保存及退出\"></a>保存及退出</h3><p>退出前，按 <code>esc</code> 离开插入模式。</p>\n<ul>\n<li>不保存，退出: <code>：q!</code></li>\n<li>查看之后，没有做修改，直接退出: <code>:q</code></li>\n<li>保存: <code>:w</code></li>\n<li>保存修改，退出: <code>:wq</code> 或者 <code>ZZ</code></li>\n</ul>\n<h2 id=\"命令模式（非插入模式）下\"><a href=\"#命令模式（非插入模式）下\" class=\"headerlink\" title=\"命令模式（非插入模式）下\"></a>命令模式（非插入模式）下</h2><h3 id=\"移动\"><a href=\"#移动\" class=\"headerlink\" title=\"移动\"></a>移动</h3><ul>\n<li>下一页：<code>ctrl+b</code></li>\n<li>上一页：<code>ctrl+f</code></li>\n<li>至屏幕顶行：<code>H</code> </li>\n<li>至屏幕中间行：<code>M</code> </li>\n<li>至屏幕最后行：<code>L</code></li>\n</ul>\n<h3 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h3><ul>\n<li>删除所在行：<code>dd</code></li>\n</ul>\n<h3 id=\"复制，粘贴\"><a href=\"#复制，粘贴\" class=\"headerlink\" title=\"复制，粘贴\"></a>复制，粘贴</h3><ul>\n<li>复制所在行：<code>yy</code></li>\n<li>复制以下#行（包括本行）：<code>#yy</code></li>\n<li>粘贴：<code>p</code></li>\n</ul>"},{"title":"Linux - Script - Menu Template","date":"2017-12-09T11:02:39.000Z","_content":"- menu always in the center of prompt window\n- pre-define methods\n\t- print line\n\t- make choice\n\t- see you\n\t- press to continue\n\n```bash\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"|        See you next time..       |\"\n\tprintLine \"+----------------------------------+\"\n```\n\n<!--more-->\n```bash\n#!/bin/ksh\n\n#Head\noption=0\nerrMsg=\"\"\ncolumn=$(tput cols)\nx=0\nwidth=36\ny=$((($column-$width)/2))\nnextionAction=~/xxx.sh\n\nprintLine(){\n\t((x++))\n\ttput cup $x $y\n\techo $1\n}\n\nmakeChoice(){\n\t((x++))\n\ttput cup $x $y\n\techo -n \"Please choose (0-exit): \"\n\tread option\n}\n\nseeYou(){\n\t((x++))\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"|        See you next time..       |\"\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"\"\n}\n\nPressContinue(){\n\t((x++))\n\ttput cup $x $y\n\techo -n \"Press to continue.. \"\n\tread q\n}\n\n#Body\nclear\n\nwhile :\ndo\n\t#If error exists, display it\n\tif [$errMsg!=\"\"]; then\n\t\tprintLine \"$errMsg\"\n\tfi\n\n\t#show menu\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"|               Menu               |\"\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"|                                  |\"\n\tprintLine \"|            1. xxx                |\"\n\tprintLine \"|                                  |\"\n\tprintLine \"|            2. xxxxxx             |\"\n\tprintLine \"|                                  |\"\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"\"\n\n\tmakeChoice\n\n\t#clear the error message\n\terrMsg=\"\"\n\n\t#logic\n\tcase $option in\n\t\t0) seeYou; exit ;;\n\t\t1) $nextAction para1 ;;\n\t\t2) $nextAction para2 ;;\n\t\t*) errMsg=\"Invalid option. Try again..\" ;;\n\tesac\n\n\t#set x back to 0 for next display\n\tx=0\n\ndone\n\n```\n","source":"_posts/Linux-Script-Menu-Template.md","raw":"---\ntitle: Linux - Script - Menu Template\ndate: 2017-12-09 19:02:39\ncategories: Linux\ntags: [Linux, sh, script, template, menu, center]\n---\n- menu always in the center of prompt window\n- pre-define methods\n\t- print line\n\t- make choice\n\t- see you\n\t- press to continue\n\n```bash\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"|        See you next time..       |\"\n\tprintLine \"+----------------------------------+\"\n```\n\n<!--more-->\n```bash\n#!/bin/ksh\n\n#Head\noption=0\nerrMsg=\"\"\ncolumn=$(tput cols)\nx=0\nwidth=36\ny=$((($column-$width)/2))\nnextionAction=~/xxx.sh\n\nprintLine(){\n\t((x++))\n\ttput cup $x $y\n\techo $1\n}\n\nmakeChoice(){\n\t((x++))\n\ttput cup $x $y\n\techo -n \"Please choose (0-exit): \"\n\tread option\n}\n\nseeYou(){\n\t((x++))\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"|        See you next time..       |\"\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"\"\n}\n\nPressContinue(){\n\t((x++))\n\ttput cup $x $y\n\techo -n \"Press to continue.. \"\n\tread q\n}\n\n#Body\nclear\n\nwhile :\ndo\n\t#If error exists, display it\n\tif [$errMsg!=\"\"]; then\n\t\tprintLine \"$errMsg\"\n\tfi\n\n\t#show menu\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"|               Menu               |\"\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"|                                  |\"\n\tprintLine \"|            1. xxx                |\"\n\tprintLine \"|                                  |\"\n\tprintLine \"|            2. xxxxxx             |\"\n\tprintLine \"|                                  |\"\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"\"\n\n\tmakeChoice\n\n\t#clear the error message\n\terrMsg=\"\"\n\n\t#logic\n\tcase $option in\n\t\t0) seeYou; exit ;;\n\t\t1) $nextAction para1 ;;\n\t\t2) $nextAction para2 ;;\n\t\t*) errMsg=\"Invalid option. Try again..\" ;;\n\tesac\n\n\t#set x back to 0 for next display\n\tx=0\n\ndone\n\n```\n","slug":"Linux-Script-Menu-Template","published":1,"updated":"2020-04-30T09:23:19.530Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedia000tsd5t9xxartxf","content":"<ul>\n<li>menu always in the center of prompt window</li>\n<li>pre-define methods<ul>\n<li>print line</li>\n<li>make choice</li>\n<li>see you</li>\n<li>press to continue</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">printLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">printLine <span class=\"string\">\"|        See you next time..       |\"</span></span><br><span class=\"line\">printLine <span class=\"string\">\"+----------------------------------+\"</span></span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/ksh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Head</span></span><br><span class=\"line\">option=0</span><br><span class=\"line\">errMsg=<span class=\"string\">\"\"</span></span><br><span class=\"line\">column=$(tput cols)</span><br><span class=\"line\">x=0</span><br><span class=\"line\">width=36</span><br><span class=\"line\">y=$(((<span class=\"variable\">$column</span>-<span class=\"variable\">$width</span>)/2))</span><br><span class=\"line\">nextionAction=~/xxx.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">printLine</span></span>()&#123;</span><br><span class=\"line\">\t((x++))</span><br><span class=\"line\">\ttput cup <span class=\"variable\">$x</span> <span class=\"variable\">$y</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"variable\">$1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">makeChoice</span></span>()&#123;</span><br><span class=\"line\">\t((x++))</span><br><span class=\"line\">\ttput cup <span class=\"variable\">$x</span> <span class=\"variable\">$y</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> -n <span class=\"string\">\"Please choose (0-exit): \"</span></span><br><span class=\"line\">\t<span class=\"built_in\">read</span> option</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">seeYou</span></span>()&#123;</span><br><span class=\"line\">\t((x++))</span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|        See you next time..       |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">PressContinue</span></span>()&#123;</span><br><span class=\"line\">\t((x++))</span><br><span class=\"line\">\ttput cup <span class=\"variable\">$x</span> <span class=\"variable\">$y</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> -n <span class=\"string\">\"Press to continue.. \"</span></span><br><span class=\"line\">\t<span class=\"built_in\">read</span> q</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Body</span></span><br><span class=\"line\">clear</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> :</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"comment\">#If error exists, display it</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> [<span class=\"variable\">$errMsg</span>!=<span class=\"string\">\"\"</span>]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\tprintLine <span class=\"string\">\"<span class=\"variable\">$errMsg</span>\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">#show menu</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|               Menu               |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|                                  |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|            1. xxx                |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|                                  |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|            2. xxxxxx             |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|                                  |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tmakeChoice</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">#clear the error message</span></span><br><span class=\"line\">\terrMsg=<span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">#logic</span></span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"variable\">$option</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">\t\t0) seeYou; <span class=\"built_in\">exit</span> ;;</span><br><span class=\"line\">\t\t1) <span class=\"variable\">$nextAction</span> para1 ;;</span><br><span class=\"line\">\t\t2) <span class=\"variable\">$nextAction</span> para2 ;;</span><br><span class=\"line\">\t\t*) errMsg=<span class=\"string\">\"Invalid option. Try again..\"</span> ;;</span><br><span class=\"line\">\t<span class=\"keyword\">esac</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">#set x back to 0 for next display</span></span><br><span class=\"line\">\tx=0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<ul>\n<li>menu always in the center of prompt window</li>\n<li>pre-define methods<ul>\n<li>print line</li>\n<li>make choice</li>\n<li>see you</li>\n<li>press to continue</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">printLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">printLine <span class=\"string\">\"|        See you next time..       |\"</span></span><br><span class=\"line\">printLine <span class=\"string\">\"+----------------------------------+\"</span></span><br></pre></td></tr></table></figure>","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/ksh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Head</span></span><br><span class=\"line\">option=0</span><br><span class=\"line\">errMsg=<span class=\"string\">\"\"</span></span><br><span class=\"line\">column=$(tput cols)</span><br><span class=\"line\">x=0</span><br><span class=\"line\">width=36</span><br><span class=\"line\">y=$(((<span class=\"variable\">$column</span>-<span class=\"variable\">$width</span>)/2))</span><br><span class=\"line\">nextionAction=~/xxx.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">printLine</span></span>()&#123;</span><br><span class=\"line\">\t((x++))</span><br><span class=\"line\">\ttput cup <span class=\"variable\">$x</span> <span class=\"variable\">$y</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"variable\">$1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">makeChoice</span></span>()&#123;</span><br><span class=\"line\">\t((x++))</span><br><span class=\"line\">\ttput cup <span class=\"variable\">$x</span> <span class=\"variable\">$y</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> -n <span class=\"string\">\"Please choose (0-exit): \"</span></span><br><span class=\"line\">\t<span class=\"built_in\">read</span> option</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">seeYou</span></span>()&#123;</span><br><span class=\"line\">\t((x++))</span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|        See you next time..       |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">PressContinue</span></span>()&#123;</span><br><span class=\"line\">\t((x++))</span><br><span class=\"line\">\ttput cup <span class=\"variable\">$x</span> <span class=\"variable\">$y</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> -n <span class=\"string\">\"Press to continue.. \"</span></span><br><span class=\"line\">\t<span class=\"built_in\">read</span> q</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Body</span></span><br><span class=\"line\">clear</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> :</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"comment\">#If error exists, display it</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> [<span class=\"variable\">$errMsg</span>!=<span class=\"string\">\"\"</span>]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\tprintLine <span class=\"string\">\"<span class=\"variable\">$errMsg</span>\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">#show menu</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|               Menu               |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|                                  |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|            1. xxx                |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|                                  |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|            2. xxxxxx             |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|                                  |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tmakeChoice</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">#clear the error message</span></span><br><span class=\"line\">\terrMsg=<span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">#logic</span></span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"variable\">$option</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">\t\t0) seeYou; <span class=\"built_in\">exit</span> ;;</span><br><span class=\"line\">\t\t1) <span class=\"variable\">$nextAction</span> para1 ;;</span><br><span class=\"line\">\t\t2) <span class=\"variable\">$nextAction</span> para2 ;;</span><br><span class=\"line\">\t\t*) errMsg=<span class=\"string\">\"Invalid option. Try again..\"</span> ;;</span><br><span class=\"line\">\t<span class=\"keyword\">esac</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">#set x back to 0 for next display</span></span><br><span class=\"line\">\tx=0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>"},{"title":"Ohm $20 Promo Code: OHMREF5F498F","date":"2017-11-14T14:39:15.000Z","_content":"\nOhm $20 Promo Code: **OHMREF5F498F**\n\nFrom Nov 2018, S58xxxx - S78xxxx can switch to electricity retailer:\n\n- Website: [https://ohm.sg/index](https://ohm.sg/index)\n- Save: around 20% cheaper than SP Service\n\n\nUse my Ohm Referral Code to get $20 off: **OHMREF5F498F**","source":"_posts/Ohm-0-Promo-Code-OHMREF5F498F.md","raw":"---\ntitle: 'Ohm $20 Promo Code: OHMREF5F498F'\ndate: 2017-11-14 22:39:15\ncategories: others\ntags: [ohm, promote, code]\n---\n\nOhm $20 Promo Code: **OHMREF5F498F**\n\nFrom Nov 2018, S58xxxx - S78xxxx can switch to electricity retailer:\n\n- Website: [https://ohm.sg/index](https://ohm.sg/index)\n- Save: around 20% cheaper than SP Service\n\n\nUse my Ohm Referral Code to get $20 off: **OHMREF5F498F**","slug":"Ohm-0-Promo-Code-OHMREF5F498F","published":1,"updated":"2020-04-30T09:23:19.530Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedib000usd5tmjqmzmte","content":"<p>Ohm $20 Promo Code: <strong>OHMREF5F498F</strong></p>\n<p>From Nov 2018, S58xxxx - S78xxxx can switch to electricity retailer:</p>\n<ul>\n<li>Website: <a href=\"https://ohm.sg/index\" target=\"_blank\" rel=\"noopener\">https://ohm.sg/index</a></li>\n<li>Save: around 20% cheaper than SP Service</li>\n</ul>\n<p>Use my Ohm Referral Code to get $20 off: <strong>OHMREF5F498F</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Ohm $20 Promo Code: <strong>OHMREF5F498F</strong></p>\n<p>From Nov 2018, S58xxxx - S78xxxx can switch to electricity retailer:</p>\n<ul>\n<li>Website: <a href=\"https://ohm.sg/index\" target=\"_blank\" rel=\"noopener\">https://ohm.sg/index</a></li>\n<li>Save: around 20% cheaper than SP Service</li>\n</ul>\n<p>Use my Ohm Referral Code to get $20 off: <strong>OHMREF5F498F</strong></p>\n"},{"title":"Play XML with Dom4j","date":"2018-08-09T04:04:34.000Z","_content":"\n- Add, Delete, Update, Read\n- Using XPath\n\n\n\n# Add, Delete, Update, Read\n\n## XML sample\n```\n<shelf> \n  <book name=\"Java Web\"> \n    <name>Java Web</name>  \n    <author>Ryan</author>  \n    <price>99.0</price>  \n  </book> \n  <book name=\"Spring\"> \n    <name>Spring</name>  \n    <author>AK</author>  \n    <price>299.0</price>  \n  </book> \n</shelf>\n```\n## Read\n```\n\t@Test\n\tpublic void read() throws DocumentException {\n\t\t\n\t\tSAXReader reader = new SAXReader();\n\t\tDocument document = reader.read(\"src/book.xml\");\n\t\t\n\t\tElement root = document.getRootElement();\n\t\tElement book = root.elements(\"book\").get(0);\n\t\tString bookName = book.element(\"name\").getText();\n\t\tSystem.out.println(bookName);\n\t\t\n\t\tString bookAttribute = book.attributeValue(\"name\");\n\t\tSystem.out.println(bookAttribute);\n\t}\n```\n<!--more-->\n## Add\n```\n\t// Add content to XML\n\t@Test\n\tpublic void add() throws DocumentException, IOException {\n\t\t\n\t\tSAXReader reader = new SAXReader();\n\t\tDocument document = reader.read(\"src/book.xml\");\n\t\t\n\t\tElement book = document.getRootElement().element(\"book\");\n\t\tbook.addElement(\"price\").setText(\"199.0\");\n\t\t\n\t\tOutputFormat format = OutputFormat.createPrettyPrint();\n\t\t\n\t\tXMLWriter writer = new XMLWriter(new FileWriter(\"src/book.xml\"),format);\n\t\twriter.write(document);\n\t\twriter.close();\n\t}\n\t\n\t// Add content to XML in specific position\n\t@Test\n\tpublic void add2() throws DocumentException, IOException {\n\t\t\n\t\tSAXReader reader = new SAXReader();\n\t\tDocument document = reader.read(\"src/book.xml\");\n\t\t\n\t\tElement book = document.getRootElement().element(\"book\");\n\t\tList list = book.elements(); // [book, name, price]\n\t\t\n\t\tElement author = DocumentHelper.createElement(\"author\");\n\t\tauthor.setText(\"Ryan\");\n\t\tlist.add(1, author);\n\t\t\n\t\tOutputFormat format = OutputFormat.createPrettyPrint();\n\t\tXMLWriter writer = new XMLWriter(new FileWriter(\"src/book.xml\"),format);\n\t\twriter.write(document);\n\t\twriter.close();\n\t}\n```\n## Update\n```\n\t@Test\n\tpublic void update() throws DocumentException, IOException {\n\t\t\n\t\tSAXReader reader = new SAXReader();\n\t\tDocument document = reader.read(\"src/book.xml\");\n\t\t\n\t\tElement author = document.getRootElement().element(\"book\").element(\"author\");\n\t\tauthor.setText(\"Ryan Luo\");\n\t\t\n\t\tOutputFormat format = OutputFormat.createPrettyPrint();\n\t\tXMLWriter writer = new XMLWriter(new FileWriter(\"src/book.xml\"),format);\n\t\twriter.write(document);\n\t\twriter.close();\n\t}\n\n```\n## Delete\n```\n\t@Test\n\tpublic void delete() throws DocumentException, IOException {\n\t\t\n\t\tSAXReader reader = new SAXReader();\n\t\tDocument document = reader.read(\"src/book.xml\");\n\t\t\n\t\tElement book = document.getRootElement().element(\"book\");\n\t\tList list = book.elements(); // [book, name, price]\n\t\t\n\t\tlist.remove(4);\n\t\t\n\t\tOutputFormat format = OutputFormat.createPrettyPrint();\n\t\tXMLWriter writer = new XMLWriter(new FileWriter(\"src/book.xml\"),format);\n\t\twriter.write(document);\n\t\twriter.close();\n\t}\n\t\n\t@Test\n\tpublic void delete2() throws DocumentException, IOException {\n\t\t\n\t\tSAXReader reader = new SAXReader();\n\t\tDocument document = reader.read(\"src/book.xml\");\n\t\t\n\t\tElement author = document.getRootElement().element(\"book\").element(\"author\");\n\t\tauthor.getParent().remove(author);\n\t\t\n\t\tOutputFormat format = OutputFormat.createPrettyPrint();\n\t\tXMLWriter writer = new XMLWriter(new FileWriter(\"src/book.xml\"),format);\n\t\twriter.write(document);\n\t\twriter.close();\n\t}\n```\n\n\n# using Xpath\n\n## Read\n```\n\t@Test\n\tpublic void getByXPath() throws DocumentException, IOException {\n\t\t\n\t\tSAXReader reader = new SAXReader();\n\t\tDocument document = reader.read(\"src/book.xml\");\n\t\t\n\t\tString author = document.selectSingleNode(\"//author\").getText();\n\t\tSystem.out.println(author);\n\t}\n```\n\n## Example: login\n### XML sample\n```\n<users> \n  <user id=\"1\" username=\"ryan\" password=\"ryan\"/>\n  <user id=\"2\" username=\"peter\" password=\"peter\"/>\n  <user id=\"3\" username=\"melvin\" password=\"melvin\"/> \n</users>\n```\n### Authorization\n```\n\t@Test\n\tpublic void verify() throws DocumentException, IOException {\n\t\t\n\t\tString username=\"ryan\";\n\t\tString password=\"ryan\";\n\t\t\n\t\tSAXReader reader = new SAXReader();\n\t\tDocument document = reader.read(\"src/users.xml\");\n\t\t\n\t\tString xPath=\"//user[@username='\"+username+\"' and @password='\"+password+\"']\";\n\t\tNode user = document.selectSingleNode(xPath);\n\t\tif(user==null) {\n\t\t\tSystem.out.println(\"Invalid credential..\");\n\t\t} else {\n\t\t\tSystem.out.println(\"Successfully login..\");\n\t\t}\n\t}\n```","source":"_posts/Play-XML-with-Dom4j.md","raw":"---\ntitle: Play XML with Dom4j\ndate: 2018-08-09 12:04:34\ncategories: JavaWeb\ntags: [XML, dom4j, demo]\n---\n\n- Add, Delete, Update, Read\n- Using XPath\n\n\n\n# Add, Delete, Update, Read\n\n## XML sample\n```\n<shelf> \n  <book name=\"Java Web\"> \n    <name>Java Web</name>  \n    <author>Ryan</author>  \n    <price>99.0</price>  \n  </book> \n  <book name=\"Spring\"> \n    <name>Spring</name>  \n    <author>AK</author>  \n    <price>299.0</price>  \n  </book> \n</shelf>\n```\n## Read\n```\n\t@Test\n\tpublic void read() throws DocumentException {\n\t\t\n\t\tSAXReader reader = new SAXReader();\n\t\tDocument document = reader.read(\"src/book.xml\");\n\t\t\n\t\tElement root = document.getRootElement();\n\t\tElement book = root.elements(\"book\").get(0);\n\t\tString bookName = book.element(\"name\").getText();\n\t\tSystem.out.println(bookName);\n\t\t\n\t\tString bookAttribute = book.attributeValue(\"name\");\n\t\tSystem.out.println(bookAttribute);\n\t}\n```\n<!--more-->\n## Add\n```\n\t// Add content to XML\n\t@Test\n\tpublic void add() throws DocumentException, IOException {\n\t\t\n\t\tSAXReader reader = new SAXReader();\n\t\tDocument document = reader.read(\"src/book.xml\");\n\t\t\n\t\tElement book = document.getRootElement().element(\"book\");\n\t\tbook.addElement(\"price\").setText(\"199.0\");\n\t\t\n\t\tOutputFormat format = OutputFormat.createPrettyPrint();\n\t\t\n\t\tXMLWriter writer = new XMLWriter(new FileWriter(\"src/book.xml\"),format);\n\t\twriter.write(document);\n\t\twriter.close();\n\t}\n\t\n\t// Add content to XML in specific position\n\t@Test\n\tpublic void add2() throws DocumentException, IOException {\n\t\t\n\t\tSAXReader reader = new SAXReader();\n\t\tDocument document = reader.read(\"src/book.xml\");\n\t\t\n\t\tElement book = document.getRootElement().element(\"book\");\n\t\tList list = book.elements(); // [book, name, price]\n\t\t\n\t\tElement author = DocumentHelper.createElement(\"author\");\n\t\tauthor.setText(\"Ryan\");\n\t\tlist.add(1, author);\n\t\t\n\t\tOutputFormat format = OutputFormat.createPrettyPrint();\n\t\tXMLWriter writer = new XMLWriter(new FileWriter(\"src/book.xml\"),format);\n\t\twriter.write(document);\n\t\twriter.close();\n\t}\n```\n## Update\n```\n\t@Test\n\tpublic void update() throws DocumentException, IOException {\n\t\t\n\t\tSAXReader reader = new SAXReader();\n\t\tDocument document = reader.read(\"src/book.xml\");\n\t\t\n\t\tElement author = document.getRootElement().element(\"book\").element(\"author\");\n\t\tauthor.setText(\"Ryan Luo\");\n\t\t\n\t\tOutputFormat format = OutputFormat.createPrettyPrint();\n\t\tXMLWriter writer = new XMLWriter(new FileWriter(\"src/book.xml\"),format);\n\t\twriter.write(document);\n\t\twriter.close();\n\t}\n\n```\n## Delete\n```\n\t@Test\n\tpublic void delete() throws DocumentException, IOException {\n\t\t\n\t\tSAXReader reader = new SAXReader();\n\t\tDocument document = reader.read(\"src/book.xml\");\n\t\t\n\t\tElement book = document.getRootElement().element(\"book\");\n\t\tList list = book.elements(); // [book, name, price]\n\t\t\n\t\tlist.remove(4);\n\t\t\n\t\tOutputFormat format = OutputFormat.createPrettyPrint();\n\t\tXMLWriter writer = new XMLWriter(new FileWriter(\"src/book.xml\"),format);\n\t\twriter.write(document);\n\t\twriter.close();\n\t}\n\t\n\t@Test\n\tpublic void delete2() throws DocumentException, IOException {\n\t\t\n\t\tSAXReader reader = new SAXReader();\n\t\tDocument document = reader.read(\"src/book.xml\");\n\t\t\n\t\tElement author = document.getRootElement().element(\"book\").element(\"author\");\n\t\tauthor.getParent().remove(author);\n\t\t\n\t\tOutputFormat format = OutputFormat.createPrettyPrint();\n\t\tXMLWriter writer = new XMLWriter(new FileWriter(\"src/book.xml\"),format);\n\t\twriter.write(document);\n\t\twriter.close();\n\t}\n```\n\n\n# using Xpath\n\n## Read\n```\n\t@Test\n\tpublic void getByXPath() throws DocumentException, IOException {\n\t\t\n\t\tSAXReader reader = new SAXReader();\n\t\tDocument document = reader.read(\"src/book.xml\");\n\t\t\n\t\tString author = document.selectSingleNode(\"//author\").getText();\n\t\tSystem.out.println(author);\n\t}\n```\n\n## Example: login\n### XML sample\n```\n<users> \n  <user id=\"1\" username=\"ryan\" password=\"ryan\"/>\n  <user id=\"2\" username=\"peter\" password=\"peter\"/>\n  <user id=\"3\" username=\"melvin\" password=\"melvin\"/> \n</users>\n```\n### Authorization\n```\n\t@Test\n\tpublic void verify() throws DocumentException, IOException {\n\t\t\n\t\tString username=\"ryan\";\n\t\tString password=\"ryan\";\n\t\t\n\t\tSAXReader reader = new SAXReader();\n\t\tDocument document = reader.read(\"src/users.xml\");\n\t\t\n\t\tString xPath=\"//user[@username='\"+username+\"' and @password='\"+password+\"']\";\n\t\tNode user = document.selectSingleNode(xPath);\n\t\tif(user==null) {\n\t\t\tSystem.out.println(\"Invalid credential..\");\n\t\t} else {\n\t\t\tSystem.out.println(\"Successfully login..\");\n\t\t}\n\t}\n```","slug":"Play-XML-with-Dom4j","published":1,"updated":"2020-04-30T09:23:19.531Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedib000vsd5tausi9rj7","content":"<ul>\n<li>Add, Delete, Update, Read</li>\n<li>Using XPath</li>\n</ul>\n<h1 id=\"Add-Delete-Update-Read\"><a href=\"#Add-Delete-Update-Read\" class=\"headerlink\" title=\"Add, Delete, Update, Read\"></a>Add, Delete, Update, Read</h1><h2 id=\"XML-sample\"><a href=\"#XML-sample\" class=\"headerlink\" title=\"XML sample\"></a>XML sample</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;shelf&gt; </span><br><span class=\"line\">  &lt;book name=&quot;Java Web&quot;&gt; </span><br><span class=\"line\">    &lt;name&gt;Java Web&lt;/name&gt;  </span><br><span class=\"line\">    &lt;author&gt;Ryan&lt;/author&gt;  </span><br><span class=\"line\">    &lt;price&gt;99.0&lt;/price&gt;  </span><br><span class=\"line\">  &lt;/book&gt; </span><br><span class=\"line\">  &lt;book name=&quot;Spring&quot;&gt; </span><br><span class=\"line\">    &lt;name&gt;Spring&lt;/name&gt;  </span><br><span class=\"line\">    &lt;author&gt;AK&lt;/author&gt;  </span><br><span class=\"line\">    &lt;price&gt;299.0&lt;/price&gt;  </span><br><span class=\"line\">  &lt;/book&gt; </span><br><span class=\"line\">&lt;/shelf&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Read\"><a href=\"#Read\" class=\"headerlink\" title=\"Read\"></a>Read</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Test</span><br><span class=\"line\">public void read() throws DocumentException &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSAXReader reader = new SAXReader();</span><br><span class=\"line\">\tDocument document = reader.read(&quot;src/book.xml&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tElement root = document.getRootElement();</span><br><span class=\"line\">\tElement book = root.elements(&quot;book&quot;).get(0);</span><br><span class=\"line\">\tString bookName = book.element(&quot;name&quot;).getText();</span><br><span class=\"line\">\tSystem.out.println(bookName);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tString bookAttribute = book.attributeValue(&quot;name&quot;);</span><br><span class=\"line\">\tSystem.out.println(bookAttribute);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n<h2 id=\"Add\"><a href=\"#Add\" class=\"headerlink\" title=\"Add\"></a>Add</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Add content to XML</span><br><span class=\"line\">@Test</span><br><span class=\"line\">public void add() throws DocumentException, IOException &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSAXReader reader = new SAXReader();</span><br><span class=\"line\">\tDocument document = reader.read(&quot;src/book.xml&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tElement book = document.getRootElement().element(&quot;book&quot;);</span><br><span class=\"line\">\tbook.addElement(&quot;price&quot;).setText(&quot;199.0&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tOutputFormat format = OutputFormat.createPrettyPrint();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tXMLWriter writer = new XMLWriter(new FileWriter(&quot;src/book.xml&quot;),format);</span><br><span class=\"line\">\twriter.write(document);</span><br><span class=\"line\">\twriter.close();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// Add content to XML in specific position</span><br><span class=\"line\">@Test</span><br><span class=\"line\">public void add2() throws DocumentException, IOException &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSAXReader reader = new SAXReader();</span><br><span class=\"line\">\tDocument document = reader.read(&quot;src/book.xml&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tElement book = document.getRootElement().element(&quot;book&quot;);</span><br><span class=\"line\">\tList list = book.elements(); // [book, name, price]</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tElement author = DocumentHelper.createElement(&quot;author&quot;);</span><br><span class=\"line\">\tauthor.setText(&quot;Ryan&quot;);</span><br><span class=\"line\">\tlist.add(1, author);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tOutputFormat format = OutputFormat.createPrettyPrint();</span><br><span class=\"line\">\tXMLWriter writer = new XMLWriter(new FileWriter(&quot;src/book.xml&quot;),format);</span><br><span class=\"line\">\twriter.write(document);</span><br><span class=\"line\">\twriter.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Update\"><a href=\"#Update\" class=\"headerlink\" title=\"Update\"></a>Update</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Test</span><br><span class=\"line\">public void update() throws DocumentException, IOException &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSAXReader reader = new SAXReader();</span><br><span class=\"line\">\tDocument document = reader.read(&quot;src/book.xml&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tElement author = document.getRootElement().element(&quot;book&quot;).element(&quot;author&quot;);</span><br><span class=\"line\">\tauthor.setText(&quot;Ryan Luo&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tOutputFormat format = OutputFormat.createPrettyPrint();</span><br><span class=\"line\">\tXMLWriter writer = new XMLWriter(new FileWriter(&quot;src/book.xml&quot;),format);</span><br><span class=\"line\">\twriter.write(document);</span><br><span class=\"line\">\twriter.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Delete\"><a href=\"#Delete\" class=\"headerlink\" title=\"Delete\"></a>Delete</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Test</span><br><span class=\"line\">public void delete() throws DocumentException, IOException &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSAXReader reader = new SAXReader();</span><br><span class=\"line\">\tDocument document = reader.read(&quot;src/book.xml&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tElement book = document.getRootElement().element(&quot;book&quot;);</span><br><span class=\"line\">\tList list = book.elements(); // [book, name, price]</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tlist.remove(4);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tOutputFormat format = OutputFormat.createPrettyPrint();</span><br><span class=\"line\">\tXMLWriter writer = new XMLWriter(new FileWriter(&quot;src/book.xml&quot;),format);</span><br><span class=\"line\">\twriter.write(document);</span><br><span class=\"line\">\twriter.close();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@Test</span><br><span class=\"line\">public void delete2() throws DocumentException, IOException &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSAXReader reader = new SAXReader();</span><br><span class=\"line\">\tDocument document = reader.read(&quot;src/book.xml&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tElement author = document.getRootElement().element(&quot;book&quot;).element(&quot;author&quot;);</span><br><span class=\"line\">\tauthor.getParent().remove(author);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tOutputFormat format = OutputFormat.createPrettyPrint();</span><br><span class=\"line\">\tXMLWriter writer = new XMLWriter(new FileWriter(&quot;src/book.xml&quot;),format);</span><br><span class=\"line\">\twriter.write(document);</span><br><span class=\"line\">\twriter.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"using-Xpath\"><a href=\"#using-Xpath\" class=\"headerlink\" title=\"using Xpath\"></a>using Xpath</h1><h2 id=\"Read-1\"><a href=\"#Read-1\" class=\"headerlink\" title=\"Read\"></a>Read</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Test</span><br><span class=\"line\">public void getByXPath() throws DocumentException, IOException &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSAXReader reader = new SAXReader();</span><br><span class=\"line\">\tDocument document = reader.read(&quot;src/book.xml&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tString author = document.selectSingleNode(&quot;//author&quot;).getText();</span><br><span class=\"line\">\tSystem.out.println(author);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Example-login\"><a href=\"#Example-login\" class=\"headerlink\" title=\"Example: login\"></a>Example: login</h2><h3 id=\"XML-sample-1\"><a href=\"#XML-sample-1\" class=\"headerlink\" title=\"XML sample\"></a>XML sample</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;users&gt; </span><br><span class=\"line\">  &lt;user id=&quot;1&quot; username=&quot;ryan&quot; password=&quot;ryan&quot;/&gt;</span><br><span class=\"line\">  &lt;user id=&quot;2&quot; username=&quot;peter&quot; password=&quot;peter&quot;/&gt;</span><br><span class=\"line\">  &lt;user id=&quot;3&quot; username=&quot;melvin&quot; password=&quot;melvin&quot;/&gt; </span><br><span class=\"line\">&lt;/users&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Authorization\"><a href=\"#Authorization\" class=\"headerlink\" title=\"Authorization\"></a>Authorization</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Test</span><br><span class=\"line\">public void verify() throws DocumentException, IOException &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tString username=&quot;ryan&quot;;</span><br><span class=\"line\">\tString password=&quot;ryan&quot;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSAXReader reader = new SAXReader();</span><br><span class=\"line\">\tDocument document = reader.read(&quot;src/users.xml&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tString xPath=&quot;//user[@username=&apos;&quot;+username+&quot;&apos; and @password=&apos;&quot;+password+&quot;&apos;]&quot;;</span><br><span class=\"line\">\tNode user = document.selectSingleNode(xPath);</span><br><span class=\"line\">\tif(user==null) &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Invalid credential..&quot;);</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Successfully login..&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<ul>\n<li>Add, Delete, Update, Read</li>\n<li>Using XPath</li>\n</ul>\n<h1 id=\"Add-Delete-Update-Read\"><a href=\"#Add-Delete-Update-Read\" class=\"headerlink\" title=\"Add, Delete, Update, Read\"></a>Add, Delete, Update, Read</h1><h2 id=\"XML-sample\"><a href=\"#XML-sample\" class=\"headerlink\" title=\"XML sample\"></a>XML sample</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;shelf&gt; </span><br><span class=\"line\">  &lt;book name=&quot;Java Web&quot;&gt; </span><br><span class=\"line\">    &lt;name&gt;Java Web&lt;/name&gt;  </span><br><span class=\"line\">    &lt;author&gt;Ryan&lt;/author&gt;  </span><br><span class=\"line\">    &lt;price&gt;99.0&lt;/price&gt;  </span><br><span class=\"line\">  &lt;/book&gt; </span><br><span class=\"line\">  &lt;book name=&quot;Spring&quot;&gt; </span><br><span class=\"line\">    &lt;name&gt;Spring&lt;/name&gt;  </span><br><span class=\"line\">    &lt;author&gt;AK&lt;/author&gt;  </span><br><span class=\"line\">    &lt;price&gt;299.0&lt;/price&gt;  </span><br><span class=\"line\">  &lt;/book&gt; </span><br><span class=\"line\">&lt;/shelf&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Read\"><a href=\"#Read\" class=\"headerlink\" title=\"Read\"></a>Read</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Test</span><br><span class=\"line\">public void read() throws DocumentException &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSAXReader reader = new SAXReader();</span><br><span class=\"line\">\tDocument document = reader.read(&quot;src/book.xml&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tElement root = document.getRootElement();</span><br><span class=\"line\">\tElement book = root.elements(&quot;book&quot;).get(0);</span><br><span class=\"line\">\tString bookName = book.element(&quot;name&quot;).getText();</span><br><span class=\"line\">\tSystem.out.println(bookName);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tString bookAttribute = book.attributeValue(&quot;name&quot;);</span><br><span class=\"line\">\tSystem.out.println(bookAttribute);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"Add\"><a href=\"#Add\" class=\"headerlink\" title=\"Add\"></a>Add</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Add content to XML</span><br><span class=\"line\">@Test</span><br><span class=\"line\">public void add() throws DocumentException, IOException &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSAXReader reader = new SAXReader();</span><br><span class=\"line\">\tDocument document = reader.read(&quot;src/book.xml&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tElement book = document.getRootElement().element(&quot;book&quot;);</span><br><span class=\"line\">\tbook.addElement(&quot;price&quot;).setText(&quot;199.0&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tOutputFormat format = OutputFormat.createPrettyPrint();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tXMLWriter writer = new XMLWriter(new FileWriter(&quot;src/book.xml&quot;),format);</span><br><span class=\"line\">\twriter.write(document);</span><br><span class=\"line\">\twriter.close();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// Add content to XML in specific position</span><br><span class=\"line\">@Test</span><br><span class=\"line\">public void add2() throws DocumentException, IOException &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSAXReader reader = new SAXReader();</span><br><span class=\"line\">\tDocument document = reader.read(&quot;src/book.xml&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tElement book = document.getRootElement().element(&quot;book&quot;);</span><br><span class=\"line\">\tList list = book.elements(); // [book, name, price]</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tElement author = DocumentHelper.createElement(&quot;author&quot;);</span><br><span class=\"line\">\tauthor.setText(&quot;Ryan&quot;);</span><br><span class=\"line\">\tlist.add(1, author);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tOutputFormat format = OutputFormat.createPrettyPrint();</span><br><span class=\"line\">\tXMLWriter writer = new XMLWriter(new FileWriter(&quot;src/book.xml&quot;),format);</span><br><span class=\"line\">\twriter.write(document);</span><br><span class=\"line\">\twriter.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Update\"><a href=\"#Update\" class=\"headerlink\" title=\"Update\"></a>Update</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Test</span><br><span class=\"line\">public void update() throws DocumentException, IOException &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSAXReader reader = new SAXReader();</span><br><span class=\"line\">\tDocument document = reader.read(&quot;src/book.xml&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tElement author = document.getRootElement().element(&quot;book&quot;).element(&quot;author&quot;);</span><br><span class=\"line\">\tauthor.setText(&quot;Ryan Luo&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tOutputFormat format = OutputFormat.createPrettyPrint();</span><br><span class=\"line\">\tXMLWriter writer = new XMLWriter(new FileWriter(&quot;src/book.xml&quot;),format);</span><br><span class=\"line\">\twriter.write(document);</span><br><span class=\"line\">\twriter.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Delete\"><a href=\"#Delete\" class=\"headerlink\" title=\"Delete\"></a>Delete</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Test</span><br><span class=\"line\">public void delete() throws DocumentException, IOException &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSAXReader reader = new SAXReader();</span><br><span class=\"line\">\tDocument document = reader.read(&quot;src/book.xml&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tElement book = document.getRootElement().element(&quot;book&quot;);</span><br><span class=\"line\">\tList list = book.elements(); // [book, name, price]</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tlist.remove(4);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tOutputFormat format = OutputFormat.createPrettyPrint();</span><br><span class=\"line\">\tXMLWriter writer = new XMLWriter(new FileWriter(&quot;src/book.xml&quot;),format);</span><br><span class=\"line\">\twriter.write(document);</span><br><span class=\"line\">\twriter.close();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@Test</span><br><span class=\"line\">public void delete2() throws DocumentException, IOException &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSAXReader reader = new SAXReader();</span><br><span class=\"line\">\tDocument document = reader.read(&quot;src/book.xml&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tElement author = document.getRootElement().element(&quot;book&quot;).element(&quot;author&quot;);</span><br><span class=\"line\">\tauthor.getParent().remove(author);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tOutputFormat format = OutputFormat.createPrettyPrint();</span><br><span class=\"line\">\tXMLWriter writer = new XMLWriter(new FileWriter(&quot;src/book.xml&quot;),format);</span><br><span class=\"line\">\twriter.write(document);</span><br><span class=\"line\">\twriter.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"using-Xpath\"><a href=\"#using-Xpath\" class=\"headerlink\" title=\"using Xpath\"></a>using Xpath</h1><h2 id=\"Read-1\"><a href=\"#Read-1\" class=\"headerlink\" title=\"Read\"></a>Read</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Test</span><br><span class=\"line\">public void getByXPath() throws DocumentException, IOException &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSAXReader reader = new SAXReader();</span><br><span class=\"line\">\tDocument document = reader.read(&quot;src/book.xml&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tString author = document.selectSingleNode(&quot;//author&quot;).getText();</span><br><span class=\"line\">\tSystem.out.println(author);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Example-login\"><a href=\"#Example-login\" class=\"headerlink\" title=\"Example: login\"></a>Example: login</h2><h3 id=\"XML-sample-1\"><a href=\"#XML-sample-1\" class=\"headerlink\" title=\"XML sample\"></a>XML sample</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;users&gt; </span><br><span class=\"line\">  &lt;user id=&quot;1&quot; username=&quot;ryan&quot; password=&quot;ryan&quot;/&gt;</span><br><span class=\"line\">  &lt;user id=&quot;2&quot; username=&quot;peter&quot; password=&quot;peter&quot;/&gt;</span><br><span class=\"line\">  &lt;user id=&quot;3&quot; username=&quot;melvin&quot; password=&quot;melvin&quot;/&gt; </span><br><span class=\"line\">&lt;/users&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Authorization\"><a href=\"#Authorization\" class=\"headerlink\" title=\"Authorization\"></a>Authorization</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Test</span><br><span class=\"line\">public void verify() throws DocumentException, IOException &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tString username=&quot;ryan&quot;;</span><br><span class=\"line\">\tString password=&quot;ryan&quot;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSAXReader reader = new SAXReader();</span><br><span class=\"line\">\tDocument document = reader.read(&quot;src/users.xml&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tString xPath=&quot;//user[@username=&apos;&quot;+username+&quot;&apos; and @password=&apos;&quot;+password+&quot;&apos;]&quot;;</span><br><span class=\"line\">\tNode user = document.selectSingleNode(xPath);</span><br><span class=\"line\">\tif(user==null) &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Invalid credential..&quot;);</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;Successfully login..&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Notes_LinuxShellScriptsCookBook","date":"2018-05-21T15:24:51.000Z","_content":"\nNotes for << Linux Shell Scripts Cook Book>>.\nIt is very helpful for people with zero or little knowledge about Linux Shell Scripts.\n\n<!--more-->\n\n# Shell Something Out\n## introduction\n```bash\n#!/bin/bash\n# indicate using which shell interpretor\n\n# when a shell starts, it initially define various setting from ~/.bashrc or ~/.bash_profile\n```\n## printing in the terminal\n```bash\necho \"hi \\!\"    # ! needs escape, otherwise means not operator\necho -n hello   # escape new line\necho -e \"string contains escape sequence\"   # when using escape sequence\necho -e \"\\e[31m this is red text \\e[0m\"    # \\e[31m - red; \\e[0m - reset\n# reset = 0, black = 40, red = 41, green = 42, yellow = 43, blue = 44, magenta = 45, cyan = 46, and white=47\n\nprintf \"%-5s %-10s %-4.2f \\n\" 11 ryan 99.88888\n# printf without newline\n# %-5s: string substitution + left alignment + width 5\n# %-4.2f: float + 2 decimal\n```\n## variable and environment variable\n```bash\nenv # view all the environment variables relative to a terminal\ncat /proc/$PID/environ | tr '\\0' '\\n'\n# environment variable for that process\n# trade to get each variable one line\n\npgrep <program>\n\n# equality vs assignment\nvar = value\nvar=value\n\n# PATH is defined in /etc/environment or /etc/profile or ~/.bashrc\n# store a list of paths where to search for executables, libraries\nexport PATH=$PATH:$NEW_PATH\n\n# get length of variable\nLENGTH=${#VAR}\n\n# identify current shell\necho $SHELL\necho $0\n\n# UID value of root is 0\necho $UID \n```\n## math\n```bash\nn=10\nlet result=n+10\nlet n++\nlet n+=6\n\nresult=$[n+2]\nresult=$[$n+2]\n\nresult=$((n+5))\n\nresult=`expr 4+3`\nresult=$(expr n+5)\n\n# bc for advanced\necho \"4*0.53\" | bc\necho \"scale=2; 3/8\" | bc    # semicolon as a delimiter\n\n# base convention\nn=100\necho \"obase=2; $n\" | bc # 1100100\necho \"obase=10;ibase=2; $n\" | bc # 4\necho \"sqrt(100)\" | bc\necho \"10^10\" | bc\n```\n## file description and redirection\n```bash\n# 0-stdin, 1-stdout, 2-stderr\n# run echo $? immediately after the command execution to print the exit status\n# 0 means successful completion\n\ncat a* 2>err.txt    # 2 stands for stderr. so error will be redirect to err.txt\ncat a* | tee out.txt | cat -n\n# 1. get 2 stderr which show up and 2 stdout which go to next level \n# 2. tee will get 2 stdout into both out.txt and pipeline\n# 3. cat get stdin and add line number\n```\n## arrays and associative arrays\n```bash\narray_var[0]='test1'\narray_var[1]='test2'\necho ${array_var[0]}\necho ${array_var[*]}\necho ${array_var[@]}\necho ${#array_var[@]}   #2\n\n# associate array\ndeclare -A ass_array\nass_array[apple]=100\n\n# list array indexes\necho ${!array_var[*]}\n```\n## visiting aliases\n```bash\nalias install='sudo apt-get install'\ninstall docker # = sudo apt-get install docker\n```\n## grabbing info about the terminal\n```bash\ntput cols   # get width of terminal\ntput lines  # get height of terminal\ntput cup 100 100\ntput setb n  # 0-7 background color, 7-grey\ntput setf n  # 0-7 text color, 0-black\ntput bold\ntput smul\ntput rmul   # underline\n\n# hide password\necho -n \"Enter password: \"\nstty -echo\nread password\nstty echo\necho\necho Password read.\n```\n## dates and delays\n```bash\ndate +%s    # epoch time\ndate \"+%d %B %Y\" # 16 May 2018\n\n# get time take for a program\nstart=`date +%s`\n...\nend=`date +%s`\nlet time_taken=end-start\n```\n- weekday:  %a Sat; %A Saturday\n- Month:    %b Nov; %B November\n- Day:      %d\n- Date:     %D 10/20/99\n- Year:     %y 10; %Y 2010\n- Hour:     %I or %H    \n- Minute:   %M\n- Second:   %S\n- Epoch:    %s\n\n```bash\n# delay scripts\necho -n Count:\ntput sc     # tput sc to store the cursor position\ncount=0\nwhile true;\ndo\n    if [ $count -lt 40 ]; then\n        let count++\n        sleep 1;\n        tput rc     # tput rc to restore the cursor position\n        tput ed     # clean existed number\n        echo -n $count\n    else\n        exit 0\n    fi\ndone\n```\n\n## debugging the script\n```bash\nbash -x scripts.sh\n# in scripts, using set -x and set +x to debug specific portion\n# set -x : display arguments and commands\n# set +x : disable debugging\n# set -v : display input\n# set +v : disable print input\n\n## DEBUG\n#!/bin/bash\nfunction DEBUG()\n{\n        [ \"$_DEBUG\" == \"on\" ] && $@ || :\n}\n\nfor i in {1..10}\ndo\n        DEBUG echo $i\ndone\n\n# #!/bin/bash -xv : enable debugging\n```\n## function and arguments\n```bash\n# function can return default 0 or any one argument if success\n# check if a command terminated successfully\n$CMD\nif [ $? -eq 0 ];\nthen\n    echo successfully \nelse\n    echo unsuccessfully\nfi\n```\n## reading the output of a sequence of commands\n```bash\n# add line number\nls | cat -n > out.txt\n\n# a subshell can be defined using () operation\n# always quote them in double quotes to preserve the space and newline character\nout=\"$(cat test.txt)\"\n```\n## reading n characters without pressing the return key\n```bash\nread -n 2 var # read 2 chars from input\nread -s password # read password in nonechoed mode\nread -p \" Enter : \" var # display a message\nread -t 2 var # read input within 2 sec\nread -d \":\" var # use delimiter to end input. hi:\n```\n## running a command until it succeeds\n```bash\nrepeat(){ while :; do $@ && return; sleep 30; done }\nrepeat wget -c url\n```\n## field separations and iterators\n```bash\n# IFS internal field separator\ndata_set1=\"1 2 3 4 5\"\nfor data in data_set1;\ndo\n    echo $data\ndone\n\ndata_set1=\"1;2;3;4;5\"\nIFS=\";\" # so that system how to delimite data\nfor data in data_set1;\ndo\n    echo $data\ndone\n\n# for\nfor var in vars; # for i in {1..10}\ndo\n    echo $var\ndone\n\n# while\nwhile condition\ndo \ndone\n\n# until\nuntil [ $x -eq 9 ] # once meet, loop ends\ndo\ndone\n```\n## comparisons and tests\n```bash\nif condition;\nthen\nfi\n\nif condition;\nthen\nelse if condition; \nthen\nelse\nfi\n\n# logical operators\n[ condition ] && action; # action if condition true\n[ condition ] || action; # action if condition fasle\n\n# at least one space in []\n[ $var -eq 0 ]\n[ $var -nq 0 ]  # !=\n# -gt, -ls, -ge >=, -le <=\n[ $var -ne 0 -a $var2 -ne 0 ] # -a means and\n[ $var -ne 0 -o $var2 -ne 0 ] # -o means or\n\n[ -f $file ] # true if holds a file path or filename\n[ -x $file ] # true if file is executable\n[ -w $file ] # true if file is writable\n[ -r $file ] # true if file is readable\n[ -d $file ] # true if it is a directory\n[ -e $file ] # true if it is existed file\n\n# file exists sample\nfpath=\"/etc/passwd\"\nif [ -e $fpath ]; then\n    echo file exists.\nelse\n    echo file not exists.\nfi\n\n# string comparison, use double square brackets, single brackets sometimes errors\n[[ $str1 = $str2 ]] # space needed beside =\n[[ -z $str ]] # true if str hols an empty string, str=\"\"\n[[ -n $str ]] # true if str hols an non-empty string, str=\"xx\"\n\n```\n# Have a Good Command\n\n## concatenating with cat\n```bash\n# cat can read both file and stdin\ncat -T filename # display tab as ^I\ncat -n filename # add line number, -b kill blank line\n```\n## record and play back of terminal sessions\n```bash\n# -t dump timing data to stderr\nscript -t 2>timing.log -a output.session\n# ...\nexit\n\nscriptreplay timing.log output.session\n```\n## find file and file listing\n```bash\nfind . -print   # delimit by \\n\n# ./1.txt\n# ./2.txt\nfind . -print0  # delimit by \\n\n# ./1.txt./2.txt\nfind . -name \"*.txt\" -print\nfind . \\( -name \"*.txt\" -o -name \"*.pdf\" \\) -print  # (*.txt or *.pdf)\nfind  . -path \"*/slynux/*\" -print\n\n# regex = regular expession, -i ignore case\nfind . -regex \".*\\(\\.py\\|\\.txt\\)\" # \".*.py|.txt\"\n\n# exclude !\nfind . ! -name \"*.txt\" -print\n\n# level control\nfind . -maxdepth 2 ! -name \"*.txt\" -print # ./xxx/xxx\nfind . -mindepth 2 ! -name \"*.txt\" -print\n\n# every object as a file. files: regular file, directory, character devices, block devices, symlinks, hardlinks, sockets, FIFO\nfind . -type d -print   \n# d-dir, f-regular file, l-symbolic link, c-character special device, b-block device,s-socket, p-FIFO\n\n# file times\n# -atime : access time\n# -mtime : modification time = content\n# -ctime : change time = metadata (such as permissions or ownership)\n# time in minutes ( -amin, -mmin, -cmin)\nfind . -type f -atime -7 -print # within last 7 days\nfind . -type f -atime 7 -print # exactly 7 days old\nfind . -type f -atime +7 -print # older than 7 days\n\n# find files that newer than file.txt\nfind . -type f -newer file.txt -print\n\n# file size over 2k, lt and eq; (M or G)\nfind . -type f -size +2k # -2k, 2k\n\n# delete all files with .log\nfind . -type f -name \"*.log\" -delete\n\n# based on permission, -perm\nfind . -type f -name \"*.php\" ! -perm 644 -print\n\n# based on ownership, -user\nfind . -type f -user ryan -print\n\n# using with exec \\;\nfind . -type f -user root -exec chown ryan {} \\;\n# {} here will be replaced by the find result.\n\n# exclude file\nfind . -name \".git\" -prune\n\n```\n## xargs\n```bash\n# space is default delimiter, change to X \necho \"splitXsplitXsplitXsplit\" | xargs -d X -n 2\n# split split\n# split split\n\necho \"splitXsplitXsplitXsplit\" | xargs -d X -n 2 ./show.sh\n# show : split split\n# show : split split\n   \n# use -I to specify a replacament string when xargs expands\ncat args.txt | xargs -I {} ./show.sh {} -l\n# each argument will be pass to replace {}\n\nfind . -type f -name \"*.txt\" -print0 | xargs -0 rm -f\n# -print0 give one line output; -0 : delimiter is \\0\n\ncat files.txt | ( while read arg; do cat $arg; done )\n\n```\n## translat with tr\n```bash\n# only take stdin as input\ntr [options] set1 set2\n\n# uppler to lower\necho \"HELLO WHO IS THIS\" | tr 'A-Z' 'a-z'\n\n# delete\ncat file.txt | tr -d '<SET>'\ncat file.txt | tr -d -c '0-9 \\n' # complement; keep only 0-9, space and tab.\ncat file.txt | tr -s ' ' # -s : squeeze repeating characters\n\n# $[ operation ] performs a numeric operation\n\n# character class\n## alnum: Alphanumeric characters\n## alpha: Alphabetic characters\n## cntrl: Control (nonprinting) characters\n## digit: Numeric characters\n## graph: Graphic characters\n## lower: Lowercase alphabetic characters\n## print: Printable characters\n## punct: Punctuation characters\n## space: Whitespace characters\n## upper: Uppercase characters\n## xdigit: Hexadecimal characters\ntr '[:lower:]' '[:upper:]'\n```\n## checksum and verification\n```bash\nmd5sum filename\nmd5deep -rl directory_path > directory.md5 # -l : using relative path\n\nfind . -type f -print0 | xargs -0 md5sum > dir.md5\nmd5sum -c dir.md5\n```\n## cryptographic tool and hash\n```bash\ncrypt PASSPHRASE <input_file >encrypted_file\ncrypt PASSPHRASE -d <encrypted_file >output_file\n\ngpg -c filename # encrypt\ngpg filename.gpg # decrypt\n\nbase64 filename > outputfile\nbase64 -d file > outputfile\n\n# md5sum and sha1sum to verify password\n# store password in hash format\n# when user provide password, they convert to hash and compare\n\nopenssl passwd -1 -salt SALT_STRING PASSWORD\n\n```\n## sort unique and duplicate\n```bash\nsort file1.txt file2.txt > sorted.txt\nsort -n file.txt    # numerical sort, -r reverse order, -M by months\nsort -m sort1 sort2 # merge two sorted files\nsort file1 file2 | uniq # find the unique lines\n# check if a file is sorted\nsort -C filename    # return 0 -> sorted\n\nsort -nrk 1 data.txt    # -n numeric, -r reverse, -k specified the key, column 1\nsort -nk 2,3 data.txt   # 1010dddddee, 01 is the key\n# -b ignore leading blank lines\n# -d sort in the dictionary order\n\nsort unsorted.txt | uniq -u # show only unique lines\nsort unsorted.txt | uniq -c # count how many times of each lines\nsort unsorted.txt | uniq -d # show only duplicate lines\nsort data.txt | uniq -s 2 -w 2 # -s 2 : ignore fisrt 2 char; -w 2 : max compare chars\n# u:01:bash - only 01 will be compared\n\n# xargs use space as default delimiter, if stdin contains space, need to use \\0\nuniq -z file.txt | xargs -0 rm\n# -z zero-byte terminated output, -0 use \\0 as delimiter\n```\n## temp file naming and random number\n```bash\nfilename=`mktemp`\ndirname=`mktemp -d`\ntmpfile=`mktemp -u` # generate name without creating file\nmktemp test.xxx # /home/ryan/test.NpW\n\n```\n## split files and data\n```bash\nsplit [COMMAND_ARGS] PREFIX\nsplit -b 10k data.file -d -a 4 split_file # -d numeric suffixes, -a length\n# split_file0001 split_file0002\n\nsplit -l 10 data.file   # 10 lines for each file\n\n# csplit : content based split\ncsplit server.log /SERVER/ -n 2 -s {*} -f server -b \"%02d.log\" ; rm\nserver00.log\n# /SERVER/ : SERVER is the string to split\n# -n 2 : the number of digit as suffix of file name\n# -f server : prefix of filename, server01\n# -b \"%02d.log\" : suffix format, filename = prefix + suffix, server01.log\n# -s : silent without printing other messages\n# server00.log will be beginning to the first SERVER which is empty\n\n```\n## slice filename based on extension\n```bash\n# ${VAR%.*} : remove the part that matches .*\nfile=\"sample.jpg\"\nname=${file%.*} # sample\nextension=${file#*.} # jpg, prefer ##\n\n# % and %%, similar to # and ##\nfile=\"ryan.nus.sg.log\"\nname=${file%.*} # ryan.nus.sg\nname=${file%%.*} # ryan\n\n```\n## rename and move files in bulk\n```bash\n\ncount=1\nfor img in `find . -type f -iname \"*.jpg\" -maxdepth 1`\ndo\n    new=image-$count.${img##*.}\n    mv $img $new\n    let count++\ndone\n\nrename *.JPG *.jpg\nrename 's/ /_/g' *  # replace space by _\nrename 'y/A-Z/a-z/' * # upper to lower\n```\n## spell check and dictionary manipulation\n```bash\n\n```\n## automate interactive input\n```bash\necho -e \"1\\nhello\\n\" | ./interactive.sh\n./interactive.sh < input.data\n\n# expect\n./automate_expect.sh\n#Filename: automate_expect.sh\nspawn ./interactive .sh # specifies which commands are to be automated\nexpect \"Enter number:\"\nsend \"1\\n\"\nexpect \"Enter name:\"\nsend \"hello\\n\"\nexpect eof  # end of the command interaction\n\n```\n## make commands using parallel processes\n```bash\nPIDs=()\nfor file in File1.iso File2.iso\ndo\nmd5sum $file &\nPIDs+=(\"$!\")\ndone\nwait ${PIDs[@]}\n```\n\n# File In File Out\n\n## generate files of any size\n```bash\ndd if=/dev/zero of=junk.data bs=1M count=1\n# bs block size, count - number of blocks\n# /dev/zero is a character special device, which infinitely returns the zero byte (\\0).\n# also used to check the speed of memory operation\n```\n## itersection and set difference (A-B)\n```bash\ncomm A.txt B.txt\n# 1st column - only in A\n# 2nd column - only in B\n# 3rd column - common lines. each column are delimited by \\t\n\ncomm A.txt B.txt -1 -2  # remove 1 and 2, so show intersaction\ncomm A.txt B.txt -3 | sed 's/^\\t//'\n# s-substitute, to remove every \\t\n# /^ - start of line marker; // - no char, replacement string\n```\n## find and delete duplicate file\n```bash\n# remove_duplicates.sh\n# -S : sorted by file size\n# --time-style=long-iso : print date in ISO format\n# getline : get the first line and dump it\nls -lS --time-style=long-iso | awk 'BEGIN {\n    getline; getline;\n    name1=$8; size=$5\n}\n{\n    name2=$8;\n    if (size==$5) \n    {\n        \"md5sum \"name1 | getline; csum1=$1;\n        \"md5sum \"name2 | getline; csum2=$1;\n        if ( csum1==csum2 )\n        {\n            print name1; print name2\n        }\n    };\n    size=$5; name1=name2;\n}' | sort -u > duplicate_files\ncat duplicate_files | xargs -I {} md5sum {} | sort | uniq -w 32 |\nawk '{ print \"^\"$2\"$\" }' | sort -u > duplicate_sample\necho Removing..\ncomm duplicate_files duplicate_sample -2 -3 | tee /dev/stderr |\nxargs rm\necho Removed duplicates files successfully.\n\n```\n## file permission, ownership and sticky bit\n```bash\n\n# - regular file,d dir，c char device，b block device,l symbolic link,s socket,p pipe\n\n# u – specifies user permissions\n# g – specifies group permissions\n# o – specifies others permissions\nchmod a+x filename # all\nchown user.group filename\nchmod 777 . -R  # -R apply recursively\n```\n## make file immutable\n```bash\nchattr +i file  # cannot remove\nchattr -i file  # remove immutable\n```\n## generate blank files in bulk\n```bash\ntouch filename # create new file or change timestamp\n# -a modify access time, -m modification time\ntouch -d \"Jan 20 2018\" filename # change date\n```\n## find symbolic links and their targets\n```bash\n# create symbolic link\nln -s target sym_link_name\n\n# print symbolic link\nls -l | grep \"^l\"   # ^l means starting with l\nfind . -type l -print\n\nreadlink link_name\n```\n## enumerate file type statistics\n```bash\n# type of file\nfile filename   # -b to exclude the filename in the output\n\n# Filename: filestat.sh\nif [ $# -ne 1 ];\nthen\necho \"Usage is $0 basepath\";\nexit\nfi\npath=$1\ndeclare -A statarray;\nwhile read line;\ndo\nftype=`file -b \"$line\" | cut -d, -f1`   # use , delimiter and use only 1st field\nlet statarray[\"$ftype\"]++;\ndone < <(find $path -type f -print)\necho ============ File types and counts =============\nfor ftype in \"${!statarray[@]}\";    # list of array indexes\ndo\necho $ftype : ${statarray[\"$ftype\"]} \ndone\n\n./filetype.sh /home/slynux/programs\n\nwhile read line;\ndo something\ndone < filename\n# <(find $path -type f -print) is equivalent to a filename\n# the first < is for input redirection and the second < is for converting the subprocess output to a filename\n# space there to avoid << operator\n# bash 3.x : done <<< \"`find $path -type f -print`\"\n\n```\n## use loopback files\n```bash\n\n```\n## create ISO file and hybrid ISO\n```bash\ndd if=/dev/cdrom of=image.iso\nmkisofs -V \"Label\" -o image.iso source_dir/\n```\n## find the difference between files, patching\n```bash\ndiff -u version1.txt version2.txt > version.patch\npatch -p1 version1.txt < version.patch # get version2\npatch -p1 version2.txt < version.patch # get version1\n\ndiff -Naur directory1 directory2\n# -N treat absent file as empty, -a consider all files as txt, -u unified\n```\n## head and tail\n```bash\nhead -n 4 file  # first 4\nhead -n -4 file # exclude last 4\n\ntail -n 5 file # last 5\ntail -n +6 file # exclude first 5\n\ntail -f growing_file    # follow\ntail -f file --pid $PID # tail until PID finish\n```\n## list only directory\n```bash\nls -d */\nls -F | grep \"/$\"\nls -l | grep \"^d\"\nfind . -type d -maxdepth 1 -print\n\n```\n## fast command line navigation, pushd and popd\n```bash\npushd home/     # /home /\npushd ../lib    # /lib /home /\npushd ../var    # /var /lib /home /\n                #   0    1    2   3\npushd +2        # /home / /var /lib \ndirs\npopd            # / /var /lib\npopd +2         # / /var\n\ncd -        # switch back\n```\n## count number of lines, words and chars\n```bash\nwc -l file  # number of line\nwc -w file  # number of word\nwc -c file\nwc file -L  # get length of longest line\n```\n## print the directory tree\n```bash\ntree . -P \"*.sh\"    # highlight the files matching the pattern\ntree . -I \"*.sh\"    # exclude pattern\ntree -h # size\ntree . -H http://localhost -o out.html\n```\n\n# Texting and Driving\n\n## regular expression\n```bash\n# match all words\n# ? zero or one occurrence of the previous expression\n( ?[a-zA-Z]+ ?)\n\n# ip\n[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\n\n# ^     start of line\n# $     end of line\n# .     any one char\n# []    any one chars in [chars]\n# [^]   any one chars except [chars]\n# [-]   any chars within the range [1-5]\n# ?     the preceding item must use one or 0 times, colou?r = color or colour\n# +     the preceding item must use one or more times, 90+ = 900 or 90000\n# *     the preceding item must use 0 or more times, 90* = 90, 900\n# ()    treats the terms as one entity, ma(tri)?x = max or matrix\n# {n}   the preceding item must use n times, [0-9]{3} = [0-9][0-9][0-9]\n# {n,}  specify minimum times that preceding item use, [0-9]{2,} = any 2 digits or longer\n# {n,m} [0-9]{2,5} = any number that has 2 digits to 5 digits\n# |     alternation, 1 | 2 = 1 or 2\n# \\     escape, a\\.b = a.b\n\n```\n## search text inside a file\n```bash\ngrep \"pattern\" filename --color=auto\ngrep -E \"[a-z]+\" filename # -E extended reg ex\n# -o ouput only match portion\n# -v print all the lines except the matched line\n# -c count number of matched line\n# -e count number of matched item\n# -i ignore case\n\ngrep \"pattern\" -n filename # print line number\n\necho gnu is not unix | grep -b -o \"not\" # 7:not\ngrep -l linux file1 file2 # list which file contain, -L for non-matching\ngrep \"pattern\" . -R -n  # common\n\n# pattern file\ngrep -f pat_file\n\ngrep \"main()\" . -r --include *.{c,cpp}  #  search *.c and *.ccp\ngrep \"main()\" . -r --exclude *.{c,cpp}  #  not search *.c and *.ccp\ngrep \"main()\" . -r --exclude-dir ./tmp  # exclude dir\n\n# xargs\ngrep \"test\" file* -lZ | xargs -0 rm # -Z and -0\n# -q : quite, return status without showing\n\n# Printing lines before and after text matches\n# print three lines after a match, -A; -b lines before; -c both\nseq 10 | grep 5 -A 3    #5\\n6\\n7\\n8\n\n```\n## cut a file by column\n```bash\ncut -f 2,3 filename # show 2nd and 3rd column, --complement for reverse\n# -d \":\" to indicate delimiter\n\ncut -c 1-5 filename    # 1st to 5th chars\ncut -c -5 filename    # 1st 5 chars\ncut -c 2- filename    # from 2nd to the end\n\ncut filename -c 1-3,6-9 --output-delimiter \",\"  # abc,fghi\n\n```\n## sed for text replacement\n```bash\nsed 's/pattern/replace_string/' file    # -i save changes\nsed 's/pattern/replace_string/' file > newfile\n\nsed 's/pattern/replace_string/g' file   # substitute every occurrence\necho thisthisthisthis | sed 's/this/THIS/2g' # thisTHISTHISTHIS\n# / can be | or :\n\n# remove blank line\nsed '/^$/d' filename    # d - delete\n\nsed -i .bak 's/abc/def/' filename # change original file as .bak\n\n# Matched string notation (&)\necho this is an example | sed 's/\\w\\+/[&]/g' # \\w\\+ matches every word. & refer to each of words\n# [this] [is] [an] [example]\n\n# Substring match notation (\\1)\necho seven EIGHT | sed 's/\\([a-z]\\+\\) \\([A-Z]\\+\\)/\\2 \\1/'\n# \\([a-z]\\+\\) match 1st word and \\1 refer to \n\n# multiple action\n$ echo abc | sed -e 's/a/A/' -e 's/c/C/'    #AbC\n```\n## awk for text processing\n```bash\n# for each input, {statement} will execute.\nawk 'BEGIN { statements } { statements } END { end statements }'\n\n# NR : number of record. each input line as one record\n# NF : number of field. delimiter by space\n# $0 : text content of current line\n# $1, $2.. 1st field, 2nd field\n\n# like java, string is within \"\". \nawk '{ print \"Line no:\"NR\",No of fields:\"NF, \"$0=\"$0, \"$1=\"$1}'\n\nawk '{ print $3,$2 }' file\nawk 'END{ print NR }' file  # get number of lines\n\nawk '{ print v1,v2 }' v1=$var1 v2=$var2 filename\n\n# getline var\n\nawk 'NR < 5' # first four lines\nawk 'NR==1,NR==4' #First four lines\nawk '/linux/' # Lines containing the pattern\nawk '!/linux/' # Lines not containing the pattern\nawk -F : '{ print $NF }' /etc/passwd   # -F delimiter\n\n# awk built in function\n# length(string): string length.\n# index(string, search_string): position at which search_string is found\n# split(string, array, delimiter): stores strings list generated by delimiter in the array\n# substr(string, start-position, end-position): \n# sub(regex, replacement_str, string): replaces the first occurring match\n# gsub(regex, replacment_str, string): replaces every regular expression match.\n# match(regex, string): non-zero output if a match is found, otherwise zero. \n# with match(). RSTART contains the position the match starts. RLENGTH contains match length\n```\n## find frequency of words\n```bash\n\n```\n## compress and decompress javascript\n```bash\ncat sample.js | \\\ntr -d '\\n\\t' | \\    # Removes the \\n and \\t characters\ntr -s ' ' | \\       # squeeze repeating space\nsed 's:/\\*.*\\*/::g' | \\ # Removes comments, use : as delimiter instead of /, .* match all text\nsed 's/ \\?\\([{}();,:]\\) \\?/\\1/g'    # Removes all the spaces before and after the characters. \n\n# decompression\n# s/;/;\\n/g replaces ; with ;\\n\n# s/{/{\\n\\n/g replaces { with {\\n\\n\n# s/}/\\n\\n}/g replaces } with \\n\\n}\n```\n## merge files as columns\n```bash\npaste file1 file2 -d \",\"\n# 1, xxx\n# 2, xxxxx\n```\n## print the nth word or column\n```bash\n# print the fifth column\nawk '{ print $5 }' filename\n\nls -l | awk '{ print $1 \" : \" $8 }' # get 1st and 8th column\n```\n## print text between line number or pattern\n```bash\nawk 'NR==M, NR==N' filename\nawk '/start_pattern/, /end _pattern/' filename\n```\n## print line reversely\n```bash\nseq 9 | \\\nawk '{ lifo[NR]=$0 }\nEND{ for(lno=NR;lno>-1;lno--){ print lifo[lno]; }\n}'\n```\n## parse email and URL\n```bash\negrep -o '[A-Za-z0-9._]+@[A-Za-z0-9.]+\\.[a-zA-Z]{2,4}' filename\negrep -o \"http://[a-zA-Z0-9.]+\\.[a-zA-Z]{2,3}\" filename\n```\n## remove a sentence containing a word\n```bash\nsed 's/ [^.]*mobile phones[^.]*\\.//g' sentence.txt\n```\n## replace a pattern with text in one directory\n```bash\nfind . -name *.cpp -print0 | xargs -I{} -0 sed -i 's/Copyright/Copyleft/g' {}\nfind . -name *.cpp -exec sed -i 's/Copyright/Copyleft/g' \\{\\} \\;\n```\n## text slicing and parameter operations\n```bash\nvar=\"This is a line of text\"\necho ${var/line/REPLACED_text}\n\nstring=\"abcdefghijklmnopqrstuvwxyz\"\necho ${string:4}    # efghijklmnopqrstuvwxyz\necho ${string:4:8}  # efghijkl\necho ${string:(-1)} # z\n$ echo ${string:(-2):2} # yz\n```\n\n# Tangled Web\n## download from web page\n```bash\nwget URL\nwget ftp_link -O dl_file.img -o log\nwget -t 5 URL   # try 5 times\nwget -t 0 URL   # try infinitely\nwget --limit-rate 20k URL   # limit speed\nwget -Q 100m URL    # --quota, total download size\nwget -c URL # resume downloading\n\n# download the complete website by recursively collecting all the URL\nwget --mirror --convert-links exampledomain.com\nwget -r -N -l -k DEPTH URL\n# -l : depth, along with -r. -N enable time stamping. \n# -k or --convert-links : convert the links to other pages\n\nwget --user username --password pass URL\nwget --user username --ask-password URL\n```\n## download as plain text\n```bash\nlynx URL -dump > webpage_as_text.txt\n```\n## cURL\n```bash\ncurl URL -o index.html --progress   # show progress\ncurl URL/file -C offset # Continuing and resuming\n\n# Setting the referer string with cURL\n# click link_1 in page_a, we access to page_b. Without link_1, we are not able to access page_b.\ncurl --referer link_1 page_b_URL \n\n# Cookies with cURL\ncurl URL --cookie \"user=ryan;pass=hi\"\ncurl URL --cookie-jar cookie_file   # specify a file to which the cookies encountered are to be stored\n\ncurl URL --limit-rate 20k\ncurl URL --max-filesize bytes   \n# return a non-zero exit code if the file size exceeds. zero if it succeeds\n\ncurl -u user:pass URL\ncurl -u user URL\n\n# -I or -head : dump only the HTTP headers, without downloading the remote file.\ncurl -I URL\n```\n## access Gmail\n```bash\n#Desc: Fetch gmail tool\nusername='PUT_USERNAME_HERE'\npassword='PUT_PASSWORD_HERE'\nSHOW_COUNT=5 # No of recent unread mails to be shown\necho\ncurl -u $username:$password --silent \"https://mail.google.com/mail/feed/atom\" | \\\ntr -d '\\n' | sed 's:</entry>:\\n:g' |\\\nsed -n 's/.*<title>\\(.*\\)<\\/title.*<author><name>\\([^<]*\\)<\\/name><email>\\([^<]*\\).*/From: \\2 [\\3] \\nSubject: \\1\\n/p' | \\\nhead -n $(( $SHOW_COUNT * 3 ))\n# tr -d '\\n' removes the newline character\n# sed 's:</entry>:\\n:g' replaces every </entry> element with a newline\n```\n## parsing data from website\n```bash\n\n```\n## image crawler and downloader\n```bash\n#Filename: img_downloader.sh\nif [ $# -ne 3 ];\nthen\n    echo \"Usage: $0 URL -d DIRECTORY\"\n    exit -1\nfi\n\n# shift is used to shift arguments to the left\n# $1 will take the next argument value\nfor i in {1..4}\ndo\n    case $1 in\n        -d) shift; directory=$1; shift ;;\n        *) url=${url:-$1}; shift;;\n    esac\ndone\nmkdir -p $directory;\nbaseurl=$(echo $url | egrep -o \"https?://[a-z.]+\")\necho Downloading $url\ncurl -s $url | egrep -o \"<img src=[^>]*>\" | sed 's/<img src=\\\"\\([^\"]*\\).*/\\1/g' >/tmp/$$.list\nsed -i \"s|^/|$baseurl/|\" /tmp/$$.list\ncd $directory;\n\nwhile read filename;\ndo\n    echo Downloading $filename\n    curl -s -O \"$filename\" --silent\ndone < /tmp/$$.list\n```\n## web photo album generator\n```bash\n#Description: Create a photo album using images in current directory\necho \"Creating album..\"\nmkdir -p thumbs\ncat <<EOF1 > index.html\n<html>\n<head>\n<style>\n    body\n    {\n        width:470px;\n        margin:auto;\n        border: 1px dashed grey;\n        padding:10px;\n    }\n    img\n    {\n        margin:5px;\n        border: 1px solid black;\n    }\n</style>\n</head>\n<body>\n<center><h1> #Album title </h1></center>\n<p>\nEOF1\n\nfor img in *.jpg;\ndo\n    convert \"$img\" -resize \"100x\" \"thumbs/$img\"\n    echo \"<a href=\\\"$img\\\" ><img src=\\\"thumbs/$img\\\" title=\\\"$img\\\" /></a>\" >> index.html\ndone\n\ncat <<EOF2 >> index.html\n</p>\n</body>\n</html>\nEOF2\necho Album generated to index.html\n```\n## twitter command-line client\n```bash\n\n```\n## create a 'define' utility by using web backend\n1. http://www.dictionaryapi.com/register/index.htm\n2. get key\n```bash\n#Desc: A script to fetch definitions from dictionaryapi.com\napikey=YOUR_API_KEY_HERE # fd750d43-a3b8-4f47-8055-e8db4ebfeeed\nif [ $# -ne 2 ];\nthen\necho -e \"Usage: $0 WORD NUMBER\"\nexit -1;\nfi\ncurl --silent http://www.dictionaryapi.com/api/v1/references/learners/xml/$1?key=$apikey | \\\ngrep -o \\<dt\\>.*\\</dt\\> | \\\nsed 's$</*[a-z]*>$$g' | \\\nhead -n $2 | nl\n```\n## find broken links in a website\n```bash\n#Desc: Find broken links in a website\nif [ $# -ne 1 ];\nthen\n    echo -e \"$Usage: $0 URL\\n\"\n    exit 1;\nfi\necho Broken links:\nmkdir /tmp/$$.lynx\ncd /tmp/$$.lynx\nlynx -traversal $1 > /dev/null\ncount=0;\nsort -u reject.dat > links.txt\nwhile read link;\ndo\n    output=`curl -I $link -s | grep \"HTTP/.*OK\"`;\n    if [[ -z $output ]];\n    then\n        echo $link;\n        let count++\n    fi\ndone < links.txt\n[ $count -eq 0 ] && echo No broken links found.\n```\n## track changes to a website\n```bash\n#Desc: Script to track changes to webpage\nif [ $# -ne 1 ];\nthen\n    echo -e \"$Usage: $0 URL\\n\"\n    exit 1;\nfi\nfirst_time=0\n# Not first time\nif [ ! -e \"last.html\" ];\nthen\n    first_time=1\n    # Set it is first time run\nfi\ncurl --silent $1 -o recent.html\nif [ $first_time -ne 1 ];\nthen\n    changes=$(diff -u last.html recent.html)\n    if [ -n \"$changes\" ];\n    then\n        echo -e \"Changes:\\n\"\n        echo \"$changes\"\n    else\n    echo -e \"\\nWebsite has no changes\"\n    fi\nelse\n    echo \"[First run] Archiving..\"\nfi\ncp recent.html last.html\n```\n## post to web page and read response\n```bash\n# POST and read the HTML response\ncurl URL -d \"host=hostname&user=username\"   # -d is the argument used for posting\nwget php_URL --post-data \"host=hostname&user=username\" -O output.html\n```\n\n# Backup Plan\n\n## Archive with tar\n```bash\ntar -cf output.tar [SOURCES]    # -c create file, -f specify filename\ntar -tf archive.tar # list files in an archive\ntar -tvf archive.tar    # -v verbose, print more details\n\ntar -rvf original.tar new_file  # -r append a file into an archive\n\ntar -xf archive.tar # -x for extract\ntar -xf archive.tar -C /path/to/extract # -C to indicate where the files\ntar -xvf file.tar file1 file4   # only extract file1 and file4\n\n# '-' make archive as output\ntar cvf - files/ | ssh a@A \"tar xv -C Documents/\"\n\n# merge multiple tar files with the -A option\ntar -Af file.tar file_be_merged.tar\n\n# -u : append updated files according to timestamp.\ntar -uf archive.tar filea   # when extracting, newer version will be picked up\n\n# Comparing files in the archive and file system\ntar -df archive.tar # -d to print difference\n\n# Deleting files from the archive\ntar -f archive.tar --delete file1 file2\n\n# -a : compress by looking at the extension\ntar -acvf archive.tar.gz filea fileb filec\n\n# Exclude a set of files from archiving\ntar -cf arch.tar * --exclude \"*.txt\"\ntar -cf arch.tar * -X list  # list: file1 file2\n\n# Excluding version control directories\ntar --exclude-vcs -czvvf archive.tar.gz eye_of_gnome_svn\ntar -cf arc.tar * --exclude \"*.txt\" --totals\n```\n## archive with cpio\n```bash\n# store files with attributes such as permissions, ownership\necho file1 file2 file3 | cpio -ov > archive.cpio\ncpio -it < archive.cpio # list files in a cpio archive\ncpio -id < archive.cpio # extract files from the cpio archive\n# -o specifies the output\n# -v is used for printing a list of files archived\n# -i is for specifying the input\n# -t is for listing\n# -d stands for extracting\n\n```\n## compress data with gzip\n```bash\ngzip filename\ngunzip filename.gz\ngzip -l test.txt.gz # list out the properties of a compressed file\ncat file | gzip -c > file.gz    # -c option is used to specify output to stdout\n\n# zip multiple files\nFILE_LIST=\"file1 file2 file3 file4 file5\"\nfor f in $FILE_LIST;\ndo\ntar -rvf archive.tar $f\ndone\ngzip archive.tar\n\n# extract a gzipped tarball\ntar -xavvf archive.tar.gz -C extract_directory\n\n# zcat - reading gzipped files without extracting\nzcat test.gz\n\n# Compression ratio\ngzip -5 test.img    # 1 is the lowest, but fastest\n\n# bzip2 offers more effective compression while taking more time\nbzip2 filename\nbunzip2 filename.bz2\n\ntar -xjvf archive.tar.bz2   # -j denotes that the archive is bzip2\n\n```\n## archive and compress with zip\n```bash\nzip archive_name.zip [SOURCE FILES/DIRS]\nzip -r archive.zip folder1 folder2  # Archive directories and files recursively\nunzip file.zip  # without removing filename.zip\nzip file.zip -u newfile # update files in the archive with newer files\nzip -d arc.zip file.txt # Delete a file from a zipped archive\nunzip -l archive.zip    # list the files in an archive\n```\n## faster archive with pbzip2\n```bash\n# pbzip2 can use multiple cores, hence decreasing overall time\npbzip2 myfile.tar\ntar cf myfile.tar.bz2 --use-compress-prog=pbzip2 dir_to_compress\npbzip2 -dc myfile.tar.bz2 | tar x   # Extracting a pbzip2\n```\n## create filesystem with compression\n```bash\n# squashfs \n```\n## backup snapshots with rsync\n```bash\n\n```\n## version control-based backup with Git\n```bash\n\n## u1 as remote machine; 192.168.1.135\n# Set up and initiate the remote backup directory\nmkdir -p ~/git_repo/demo.git\ncd ~/git_repo/demo.git\ngit init --bare\n\n## base as source host machine\ngit config --global user.name \"ryan\"\ngit config --global user.email luoxu2011@gmail.com\n# source documents in ~/git_demo \ncd ~/git_demo\ngit init\ngit remote add origin ryan@192.168.1.135:~/git_repo/demo.git\ngit add .\ngit commit -m \"data1\"\ngit push origin master\n\ngit log\n# revert back to any previous state or version\ngit checkout COMMIT_ID\n# make this revert permanent\ngit commit -am \"Restore @ $(date) commit ID:xxxxxx\"\n\ngit clone ryan@192.168.1.135:~/git_repo/demo.git\n\n```\n## create entire disk images using fsarciver\n```bash\n\n```\n\n# Old Boy Network\n\n## Setup the network\n```bash\n# manually set the IP address for a network interface\nsudo ifconfig wlan0 xxx.xxx.xx.xx netmask 255.255.252.0\n\n# Printing the list of network interfaces\nifconfig | cut -c-10 | tr -d ' ' | tr -s '\\n'\n# first 10 characters is reserved for network interfaces\n# take the first 10 columns, remove space, squeeze newline\n\n# Displaying IP addresses\nifconfig wlan0 | egrep -o \"inet addr:[^ ]*\" | grep -o \"[0-9.]*\"\n\n# spoof the hardware address at the software level\nifconfig eth0 hw ether 00:1c:bf:87:25:d5\n\ncat /etc/resolv.conf    # nameserver 8.8.8.8\nhost google.com # list out all of the IP attached to the domain name\nnslookup google.com # \n\necho 192.168.0.9 backupserver >> /etc/hosts\nping backupserver # get 192.168.0.9\n\n# Showing routing table information\nroute -n\n\n# set a default gateway\nroute add default gw IP_ADDRESS INTERFACE_NAME\n\n```\n## Ping\n```bash\nping hostname # Round Trip Time (RTT)\nping 192.168.0.1 -c 2 # Limiting the number of packets to be sent\n\n# Return status of the ping command\nping domain -c2\nif [ $? -eq 0 ];\nthen\necho Successful ;\nelse\necho Failure\nfi\n\n# traceroute displays the address of all intermediate gateways\ntraceroute google.com\n```\n\n## list all the machine alive\n```bash\n# check alive host\nfor ip in 192.168.0.{1..255} ;\ndo\n    ping $ip -c 2 &> /dev/null ;  # &> /dev/null : redirect both stderr and stdout\n    if [ $? -eq 0 ];\n    then\n        echo $ip is alive\n    fi\ndone\n\n# Parallel pings : enclose the loop body in ( )&\nfor ip in 192.168.0.{1..255} ;\ndo\n    (\n        ping $ip -c2 &> /dev/null ;\n        if [ $? -eq 0 ];\n        then\n            echo $ip is alive\n        fi\n    )&\ndone\nwait # waits for the time until all the child ( ) subshell processes complete\n```\n## run command on a remote host with SSH\n```bash\n# By default, the SSH server runs at port 22\nssh user@locahost -p 422\n\nCOMMANDS=\"command1; command2; command3\"\n$ ssh user@hostname \"$COMMANDS\"\n\n# collects the uptime of a list of remote hosts\n#Description: Uptime monitor\nIP_LIST=\"192.168.0.1 192.168.0.5 192.168.0.9\"\nUSER=\"test\"\nfor IP in $IP_LIST;\ndo\n    utime=$(ssh ${USER}@${IP} uptime | awk '{ print $3 }' )\n    echo $IP uptime: $utime\ndone\n\n# Redirecting data into stdin of remote host\necho 'text' | ssh user@remote_host 'echo'\nssh user@remote_host 'echo' < file\n\n# Running graphical commands on a remote machine\n\n```\n## transfer files through the network\n```bash\n# FTP can only be used if the FTP server is installed on the remote machine.\n# FTP usually runs on port 21.\nlftp username@ftphost\n\n# To change the directory of a local machine, use lcd\n\n# download a file\nlftp username@ftphost:~> get filename\n\n# To upload a file from the current directory\nlftp username@ftphost:~> put filename\n\n# An lftp session can be terminated by using the quit\n\n# Automated FTP transfer\n# -i option of ftp turns off the interactive session\n# -n option tells ftp to not attempt automatically logging in and use the username and password we supply it.\nHOST='domain.com'\nUSER='foo'\nPASSWD='password'\nftp -i -n $HOST <<EOF   \nuser ${USER} ${PASSWD}\nbinary\ncd /home/slynux\nput testfile.jpg\nget serverfile.jpg\nquit\nEOF\n\n# SFTP requires an OpenSSH server to be installed and running\nsftp user@domainname\nsftp -oPort=422 user@domainname # in case port no is not 22\n\nscp SOURCE DESTINATION\nscp filename user@remotehost:/home/path # -r Recursive copy\n\n```\n## connect to a wireless network\n```bash\n\n```\n## passwordless SSH\n```bash\nssh-keygen -t rsa\nssh USER@REMOTE_HOST \"cat >> ~/.ssh/authorized_keys\" < ~/.ssh/id_rsa.pub\n```\n## port forwarding using SSH\n```bash\n\n```\n## mounte a remote drive at a local mount point\n```bash\n\n```\n## network traffic and port analysis\n```bash\n# list all opened ports on the system along with the details\nlsof -i\n\n# In order to list out the opened ports from the current machine\nlsof -i | grep \":[0-9]\\+->\" -o | grep \"[0-9]\\+\" -o | sort | uniq\n\n# netstat -tnp to list opened port and services\nnetstat -tnp\n\n```\n## create arbitrary sockets\n```bash\n# reate network sockets to do data transfer over a TCP/IP network\n# create a listening socket on port 1234 on the local machine\nnc -l 1234  # netcat\n\n# Connect to the socket\nnc HOST 1234 # replace HOST with localhost, or the IP address or hostname\n\nryan@base:~$ nc -l 12345\nryan@u1:~$ nc base 12345\n# type hi in u1, hi will appear in base as well\n\n\n# Quickly copying files over the network\nnc -l 1234 > destination_filename   # on receiving machine\nnc HOST 1234 < source_filename  # on sender machine\n\n```\n## share an internet connection\n```bash\n# you don't have a router and you need to share the Internet?\n\n```\n## basic firewall using iptables\n```bash\n# Block traffic to a specific IP address\niptables -A OUTPUT -d 8.8.8.8 -j DROP\n\n# Block traffic to a specific port\niptables -A OUTPUT -p tcp -dport 21 -j DROP\n# -A which instructs iptables to append a new rule to the chain\n# OUTPUT chain which runs on all the outgoing traffic\n# -j to instruct iptables to DROP the packet\n# -p parameter to specify that this rule should match only TCP on the port specified with -dport which block all the outbound FTP traffic\n\n\n# clear the changes made to the iptables chains\niptables --flush\n```\n\n# Put on the Monitor's Cap\n\n## Monitor disk usage\n```bash\ndu -a DIRECTORY # -a for all files recursively\ndu -h FILENAME\n\n# Displaying the grand total sum of disk usage\ndu -c FILENAME1 FILENAME2..\ndu -c DIRECTORY\n# -s (summarize), which will print only the grand total\n\n# Excluding files from the disk usage calculation\ndu --exclude \"*.txt\" FILES\ndu --exclude-from EXCLUDE.txt DIRECTORY\ndu --max-depth 2 DIRECTORY\n\n# Finding the 10 largest size files from a given directory\ndu -ak SOURCE_DIR | sort -nrk 1 | head\n# -a makes du traverse the SOURCE_DIR and calculates the size of all files\n# sort is used to perform a numerical sort with column 1 and reverse it\n\n# find only the largest files and not directories\nfind . -type f -exec du -k {} \\; | sort -nrk 1 | head\n\n```\n\n## execution time for a command\n```bash\ntime COMMAND\n/usr/bin/time -a -o output.txt COMMAND\n# append the time statistics to a file without overwriting, use the -a\n\n# Real time: %e\n# User: %U\n# sys: %S\n/usr/bin/time -f \"Time: %U\" -a -o timing.log COMMAND  # formatted output\n/usr/bin/time -f \"Time: %U\" COMMAND> command_output.txt 2>time.log\n\n# %C Name and command-line arguments of the command being timed.\n# %D Average size of the process unshared data area, in kilobytes.\n# %E Elapsed real (wall clock) time used by the process in [hours:]minutes:seconds.\n# %x Exit status of the command.\n# %k Number of signals delivered to the process.\n# %W Number of times the process was swapped out of the main memory.\n# %Z System page size in bytes. This is a per-system constant, but varies between systems\n# %P Percentage of the CPU that this job got. This is just user + system times divided by the total running time. It also prints a percentage sign.\n# %K Average total (data + stack + text) memory usage of the process, in Kilobytes.\n# %w Number of times that the program was context-switched voluntarily, for instance while waiting for an I/O operation to complete.\n# %c Number of times the process was context-switched involuntarily (because the time slice expired).\n```\n\n## logged in users, boot logs and boot failure\n```bash\nwho\nw # more detailed information about the logged in users\nusers # list only the usernames of the users\nusers | tr ' ' '\\n' | sort | uniq   # find unique users\nuptime # how long the system has been powered on\n# 21:44:33 up 3:17, 8 users, load average: 0.09, 0.14, 0.09\nuptime | grep -Po '\\d{2}\\:\\d{2}\\:\\d{2}' # xtract only three two-digit numbers separated by colons.\n\n# get information about previous boot and user logged sessions\nlast\nlast -f /var/log/wtmp\nlast USER # about login sessions for a single user\nlast reboot # Get information about reboot sessions\nlastb  # about failed user login sessions\n```\n\n## top 10 cpu consuming processes in an hour\n```bash\n# monitoring and calculating CPU usages in one hour\nSECS=3600\nUNIT_TIME=60\n#Change the SECS to total seconds for which monitoring is to be performed.\n#UNIT_TIME is the interval in seconds between each sampling\nSTEPS=$(( $SECS / $UNIT_TIME ))\necho Watching CPU usage... ;\nfor((i=0;i<STEPS;i++))\ndo\n    ps -eocomm,pcpu | tail -n +2 >> /tmp/cpu_usage.$$\n    sleep $UNIT_TIME\ndone\necho\necho CPU eaters :\ncat /tmp/cpu_usage.$$ | \\\nawk '{ process[$1]+=$2; }END{for(i in process){printf(\"%-20s %s\\n\",i, process[i]) ;}}' \\\n| sort -nrk 2 | head\nrm /tmp/cpu_usage.$$\n#Remove the temporary log file\n```\n\n## mmonitor command output with watch\n```bash\n# monitor the output of a command\nwatch COMMAND\nwatch 'ls -l | grep \"^d\"' # will update the output at a default interval of two seconds\nwatch -n 5 'ls -l' # at regular intervals of 5 seconds\nwatch -d 'COMMAND' # Difference highlighting\n```\n\n## log access to files and directories\n```bash\n\n```\n\n## logfile management with logrotate\n```bash\n# logrotate has the configuration directory at /etc/logrotate.d.\n# customerized config file: /etc/logrotate.d/program\n/var/log/program.log {  # logfile path\nmissingok   # Ignore if the logfile is missing and return without rotating the log.\nnotifempty  # Only rotate the log if the source logfile is not empty\nsize 30k    # Limit the size of the logfile\ncompress    # Enable compression with gzip for older logs.\nweekly      # Specify the interval at which the rotation is to be performed\nrotate 5    # It is the number of older copies of logfile archives to be kept\ncreate 0600 root root   # Specify the mode, user, and the group of the logfile archive\n}\n```\n\n## logging with syslog\n```bash\n#/var/log/boot.log      Boot log information.\n#/var/log/httpd         Apache web server log.\n#/var/log/messages      Post boot kernel information.\n#/var/log/auth.log      User authentication log.\n#/var/log/dmesg         System boot up messages.\n#/var/log/mail.log      Mail server log.\n#/var/log/Xorg.0.log    X Server log.\n\n#logger LOG_MESSAGE\nlogger This is a test log line\ntail -n 1 /var/log/messages\n# Sep 29 07:47:44 slynux-laptop slynux: This is a test log line\n# it logs to /var/log/messages by default\n\n# with a specified tag\nlogger -t TAG This is a message\n# Sep 29 07:48:42 slynux-laptop TAG: This is a message\n\n# You can see the tag strings and associated logfiles from the configuration files located in the /etc/rsyslog.d/ directory.\n\n```\n\n## monitor user login to find intruder\n```bash\n#!/bin/bash\n#Filename: intruder_detect.sh\n#Description: Intruder reporting tool with auth.log input\nAUTHLOG=/var/log/auth.log\nif [[ -n $1 ]];\nthen\nAUTHLOG=$1\necho Using Log file : $AUTHLOG\nfi\nLOG=/tmp/valid.$$.log\ngrep -v \"invalid\" $AUTHLOG > $LOG\nusers=$(grep \"Failed password\" $LOG | awk '{ print $(NF-5) }' | sort |\nuniq)\nprintf \"%-5s|%-10s|%-10s|%-13s|%-33s|%s\\n\" \"Sr#\" \"User\" \"Attempts\" \"IP\naddress\" \"Host_Mapping\" \"Time range\"\nucount=0;\nip_list=\"$(egrep -o \"[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\" $LOG | sort |\nuniq)\"\nfor ip in $ip_list;\ndo\ngrep $ip $LOG > /tmp/temp.$$.log\nfor user in $users;\ndo\ngrep $user /tmp/temp.$$.log> /tmp/$$.log\ncut -c-16 /tmp/$$.log > $$.time\ntstart=$(head -1 $$.time);\nstart=$(date -d \"$tstart\" \"+%s\");\ntend=$(tail -1 $$.time);\nend=$(date -d \"$tend\" \"+%s\")\nlimit=$(( $end - $start ))\nif [ $limit -gt 120 ];\nthen\nlet ucount++;\nIP=$(egrep -o \"[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\" /tmp/$$.log |\nhead -1 );\nTIME_RANGE=\"$tstart-->$tend\"\nATTEMPTS=$(cat /tmp/$$.log|wc -l);\nHOST=$(host $IP | awk '{ print $NF }' )\nprintf \"%-5s|%-10s|%-10s|%-10s|%-33s|%-s\\n\" \"$ucount\" \"$user\"\n\"$ATTEMPTS\" \"$IP\" \"$HOST\" \"$TIME_RANGE\";\nfi\ndone\ndone\nrm /tmp/valid.$$.log /tmp/$$.log $$.time /tmp/temp.$$.log 2> /dev/null\n```\n\n## remote disk usage health monitor\n1. set up a common user account on all the remote machines\n2. configure auto-login with SSH\n```bash\n#!/bin/bash\n#Filename: disklog.sh\n#Description: Monitor disk usage health for remote systems\nlogfile=\"diskusage.log\"\nif [[ -n $1 ]]\nthen\n    logfile=$1\nfi\nif [ ! -e $logfile ]\nthen\n    printf \"%-8s %-14s %-9s %-8s %-6s %-6s %-6s %s\\n\" \"Date\" \"IP\n    address\" \"Device\" \"Capacity\" \"Used\" \"Free\" \"Percent\" \"Status\" > $logfile\nfi\nIP_LIST=\"127.0.0.1 0.0.0.0\"\n#provide the list of remote machine IP addresses\n(\nfor ip in $IP_LIST;\ndo\n#slynux is the username, change as necessary\nssh slynux@$ip 'df -H' | grep ^/dev/ > /tmp/$$.df\nwhile read line;\ndo\ncur_date=$(date +%D)\nprintf \"%-8s %-14s \" $cur_date $ip\necho $line | awk '{ printf(\"%-9s %-8s %-6s %-6s\n%-8s\",$1,$2,$3,$4,$5); }'\npusg=$(echo $line | egrep -o \"[0-9]+%\")\npusg=${pusg/\\%/};\nif [ $pusg -lt 80 ];\nthen\necho SAFE\nelse\necho ALERT\nfi\ndone< /tmp/$$.df\ndone\n) >> $logfile\n\n# We can use the cron utility to run the script at regular intervals\n# every day at 10 a.m., write the following entry in the crontab\n00 10 * * * /home/path/disklog.sh /home/user/diskusg.log\n\n```\n\n## measure and optimize power usage\n```bash\n# The log data is stored in the /var/log/wtmp file\n\n#!/bin/bash\n#Filename: active_users.sh\n#Description: Reporting tool to find out active users\nlog=/var/log/wtmp\nif [[ -n $1 ]];\nthen\nlog=$1\nfi\nprintf \"%-4s %-10s %-10s %-6s %-8s\\n\" \"Rank\" \"User\" \"Start\" \"Logins\"\n\"Usage hours\"\nlast -f $log | head -n -2 > /tmp/ulog.$$\ncat /tmp/ulog.$$ | cut -d' ' -f1 | sort | uniq> /tmp/users.$$\n(\nwhile read user;\ndo\ngrep ^$user /tmp/ulog.$$ > /tmp/user.$$\nminutes=0\nwhile read t\ndo\ns=$(echo $t | awk -F: '{ print ($1 * 60) + $2 }')\nlet minutes=minutes+s\ndone< <(cat /tmp/user.$$ | awk '{ print $NF }' | tr -d ')(')\nfirstlog=$(tail -n 1 /tmp/user.$$ | awk '{ print $5,$6 }')\nnlogins=$(cat /tmp/user.$$ | wc -l)\nhours=$(echo \"$minutes / 60.0\" | bc)\nprintf \"%-10s %-10s %-6s %-8s\\n\" $user \"$firstlog\" $nlogins $hours\ndone< /tmp/users.$$\n) | sort -nrk 4 | awk '{ printf(\"%-4s %s\\n\", NR, $0) }'\nrm /tmp/users.$$ /tmp/user.$$ /tmp/ulog.$$\n```\n\n## Measuring and optimizing power usage\n```bash\npowertop\npowertop --html # generating HTML reports\n```\n\n## monitor disk activity\n```bash\niotop -o    # show only those processes which are doing active I/O\niotop -b -n 2 # print the statistics two times and then exit\niotop -p PID # Monitor a specific process\n```\n\n## check disk and filesystem for errors\n```bash\n# check for errors on a partition or filesystem\nfsck /dev/sdb3\n\n# check all the filesystems configured in /etc/fstab\nfsck -A\n\n# Instruct fsck to automatically attempt fixing errors\nfsck -a /dev/sda2\n\n# simulate the actions\nfsck -AN\n```\n\n# Administration Calls\n## Gathering information about processes\n```bash\nps -f # -f (stands for full) \n# other than the ones attached to the current terminal, -e (every) option\n\n# display the required columns of output, -o\nps -eo comm,pcpu | head\n#pcpu Percentage of CPU\n#pid Process ID\n#ppid Parent Process ID\n#pmem Percentage of memory\n#comm Executable filename\n#cmd Simple command\n#user The user who started the process\n#nice The priority (niceness)\n#time Cumulative CPU time\n#etime Elapsed time since the process started\n#tty The associated TTY device\n#euid The effective user\n#stat Process state\n\n# display several parameters along with the top CPU consuming processes\ntop\n\n# Sorting the ps output\nps -eo comm,pcpu --sort -pcpu | head\n\n# Finding the process ID when given command names\nps -C COMMAND_NAME\nps -C COMMAND_NAME -o pid= # lists the process IDs\npgrep COMMAND\npgrep bash -d \":\" # define delimiter rather than using a newline\npgrep -u root,slynux COMMAND # Specify a list of owners of the user for the matching processes\npgrep -c COMMAND # Return the count of matching processes\n\n# Specify an effective users' list by using -u EUSER1, EUSER2,\n# Specify a real users' list by using -U RUSER1, RUSER2\nps -u root -U root -o user,pcpu\n\n# TTY filter for ps\nps -t pts/0,pts/1\n\n# Information about process threads\nps -eLf\n# -L : show information about threads. \n# NLWP is the thread count for a process and NLP is the thread ID for each entry\nps -eLf --sort -nlwp | head\n\n# Showing environment variables for a process\nps -eo cmd e\n\n# if /usr/bin/windowapp did not work\nps -C windowapp -eo cmd e   # find out the env variable, and prefix to the cmd\nDISPLAY=:0 /usr/bin/windowapp\n\nwhich # find the location of a command\nwhich ls # /bin/ls\nwhereis ls\nwhatis ls # one-line description of the command\n\n# Add path\nexport PATH=$PATH:/home/ryan/bin\n\nfile FILENAME # return file type\n\n# specifies the average of the total number of runnable processes\nuptime\n\n```\n\n## Killing processes and send or respond to signals\n```bash\nkill -l # print signal numbers and corresponding signal names\n\n# specify a signal to be sent to a process via the kill\nkill -s SIGNAL PID\nkill -s SIGKILL PROCESS_ID # same as : kill -9 PROCESS_ID\n\nkillall -u USERNAME process_name\npkill process_name\n\n# trap is a command used to assign signal handler to signals in a script\ntrap 'signal_handler_function_name' SIGNAL LIST\n\n#/bin/bash\n#Filename: sighandle.sh\n#Description: Signal handler\nfunction handler()\n{\n    echo Hey, received signal : SIGINT\n}\necho My process ID is $$\ntrap 'handler' SIGINT\n#handler is the name of the signal handler function for SIGINT signal\nwhile true;\ndo\n    sleep 1\ndone\n\n```\n\n## Sending messages to user terminals\n```bash\n# broadcast a message to all users and all logged in terminals\ncat message.txt | wall\n\n\n```\n\n## Gathering system information\n```bash\n# print the hostname of the current system\nhostname\nuname -n\nuname -a\nuname -r # kernel release\nuname -m # machine type\n\ncat /proc/cpuinfo # print details about the CPU\ncat /proc/meminfo # memory info\n\n```\n\n## Using /proc to gather information\n```bash\n# /proc/4295/environ will display all the environment variables\n```\n\n## Scheduling with cron\n```bash\n02 * * * * /home/slynux/test.sh # execute test.sh at 2nd mintues of all hours\n00 5,6,7 * * /home/slynux/test.sh #  fifth, sixth, and seventh hours\n00 */12 * * 0 /home/slynux/script.sh  # every hour on Sundays\n00 02 * * * /sbin/shutdown -h # 2 A.M. everyday\n\n# -e option to crontab to start editing the cron table\ncrontab -e\n\ncrontab<<EOF\n02 * * * * /home/slynux/script.sh\nEOF\n\n# Minute (0 - 59)   5,10 or */5\n# Hour (0 - 23)\n# Day (1 - 31)\n# Month (1 - 12)\n# Weekday (0 - 6)\n# COMMAND (the script\n\n# Specifying environment variables\ncrontab<<EOF\nhttp_proxy=http://192.168.0.3:3128\n00 * * * * /home/slynux/download.sh\nEOF\n\n# Running commands at system start up/boot\n@reboot command\n\ncrontab -l # list existed job\ncrontab -r # remove cron table for current user\ncrontab -u ryan -r # need root\n```\n\n## Writing and reading the MySQL database from bash\n```bash\n\n```\n\n## User administration scripts\n```bash\nuseradd USER -p PASSWORD\npasswd USER\naddgroup USER GROUP\n\n```\n\n## Bulk image resizing and format conversion\n```bash\n\n```\n\n## Taking screenshots from the terminal\n```bash\n\n```\n\n## Managing multiple terminals from one\n```bash\n# using a utility called GNU screen\n\n```\n\n-- END --\n","source":"_posts/Notes-LinuxShellScriptsCookBook.md","raw":"---\ntitle: Notes_LinuxShellScriptsCookBook\ndate: 2018-05-21 23:24:51\ncategories: Linux\ntags: [Linux, notes, shell, script]\n---\n\nNotes for << Linux Shell Scripts Cook Book>>.\nIt is very helpful for people with zero or little knowledge about Linux Shell Scripts.\n\n<!--more-->\n\n# Shell Something Out\n## introduction\n```bash\n#!/bin/bash\n# indicate using which shell interpretor\n\n# when a shell starts, it initially define various setting from ~/.bashrc or ~/.bash_profile\n```\n## printing in the terminal\n```bash\necho \"hi \\!\"    # ! needs escape, otherwise means not operator\necho -n hello   # escape new line\necho -e \"string contains escape sequence\"   # when using escape sequence\necho -e \"\\e[31m this is red text \\e[0m\"    # \\e[31m - red; \\e[0m - reset\n# reset = 0, black = 40, red = 41, green = 42, yellow = 43, blue = 44, magenta = 45, cyan = 46, and white=47\n\nprintf \"%-5s %-10s %-4.2f \\n\" 11 ryan 99.88888\n# printf without newline\n# %-5s: string substitution + left alignment + width 5\n# %-4.2f: float + 2 decimal\n```\n## variable and environment variable\n```bash\nenv # view all the environment variables relative to a terminal\ncat /proc/$PID/environ | tr '\\0' '\\n'\n# environment variable for that process\n# trade to get each variable one line\n\npgrep <program>\n\n# equality vs assignment\nvar = value\nvar=value\n\n# PATH is defined in /etc/environment or /etc/profile or ~/.bashrc\n# store a list of paths where to search for executables, libraries\nexport PATH=$PATH:$NEW_PATH\n\n# get length of variable\nLENGTH=${#VAR}\n\n# identify current shell\necho $SHELL\necho $0\n\n# UID value of root is 0\necho $UID \n```\n## math\n```bash\nn=10\nlet result=n+10\nlet n++\nlet n+=6\n\nresult=$[n+2]\nresult=$[$n+2]\n\nresult=$((n+5))\n\nresult=`expr 4+3`\nresult=$(expr n+5)\n\n# bc for advanced\necho \"4*0.53\" | bc\necho \"scale=2; 3/8\" | bc    # semicolon as a delimiter\n\n# base convention\nn=100\necho \"obase=2; $n\" | bc # 1100100\necho \"obase=10;ibase=2; $n\" | bc # 4\necho \"sqrt(100)\" | bc\necho \"10^10\" | bc\n```\n## file description and redirection\n```bash\n# 0-stdin, 1-stdout, 2-stderr\n# run echo $? immediately after the command execution to print the exit status\n# 0 means successful completion\n\ncat a* 2>err.txt    # 2 stands for stderr. so error will be redirect to err.txt\ncat a* | tee out.txt | cat -n\n# 1. get 2 stderr which show up and 2 stdout which go to next level \n# 2. tee will get 2 stdout into both out.txt and pipeline\n# 3. cat get stdin and add line number\n```\n## arrays and associative arrays\n```bash\narray_var[0]='test1'\narray_var[1]='test2'\necho ${array_var[0]}\necho ${array_var[*]}\necho ${array_var[@]}\necho ${#array_var[@]}   #2\n\n# associate array\ndeclare -A ass_array\nass_array[apple]=100\n\n# list array indexes\necho ${!array_var[*]}\n```\n## visiting aliases\n```bash\nalias install='sudo apt-get install'\ninstall docker # = sudo apt-get install docker\n```\n## grabbing info about the terminal\n```bash\ntput cols   # get width of terminal\ntput lines  # get height of terminal\ntput cup 100 100\ntput setb n  # 0-7 background color, 7-grey\ntput setf n  # 0-7 text color, 0-black\ntput bold\ntput smul\ntput rmul   # underline\n\n# hide password\necho -n \"Enter password: \"\nstty -echo\nread password\nstty echo\necho\necho Password read.\n```\n## dates and delays\n```bash\ndate +%s    # epoch time\ndate \"+%d %B %Y\" # 16 May 2018\n\n# get time take for a program\nstart=`date +%s`\n...\nend=`date +%s`\nlet time_taken=end-start\n```\n- weekday:  %a Sat; %A Saturday\n- Month:    %b Nov; %B November\n- Day:      %d\n- Date:     %D 10/20/99\n- Year:     %y 10; %Y 2010\n- Hour:     %I or %H    \n- Minute:   %M\n- Second:   %S\n- Epoch:    %s\n\n```bash\n# delay scripts\necho -n Count:\ntput sc     # tput sc to store the cursor position\ncount=0\nwhile true;\ndo\n    if [ $count -lt 40 ]; then\n        let count++\n        sleep 1;\n        tput rc     # tput rc to restore the cursor position\n        tput ed     # clean existed number\n        echo -n $count\n    else\n        exit 0\n    fi\ndone\n```\n\n## debugging the script\n```bash\nbash -x scripts.sh\n# in scripts, using set -x and set +x to debug specific portion\n# set -x : display arguments and commands\n# set +x : disable debugging\n# set -v : display input\n# set +v : disable print input\n\n## DEBUG\n#!/bin/bash\nfunction DEBUG()\n{\n        [ \"$_DEBUG\" == \"on\" ] && $@ || :\n}\n\nfor i in {1..10}\ndo\n        DEBUG echo $i\ndone\n\n# #!/bin/bash -xv : enable debugging\n```\n## function and arguments\n```bash\n# function can return default 0 or any one argument if success\n# check if a command terminated successfully\n$CMD\nif [ $? -eq 0 ];\nthen\n    echo successfully \nelse\n    echo unsuccessfully\nfi\n```\n## reading the output of a sequence of commands\n```bash\n# add line number\nls | cat -n > out.txt\n\n# a subshell can be defined using () operation\n# always quote them in double quotes to preserve the space and newline character\nout=\"$(cat test.txt)\"\n```\n## reading n characters without pressing the return key\n```bash\nread -n 2 var # read 2 chars from input\nread -s password # read password in nonechoed mode\nread -p \" Enter : \" var # display a message\nread -t 2 var # read input within 2 sec\nread -d \":\" var # use delimiter to end input. hi:\n```\n## running a command until it succeeds\n```bash\nrepeat(){ while :; do $@ && return; sleep 30; done }\nrepeat wget -c url\n```\n## field separations and iterators\n```bash\n# IFS internal field separator\ndata_set1=\"1 2 3 4 5\"\nfor data in data_set1;\ndo\n    echo $data\ndone\n\ndata_set1=\"1;2;3;4;5\"\nIFS=\";\" # so that system how to delimite data\nfor data in data_set1;\ndo\n    echo $data\ndone\n\n# for\nfor var in vars; # for i in {1..10}\ndo\n    echo $var\ndone\n\n# while\nwhile condition\ndo \ndone\n\n# until\nuntil [ $x -eq 9 ] # once meet, loop ends\ndo\ndone\n```\n## comparisons and tests\n```bash\nif condition;\nthen\nfi\n\nif condition;\nthen\nelse if condition; \nthen\nelse\nfi\n\n# logical operators\n[ condition ] && action; # action if condition true\n[ condition ] || action; # action if condition fasle\n\n# at least one space in []\n[ $var -eq 0 ]\n[ $var -nq 0 ]  # !=\n# -gt, -ls, -ge >=, -le <=\n[ $var -ne 0 -a $var2 -ne 0 ] # -a means and\n[ $var -ne 0 -o $var2 -ne 0 ] # -o means or\n\n[ -f $file ] # true if holds a file path or filename\n[ -x $file ] # true if file is executable\n[ -w $file ] # true if file is writable\n[ -r $file ] # true if file is readable\n[ -d $file ] # true if it is a directory\n[ -e $file ] # true if it is existed file\n\n# file exists sample\nfpath=\"/etc/passwd\"\nif [ -e $fpath ]; then\n    echo file exists.\nelse\n    echo file not exists.\nfi\n\n# string comparison, use double square brackets, single brackets sometimes errors\n[[ $str1 = $str2 ]] # space needed beside =\n[[ -z $str ]] # true if str hols an empty string, str=\"\"\n[[ -n $str ]] # true if str hols an non-empty string, str=\"xx\"\n\n```\n# Have a Good Command\n\n## concatenating with cat\n```bash\n# cat can read both file and stdin\ncat -T filename # display tab as ^I\ncat -n filename # add line number, -b kill blank line\n```\n## record and play back of terminal sessions\n```bash\n# -t dump timing data to stderr\nscript -t 2>timing.log -a output.session\n# ...\nexit\n\nscriptreplay timing.log output.session\n```\n## find file and file listing\n```bash\nfind . -print   # delimit by \\n\n# ./1.txt\n# ./2.txt\nfind . -print0  # delimit by \\n\n# ./1.txt./2.txt\nfind . -name \"*.txt\" -print\nfind . \\( -name \"*.txt\" -o -name \"*.pdf\" \\) -print  # (*.txt or *.pdf)\nfind  . -path \"*/slynux/*\" -print\n\n# regex = regular expession, -i ignore case\nfind . -regex \".*\\(\\.py\\|\\.txt\\)\" # \".*.py|.txt\"\n\n# exclude !\nfind . ! -name \"*.txt\" -print\n\n# level control\nfind . -maxdepth 2 ! -name \"*.txt\" -print # ./xxx/xxx\nfind . -mindepth 2 ! -name \"*.txt\" -print\n\n# every object as a file. files: regular file, directory, character devices, block devices, symlinks, hardlinks, sockets, FIFO\nfind . -type d -print   \n# d-dir, f-regular file, l-symbolic link, c-character special device, b-block device,s-socket, p-FIFO\n\n# file times\n# -atime : access time\n# -mtime : modification time = content\n# -ctime : change time = metadata (such as permissions or ownership)\n# time in minutes ( -amin, -mmin, -cmin)\nfind . -type f -atime -7 -print # within last 7 days\nfind . -type f -atime 7 -print # exactly 7 days old\nfind . -type f -atime +7 -print # older than 7 days\n\n# find files that newer than file.txt\nfind . -type f -newer file.txt -print\n\n# file size over 2k, lt and eq; (M or G)\nfind . -type f -size +2k # -2k, 2k\n\n# delete all files with .log\nfind . -type f -name \"*.log\" -delete\n\n# based on permission, -perm\nfind . -type f -name \"*.php\" ! -perm 644 -print\n\n# based on ownership, -user\nfind . -type f -user ryan -print\n\n# using with exec \\;\nfind . -type f -user root -exec chown ryan {} \\;\n# {} here will be replaced by the find result.\n\n# exclude file\nfind . -name \".git\" -prune\n\n```\n## xargs\n```bash\n# space is default delimiter, change to X \necho \"splitXsplitXsplitXsplit\" | xargs -d X -n 2\n# split split\n# split split\n\necho \"splitXsplitXsplitXsplit\" | xargs -d X -n 2 ./show.sh\n# show : split split\n# show : split split\n   \n# use -I to specify a replacament string when xargs expands\ncat args.txt | xargs -I {} ./show.sh {} -l\n# each argument will be pass to replace {}\n\nfind . -type f -name \"*.txt\" -print0 | xargs -0 rm -f\n# -print0 give one line output; -0 : delimiter is \\0\n\ncat files.txt | ( while read arg; do cat $arg; done )\n\n```\n## translat with tr\n```bash\n# only take stdin as input\ntr [options] set1 set2\n\n# uppler to lower\necho \"HELLO WHO IS THIS\" | tr 'A-Z' 'a-z'\n\n# delete\ncat file.txt | tr -d '<SET>'\ncat file.txt | tr -d -c '0-9 \\n' # complement; keep only 0-9, space and tab.\ncat file.txt | tr -s ' ' # -s : squeeze repeating characters\n\n# $[ operation ] performs a numeric operation\n\n# character class\n## alnum: Alphanumeric characters\n## alpha: Alphabetic characters\n## cntrl: Control (nonprinting) characters\n## digit: Numeric characters\n## graph: Graphic characters\n## lower: Lowercase alphabetic characters\n## print: Printable characters\n## punct: Punctuation characters\n## space: Whitespace characters\n## upper: Uppercase characters\n## xdigit: Hexadecimal characters\ntr '[:lower:]' '[:upper:]'\n```\n## checksum and verification\n```bash\nmd5sum filename\nmd5deep -rl directory_path > directory.md5 # -l : using relative path\n\nfind . -type f -print0 | xargs -0 md5sum > dir.md5\nmd5sum -c dir.md5\n```\n## cryptographic tool and hash\n```bash\ncrypt PASSPHRASE <input_file >encrypted_file\ncrypt PASSPHRASE -d <encrypted_file >output_file\n\ngpg -c filename # encrypt\ngpg filename.gpg # decrypt\n\nbase64 filename > outputfile\nbase64 -d file > outputfile\n\n# md5sum and sha1sum to verify password\n# store password in hash format\n# when user provide password, they convert to hash and compare\n\nopenssl passwd -1 -salt SALT_STRING PASSWORD\n\n```\n## sort unique and duplicate\n```bash\nsort file1.txt file2.txt > sorted.txt\nsort -n file.txt    # numerical sort, -r reverse order, -M by months\nsort -m sort1 sort2 # merge two sorted files\nsort file1 file2 | uniq # find the unique lines\n# check if a file is sorted\nsort -C filename    # return 0 -> sorted\n\nsort -nrk 1 data.txt    # -n numeric, -r reverse, -k specified the key, column 1\nsort -nk 2,3 data.txt   # 1010dddddee, 01 is the key\n# -b ignore leading blank lines\n# -d sort in the dictionary order\n\nsort unsorted.txt | uniq -u # show only unique lines\nsort unsorted.txt | uniq -c # count how many times of each lines\nsort unsorted.txt | uniq -d # show only duplicate lines\nsort data.txt | uniq -s 2 -w 2 # -s 2 : ignore fisrt 2 char; -w 2 : max compare chars\n# u:01:bash - only 01 will be compared\n\n# xargs use space as default delimiter, if stdin contains space, need to use \\0\nuniq -z file.txt | xargs -0 rm\n# -z zero-byte terminated output, -0 use \\0 as delimiter\n```\n## temp file naming and random number\n```bash\nfilename=`mktemp`\ndirname=`mktemp -d`\ntmpfile=`mktemp -u` # generate name without creating file\nmktemp test.xxx # /home/ryan/test.NpW\n\n```\n## split files and data\n```bash\nsplit [COMMAND_ARGS] PREFIX\nsplit -b 10k data.file -d -a 4 split_file # -d numeric suffixes, -a length\n# split_file0001 split_file0002\n\nsplit -l 10 data.file   # 10 lines for each file\n\n# csplit : content based split\ncsplit server.log /SERVER/ -n 2 -s {*} -f server -b \"%02d.log\" ; rm\nserver00.log\n# /SERVER/ : SERVER is the string to split\n# -n 2 : the number of digit as suffix of file name\n# -f server : prefix of filename, server01\n# -b \"%02d.log\" : suffix format, filename = prefix + suffix, server01.log\n# -s : silent without printing other messages\n# server00.log will be beginning to the first SERVER which is empty\n\n```\n## slice filename based on extension\n```bash\n# ${VAR%.*} : remove the part that matches .*\nfile=\"sample.jpg\"\nname=${file%.*} # sample\nextension=${file#*.} # jpg, prefer ##\n\n# % and %%, similar to # and ##\nfile=\"ryan.nus.sg.log\"\nname=${file%.*} # ryan.nus.sg\nname=${file%%.*} # ryan\n\n```\n## rename and move files in bulk\n```bash\n\ncount=1\nfor img in `find . -type f -iname \"*.jpg\" -maxdepth 1`\ndo\n    new=image-$count.${img##*.}\n    mv $img $new\n    let count++\ndone\n\nrename *.JPG *.jpg\nrename 's/ /_/g' *  # replace space by _\nrename 'y/A-Z/a-z/' * # upper to lower\n```\n## spell check and dictionary manipulation\n```bash\n\n```\n## automate interactive input\n```bash\necho -e \"1\\nhello\\n\" | ./interactive.sh\n./interactive.sh < input.data\n\n# expect\n./automate_expect.sh\n#Filename: automate_expect.sh\nspawn ./interactive .sh # specifies which commands are to be automated\nexpect \"Enter number:\"\nsend \"1\\n\"\nexpect \"Enter name:\"\nsend \"hello\\n\"\nexpect eof  # end of the command interaction\n\n```\n## make commands using parallel processes\n```bash\nPIDs=()\nfor file in File1.iso File2.iso\ndo\nmd5sum $file &\nPIDs+=(\"$!\")\ndone\nwait ${PIDs[@]}\n```\n\n# File In File Out\n\n## generate files of any size\n```bash\ndd if=/dev/zero of=junk.data bs=1M count=1\n# bs block size, count - number of blocks\n# /dev/zero is a character special device, which infinitely returns the zero byte (\\0).\n# also used to check the speed of memory operation\n```\n## itersection and set difference (A-B)\n```bash\ncomm A.txt B.txt\n# 1st column - only in A\n# 2nd column - only in B\n# 3rd column - common lines. each column are delimited by \\t\n\ncomm A.txt B.txt -1 -2  # remove 1 and 2, so show intersaction\ncomm A.txt B.txt -3 | sed 's/^\\t//'\n# s-substitute, to remove every \\t\n# /^ - start of line marker; // - no char, replacement string\n```\n## find and delete duplicate file\n```bash\n# remove_duplicates.sh\n# -S : sorted by file size\n# --time-style=long-iso : print date in ISO format\n# getline : get the first line and dump it\nls -lS --time-style=long-iso | awk 'BEGIN {\n    getline; getline;\n    name1=$8; size=$5\n}\n{\n    name2=$8;\n    if (size==$5) \n    {\n        \"md5sum \"name1 | getline; csum1=$1;\n        \"md5sum \"name2 | getline; csum2=$1;\n        if ( csum1==csum2 )\n        {\n            print name1; print name2\n        }\n    };\n    size=$5; name1=name2;\n}' | sort -u > duplicate_files\ncat duplicate_files | xargs -I {} md5sum {} | sort | uniq -w 32 |\nawk '{ print \"^\"$2\"$\" }' | sort -u > duplicate_sample\necho Removing..\ncomm duplicate_files duplicate_sample -2 -3 | tee /dev/stderr |\nxargs rm\necho Removed duplicates files successfully.\n\n```\n## file permission, ownership and sticky bit\n```bash\n\n# - regular file,d dir，c char device，b block device,l symbolic link,s socket,p pipe\n\n# u – specifies user permissions\n# g – specifies group permissions\n# o – specifies others permissions\nchmod a+x filename # all\nchown user.group filename\nchmod 777 . -R  # -R apply recursively\n```\n## make file immutable\n```bash\nchattr +i file  # cannot remove\nchattr -i file  # remove immutable\n```\n## generate blank files in bulk\n```bash\ntouch filename # create new file or change timestamp\n# -a modify access time, -m modification time\ntouch -d \"Jan 20 2018\" filename # change date\n```\n## find symbolic links and their targets\n```bash\n# create symbolic link\nln -s target sym_link_name\n\n# print symbolic link\nls -l | grep \"^l\"   # ^l means starting with l\nfind . -type l -print\n\nreadlink link_name\n```\n## enumerate file type statistics\n```bash\n# type of file\nfile filename   # -b to exclude the filename in the output\n\n# Filename: filestat.sh\nif [ $# -ne 1 ];\nthen\necho \"Usage is $0 basepath\";\nexit\nfi\npath=$1\ndeclare -A statarray;\nwhile read line;\ndo\nftype=`file -b \"$line\" | cut -d, -f1`   # use , delimiter and use only 1st field\nlet statarray[\"$ftype\"]++;\ndone < <(find $path -type f -print)\necho ============ File types and counts =============\nfor ftype in \"${!statarray[@]}\";    # list of array indexes\ndo\necho $ftype : ${statarray[\"$ftype\"]} \ndone\n\n./filetype.sh /home/slynux/programs\n\nwhile read line;\ndo something\ndone < filename\n# <(find $path -type f -print) is equivalent to a filename\n# the first < is for input redirection and the second < is for converting the subprocess output to a filename\n# space there to avoid << operator\n# bash 3.x : done <<< \"`find $path -type f -print`\"\n\n```\n## use loopback files\n```bash\n\n```\n## create ISO file and hybrid ISO\n```bash\ndd if=/dev/cdrom of=image.iso\nmkisofs -V \"Label\" -o image.iso source_dir/\n```\n## find the difference between files, patching\n```bash\ndiff -u version1.txt version2.txt > version.patch\npatch -p1 version1.txt < version.patch # get version2\npatch -p1 version2.txt < version.patch # get version1\n\ndiff -Naur directory1 directory2\n# -N treat absent file as empty, -a consider all files as txt, -u unified\n```\n## head and tail\n```bash\nhead -n 4 file  # first 4\nhead -n -4 file # exclude last 4\n\ntail -n 5 file # last 5\ntail -n +6 file # exclude first 5\n\ntail -f growing_file    # follow\ntail -f file --pid $PID # tail until PID finish\n```\n## list only directory\n```bash\nls -d */\nls -F | grep \"/$\"\nls -l | grep \"^d\"\nfind . -type d -maxdepth 1 -print\n\n```\n## fast command line navigation, pushd and popd\n```bash\npushd home/     # /home /\npushd ../lib    # /lib /home /\npushd ../var    # /var /lib /home /\n                #   0    1    2   3\npushd +2        # /home / /var /lib \ndirs\npopd            # / /var /lib\npopd +2         # / /var\n\ncd -        # switch back\n```\n## count number of lines, words and chars\n```bash\nwc -l file  # number of line\nwc -w file  # number of word\nwc -c file\nwc file -L  # get length of longest line\n```\n## print the directory tree\n```bash\ntree . -P \"*.sh\"    # highlight the files matching the pattern\ntree . -I \"*.sh\"    # exclude pattern\ntree -h # size\ntree . -H http://localhost -o out.html\n```\n\n# Texting and Driving\n\n## regular expression\n```bash\n# match all words\n# ? zero or one occurrence of the previous expression\n( ?[a-zA-Z]+ ?)\n\n# ip\n[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\n\n# ^     start of line\n# $     end of line\n# .     any one char\n# []    any one chars in [chars]\n# [^]   any one chars except [chars]\n# [-]   any chars within the range [1-5]\n# ?     the preceding item must use one or 0 times, colou?r = color or colour\n# +     the preceding item must use one or more times, 90+ = 900 or 90000\n# *     the preceding item must use 0 or more times, 90* = 90, 900\n# ()    treats the terms as one entity, ma(tri)?x = max or matrix\n# {n}   the preceding item must use n times, [0-9]{3} = [0-9][0-9][0-9]\n# {n,}  specify minimum times that preceding item use, [0-9]{2,} = any 2 digits or longer\n# {n,m} [0-9]{2,5} = any number that has 2 digits to 5 digits\n# |     alternation, 1 | 2 = 1 or 2\n# \\     escape, a\\.b = a.b\n\n```\n## search text inside a file\n```bash\ngrep \"pattern\" filename --color=auto\ngrep -E \"[a-z]+\" filename # -E extended reg ex\n# -o ouput only match portion\n# -v print all the lines except the matched line\n# -c count number of matched line\n# -e count number of matched item\n# -i ignore case\n\ngrep \"pattern\" -n filename # print line number\n\necho gnu is not unix | grep -b -o \"not\" # 7:not\ngrep -l linux file1 file2 # list which file contain, -L for non-matching\ngrep \"pattern\" . -R -n  # common\n\n# pattern file\ngrep -f pat_file\n\ngrep \"main()\" . -r --include *.{c,cpp}  #  search *.c and *.ccp\ngrep \"main()\" . -r --exclude *.{c,cpp}  #  not search *.c and *.ccp\ngrep \"main()\" . -r --exclude-dir ./tmp  # exclude dir\n\n# xargs\ngrep \"test\" file* -lZ | xargs -0 rm # -Z and -0\n# -q : quite, return status without showing\n\n# Printing lines before and after text matches\n# print three lines after a match, -A; -b lines before; -c both\nseq 10 | grep 5 -A 3    #5\\n6\\n7\\n8\n\n```\n## cut a file by column\n```bash\ncut -f 2,3 filename # show 2nd and 3rd column, --complement for reverse\n# -d \":\" to indicate delimiter\n\ncut -c 1-5 filename    # 1st to 5th chars\ncut -c -5 filename    # 1st 5 chars\ncut -c 2- filename    # from 2nd to the end\n\ncut filename -c 1-3,6-9 --output-delimiter \",\"  # abc,fghi\n\n```\n## sed for text replacement\n```bash\nsed 's/pattern/replace_string/' file    # -i save changes\nsed 's/pattern/replace_string/' file > newfile\n\nsed 's/pattern/replace_string/g' file   # substitute every occurrence\necho thisthisthisthis | sed 's/this/THIS/2g' # thisTHISTHISTHIS\n# / can be | or :\n\n# remove blank line\nsed '/^$/d' filename    # d - delete\n\nsed -i .bak 's/abc/def/' filename # change original file as .bak\n\n# Matched string notation (&)\necho this is an example | sed 's/\\w\\+/[&]/g' # \\w\\+ matches every word. & refer to each of words\n# [this] [is] [an] [example]\n\n# Substring match notation (\\1)\necho seven EIGHT | sed 's/\\([a-z]\\+\\) \\([A-Z]\\+\\)/\\2 \\1/'\n# \\([a-z]\\+\\) match 1st word and \\1 refer to \n\n# multiple action\n$ echo abc | sed -e 's/a/A/' -e 's/c/C/'    #AbC\n```\n## awk for text processing\n```bash\n# for each input, {statement} will execute.\nawk 'BEGIN { statements } { statements } END { end statements }'\n\n# NR : number of record. each input line as one record\n# NF : number of field. delimiter by space\n# $0 : text content of current line\n# $1, $2.. 1st field, 2nd field\n\n# like java, string is within \"\". \nawk '{ print \"Line no:\"NR\",No of fields:\"NF, \"$0=\"$0, \"$1=\"$1}'\n\nawk '{ print $3,$2 }' file\nawk 'END{ print NR }' file  # get number of lines\n\nawk '{ print v1,v2 }' v1=$var1 v2=$var2 filename\n\n# getline var\n\nawk 'NR < 5' # first four lines\nawk 'NR==1,NR==4' #First four lines\nawk '/linux/' # Lines containing the pattern\nawk '!/linux/' # Lines not containing the pattern\nawk -F : '{ print $NF }' /etc/passwd   # -F delimiter\n\n# awk built in function\n# length(string): string length.\n# index(string, search_string): position at which search_string is found\n# split(string, array, delimiter): stores strings list generated by delimiter in the array\n# substr(string, start-position, end-position): \n# sub(regex, replacement_str, string): replaces the first occurring match\n# gsub(regex, replacment_str, string): replaces every regular expression match.\n# match(regex, string): non-zero output if a match is found, otherwise zero. \n# with match(). RSTART contains the position the match starts. RLENGTH contains match length\n```\n## find frequency of words\n```bash\n\n```\n## compress and decompress javascript\n```bash\ncat sample.js | \\\ntr -d '\\n\\t' | \\    # Removes the \\n and \\t characters\ntr -s ' ' | \\       # squeeze repeating space\nsed 's:/\\*.*\\*/::g' | \\ # Removes comments, use : as delimiter instead of /, .* match all text\nsed 's/ \\?\\([{}();,:]\\) \\?/\\1/g'    # Removes all the spaces before and after the characters. \n\n# decompression\n# s/;/;\\n/g replaces ; with ;\\n\n# s/{/{\\n\\n/g replaces { with {\\n\\n\n# s/}/\\n\\n}/g replaces } with \\n\\n}\n```\n## merge files as columns\n```bash\npaste file1 file2 -d \",\"\n# 1, xxx\n# 2, xxxxx\n```\n## print the nth word or column\n```bash\n# print the fifth column\nawk '{ print $5 }' filename\n\nls -l | awk '{ print $1 \" : \" $8 }' # get 1st and 8th column\n```\n## print text between line number or pattern\n```bash\nawk 'NR==M, NR==N' filename\nawk '/start_pattern/, /end _pattern/' filename\n```\n## print line reversely\n```bash\nseq 9 | \\\nawk '{ lifo[NR]=$0 }\nEND{ for(lno=NR;lno>-1;lno--){ print lifo[lno]; }\n}'\n```\n## parse email and URL\n```bash\negrep -o '[A-Za-z0-9._]+@[A-Za-z0-9.]+\\.[a-zA-Z]{2,4}' filename\negrep -o \"http://[a-zA-Z0-9.]+\\.[a-zA-Z]{2,3}\" filename\n```\n## remove a sentence containing a word\n```bash\nsed 's/ [^.]*mobile phones[^.]*\\.//g' sentence.txt\n```\n## replace a pattern with text in one directory\n```bash\nfind . -name *.cpp -print0 | xargs -I{} -0 sed -i 's/Copyright/Copyleft/g' {}\nfind . -name *.cpp -exec sed -i 's/Copyright/Copyleft/g' \\{\\} \\;\n```\n## text slicing and parameter operations\n```bash\nvar=\"This is a line of text\"\necho ${var/line/REPLACED_text}\n\nstring=\"abcdefghijklmnopqrstuvwxyz\"\necho ${string:4}    # efghijklmnopqrstuvwxyz\necho ${string:4:8}  # efghijkl\necho ${string:(-1)} # z\n$ echo ${string:(-2):2} # yz\n```\n\n# Tangled Web\n## download from web page\n```bash\nwget URL\nwget ftp_link -O dl_file.img -o log\nwget -t 5 URL   # try 5 times\nwget -t 0 URL   # try infinitely\nwget --limit-rate 20k URL   # limit speed\nwget -Q 100m URL    # --quota, total download size\nwget -c URL # resume downloading\n\n# download the complete website by recursively collecting all the URL\nwget --mirror --convert-links exampledomain.com\nwget -r -N -l -k DEPTH URL\n# -l : depth, along with -r. -N enable time stamping. \n# -k or --convert-links : convert the links to other pages\n\nwget --user username --password pass URL\nwget --user username --ask-password URL\n```\n## download as plain text\n```bash\nlynx URL -dump > webpage_as_text.txt\n```\n## cURL\n```bash\ncurl URL -o index.html --progress   # show progress\ncurl URL/file -C offset # Continuing and resuming\n\n# Setting the referer string with cURL\n# click link_1 in page_a, we access to page_b. Without link_1, we are not able to access page_b.\ncurl --referer link_1 page_b_URL \n\n# Cookies with cURL\ncurl URL --cookie \"user=ryan;pass=hi\"\ncurl URL --cookie-jar cookie_file   # specify a file to which the cookies encountered are to be stored\n\ncurl URL --limit-rate 20k\ncurl URL --max-filesize bytes   \n# return a non-zero exit code if the file size exceeds. zero if it succeeds\n\ncurl -u user:pass URL\ncurl -u user URL\n\n# -I or -head : dump only the HTTP headers, without downloading the remote file.\ncurl -I URL\n```\n## access Gmail\n```bash\n#Desc: Fetch gmail tool\nusername='PUT_USERNAME_HERE'\npassword='PUT_PASSWORD_HERE'\nSHOW_COUNT=5 # No of recent unread mails to be shown\necho\ncurl -u $username:$password --silent \"https://mail.google.com/mail/feed/atom\" | \\\ntr -d '\\n' | sed 's:</entry>:\\n:g' |\\\nsed -n 's/.*<title>\\(.*\\)<\\/title.*<author><name>\\([^<]*\\)<\\/name><email>\\([^<]*\\).*/From: \\2 [\\3] \\nSubject: \\1\\n/p' | \\\nhead -n $(( $SHOW_COUNT * 3 ))\n# tr -d '\\n' removes the newline character\n# sed 's:</entry>:\\n:g' replaces every </entry> element with a newline\n```\n## parsing data from website\n```bash\n\n```\n## image crawler and downloader\n```bash\n#Filename: img_downloader.sh\nif [ $# -ne 3 ];\nthen\n    echo \"Usage: $0 URL -d DIRECTORY\"\n    exit -1\nfi\n\n# shift is used to shift arguments to the left\n# $1 will take the next argument value\nfor i in {1..4}\ndo\n    case $1 in\n        -d) shift; directory=$1; shift ;;\n        *) url=${url:-$1}; shift;;\n    esac\ndone\nmkdir -p $directory;\nbaseurl=$(echo $url | egrep -o \"https?://[a-z.]+\")\necho Downloading $url\ncurl -s $url | egrep -o \"<img src=[^>]*>\" | sed 's/<img src=\\\"\\([^\"]*\\).*/\\1/g' >/tmp/$$.list\nsed -i \"s|^/|$baseurl/|\" /tmp/$$.list\ncd $directory;\n\nwhile read filename;\ndo\n    echo Downloading $filename\n    curl -s -O \"$filename\" --silent\ndone < /tmp/$$.list\n```\n## web photo album generator\n```bash\n#Description: Create a photo album using images in current directory\necho \"Creating album..\"\nmkdir -p thumbs\ncat <<EOF1 > index.html\n<html>\n<head>\n<style>\n    body\n    {\n        width:470px;\n        margin:auto;\n        border: 1px dashed grey;\n        padding:10px;\n    }\n    img\n    {\n        margin:5px;\n        border: 1px solid black;\n    }\n</style>\n</head>\n<body>\n<center><h1> #Album title </h1></center>\n<p>\nEOF1\n\nfor img in *.jpg;\ndo\n    convert \"$img\" -resize \"100x\" \"thumbs/$img\"\n    echo \"<a href=\\\"$img\\\" ><img src=\\\"thumbs/$img\\\" title=\\\"$img\\\" /></a>\" >> index.html\ndone\n\ncat <<EOF2 >> index.html\n</p>\n</body>\n</html>\nEOF2\necho Album generated to index.html\n```\n## twitter command-line client\n```bash\n\n```\n## create a 'define' utility by using web backend\n1. http://www.dictionaryapi.com/register/index.htm\n2. get key\n```bash\n#Desc: A script to fetch definitions from dictionaryapi.com\napikey=YOUR_API_KEY_HERE # fd750d43-a3b8-4f47-8055-e8db4ebfeeed\nif [ $# -ne 2 ];\nthen\necho -e \"Usage: $0 WORD NUMBER\"\nexit -1;\nfi\ncurl --silent http://www.dictionaryapi.com/api/v1/references/learners/xml/$1?key=$apikey | \\\ngrep -o \\<dt\\>.*\\</dt\\> | \\\nsed 's$</*[a-z]*>$$g' | \\\nhead -n $2 | nl\n```\n## find broken links in a website\n```bash\n#Desc: Find broken links in a website\nif [ $# -ne 1 ];\nthen\n    echo -e \"$Usage: $0 URL\\n\"\n    exit 1;\nfi\necho Broken links:\nmkdir /tmp/$$.lynx\ncd /tmp/$$.lynx\nlynx -traversal $1 > /dev/null\ncount=0;\nsort -u reject.dat > links.txt\nwhile read link;\ndo\n    output=`curl -I $link -s | grep \"HTTP/.*OK\"`;\n    if [[ -z $output ]];\n    then\n        echo $link;\n        let count++\n    fi\ndone < links.txt\n[ $count -eq 0 ] && echo No broken links found.\n```\n## track changes to a website\n```bash\n#Desc: Script to track changes to webpage\nif [ $# -ne 1 ];\nthen\n    echo -e \"$Usage: $0 URL\\n\"\n    exit 1;\nfi\nfirst_time=0\n# Not first time\nif [ ! -e \"last.html\" ];\nthen\n    first_time=1\n    # Set it is first time run\nfi\ncurl --silent $1 -o recent.html\nif [ $first_time -ne 1 ];\nthen\n    changes=$(diff -u last.html recent.html)\n    if [ -n \"$changes\" ];\n    then\n        echo -e \"Changes:\\n\"\n        echo \"$changes\"\n    else\n    echo -e \"\\nWebsite has no changes\"\n    fi\nelse\n    echo \"[First run] Archiving..\"\nfi\ncp recent.html last.html\n```\n## post to web page and read response\n```bash\n# POST and read the HTML response\ncurl URL -d \"host=hostname&user=username\"   # -d is the argument used for posting\nwget php_URL --post-data \"host=hostname&user=username\" -O output.html\n```\n\n# Backup Plan\n\n## Archive with tar\n```bash\ntar -cf output.tar [SOURCES]    # -c create file, -f specify filename\ntar -tf archive.tar # list files in an archive\ntar -tvf archive.tar    # -v verbose, print more details\n\ntar -rvf original.tar new_file  # -r append a file into an archive\n\ntar -xf archive.tar # -x for extract\ntar -xf archive.tar -C /path/to/extract # -C to indicate where the files\ntar -xvf file.tar file1 file4   # only extract file1 and file4\n\n# '-' make archive as output\ntar cvf - files/ | ssh a@A \"tar xv -C Documents/\"\n\n# merge multiple tar files with the -A option\ntar -Af file.tar file_be_merged.tar\n\n# -u : append updated files according to timestamp.\ntar -uf archive.tar filea   # when extracting, newer version will be picked up\n\n# Comparing files in the archive and file system\ntar -df archive.tar # -d to print difference\n\n# Deleting files from the archive\ntar -f archive.tar --delete file1 file2\n\n# -a : compress by looking at the extension\ntar -acvf archive.tar.gz filea fileb filec\n\n# Exclude a set of files from archiving\ntar -cf arch.tar * --exclude \"*.txt\"\ntar -cf arch.tar * -X list  # list: file1 file2\n\n# Excluding version control directories\ntar --exclude-vcs -czvvf archive.tar.gz eye_of_gnome_svn\ntar -cf arc.tar * --exclude \"*.txt\" --totals\n```\n## archive with cpio\n```bash\n# store files with attributes such as permissions, ownership\necho file1 file2 file3 | cpio -ov > archive.cpio\ncpio -it < archive.cpio # list files in a cpio archive\ncpio -id < archive.cpio # extract files from the cpio archive\n# -o specifies the output\n# -v is used for printing a list of files archived\n# -i is for specifying the input\n# -t is for listing\n# -d stands for extracting\n\n```\n## compress data with gzip\n```bash\ngzip filename\ngunzip filename.gz\ngzip -l test.txt.gz # list out the properties of a compressed file\ncat file | gzip -c > file.gz    # -c option is used to specify output to stdout\n\n# zip multiple files\nFILE_LIST=\"file1 file2 file3 file4 file5\"\nfor f in $FILE_LIST;\ndo\ntar -rvf archive.tar $f\ndone\ngzip archive.tar\n\n# extract a gzipped tarball\ntar -xavvf archive.tar.gz -C extract_directory\n\n# zcat - reading gzipped files without extracting\nzcat test.gz\n\n# Compression ratio\ngzip -5 test.img    # 1 is the lowest, but fastest\n\n# bzip2 offers more effective compression while taking more time\nbzip2 filename\nbunzip2 filename.bz2\n\ntar -xjvf archive.tar.bz2   # -j denotes that the archive is bzip2\n\n```\n## archive and compress with zip\n```bash\nzip archive_name.zip [SOURCE FILES/DIRS]\nzip -r archive.zip folder1 folder2  # Archive directories and files recursively\nunzip file.zip  # without removing filename.zip\nzip file.zip -u newfile # update files in the archive with newer files\nzip -d arc.zip file.txt # Delete a file from a zipped archive\nunzip -l archive.zip    # list the files in an archive\n```\n## faster archive with pbzip2\n```bash\n# pbzip2 can use multiple cores, hence decreasing overall time\npbzip2 myfile.tar\ntar cf myfile.tar.bz2 --use-compress-prog=pbzip2 dir_to_compress\npbzip2 -dc myfile.tar.bz2 | tar x   # Extracting a pbzip2\n```\n## create filesystem with compression\n```bash\n# squashfs \n```\n## backup snapshots with rsync\n```bash\n\n```\n## version control-based backup with Git\n```bash\n\n## u1 as remote machine; 192.168.1.135\n# Set up and initiate the remote backup directory\nmkdir -p ~/git_repo/demo.git\ncd ~/git_repo/demo.git\ngit init --bare\n\n## base as source host machine\ngit config --global user.name \"ryan\"\ngit config --global user.email luoxu2011@gmail.com\n# source documents in ~/git_demo \ncd ~/git_demo\ngit init\ngit remote add origin ryan@192.168.1.135:~/git_repo/demo.git\ngit add .\ngit commit -m \"data1\"\ngit push origin master\n\ngit log\n# revert back to any previous state or version\ngit checkout COMMIT_ID\n# make this revert permanent\ngit commit -am \"Restore @ $(date) commit ID:xxxxxx\"\n\ngit clone ryan@192.168.1.135:~/git_repo/demo.git\n\n```\n## create entire disk images using fsarciver\n```bash\n\n```\n\n# Old Boy Network\n\n## Setup the network\n```bash\n# manually set the IP address for a network interface\nsudo ifconfig wlan0 xxx.xxx.xx.xx netmask 255.255.252.0\n\n# Printing the list of network interfaces\nifconfig | cut -c-10 | tr -d ' ' | tr -s '\\n'\n# first 10 characters is reserved for network interfaces\n# take the first 10 columns, remove space, squeeze newline\n\n# Displaying IP addresses\nifconfig wlan0 | egrep -o \"inet addr:[^ ]*\" | grep -o \"[0-9.]*\"\n\n# spoof the hardware address at the software level\nifconfig eth0 hw ether 00:1c:bf:87:25:d5\n\ncat /etc/resolv.conf    # nameserver 8.8.8.8\nhost google.com # list out all of the IP attached to the domain name\nnslookup google.com # \n\necho 192.168.0.9 backupserver >> /etc/hosts\nping backupserver # get 192.168.0.9\n\n# Showing routing table information\nroute -n\n\n# set a default gateway\nroute add default gw IP_ADDRESS INTERFACE_NAME\n\n```\n## Ping\n```bash\nping hostname # Round Trip Time (RTT)\nping 192.168.0.1 -c 2 # Limiting the number of packets to be sent\n\n# Return status of the ping command\nping domain -c2\nif [ $? -eq 0 ];\nthen\necho Successful ;\nelse\necho Failure\nfi\n\n# traceroute displays the address of all intermediate gateways\ntraceroute google.com\n```\n\n## list all the machine alive\n```bash\n# check alive host\nfor ip in 192.168.0.{1..255} ;\ndo\n    ping $ip -c 2 &> /dev/null ;  # &> /dev/null : redirect both stderr and stdout\n    if [ $? -eq 0 ];\n    then\n        echo $ip is alive\n    fi\ndone\n\n# Parallel pings : enclose the loop body in ( )&\nfor ip in 192.168.0.{1..255} ;\ndo\n    (\n        ping $ip -c2 &> /dev/null ;\n        if [ $? -eq 0 ];\n        then\n            echo $ip is alive\n        fi\n    )&\ndone\nwait # waits for the time until all the child ( ) subshell processes complete\n```\n## run command on a remote host with SSH\n```bash\n# By default, the SSH server runs at port 22\nssh user@locahost -p 422\n\nCOMMANDS=\"command1; command2; command3\"\n$ ssh user@hostname \"$COMMANDS\"\n\n# collects the uptime of a list of remote hosts\n#Description: Uptime monitor\nIP_LIST=\"192.168.0.1 192.168.0.5 192.168.0.9\"\nUSER=\"test\"\nfor IP in $IP_LIST;\ndo\n    utime=$(ssh ${USER}@${IP} uptime | awk '{ print $3 }' )\n    echo $IP uptime: $utime\ndone\n\n# Redirecting data into stdin of remote host\necho 'text' | ssh user@remote_host 'echo'\nssh user@remote_host 'echo' < file\n\n# Running graphical commands on a remote machine\n\n```\n## transfer files through the network\n```bash\n# FTP can only be used if the FTP server is installed on the remote machine.\n# FTP usually runs on port 21.\nlftp username@ftphost\n\n# To change the directory of a local machine, use lcd\n\n# download a file\nlftp username@ftphost:~> get filename\n\n# To upload a file from the current directory\nlftp username@ftphost:~> put filename\n\n# An lftp session can be terminated by using the quit\n\n# Automated FTP transfer\n# -i option of ftp turns off the interactive session\n# -n option tells ftp to not attempt automatically logging in and use the username and password we supply it.\nHOST='domain.com'\nUSER='foo'\nPASSWD='password'\nftp -i -n $HOST <<EOF   \nuser ${USER} ${PASSWD}\nbinary\ncd /home/slynux\nput testfile.jpg\nget serverfile.jpg\nquit\nEOF\n\n# SFTP requires an OpenSSH server to be installed and running\nsftp user@domainname\nsftp -oPort=422 user@domainname # in case port no is not 22\n\nscp SOURCE DESTINATION\nscp filename user@remotehost:/home/path # -r Recursive copy\n\n```\n## connect to a wireless network\n```bash\n\n```\n## passwordless SSH\n```bash\nssh-keygen -t rsa\nssh USER@REMOTE_HOST \"cat >> ~/.ssh/authorized_keys\" < ~/.ssh/id_rsa.pub\n```\n## port forwarding using SSH\n```bash\n\n```\n## mounte a remote drive at a local mount point\n```bash\n\n```\n## network traffic and port analysis\n```bash\n# list all opened ports on the system along with the details\nlsof -i\n\n# In order to list out the opened ports from the current machine\nlsof -i | grep \":[0-9]\\+->\" -o | grep \"[0-9]\\+\" -o | sort | uniq\n\n# netstat -tnp to list opened port and services\nnetstat -tnp\n\n```\n## create arbitrary sockets\n```bash\n# reate network sockets to do data transfer over a TCP/IP network\n# create a listening socket on port 1234 on the local machine\nnc -l 1234  # netcat\n\n# Connect to the socket\nnc HOST 1234 # replace HOST with localhost, or the IP address or hostname\n\nryan@base:~$ nc -l 12345\nryan@u1:~$ nc base 12345\n# type hi in u1, hi will appear in base as well\n\n\n# Quickly copying files over the network\nnc -l 1234 > destination_filename   # on receiving machine\nnc HOST 1234 < source_filename  # on sender machine\n\n```\n## share an internet connection\n```bash\n# you don't have a router and you need to share the Internet?\n\n```\n## basic firewall using iptables\n```bash\n# Block traffic to a specific IP address\niptables -A OUTPUT -d 8.8.8.8 -j DROP\n\n# Block traffic to a specific port\niptables -A OUTPUT -p tcp -dport 21 -j DROP\n# -A which instructs iptables to append a new rule to the chain\n# OUTPUT chain which runs on all the outgoing traffic\n# -j to instruct iptables to DROP the packet\n# -p parameter to specify that this rule should match only TCP on the port specified with -dport which block all the outbound FTP traffic\n\n\n# clear the changes made to the iptables chains\niptables --flush\n```\n\n# Put on the Monitor's Cap\n\n## Monitor disk usage\n```bash\ndu -a DIRECTORY # -a for all files recursively\ndu -h FILENAME\n\n# Displaying the grand total sum of disk usage\ndu -c FILENAME1 FILENAME2..\ndu -c DIRECTORY\n# -s (summarize), which will print only the grand total\n\n# Excluding files from the disk usage calculation\ndu --exclude \"*.txt\" FILES\ndu --exclude-from EXCLUDE.txt DIRECTORY\ndu --max-depth 2 DIRECTORY\n\n# Finding the 10 largest size files from a given directory\ndu -ak SOURCE_DIR | sort -nrk 1 | head\n# -a makes du traverse the SOURCE_DIR and calculates the size of all files\n# sort is used to perform a numerical sort with column 1 and reverse it\n\n# find only the largest files and not directories\nfind . -type f -exec du -k {} \\; | sort -nrk 1 | head\n\n```\n\n## execution time for a command\n```bash\ntime COMMAND\n/usr/bin/time -a -o output.txt COMMAND\n# append the time statistics to a file without overwriting, use the -a\n\n# Real time: %e\n# User: %U\n# sys: %S\n/usr/bin/time -f \"Time: %U\" -a -o timing.log COMMAND  # formatted output\n/usr/bin/time -f \"Time: %U\" COMMAND> command_output.txt 2>time.log\n\n# %C Name and command-line arguments of the command being timed.\n# %D Average size of the process unshared data area, in kilobytes.\n# %E Elapsed real (wall clock) time used by the process in [hours:]minutes:seconds.\n# %x Exit status of the command.\n# %k Number of signals delivered to the process.\n# %W Number of times the process was swapped out of the main memory.\n# %Z System page size in bytes. This is a per-system constant, but varies between systems\n# %P Percentage of the CPU that this job got. This is just user + system times divided by the total running time. It also prints a percentage sign.\n# %K Average total (data + stack + text) memory usage of the process, in Kilobytes.\n# %w Number of times that the program was context-switched voluntarily, for instance while waiting for an I/O operation to complete.\n# %c Number of times the process was context-switched involuntarily (because the time slice expired).\n```\n\n## logged in users, boot logs and boot failure\n```bash\nwho\nw # more detailed information about the logged in users\nusers # list only the usernames of the users\nusers | tr ' ' '\\n' | sort | uniq   # find unique users\nuptime # how long the system has been powered on\n# 21:44:33 up 3:17, 8 users, load average: 0.09, 0.14, 0.09\nuptime | grep -Po '\\d{2}\\:\\d{2}\\:\\d{2}' # xtract only three two-digit numbers separated by colons.\n\n# get information about previous boot and user logged sessions\nlast\nlast -f /var/log/wtmp\nlast USER # about login sessions for a single user\nlast reboot # Get information about reboot sessions\nlastb  # about failed user login sessions\n```\n\n## top 10 cpu consuming processes in an hour\n```bash\n# monitoring and calculating CPU usages in one hour\nSECS=3600\nUNIT_TIME=60\n#Change the SECS to total seconds for which monitoring is to be performed.\n#UNIT_TIME is the interval in seconds between each sampling\nSTEPS=$(( $SECS / $UNIT_TIME ))\necho Watching CPU usage... ;\nfor((i=0;i<STEPS;i++))\ndo\n    ps -eocomm,pcpu | tail -n +2 >> /tmp/cpu_usage.$$\n    sleep $UNIT_TIME\ndone\necho\necho CPU eaters :\ncat /tmp/cpu_usage.$$ | \\\nawk '{ process[$1]+=$2; }END{for(i in process){printf(\"%-20s %s\\n\",i, process[i]) ;}}' \\\n| sort -nrk 2 | head\nrm /tmp/cpu_usage.$$\n#Remove the temporary log file\n```\n\n## mmonitor command output with watch\n```bash\n# monitor the output of a command\nwatch COMMAND\nwatch 'ls -l | grep \"^d\"' # will update the output at a default interval of two seconds\nwatch -n 5 'ls -l' # at regular intervals of 5 seconds\nwatch -d 'COMMAND' # Difference highlighting\n```\n\n## log access to files and directories\n```bash\n\n```\n\n## logfile management with logrotate\n```bash\n# logrotate has the configuration directory at /etc/logrotate.d.\n# customerized config file: /etc/logrotate.d/program\n/var/log/program.log {  # logfile path\nmissingok   # Ignore if the logfile is missing and return without rotating the log.\nnotifempty  # Only rotate the log if the source logfile is not empty\nsize 30k    # Limit the size of the logfile\ncompress    # Enable compression with gzip for older logs.\nweekly      # Specify the interval at which the rotation is to be performed\nrotate 5    # It is the number of older copies of logfile archives to be kept\ncreate 0600 root root   # Specify the mode, user, and the group of the logfile archive\n}\n```\n\n## logging with syslog\n```bash\n#/var/log/boot.log      Boot log information.\n#/var/log/httpd         Apache web server log.\n#/var/log/messages      Post boot kernel information.\n#/var/log/auth.log      User authentication log.\n#/var/log/dmesg         System boot up messages.\n#/var/log/mail.log      Mail server log.\n#/var/log/Xorg.0.log    X Server log.\n\n#logger LOG_MESSAGE\nlogger This is a test log line\ntail -n 1 /var/log/messages\n# Sep 29 07:47:44 slynux-laptop slynux: This is a test log line\n# it logs to /var/log/messages by default\n\n# with a specified tag\nlogger -t TAG This is a message\n# Sep 29 07:48:42 slynux-laptop TAG: This is a message\n\n# You can see the tag strings and associated logfiles from the configuration files located in the /etc/rsyslog.d/ directory.\n\n```\n\n## monitor user login to find intruder\n```bash\n#!/bin/bash\n#Filename: intruder_detect.sh\n#Description: Intruder reporting tool with auth.log input\nAUTHLOG=/var/log/auth.log\nif [[ -n $1 ]];\nthen\nAUTHLOG=$1\necho Using Log file : $AUTHLOG\nfi\nLOG=/tmp/valid.$$.log\ngrep -v \"invalid\" $AUTHLOG > $LOG\nusers=$(grep \"Failed password\" $LOG | awk '{ print $(NF-5) }' | sort |\nuniq)\nprintf \"%-5s|%-10s|%-10s|%-13s|%-33s|%s\\n\" \"Sr#\" \"User\" \"Attempts\" \"IP\naddress\" \"Host_Mapping\" \"Time range\"\nucount=0;\nip_list=\"$(egrep -o \"[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\" $LOG | sort |\nuniq)\"\nfor ip in $ip_list;\ndo\ngrep $ip $LOG > /tmp/temp.$$.log\nfor user in $users;\ndo\ngrep $user /tmp/temp.$$.log> /tmp/$$.log\ncut -c-16 /tmp/$$.log > $$.time\ntstart=$(head -1 $$.time);\nstart=$(date -d \"$tstart\" \"+%s\");\ntend=$(tail -1 $$.time);\nend=$(date -d \"$tend\" \"+%s\")\nlimit=$(( $end - $start ))\nif [ $limit -gt 120 ];\nthen\nlet ucount++;\nIP=$(egrep -o \"[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\" /tmp/$$.log |\nhead -1 );\nTIME_RANGE=\"$tstart-->$tend\"\nATTEMPTS=$(cat /tmp/$$.log|wc -l);\nHOST=$(host $IP | awk '{ print $NF }' )\nprintf \"%-5s|%-10s|%-10s|%-10s|%-33s|%-s\\n\" \"$ucount\" \"$user\"\n\"$ATTEMPTS\" \"$IP\" \"$HOST\" \"$TIME_RANGE\";\nfi\ndone\ndone\nrm /tmp/valid.$$.log /tmp/$$.log $$.time /tmp/temp.$$.log 2> /dev/null\n```\n\n## remote disk usage health monitor\n1. set up a common user account on all the remote machines\n2. configure auto-login with SSH\n```bash\n#!/bin/bash\n#Filename: disklog.sh\n#Description: Monitor disk usage health for remote systems\nlogfile=\"diskusage.log\"\nif [[ -n $1 ]]\nthen\n    logfile=$1\nfi\nif [ ! -e $logfile ]\nthen\n    printf \"%-8s %-14s %-9s %-8s %-6s %-6s %-6s %s\\n\" \"Date\" \"IP\n    address\" \"Device\" \"Capacity\" \"Used\" \"Free\" \"Percent\" \"Status\" > $logfile\nfi\nIP_LIST=\"127.0.0.1 0.0.0.0\"\n#provide the list of remote machine IP addresses\n(\nfor ip in $IP_LIST;\ndo\n#slynux is the username, change as necessary\nssh slynux@$ip 'df -H' | grep ^/dev/ > /tmp/$$.df\nwhile read line;\ndo\ncur_date=$(date +%D)\nprintf \"%-8s %-14s \" $cur_date $ip\necho $line | awk '{ printf(\"%-9s %-8s %-6s %-6s\n%-8s\",$1,$2,$3,$4,$5); }'\npusg=$(echo $line | egrep -o \"[0-9]+%\")\npusg=${pusg/\\%/};\nif [ $pusg -lt 80 ];\nthen\necho SAFE\nelse\necho ALERT\nfi\ndone< /tmp/$$.df\ndone\n) >> $logfile\n\n# We can use the cron utility to run the script at regular intervals\n# every day at 10 a.m., write the following entry in the crontab\n00 10 * * * /home/path/disklog.sh /home/user/diskusg.log\n\n```\n\n## measure and optimize power usage\n```bash\n# The log data is stored in the /var/log/wtmp file\n\n#!/bin/bash\n#Filename: active_users.sh\n#Description: Reporting tool to find out active users\nlog=/var/log/wtmp\nif [[ -n $1 ]];\nthen\nlog=$1\nfi\nprintf \"%-4s %-10s %-10s %-6s %-8s\\n\" \"Rank\" \"User\" \"Start\" \"Logins\"\n\"Usage hours\"\nlast -f $log | head -n -2 > /tmp/ulog.$$\ncat /tmp/ulog.$$ | cut -d' ' -f1 | sort | uniq> /tmp/users.$$\n(\nwhile read user;\ndo\ngrep ^$user /tmp/ulog.$$ > /tmp/user.$$\nminutes=0\nwhile read t\ndo\ns=$(echo $t | awk -F: '{ print ($1 * 60) + $2 }')\nlet minutes=minutes+s\ndone< <(cat /tmp/user.$$ | awk '{ print $NF }' | tr -d ')(')\nfirstlog=$(tail -n 1 /tmp/user.$$ | awk '{ print $5,$6 }')\nnlogins=$(cat /tmp/user.$$ | wc -l)\nhours=$(echo \"$minutes / 60.0\" | bc)\nprintf \"%-10s %-10s %-6s %-8s\\n\" $user \"$firstlog\" $nlogins $hours\ndone< /tmp/users.$$\n) | sort -nrk 4 | awk '{ printf(\"%-4s %s\\n\", NR, $0) }'\nrm /tmp/users.$$ /tmp/user.$$ /tmp/ulog.$$\n```\n\n## Measuring and optimizing power usage\n```bash\npowertop\npowertop --html # generating HTML reports\n```\n\n## monitor disk activity\n```bash\niotop -o    # show only those processes which are doing active I/O\niotop -b -n 2 # print the statistics two times and then exit\niotop -p PID # Monitor a specific process\n```\n\n## check disk and filesystem for errors\n```bash\n# check for errors on a partition or filesystem\nfsck /dev/sdb3\n\n# check all the filesystems configured in /etc/fstab\nfsck -A\n\n# Instruct fsck to automatically attempt fixing errors\nfsck -a /dev/sda2\n\n# simulate the actions\nfsck -AN\n```\n\n# Administration Calls\n## Gathering information about processes\n```bash\nps -f # -f (stands for full) \n# other than the ones attached to the current terminal, -e (every) option\n\n# display the required columns of output, -o\nps -eo comm,pcpu | head\n#pcpu Percentage of CPU\n#pid Process ID\n#ppid Parent Process ID\n#pmem Percentage of memory\n#comm Executable filename\n#cmd Simple command\n#user The user who started the process\n#nice The priority (niceness)\n#time Cumulative CPU time\n#etime Elapsed time since the process started\n#tty The associated TTY device\n#euid The effective user\n#stat Process state\n\n# display several parameters along with the top CPU consuming processes\ntop\n\n# Sorting the ps output\nps -eo comm,pcpu --sort -pcpu | head\n\n# Finding the process ID when given command names\nps -C COMMAND_NAME\nps -C COMMAND_NAME -o pid= # lists the process IDs\npgrep COMMAND\npgrep bash -d \":\" # define delimiter rather than using a newline\npgrep -u root,slynux COMMAND # Specify a list of owners of the user for the matching processes\npgrep -c COMMAND # Return the count of matching processes\n\n# Specify an effective users' list by using -u EUSER1, EUSER2,\n# Specify a real users' list by using -U RUSER1, RUSER2\nps -u root -U root -o user,pcpu\n\n# TTY filter for ps\nps -t pts/0,pts/1\n\n# Information about process threads\nps -eLf\n# -L : show information about threads. \n# NLWP is the thread count for a process and NLP is the thread ID for each entry\nps -eLf --sort -nlwp | head\n\n# Showing environment variables for a process\nps -eo cmd e\n\n# if /usr/bin/windowapp did not work\nps -C windowapp -eo cmd e   # find out the env variable, and prefix to the cmd\nDISPLAY=:0 /usr/bin/windowapp\n\nwhich # find the location of a command\nwhich ls # /bin/ls\nwhereis ls\nwhatis ls # one-line description of the command\n\n# Add path\nexport PATH=$PATH:/home/ryan/bin\n\nfile FILENAME # return file type\n\n# specifies the average of the total number of runnable processes\nuptime\n\n```\n\n## Killing processes and send or respond to signals\n```bash\nkill -l # print signal numbers and corresponding signal names\n\n# specify a signal to be sent to a process via the kill\nkill -s SIGNAL PID\nkill -s SIGKILL PROCESS_ID # same as : kill -9 PROCESS_ID\n\nkillall -u USERNAME process_name\npkill process_name\n\n# trap is a command used to assign signal handler to signals in a script\ntrap 'signal_handler_function_name' SIGNAL LIST\n\n#/bin/bash\n#Filename: sighandle.sh\n#Description: Signal handler\nfunction handler()\n{\n    echo Hey, received signal : SIGINT\n}\necho My process ID is $$\ntrap 'handler' SIGINT\n#handler is the name of the signal handler function for SIGINT signal\nwhile true;\ndo\n    sleep 1\ndone\n\n```\n\n## Sending messages to user terminals\n```bash\n# broadcast a message to all users and all logged in terminals\ncat message.txt | wall\n\n\n```\n\n## Gathering system information\n```bash\n# print the hostname of the current system\nhostname\nuname -n\nuname -a\nuname -r # kernel release\nuname -m # machine type\n\ncat /proc/cpuinfo # print details about the CPU\ncat /proc/meminfo # memory info\n\n```\n\n## Using /proc to gather information\n```bash\n# /proc/4295/environ will display all the environment variables\n```\n\n## Scheduling with cron\n```bash\n02 * * * * /home/slynux/test.sh # execute test.sh at 2nd mintues of all hours\n00 5,6,7 * * /home/slynux/test.sh #  fifth, sixth, and seventh hours\n00 */12 * * 0 /home/slynux/script.sh  # every hour on Sundays\n00 02 * * * /sbin/shutdown -h # 2 A.M. everyday\n\n# -e option to crontab to start editing the cron table\ncrontab -e\n\ncrontab<<EOF\n02 * * * * /home/slynux/script.sh\nEOF\n\n# Minute (0 - 59)   5,10 or */5\n# Hour (0 - 23)\n# Day (1 - 31)\n# Month (1 - 12)\n# Weekday (0 - 6)\n# COMMAND (the script\n\n# Specifying environment variables\ncrontab<<EOF\nhttp_proxy=http://192.168.0.3:3128\n00 * * * * /home/slynux/download.sh\nEOF\n\n# Running commands at system start up/boot\n@reboot command\n\ncrontab -l # list existed job\ncrontab -r # remove cron table for current user\ncrontab -u ryan -r # need root\n```\n\n## Writing and reading the MySQL database from bash\n```bash\n\n```\n\n## User administration scripts\n```bash\nuseradd USER -p PASSWORD\npasswd USER\naddgroup USER GROUP\n\n```\n\n## Bulk image resizing and format conversion\n```bash\n\n```\n\n## Taking screenshots from the terminal\n```bash\n\n```\n\n## Managing multiple terminals from one\n```bash\n# using a utility called GNU screen\n\n```\n\n-- END --\n","slug":"Notes-LinuxShellScriptsCookBook","published":1,"updated":"2020-04-30T09:23:19.530Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedic000wsd5tstki3hsq","content":"<p>Notes for &lt;&lt; Linux Shell Scripts Cook Book&gt;&gt;.<br>It is very helpful for people with zero or little knowledge about Linux Shell Scripts.</p>\n<a id=\"more\"></a>\n\n<h1 id=\"Shell-Something-Out\"><a href=\"#Shell-Something-Out\" class=\"headerlink\" title=\"Shell Something Out\"></a>Shell Something Out</h1><h2 id=\"introduction\"><a href=\"#introduction\" class=\"headerlink\" title=\"introduction\"></a>introduction</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\"># indicate using which shell interpretor</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># when a shell starts, it initially define various setting from ~/.bashrc or ~/.bash_profile</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"printing-in-the-terminal\"><a href=\"#printing-in-the-terminal\" class=\"headerlink\" title=\"printing in the terminal\"></a>printing in the terminal</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"hi \\!\"</span>    <span class=\"comment\"># ! needs escape, otherwise means not operator</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n hello   <span class=\"comment\"># escape new line</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"string contains escape sequence\"</span>   <span class=\"comment\"># when using escape sequence</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\e[31m this is red text \\e[0m\"</span>    <span class=\"comment\"># \\e[31m - red; \\e[0m - reset</span></span><br><span class=\"line\"><span class=\"comment\"># reset = 0, black = 40, red = 41, green = 42, yellow = 43, blue = 44, magenta = 45, cyan = 46, and white=47</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">\"%-5s %-10s %-4.2f \\n\"</span> 11 ryan 99.88888</span><br><span class=\"line\"><span class=\"comment\"># printf without newline</span></span><br><span class=\"line\"><span class=\"comment\"># %-5s: string substitution + left alignment + width 5</span></span><br><span class=\"line\"><span class=\"comment\"># %-4.2f: float + 2 decimal</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"variable-and-environment-variable\"><a href=\"#variable-and-environment-variable\" class=\"headerlink\" title=\"variable and environment variable\"></a>variable and environment variable</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">env <span class=\"comment\"># view all the environment variables relative to a terminal</span></span><br><span class=\"line\">cat /proc/<span class=\"variable\">$PID</span>/environ | tr <span class=\"string\">'\\0'</span> <span class=\"string\">'\\n'</span></span><br><span class=\"line\"><span class=\"comment\"># environment variable for that process</span></span><br><span class=\"line\"><span class=\"comment\"># trade to get each variable one line</span></span><br><span class=\"line\"></span><br><span class=\"line\">pgrep &lt;program&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># equality vs assignment</span></span><br><span class=\"line\">var = value</span><br><span class=\"line\">var=value</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># PATH is defined in /etc/environment or /etc/profile or ~/.bashrc</span></span><br><span class=\"line\"><span class=\"comment\"># store a list of paths where to search for executables, libraries</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$NEW_PATH</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># get length of variable</span></span><br><span class=\"line\">LENGTH=<span class=\"variable\">$&#123;#VAR&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># identify current shell</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$SHELL</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># UID value of root is 0</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$UID</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"math\"><a href=\"#math\" class=\"headerlink\" title=\"math\"></a>math</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n=10</span><br><span class=\"line\"><span class=\"built_in\">let</span> result=n+10</span><br><span class=\"line\"><span class=\"built_in\">let</span> n++</span><br><span class=\"line\"><span class=\"built_in\">let</span> n+=6</span><br><span class=\"line\"></span><br><span class=\"line\">result=$[n+2]</span><br><span class=\"line\">result=$[<span class=\"variable\">$n</span>+2]</span><br><span class=\"line\"></span><br><span class=\"line\">result=$((n+5))</span><br><span class=\"line\"></span><br><span class=\"line\">result=`expr 4+3`</span><br><span class=\"line\">result=$(expr n+5)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># bc for advanced</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"4*0.53\"</span> | bc</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"scale=2; 3/8\"</span> | bc    <span class=\"comment\"># semicolon as a delimiter</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># base convention</span></span><br><span class=\"line\">n=100</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"obase=2; <span class=\"variable\">$n</span>\"</span> | bc <span class=\"comment\"># 1100100</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"obase=10;ibase=2; <span class=\"variable\">$n</span>\"</span> | bc <span class=\"comment\"># 4</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"sqrt(100)\"</span> | bc</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"10^10\"</span> | bc</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"file-description-and-redirection\"><a href=\"#file-description-and-redirection\" class=\"headerlink\" title=\"file description and redirection\"></a>file description and redirection</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 0-stdin, 1-stdout, 2-stderr</span></span><br><span class=\"line\"><span class=\"comment\"># run echo $? immediately after the command execution to print the exit status</span></span><br><span class=\"line\"><span class=\"comment\"># 0 means successful completion</span></span><br><span class=\"line\"></span><br><span class=\"line\">cat a* 2&gt;err.txt    <span class=\"comment\"># 2 stands for stderr. so error will be redirect to err.txt</span></span><br><span class=\"line\">cat a* | tee out.txt | cat -n</span><br><span class=\"line\"><span class=\"comment\"># 1. get 2 stderr which show up and 2 stdout which go to next level </span></span><br><span class=\"line\"><span class=\"comment\"># 2. tee will get 2 stdout into both out.txt and pipeline</span></span><br><span class=\"line\"><span class=\"comment\"># 3. cat get stdin and add line number</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"arrays-and-associative-arrays\"><a href=\"#arrays-and-associative-arrays\" class=\"headerlink\" title=\"arrays and associative arrays\"></a>arrays and associative arrays</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array_var[0]=<span class=\"string\">'test1'</span></span><br><span class=\"line\">array_var[1]=<span class=\"string\">'test2'</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;array_var[0]&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;array_var[*]&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;array_var[@]&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;#array_var[@]&#125;</span>   <span class=\"comment\">#2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># associate array</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -A ass_array</span><br><span class=\"line\">ass_array[apple]=100</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># list array indexes</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;!array_var[*]&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"visiting-aliases\"><a href=\"#visiting-aliases\" class=\"headerlink\" title=\"visiting aliases\"></a>visiting aliases</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> install=<span class=\"string\">'sudo apt-get install'</span></span><br><span class=\"line\">install docker <span class=\"comment\"># = sudo apt-get install docker</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"grabbing-info-about-the-terminal\"><a href=\"#grabbing-info-about-the-terminal\" class=\"headerlink\" title=\"grabbing info about the terminal\"></a>grabbing info about the terminal</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tput cols   <span class=\"comment\"># get width of terminal</span></span><br><span class=\"line\">tput lines  <span class=\"comment\"># get height of terminal</span></span><br><span class=\"line\">tput cup 100 100</span><br><span class=\"line\">tput setb n  <span class=\"comment\"># 0-7 background color, 7-grey</span></span><br><span class=\"line\">tput setf n  <span class=\"comment\"># 0-7 text color, 0-black</span></span><br><span class=\"line\">tput bold</span><br><span class=\"line\">tput smul</span><br><span class=\"line\">tput rmul   <span class=\"comment\"># underline</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># hide password</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n <span class=\"string\">\"Enter password: \"</span></span><br><span class=\"line\">stty -<span class=\"built_in\">echo</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> password</span><br><span class=\"line\">stty <span class=\"built_in\">echo</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> Password <span class=\"built_in\">read</span>.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"dates-and-delays\"><a href=\"#dates-and-delays\" class=\"headerlink\" title=\"dates and delays\"></a>dates and delays</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">date +%s    <span class=\"comment\"># epoch time</span></span><br><span class=\"line\">date <span class=\"string\">\"+%d %B %Y\"</span> <span class=\"comment\"># 16 May 2018</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># get time take for a program</span></span><br><span class=\"line\">start=`date +%s`</span><br><span class=\"line\">...</span><br><span class=\"line\">end=`date +%s`</span><br><span class=\"line\"><span class=\"built_in\">let</span> time_taken=end-start</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>weekday:  %a Sat; %A Saturday</li>\n<li>Month:    %b Nov; %B November</li>\n<li>Day:      %d</li>\n<li>Date:     %D 10/20/99</li>\n<li>Year:     %y 10; %Y 2010</li>\n<li>Hour:     %I or %H    </li>\n<li>Minute:   %M</li>\n<li>Second:   %S</li>\n<li>Epoch:    %s</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># delay scripts</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n Count:</span><br><span class=\"line\">tput sc     <span class=\"comment\"># tput sc to store the cursor position</span></span><br><span class=\"line\">count=0</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"variable\">$count</span> -lt 40 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">let</span> count++</span><br><span class=\"line\">        sleep 1;</span><br><span class=\"line\">        tput rc     <span class=\"comment\"># tput rc to restore the cursor position</span></span><br><span class=\"line\">        tput ed     <span class=\"comment\"># clean existed number</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> -n <span class=\"variable\">$count</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"debugging-the-script\"><a href=\"#debugging-the-script\" class=\"headerlink\" title=\"debugging the script\"></a>debugging the script</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -x scripts.sh</span><br><span class=\"line\"><span class=\"comment\"># in scripts, using set -x and set +x to debug specific portion</span></span><br><span class=\"line\"><span class=\"comment\"># set -x : display arguments and commands</span></span><br><span class=\"line\"><span class=\"comment\"># set +x : disable debugging</span></span><br><span class=\"line\"><span class=\"comment\"># set -v : display input</span></span><br><span class=\"line\"><span class=\"comment\"># set +v : disable print input</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## DEBUG</span></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> DEBUG()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        [ <span class=\"string\">\"<span class=\"variable\">$_DEBUG</span>\"</span> == <span class=\"string\">\"on\"</span> ] &amp;&amp; <span class=\"variable\">$@</span> || :</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> &#123;1..10&#125;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">        DEBUG <span class=\"built_in\">echo</span> <span class=\"variable\">$i</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># #!/bin/bash -xv : enable debugging</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"function-and-arguments\"><a href=\"#function-and-arguments\" class=\"headerlink\" title=\"function and arguments\"></a>function and arguments</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># function can return default 0 or any one argument if success</span></span><br><span class=\"line\"><span class=\"comment\"># check if a command terminated successfully</span></span><br><span class=\"line\"><span class=\"variable\">$CMD</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $? -eq 0 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> successfully </span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> unsuccessfully</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"reading-the-output-of-a-sequence-of-commands\"><a href=\"#reading-the-output-of-a-sequence-of-commands\" class=\"headerlink\" title=\"reading the output of a sequence of commands\"></a>reading the output of a sequence of commands</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># add line number</span></span><br><span class=\"line\">ls | cat -n &gt; out.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># a subshell can be defined using () operation</span></span><br><span class=\"line\"><span class=\"comment\"># always quote them in double quotes to preserve the space and newline character</span></span><br><span class=\"line\">out=<span class=\"string\">\"<span class=\"variable\">$(cat test.txt)</span>\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"reading-n-characters-without-pressing-the-return-key\"><a href=\"#reading-n-characters-without-pressing-the-return-key\" class=\"headerlink\" title=\"reading n characters without pressing the return key\"></a>reading n characters without pressing the return key</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">read</span> -n 2 var <span class=\"comment\"># read 2 chars from input</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> -s password <span class=\"comment\"># read password in nonechoed mode</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> -p <span class=\"string\">\" Enter : \"</span> var <span class=\"comment\"># display a message</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> -t 2 var <span class=\"comment\"># read input within 2 sec</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> -d <span class=\"string\">\":\"</span> var <span class=\"comment\"># use delimiter to end input. hi:</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"running-a-command-until-it-succeeds\"><a href=\"#running-a-command-until-it-succeeds\" class=\"headerlink\" title=\"running a command until it succeeds\"></a>running a command until it succeeds</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">repeat</span></span>()&#123; <span class=\"keyword\">while</span> :; <span class=\"keyword\">do</span> <span class=\"variable\">$@</span> &amp;&amp; <span class=\"built_in\">return</span>; sleep 30; <span class=\"keyword\">done</span> &#125;</span><br><span class=\"line\">repeat wget -c url</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"field-separations-and-iterators\"><a href=\"#field-separations-and-iterators\" class=\"headerlink\" title=\"field separations and iterators\"></a>field separations and iterators</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># IFS internal field separator</span></span><br><span class=\"line\">data_set1=<span class=\"string\">\"1 2 3 4 5\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> data <span class=\"keyword\">in</span> data_set1;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$data</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\">data_set1=<span class=\"string\">\"1;2;3;4;5\"</span></span><br><span class=\"line\">IFS=<span class=\"string\">\";\"</span> <span class=\"comment\"># so that system how to delimite data</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> data <span class=\"keyword\">in</span> data_set1;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$data</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> var <span class=\"keyword\">in</span> vars; <span class=\"comment\"># for i in &#123;1..10&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$var</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># while</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> condition</span><br><span class=\"line\"><span class=\"keyword\">do</span> </span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># until</span></span><br><span class=\"line\">until [ <span class=\"variable\">$x</span> -eq 9 ] <span class=\"comment\"># once meet, loop ends</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"comparisons-and-tests\"><a href=\"#comparisons-and-tests\" class=\"headerlink\" title=\"comparisons and tests\"></a>comparisons and tests</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> condition;</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> condition;</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> condition; </span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># logical operators</span></span><br><span class=\"line\">[ condition ] &amp;&amp; action; <span class=\"comment\"># action if condition true</span></span><br><span class=\"line\">[ condition ] || action; <span class=\"comment\"># action if condition fasle</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># at least one space in []</span></span><br><span class=\"line\">[ <span class=\"variable\">$var</span> -eq 0 ]</span><br><span class=\"line\">[ <span class=\"variable\">$var</span> -nq 0 ]  <span class=\"comment\"># !=</span></span><br><span class=\"line\"><span class=\"comment\"># -gt, -ls, -ge &gt;=, -le &lt;=</span></span><br><span class=\"line\">[ <span class=\"variable\">$var</span> -ne 0 -a <span class=\"variable\">$var2</span> -ne 0 ] <span class=\"comment\"># -a means and</span></span><br><span class=\"line\">[ <span class=\"variable\">$var</span> -ne 0 -o <span class=\"variable\">$var2</span> -ne 0 ] <span class=\"comment\"># -o means or</span></span><br><span class=\"line\"></span><br><span class=\"line\">[ -f <span class=\"variable\">$file</span> ] <span class=\"comment\"># true if holds a file path or filename</span></span><br><span class=\"line\">[ -x <span class=\"variable\">$file</span> ] <span class=\"comment\"># true if file is executable</span></span><br><span class=\"line\">[ -w <span class=\"variable\">$file</span> ] <span class=\"comment\"># true if file is writable</span></span><br><span class=\"line\">[ -r <span class=\"variable\">$file</span> ] <span class=\"comment\"># true if file is readable</span></span><br><span class=\"line\">[ -d <span class=\"variable\">$file</span> ] <span class=\"comment\"># true if it is a directory</span></span><br><span class=\"line\">[ -e <span class=\"variable\">$file</span> ] <span class=\"comment\"># true if it is existed file</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># file exists sample</span></span><br><span class=\"line\">fpath=<span class=\"string\">\"/etc/passwd\"</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -e <span class=\"variable\">$fpath</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> file exists.</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> file not exists.</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># string comparison, use double square brackets, single brackets sometimes errors</span></span><br><span class=\"line\">[[ <span class=\"variable\">$str1</span> = <span class=\"variable\">$str2</span> ]] <span class=\"comment\"># space needed beside =</span></span><br><span class=\"line\">[[ -z <span class=\"variable\">$str</span> ]] <span class=\"comment\"># true if str hols an empty string, str=\"\"</span></span><br><span class=\"line\">[[ -n <span class=\"variable\">$str</span> ]] <span class=\"comment\"># true if str hols an non-empty string, str=\"xx\"</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Have-a-Good-Command\"><a href=\"#Have-a-Good-Command\" class=\"headerlink\" title=\"Have a Good Command\"></a>Have a Good Command</h1><h2 id=\"concatenating-with-cat\"><a href=\"#concatenating-with-cat\" class=\"headerlink\" title=\"concatenating with cat\"></a>concatenating with cat</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cat can read both file and stdin</span></span><br><span class=\"line\">cat -T filename <span class=\"comment\"># display tab as ^I</span></span><br><span class=\"line\">cat -n filename <span class=\"comment\"># add line number, -b kill blank line</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"record-and-play-back-of-terminal-sessions\"><a href=\"#record-and-play-back-of-terminal-sessions\" class=\"headerlink\" title=\"record and play back of terminal sessions\"></a>record and play back of terminal sessions</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -t dump timing data to stderr</span></span><br><span class=\"line\">script -t 2&gt;timing.log -a output.session</span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br><span class=\"line\"></span><br><span class=\"line\">scriptreplay timing.log output.session</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"find-file-and-file-listing\"><a href=\"#find-file-and-file-listing\" class=\"headerlink\" title=\"find file and file listing\"></a>find file and file listing</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find . -<span class=\"built_in\">print</span>   <span class=\"comment\"># delimit by \\n</span></span><br><span class=\"line\"><span class=\"comment\"># ./1.txt</span></span><br><span class=\"line\"><span class=\"comment\"># ./2.txt</span></span><br><span class=\"line\">find . -print0  <span class=\"comment\"># delimit by \\n</span></span><br><span class=\"line\"><span class=\"comment\"># ./1.txt./2.txt</span></span><br><span class=\"line\">find . -name <span class=\"string\">\"*.txt\"</span> -<span class=\"built_in\">print</span></span><br><span class=\"line\">find . \\( -name <span class=\"string\">\"*.txt\"</span> -o -name <span class=\"string\">\"*.pdf\"</span> \\) -<span class=\"built_in\">print</span>  <span class=\"comment\"># (*.txt or *.pdf)</span></span><br><span class=\"line\">find  . -path <span class=\"string\">\"*/slynux/*\"</span> -<span class=\"built_in\">print</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># regex = regular expession, -i ignore case</span></span><br><span class=\"line\">find . -regex <span class=\"string\">\".*\\(\\.py\\|\\.txt\\)\"</span> <span class=\"comment\"># \".*.py|.txt\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># exclude !</span></span><br><span class=\"line\">find . ! -name <span class=\"string\">\"*.txt\"</span> -<span class=\"built_in\">print</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># level control</span></span><br><span class=\"line\">find . -maxdepth 2 ! -name <span class=\"string\">\"*.txt\"</span> -<span class=\"built_in\">print</span> <span class=\"comment\"># ./xxx/xxx</span></span><br><span class=\"line\">find . -mindepth 2 ! -name <span class=\"string\">\"*.txt\"</span> -<span class=\"built_in\">print</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># every object as a file. files: regular file, directory, character devices, block devices, symlinks, hardlinks, sockets, FIFO</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> d -<span class=\"built_in\">print</span>   </span><br><span class=\"line\"><span class=\"comment\"># d-dir, f-regular file, l-symbolic link, c-character special device, b-block device,s-socket, p-FIFO</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># file times</span></span><br><span class=\"line\"><span class=\"comment\"># -atime : access time</span></span><br><span class=\"line\"><span class=\"comment\"># -mtime : modification time = content</span></span><br><span class=\"line\"><span class=\"comment\"># -ctime : change time = metadata (such as permissions or ownership)</span></span><br><span class=\"line\"><span class=\"comment\"># time in minutes ( -amin, -mmin, -cmin)</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -atime -7 -<span class=\"built_in\">print</span> <span class=\"comment\"># within last 7 days</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -atime 7 -<span class=\"built_in\">print</span> <span class=\"comment\"># exactly 7 days old</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -atime +7 -<span class=\"built_in\">print</span> <span class=\"comment\"># older than 7 days</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># find files that newer than file.txt</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -newer file.txt -<span class=\"built_in\">print</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># file size over 2k, lt and eq; (M or G)</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -size +2k <span class=\"comment\"># -2k, 2k</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># delete all files with .log</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -name <span class=\"string\">\"*.log\"</span> -delete</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># based on permission, -perm</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -name <span class=\"string\">\"*.php\"</span> ! -perm 644 -<span class=\"built_in\">print</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># based on ownership, -user</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -user ryan -<span class=\"built_in\">print</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># using with exec \\;</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -user root -<span class=\"built_in\">exec</span> chown ryan &#123;&#125; \\;</span><br><span class=\"line\"><span class=\"comment\"># &#123;&#125; here will be replaced by the find result.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># exclude file</span></span><br><span class=\"line\">find . -name <span class=\"string\">\".git\"</span> -prune</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"xargs\"><a href=\"#xargs\" class=\"headerlink\" title=\"xargs\"></a>xargs</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># space is default delimiter, change to X </span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"splitXsplitXsplitXsplit\"</span> | xargs -d X -n 2</span><br><span class=\"line\"><span class=\"comment\"># split split</span></span><br><span class=\"line\"><span class=\"comment\"># split split</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"splitXsplitXsplitXsplit\"</span> | xargs -d X -n 2 ./show.sh</span><br><span class=\"line\"><span class=\"comment\"># show : split split</span></span><br><span class=\"line\"><span class=\"comment\"># show : split split</span></span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"comment\"># use -I to specify a replacament string when xargs expands</span></span><br><span class=\"line\">cat args.txt | xargs -I &#123;&#125; ./show.sh &#123;&#125; -l</span><br><span class=\"line\"><span class=\"comment\"># each argument will be pass to replace &#123;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -name <span class=\"string\">\"*.txt\"</span> -print0 | xargs -0 rm -f</span><br><span class=\"line\"><span class=\"comment\"># -print0 give one line output; -0 : delimiter is \\0</span></span><br><span class=\"line\"></span><br><span class=\"line\">cat files.txt | ( <span class=\"keyword\">while</span> <span class=\"built_in\">read</span> arg; <span class=\"keyword\">do</span> cat <span class=\"variable\">$arg</span>; <span class=\"keyword\">done</span> )</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"translat-with-tr\"><a href=\"#translat-with-tr\" class=\"headerlink\" title=\"translat with tr\"></a>translat with tr</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># only take stdin as input</span></span><br><span class=\"line\">tr [options] set1 set2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># uppler to lower</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"HELLO WHO IS THIS\"</span> | tr <span class=\"string\">'A-Z'</span> <span class=\"string\">'a-z'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># delete</span></span><br><span class=\"line\">cat file.txt | tr -d <span class=\"string\">'&lt;SET&gt;'</span></span><br><span class=\"line\">cat file.txt | tr -d -c <span class=\"string\">'0-9 \\n'</span> <span class=\"comment\"># complement; keep only 0-9, space and tab.</span></span><br><span class=\"line\">cat file.txt | tr -s <span class=\"string\">' '</span> <span class=\"comment\"># -s : squeeze repeating characters</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># $[ operation ] performs a numeric operation</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># character class</span></span><br><span class=\"line\"><span class=\"comment\">## alnum: Alphanumeric characters</span></span><br><span class=\"line\"><span class=\"comment\">## alpha: Alphabetic characters</span></span><br><span class=\"line\"><span class=\"comment\">## cntrl: Control (nonprinting) characters</span></span><br><span class=\"line\"><span class=\"comment\">## digit: Numeric characters</span></span><br><span class=\"line\"><span class=\"comment\">## graph: Graphic characters</span></span><br><span class=\"line\"><span class=\"comment\">## lower: Lowercase alphabetic characters</span></span><br><span class=\"line\"><span class=\"comment\">## print: Printable characters</span></span><br><span class=\"line\"><span class=\"comment\">## punct: Punctuation characters</span></span><br><span class=\"line\"><span class=\"comment\">## space: Whitespace characters</span></span><br><span class=\"line\"><span class=\"comment\">## upper: Uppercase characters</span></span><br><span class=\"line\"><span class=\"comment\">## xdigit: Hexadecimal characters</span></span><br><span class=\"line\">tr <span class=\"string\">'[:lower:]'</span> <span class=\"string\">'[:upper:]'</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"checksum-and-verification\"><a href=\"#checksum-and-verification\" class=\"headerlink\" title=\"checksum and verification\"></a>checksum and verification</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">md5sum filename</span><br><span class=\"line\">md5deep -rl directory_path &gt; directory.md5 <span class=\"comment\"># -l : using relative path</span></span><br><span class=\"line\"></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -print0 | xargs -0 md5sum &gt; dir.md5</span><br><span class=\"line\">md5sum -c dir.md5</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"cryptographic-tool-and-hash\"><a href=\"#cryptographic-tool-and-hash\" class=\"headerlink\" title=\"cryptographic tool and hash\"></a>cryptographic tool and hash</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crypt PASSPHRASE &lt;input_file &gt;encrypted_file</span><br><span class=\"line\">crypt PASSPHRASE -d &lt;encrypted_file &gt;output_file</span><br><span class=\"line\"></span><br><span class=\"line\">gpg -c filename <span class=\"comment\"># encrypt</span></span><br><span class=\"line\">gpg filename.gpg <span class=\"comment\"># decrypt</span></span><br><span class=\"line\"></span><br><span class=\"line\">base64 filename &gt; outputfile</span><br><span class=\"line\">base64 -d file &gt; outputfile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># md5sum and sha1sum to verify password</span></span><br><span class=\"line\"><span class=\"comment\"># store password in hash format</span></span><br><span class=\"line\"><span class=\"comment\"># when user provide password, they convert to hash and compare</span></span><br><span class=\"line\"></span><br><span class=\"line\">openssl passwd -1 -salt SALT_STRING PASSWORD</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"sort-unique-and-duplicate\"><a href=\"#sort-unique-and-duplicate\" class=\"headerlink\" title=\"sort unique and duplicate\"></a>sort unique and duplicate</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sort file1.txt file2.txt &gt; sorted.txt</span><br><span class=\"line\">sort -n file.txt    <span class=\"comment\"># numerical sort, -r reverse order, -M by months</span></span><br><span class=\"line\">sort -m sort1 sort2 <span class=\"comment\"># merge two sorted files</span></span><br><span class=\"line\">sort file1 file2 | uniq <span class=\"comment\"># find the unique lines</span></span><br><span class=\"line\"><span class=\"comment\"># check if a file is sorted</span></span><br><span class=\"line\">sort -C filename    <span class=\"comment\"># return 0 -&gt; sorted</span></span><br><span class=\"line\"></span><br><span class=\"line\">sort -nrk 1 data.txt    <span class=\"comment\"># -n numeric, -r reverse, -k specified the key, column 1</span></span><br><span class=\"line\">sort -nk 2,3 data.txt   <span class=\"comment\"># 1010dddddee, 01 is the key</span></span><br><span class=\"line\"><span class=\"comment\"># -b ignore leading blank lines</span></span><br><span class=\"line\"><span class=\"comment\"># -d sort in the dictionary order</span></span><br><span class=\"line\"></span><br><span class=\"line\">sort unsorted.txt | uniq -u <span class=\"comment\"># show only unique lines</span></span><br><span class=\"line\">sort unsorted.txt | uniq -c <span class=\"comment\"># count how many times of each lines</span></span><br><span class=\"line\">sort unsorted.txt | uniq -d <span class=\"comment\"># show only duplicate lines</span></span><br><span class=\"line\">sort data.txt | uniq -s 2 -w 2 <span class=\"comment\"># -s 2 : ignore fisrt 2 char; -w 2 : max compare chars</span></span><br><span class=\"line\"><span class=\"comment\"># u:01:bash - only 01 will be compared</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># xargs use space as default delimiter, if stdin contains space, need to use \\0</span></span><br><span class=\"line\">uniq -z file.txt | xargs -0 rm</span><br><span class=\"line\"><span class=\"comment\"># -z zero-byte terminated output, -0 use \\0 as delimiter</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"temp-file-naming-and-random-number\"><a href=\"#temp-file-naming-and-random-number\" class=\"headerlink\" title=\"temp file naming and random number\"></a>temp file naming and random number</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filename=`mktemp`</span><br><span class=\"line\">dirname=`mktemp -d`</span><br><span class=\"line\">tmpfile=`mktemp -u` <span class=\"comment\"># generate name without creating file</span></span><br><span class=\"line\">mktemp test.xxx <span class=\"comment\"># /home/ryan/test.NpW</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"split-files-and-data\"><a href=\"#split-files-and-data\" class=\"headerlink\" title=\"split files and data\"></a>split files and data</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">split [COMMAND_ARGS] PREFIX</span><br><span class=\"line\">split -b 10k data.file -d -a 4 split_file <span class=\"comment\"># -d numeric suffixes, -a length</span></span><br><span class=\"line\"><span class=\"comment\"># split_file0001 split_file0002</span></span><br><span class=\"line\"></span><br><span class=\"line\">split -l 10 data.file   <span class=\"comment\"># 10 lines for each file</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># csplit : content based split</span></span><br><span class=\"line\">csplit server.log /SERVER/ -n 2 -s &#123;*&#125; -f server -b <span class=\"string\">\"%02d.log\"</span> ; rm</span><br><span class=\"line\">server00.log</span><br><span class=\"line\"><span class=\"comment\"># /SERVER/ : SERVER is the string to split</span></span><br><span class=\"line\"><span class=\"comment\"># -n 2 : the number of digit as suffix of file name</span></span><br><span class=\"line\"><span class=\"comment\"># -f server : prefix of filename, server01</span></span><br><span class=\"line\"><span class=\"comment\"># -b \"%02d.log\" : suffix format, filename = prefix + suffix, server01.log</span></span><br><span class=\"line\"><span class=\"comment\"># -s : silent without printing other messages</span></span><br><span class=\"line\"><span class=\"comment\"># server00.log will be beginning to the first SERVER which is empty</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"slice-filename-based-on-extension\"><a href=\"#slice-filename-based-on-extension\" class=\"headerlink\" title=\"slice filename based on extension\"></a>slice filename based on extension</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># $&#123;VAR%.*&#125; : remove the part that matches .*</span></span><br><span class=\"line\">file=<span class=\"string\">\"sample.jpg\"</span></span><br><span class=\"line\">name=<span class=\"variable\">$&#123;file%.*&#125;</span> <span class=\"comment\"># sample</span></span><br><span class=\"line\">extension=<span class=\"variable\">$&#123;file#*.&#125;</span> <span class=\"comment\"># jpg, prefer ##</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># % and %%, similar to # and ##</span></span><br><span class=\"line\">file=<span class=\"string\">\"ryan.nus.sg.log\"</span></span><br><span class=\"line\">name=<span class=\"variable\">$&#123;file%.*&#125;</span> <span class=\"comment\"># ryan.nus.sg</span></span><br><span class=\"line\">name=<span class=\"variable\">$&#123;file%%.*&#125;</span> <span class=\"comment\"># ryan</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"rename-and-move-files-in-bulk\"><a href=\"#rename-and-move-files-in-bulk\" class=\"headerlink\" title=\"rename and move files in bulk\"></a>rename and move files in bulk</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">count=1</span><br><span class=\"line\"><span class=\"keyword\">for</span> img <span class=\"keyword\">in</span> `find . -<span class=\"built_in\">type</span> f -iname <span class=\"string\">\"*.jpg\"</span> -maxdepth 1`</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    new=image-<span class=\"variable\">$count</span>.<span class=\"variable\">$&#123;img##*.&#125;</span></span><br><span class=\"line\">    mv <span class=\"variable\">$img</span> <span class=\"variable\">$new</span></span><br><span class=\"line\">    <span class=\"built_in\">let</span> count++</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\">rename *.JPG *.jpg</span><br><span class=\"line\">rename <span class=\"string\">'s/ /_/g'</span> *  <span class=\"comment\"># replace space by _</span></span><br><span class=\"line\">rename <span class=\"string\">'y/A-Z/a-z/'</span> * <span class=\"comment\"># upper to lower</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"spell-check-and-dictionary-manipulation\"><a href=\"#spell-check-and-dictionary-manipulation\" class=\"headerlink\" title=\"spell check and dictionary manipulation\"></a>spell check and dictionary manipulation</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"automate-interactive-input\"><a href=\"#automate-interactive-input\" class=\"headerlink\" title=\"automate interactive input\"></a>automate interactive input</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"1\\nhello\\n\"</span> | ./interactive.sh</span><br><span class=\"line\">./interactive.sh &lt; input.data</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># expect</span></span><br><span class=\"line\">./automate_expect.sh</span><br><span class=\"line\"><span class=\"comment\">#Filename: automate_expect.sh</span></span><br><span class=\"line\">spawn ./interactive .sh <span class=\"comment\"># specifies which commands are to be automated</span></span><br><span class=\"line\">expect <span class=\"string\">\"Enter number:\"</span></span><br><span class=\"line\">send <span class=\"string\">\"1\\n\"</span></span><br><span class=\"line\">expect <span class=\"string\">\"Enter name:\"</span></span><br><span class=\"line\">send <span class=\"string\">\"hello\\n\"</span></span><br><span class=\"line\">expect eof  <span class=\"comment\"># end of the command interaction</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"make-commands-using-parallel-processes\"><a href=\"#make-commands-using-parallel-processes\" class=\"headerlink\" title=\"make commands using parallel processes\"></a>make commands using parallel processes</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PIDs=()</span><br><span class=\"line\"><span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> File1.iso File2.iso</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">md5sum <span class=\"variable\">$file</span> &amp;</span><br><span class=\"line\">PIDs+=(<span class=\"string\">\"$!\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"built_in\">wait</span> <span class=\"variable\">$&#123;PIDs[@]&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"File-In-File-Out\"><a href=\"#File-In-File-Out\" class=\"headerlink\" title=\"File In File Out\"></a>File In File Out</h1><h2 id=\"generate-files-of-any-size\"><a href=\"#generate-files-of-any-size\" class=\"headerlink\" title=\"generate files of any size\"></a>generate files of any size</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dd <span class=\"keyword\">if</span>=/dev/zero of=junk.data bs=1M count=1</span><br><span class=\"line\"><span class=\"comment\"># bs block size, count - number of blocks</span></span><br><span class=\"line\"><span class=\"comment\"># /dev/zero is a character special device, which infinitely returns the zero byte (\\0).</span></span><br><span class=\"line\"><span class=\"comment\"># also used to check the speed of memory operation</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"itersection-and-set-difference-A-B\"><a href=\"#itersection-and-set-difference-A-B\" class=\"headerlink\" title=\"itersection and set difference (A-B)\"></a>itersection and set difference (A-B)</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">comm A.txt B.txt</span><br><span class=\"line\"><span class=\"comment\"># 1st column - only in A</span></span><br><span class=\"line\"><span class=\"comment\"># 2nd column - only in B</span></span><br><span class=\"line\"><span class=\"comment\"># 3rd column - common lines. each column are delimited by \\t</span></span><br><span class=\"line\"></span><br><span class=\"line\">comm A.txt B.txt -1 -2  <span class=\"comment\"># remove 1 and 2, so show intersaction</span></span><br><span class=\"line\">comm A.txt B.txt -3 | sed <span class=\"string\">'s/^\\t//'</span></span><br><span class=\"line\"><span class=\"comment\"># s-substitute, to remove every \\t</span></span><br><span class=\"line\"><span class=\"comment\"># /^ - start of line marker; // - no char, replacement string</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"find-and-delete-duplicate-file\"><a href=\"#find-and-delete-duplicate-file\" class=\"headerlink\" title=\"find and delete duplicate file\"></a>find and delete duplicate file</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># remove_duplicates.sh</span></span><br><span class=\"line\"><span class=\"comment\"># -S : sorted by file size</span></span><br><span class=\"line\"><span class=\"comment\"># --time-style=long-iso : print date in ISO format</span></span><br><span class=\"line\"><span class=\"comment\"># getline : get the first line and dump it</span></span><br><span class=\"line\">ls -lS --time-style=long-iso | awk <span class=\"string\">'BEGIN &#123;</span></span><br><span class=\"line\"><span class=\"string\">    getline; getline;</span></span><br><span class=\"line\"><span class=\"string\">    name1=$8; size=$5</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#123;</span></span><br><span class=\"line\"><span class=\"string\">    name2=$8;</span></span><br><span class=\"line\"><span class=\"string\">    if (size==$5) </span></span><br><span class=\"line\"><span class=\"string\">    &#123;</span></span><br><span class=\"line\"><span class=\"string\">        \"md5sum \"name1 | getline; csum1=$1;</span></span><br><span class=\"line\"><span class=\"string\">        \"md5sum \"name2 | getline; csum2=$1;</span></span><br><span class=\"line\"><span class=\"string\">        if ( csum1==csum2 )</span></span><br><span class=\"line\"><span class=\"string\">        &#123;</span></span><br><span class=\"line\"><span class=\"string\">            print name1; print name2</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;;</span></span><br><span class=\"line\"><span class=\"string\">    size=$5; name1=name2;</span></span><br><span class=\"line\"><span class=\"string\">&#125;'</span> | sort -u &gt; duplicate_files</span><br><span class=\"line\">cat duplicate_files | xargs -I &#123;&#125; md5sum &#123;&#125; | sort | uniq -w 32 |</span><br><span class=\"line\">awk <span class=\"string\">'&#123; print \"^\"$2\"$\" &#125;'</span> | sort -u &gt; duplicate_sample</span><br><span class=\"line\"><span class=\"built_in\">echo</span> Removing..</span><br><span class=\"line\">comm duplicate_files duplicate_sample -2 -3 | tee /dev/stderr |</span><br><span class=\"line\">xargs rm</span><br><span class=\"line\"><span class=\"built_in\">echo</span> Removed duplicates files successfully.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"file-permission-ownership-and-sticky-bit\"><a href=\"#file-permission-ownership-and-sticky-bit\" class=\"headerlink\" title=\"file permission, ownership and sticky bit\"></a>file permission, ownership and sticky bit</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - regular file,d dir，c char device，b block device,l symbolic link,s socket,p pipe</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># u – specifies user permissions</span></span><br><span class=\"line\"><span class=\"comment\"># g – specifies group permissions</span></span><br><span class=\"line\"><span class=\"comment\"># o – specifies others permissions</span></span><br><span class=\"line\">chmod a+x filename <span class=\"comment\"># all</span></span><br><span class=\"line\">chown user.group filename</span><br><span class=\"line\">chmod 777 . -R  <span class=\"comment\"># -R apply recursively</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"make-file-immutable\"><a href=\"#make-file-immutable\" class=\"headerlink\" title=\"make file immutable\"></a>make file immutable</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chattr +i file  <span class=\"comment\"># cannot remove</span></span><br><span class=\"line\">chattr -i file  <span class=\"comment\"># remove immutable</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"generate-blank-files-in-bulk\"><a href=\"#generate-blank-files-in-bulk\" class=\"headerlink\" title=\"generate blank files in bulk\"></a>generate blank files in bulk</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch filename <span class=\"comment\"># create new file or change timestamp</span></span><br><span class=\"line\"><span class=\"comment\"># -a modify access time, -m modification time</span></span><br><span class=\"line\">touch -d <span class=\"string\">\"Jan 20 2018\"</span> filename <span class=\"comment\"># change date</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"find-symbolic-links-and-their-targets\"><a href=\"#find-symbolic-links-and-their-targets\" class=\"headerlink\" title=\"find symbolic links and their targets\"></a>find symbolic links and their targets</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># create symbolic link</span></span><br><span class=\"line\">ln -s target sym_link_name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print symbolic link</span></span><br><span class=\"line\">ls -l | grep <span class=\"string\">\"^l\"</span>   <span class=\"comment\"># ^l means starting with l</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> l -<span class=\"built_in\">print</span></span><br><span class=\"line\"></span><br><span class=\"line\">readlink link_name</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"enumerate-file-type-statistics\"><a href=\"#enumerate-file-type-statistics\" class=\"headerlink\" title=\"enumerate file type statistics\"></a>enumerate file type statistics</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># type of file</span></span><br><span class=\"line\">file filename   <span class=\"comment\"># -b to exclude the filename in the output</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Filename: filestat.sh</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$#</span> -ne 1 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Usage is <span class=\"variable\">$0</span> basepath\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">path=<span class=\"variable\">$1</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -A statarray;</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> line;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">ftype=`file -b <span class=\"string\">\"<span class=\"variable\">$line</span>\"</span> | cut -d, -f1`   <span class=\"comment\"># use , delimiter and use only 1st field</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> statarray[<span class=\"string\">\"<span class=\"variable\">$ftype</span>\"</span>]++;</span><br><span class=\"line\"><span class=\"keyword\">done</span> &lt; &lt;(find <span class=\"variable\">$path</span> -<span class=\"built_in\">type</span> f -<span class=\"built_in\">print</span>)</span><br><span class=\"line\"><span class=\"built_in\">echo</span> ============ File types and counts =============</span><br><span class=\"line\"><span class=\"keyword\">for</span> ftype <span class=\"keyword\">in</span> <span class=\"string\">\"<span class=\"variable\">$&#123;!statarray[@]&#125;</span>\"</span>;    <span class=\"comment\"># list of array indexes</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$ftype</span> : <span class=\"variable\">$&#123;statarray[\"$ftype\"]&#125;</span> </span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\">./filetype.sh /home/slynux/programs</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> line;</span><br><span class=\"line\"><span class=\"keyword\">do</span> something</span><br><span class=\"line\"><span class=\"keyword\">done</span> &lt; filename</span><br><span class=\"line\"><span class=\"comment\"># &lt;(find $path -type f -print) is equivalent to a filename</span></span><br><span class=\"line\"><span class=\"comment\"># the first &lt; is for input redirection and the second &lt; is for converting the subprocess output to a filename</span></span><br><span class=\"line\"><span class=\"comment\"># space there to avoid &lt;&lt; operator</span></span><br><span class=\"line\"><span class=\"comment\"># bash 3.x : done &lt;&lt;&lt; \"`find $path -type f -print`\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"use-loopback-files\"><a href=\"#use-loopback-files\" class=\"headerlink\" title=\"use loopback files\"></a>use loopback files</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"create-ISO-file-and-hybrid-ISO\"><a href=\"#create-ISO-file-and-hybrid-ISO\" class=\"headerlink\" title=\"create ISO file and hybrid ISO\"></a>create ISO file and hybrid ISO</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dd <span class=\"keyword\">if</span>=/dev/cdrom of=image.iso</span><br><span class=\"line\">mkisofs -V <span class=\"string\">\"Label\"</span> -o image.iso source_dir/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"find-the-difference-between-files-patching\"><a href=\"#find-the-difference-between-files-patching\" class=\"headerlink\" title=\"find the difference between files, patching\"></a>find the difference between files, patching</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diff -u version1.txt version2.txt &gt; version.patch</span><br><span class=\"line\">patch -p1 version1.txt &lt; version.patch <span class=\"comment\"># get version2</span></span><br><span class=\"line\">patch -p1 version2.txt &lt; version.patch <span class=\"comment\"># get version1</span></span><br><span class=\"line\"></span><br><span class=\"line\">diff -Naur directory1 directory2</span><br><span class=\"line\"><span class=\"comment\"># -N treat absent file as empty, -a consider all files as txt, -u unified</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"head-and-tail\"><a href=\"#head-and-tail\" class=\"headerlink\" title=\"head and tail\"></a>head and tail</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head -n 4 file  <span class=\"comment\"># first 4</span></span><br><span class=\"line\">head -n -4 file <span class=\"comment\"># exclude last 4</span></span><br><span class=\"line\"></span><br><span class=\"line\">tail -n 5 file <span class=\"comment\"># last 5</span></span><br><span class=\"line\">tail -n +6 file <span class=\"comment\"># exclude first 5</span></span><br><span class=\"line\"></span><br><span class=\"line\">tail -f growing_file    <span class=\"comment\"># follow</span></span><br><span class=\"line\">tail -f file --pid <span class=\"variable\">$PID</span> <span class=\"comment\"># tail until PID finish</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"list-only-directory\"><a href=\"#list-only-directory\" class=\"headerlink\" title=\"list only directory\"></a>list only directory</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -d */</span><br><span class=\"line\">ls -F | grep <span class=\"string\">\"/$\"</span></span><br><span class=\"line\">ls -l | grep <span class=\"string\">\"^d\"</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> d -maxdepth 1 -<span class=\"built_in\">print</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"fast-command-line-navigation-pushd-and-popd\"><a href=\"#fast-command-line-navigation-pushd-and-popd\" class=\"headerlink\" title=\"fast command line navigation, pushd and popd\"></a>fast command line navigation, pushd and popd</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">pushd</span> home/     <span class=\"comment\"># /home /</span></span><br><span class=\"line\"><span class=\"built_in\">pushd</span> ../lib    <span class=\"comment\"># /lib /home /</span></span><br><span class=\"line\"><span class=\"built_in\">pushd</span> ../var    <span class=\"comment\"># /var /lib /home /</span></span><br><span class=\"line\">                <span class=\"comment\">#   0    1    2   3</span></span><br><span class=\"line\"><span class=\"built_in\">pushd</span> +2        <span class=\"comment\"># /home / /var /lib </span></span><br><span class=\"line\"><span class=\"built_in\">dirs</span></span><br><span class=\"line\"><span class=\"built_in\">popd</span>            <span class=\"comment\"># / /var /lib</span></span><br><span class=\"line\"><span class=\"built_in\">popd</span> +2         <span class=\"comment\"># / /var</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> -        <span class=\"comment\"># switch back</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"count-number-of-lines-words-and-chars\"><a href=\"#count-number-of-lines-words-and-chars\" class=\"headerlink\" title=\"count number of lines, words and chars\"></a>count number of lines, words and chars</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wc -l file  <span class=\"comment\"># number of line</span></span><br><span class=\"line\">wc -w file  <span class=\"comment\"># number of word</span></span><br><span class=\"line\">wc -c file</span><br><span class=\"line\">wc file -L  <span class=\"comment\"># get length of longest line</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"print-the-directory-tree\"><a href=\"#print-the-directory-tree\" class=\"headerlink\" title=\"print the directory tree\"></a>print the directory tree</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tree . -P <span class=\"string\">\"*.sh\"</span>    <span class=\"comment\"># highlight the files matching the pattern</span></span><br><span class=\"line\">tree . -I <span class=\"string\">\"*.sh\"</span>    <span class=\"comment\"># exclude pattern</span></span><br><span class=\"line\">tree -h <span class=\"comment\"># size</span></span><br><span class=\"line\">tree . -H http://localhost -o out.html</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Texting-and-Driving\"><a href=\"#Texting-and-Driving\" class=\"headerlink\" title=\"Texting and Driving\"></a>Texting and Driving</h1><h2 id=\"regular-expression\"><a href=\"#regular-expression\" class=\"headerlink\" title=\"regular expression\"></a>regular expression</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># match all words</span></span><br><span class=\"line\"><span class=\"comment\"># ? zero or one occurrence of the previous expression</span></span><br><span class=\"line\">( ?[a-zA-Z]+ ?)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ip</span></span><br><span class=\"line\">[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ^     start of line</span></span><br><span class=\"line\"><span class=\"comment\"># $     end of line</span></span><br><span class=\"line\"><span class=\"comment\"># .     any one char</span></span><br><span class=\"line\"><span class=\"comment\"># []    any one chars in [chars]</span></span><br><span class=\"line\"><span class=\"comment\"># [^]   any one chars except [chars]</span></span><br><span class=\"line\"><span class=\"comment\"># [-]   any chars within the range [1-5]</span></span><br><span class=\"line\"><span class=\"comment\"># ?     the preceding item must use one or 0 times, colou?r = color or colour</span></span><br><span class=\"line\"><span class=\"comment\"># +     the preceding item must use one or more times, 90+ = 900 or 90000</span></span><br><span class=\"line\"><span class=\"comment\"># *     the preceding item must use 0 or more times, 90* = 90, 900</span></span><br><span class=\"line\"><span class=\"comment\"># ()    treats the terms as one entity, ma(tri)?x = max or matrix</span></span><br><span class=\"line\"><span class=\"comment\"># &#123;n&#125;   the preceding item must use n times, [0-9]&#123;3&#125; = [0-9][0-9][0-9]</span></span><br><span class=\"line\"><span class=\"comment\"># &#123;n,&#125;  specify minimum times that preceding item use, [0-9]&#123;2,&#125; = any 2 digits or longer</span></span><br><span class=\"line\"><span class=\"comment\"># &#123;n,m&#125; [0-9]&#123;2,5&#125; = any number that has 2 digits to 5 digits</span></span><br><span class=\"line\"><span class=\"comment\"># |     alternation, 1 | 2 = 1 or 2</span></span><br><span class=\"line\"><span class=\"comment\"># \\     escape, a\\.b = a.b</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"search-text-inside-a-file\"><a href=\"#search-text-inside-a-file\" class=\"headerlink\" title=\"search text inside a file\"></a>search text inside a file</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep <span class=\"string\">\"pattern\"</span> filename --color=auto</span><br><span class=\"line\">grep -E <span class=\"string\">\"[a-z]+\"</span> filename <span class=\"comment\"># -E extended reg ex</span></span><br><span class=\"line\"><span class=\"comment\"># -o ouput only match portion</span></span><br><span class=\"line\"><span class=\"comment\"># -v print all the lines except the matched line</span></span><br><span class=\"line\"><span class=\"comment\"># -c count number of matched line</span></span><br><span class=\"line\"><span class=\"comment\"># -e count number of matched item</span></span><br><span class=\"line\"><span class=\"comment\"># -i ignore case</span></span><br><span class=\"line\"></span><br><span class=\"line\">grep <span class=\"string\">\"pattern\"</span> -n filename <span class=\"comment\"># print line number</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> gnu is not unix | grep -b -o <span class=\"string\">\"not\"</span> <span class=\"comment\"># 7:not</span></span><br><span class=\"line\">grep -l linux file1 file2 <span class=\"comment\"># list which file contain, -L for non-matching</span></span><br><span class=\"line\">grep <span class=\"string\">\"pattern\"</span> . -R -n  <span class=\"comment\"># common</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># pattern file</span></span><br><span class=\"line\">grep -f pat_file</span><br><span class=\"line\"></span><br><span class=\"line\">grep <span class=\"string\">\"main()\"</span> . -r --include *.&#123;c,cpp&#125;  <span class=\"comment\">#  search *.c and *.ccp</span></span><br><span class=\"line\">grep <span class=\"string\">\"main()\"</span> . -r --exclude *.&#123;c,cpp&#125;  <span class=\"comment\">#  not search *.c and *.ccp</span></span><br><span class=\"line\">grep <span class=\"string\">\"main()\"</span> . -r --exclude-dir ./tmp  <span class=\"comment\"># exclude dir</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># xargs</span></span><br><span class=\"line\">grep <span class=\"string\">\"test\"</span> file* -lZ | xargs -0 rm <span class=\"comment\"># -Z and -0</span></span><br><span class=\"line\"><span class=\"comment\"># -q : quite, return status without showing</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Printing lines before and after text matches</span></span><br><span class=\"line\"><span class=\"comment\"># print three lines after a match, -A; -b lines before; -c both</span></span><br><span class=\"line\">seq 10 | grep 5 -A 3    <span class=\"comment\">#5\\n6\\n7\\n8</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"cut-a-file-by-column\"><a href=\"#cut-a-file-by-column\" class=\"headerlink\" title=\"cut a file by column\"></a>cut a file by column</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cut -f 2,3 filename <span class=\"comment\"># show 2nd and 3rd column, --complement for reverse</span></span><br><span class=\"line\"><span class=\"comment\"># -d \":\" to indicate delimiter</span></span><br><span class=\"line\"></span><br><span class=\"line\">cut -c 1-5 filename    <span class=\"comment\"># 1st to 5th chars</span></span><br><span class=\"line\">cut -c -5 filename    <span class=\"comment\"># 1st 5 chars</span></span><br><span class=\"line\">cut -c 2- filename    <span class=\"comment\"># from 2nd to the end</span></span><br><span class=\"line\"></span><br><span class=\"line\">cut filename -c 1-3,6-9 --output-delimiter <span class=\"string\">\",\"</span>  <span class=\"comment\"># abc,fghi</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"sed-for-text-replacement\"><a href=\"#sed-for-text-replacement\" class=\"headerlink\" title=\"sed for text replacement\"></a>sed for text replacement</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed <span class=\"string\">'s/pattern/replace_string/'</span> file    <span class=\"comment\"># -i save changes</span></span><br><span class=\"line\">sed <span class=\"string\">'s/pattern/replace_string/'</span> file &gt; newfile</span><br><span class=\"line\"></span><br><span class=\"line\">sed <span class=\"string\">'s/pattern/replace_string/g'</span> file   <span class=\"comment\"># substitute every occurrence</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> thisthisthisthis | sed <span class=\"string\">'s/this/THIS/2g'</span> <span class=\"comment\"># thisTHISTHISTHIS</span></span><br><span class=\"line\"><span class=\"comment\"># / can be | or :</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># remove blank line</span></span><br><span class=\"line\">sed <span class=\"string\">'/^$/d'</span> filename    <span class=\"comment\"># d - delete</span></span><br><span class=\"line\"></span><br><span class=\"line\">sed -i .bak <span class=\"string\">'s/abc/def/'</span> filename <span class=\"comment\"># change original file as .bak</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Matched string notation (&amp;)</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> this is an example | sed <span class=\"string\">'s/\\w\\+/[&amp;]/g'</span> <span class=\"comment\"># \\w\\+ matches every word. &amp; refer to each of words</span></span><br><span class=\"line\"><span class=\"comment\"># [this] [is] [an] [example]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Substring match notation (\\1)</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> seven EIGHT | sed <span class=\"string\">'s/\\([a-z]\\+\\) \\([A-Z]\\+\\)/\\2 \\1/'</span></span><br><span class=\"line\"><span class=\"comment\"># \\([a-z]\\+\\) match 1st word and \\1 refer to </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># multiple action</span></span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> abc | sed -e <span class=\"string\">'s/a/A/'</span> -e <span class=\"string\">'s/c/C/'</span>    <span class=\"comment\">#AbC</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"awk-for-text-processing\"><a href=\"#awk-for-text-processing\" class=\"headerlink\" title=\"awk for text processing\"></a>awk for text processing</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># for each input, &#123;statement&#125; will execute.</span></span><br><span class=\"line\">awk <span class=\"string\">'BEGIN &#123; statements &#125; &#123; statements &#125; END &#123; end statements &#125;'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># NR : number of record. each input line as one record</span></span><br><span class=\"line\"><span class=\"comment\"># NF : number of field. delimiter by space</span></span><br><span class=\"line\"><span class=\"comment\"># $0 : text content of current line</span></span><br><span class=\"line\"><span class=\"comment\"># $1, $2.. 1st field, 2nd field</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># like java, string is within \"\". </span></span><br><span class=\"line\">awk <span class=\"string\">'&#123; print \"Line no:\"NR\",No of fields:\"NF, \"$0=\"$0, \"$1=\"$1&#125;'</span></span><br><span class=\"line\"></span><br><span class=\"line\">awk <span class=\"string\">'&#123; print $3,$2 &#125;'</span> file</span><br><span class=\"line\">awk <span class=\"string\">'END&#123; print NR &#125;'</span> file  <span class=\"comment\"># get number of lines</span></span><br><span class=\"line\"></span><br><span class=\"line\">awk <span class=\"string\">'&#123; print v1,v2 &#125;'</span> v1=<span class=\"variable\">$var1</span> v2=<span class=\"variable\">$var2</span> filename</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># getline var</span></span><br><span class=\"line\"></span><br><span class=\"line\">awk <span class=\"string\">'NR &lt; 5'</span> <span class=\"comment\"># first four lines</span></span><br><span class=\"line\">awk <span class=\"string\">'NR==1,NR==4'</span> <span class=\"comment\">#First four lines</span></span><br><span class=\"line\">awk <span class=\"string\">'/linux/'</span> <span class=\"comment\"># Lines containing the pattern</span></span><br><span class=\"line\">awk <span class=\"string\">'!/linux/'</span> <span class=\"comment\"># Lines not containing the pattern</span></span><br><span class=\"line\">awk -F : <span class=\"string\">'&#123; print $NF &#125;'</span> /etc/passwd   <span class=\"comment\"># -F delimiter</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># awk built in function</span></span><br><span class=\"line\"><span class=\"comment\"># length(string): string length.</span></span><br><span class=\"line\"><span class=\"comment\"># index(string, search_string): position at which search_string is found</span></span><br><span class=\"line\"><span class=\"comment\"># split(string, array, delimiter): stores strings list generated by delimiter in the array</span></span><br><span class=\"line\"><span class=\"comment\"># substr(string, start-position, end-position): </span></span><br><span class=\"line\"><span class=\"comment\"># sub(regex, replacement_str, string): replaces the first occurring match</span></span><br><span class=\"line\"><span class=\"comment\"># gsub(regex, replacment_str, string): replaces every regular expression match.</span></span><br><span class=\"line\"><span class=\"comment\"># match(regex, string): non-zero output if a match is found, otherwise zero. </span></span><br><span class=\"line\"><span class=\"comment\"># with match(). RSTART contains the position the match starts. RLENGTH contains match length</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"find-frequency-of-words\"><a href=\"#find-frequency-of-words\" class=\"headerlink\" title=\"find frequency of words\"></a>find frequency of words</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"compress-and-decompress-javascript\"><a href=\"#compress-and-decompress-javascript\" class=\"headerlink\" title=\"compress and decompress javascript\"></a>compress and decompress javascript</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat sample.js | \\</span><br><span class=\"line\">tr -d <span class=\"string\">'\\n\\t'</span> | \\    <span class=\"comment\"># Removes the \\n and \\t characters</span></span><br><span class=\"line\">tr -s <span class=\"string\">' '</span> | \\       <span class=\"comment\"># squeeze repeating space</span></span><br><span class=\"line\">sed <span class=\"string\">'s:/\\*.*\\*/::g'</span> | \\ <span class=\"comment\"># Removes comments, use : as delimiter instead of /, .* match all text</span></span><br><span class=\"line\">sed <span class=\"string\">'s/ \\?\\([&#123;&#125;();,:]\\) \\?/\\1/g'</span>    <span class=\"comment\"># Removes all the spaces before and after the characters. </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># decompression</span></span><br><span class=\"line\"><span class=\"comment\"># s/;/;\\n/g replaces ; with ;\\n</span></span><br><span class=\"line\"><span class=\"comment\"># s/&#123;/&#123;\\n\\n/g replaces &#123; with &#123;\\n\\n</span></span><br><span class=\"line\"><span class=\"comment\"># s/&#125;/\\n\\n&#125;/g replaces &#125; with \\n\\n&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"merge-files-as-columns\"><a href=\"#merge-files-as-columns\" class=\"headerlink\" title=\"merge files as columns\"></a>merge files as columns</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">paste file1 file2 -d <span class=\"string\">\",\"</span></span><br><span class=\"line\"><span class=\"comment\"># 1, xxx</span></span><br><span class=\"line\"><span class=\"comment\"># 2, xxxxx</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"print-the-nth-word-or-column\"><a href=\"#print-the-nth-word-or-column\" class=\"headerlink\" title=\"print the nth word or column\"></a>print the nth word or column</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># print the fifth column</span></span><br><span class=\"line\">awk <span class=\"string\">'&#123; print $5 &#125;'</span> filename</span><br><span class=\"line\"></span><br><span class=\"line\">ls -l | awk <span class=\"string\">'&#123; print $1 \" : \" $8 &#125;'</span> <span class=\"comment\"># get 1st and 8th column</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"print-text-between-line-number-or-pattern\"><a href=\"#print-text-between-line-number-or-pattern\" class=\"headerlink\" title=\"print text between line number or pattern\"></a>print text between line number or pattern</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk <span class=\"string\">'NR==M, NR==N'</span> filename</span><br><span class=\"line\">awk <span class=\"string\">'/start_pattern/, /end _pattern/'</span> filename</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"print-line-reversely\"><a href=\"#print-line-reversely\" class=\"headerlink\" title=\"print line reversely\"></a>print line reversely</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">seq 9 | \\</span><br><span class=\"line\">awk <span class=\"string\">'&#123; lifo[NR]=$0 &#125;</span></span><br><span class=\"line\"><span class=\"string\">END&#123; for(lno=NR;lno&gt;-1;lno--)&#123; print lifo[lno]; &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;'</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"parse-email-and-URL\"><a href=\"#parse-email-and-URL\" class=\"headerlink\" title=\"parse email and URL\"></a>parse email and URL</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">egrep -o <span class=\"string\">'[A-Za-z0-9._]+@[A-Za-z0-9.]+\\.[a-zA-Z]&#123;2,4&#125;'</span> filename</span><br><span class=\"line\">egrep -o <span class=\"string\">\"http://[a-zA-Z0-9.]+\\.[a-zA-Z]&#123;2,3&#125;\"</span> filename</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"remove-a-sentence-containing-a-word\"><a href=\"#remove-a-sentence-containing-a-word\" class=\"headerlink\" title=\"remove a sentence containing a word\"></a>remove a sentence containing a word</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed <span class=\"string\">'s/ [^.]*mobile phones[^.]*\\.//g'</span> sentence.txt</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"replace-a-pattern-with-text-in-one-directory\"><a href=\"#replace-a-pattern-with-text-in-one-directory\" class=\"headerlink\" title=\"replace a pattern with text in one directory\"></a>replace a pattern with text in one directory</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find . -name *.cpp -print0 | xargs -I&#123;&#125; -0 sed -i <span class=\"string\">'s/Copyright/Copyleft/g'</span> &#123;&#125;</span><br><span class=\"line\">find . -name *.cpp -<span class=\"built_in\">exec</span> sed -i <span class=\"string\">'s/Copyright/Copyleft/g'</span> \\&#123;\\&#125; \\;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"text-slicing-and-parameter-operations\"><a href=\"#text-slicing-and-parameter-operations\" class=\"headerlink\" title=\"text slicing and parameter operations\"></a>text slicing and parameter operations</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var=<span class=\"string\">\"This is a line of text\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var/line/REPLACED_text&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">string=<span class=\"string\">\"abcdefghijklmnopqrstuvwxyz\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;string:4&#125;</span>    <span class=\"comment\"># efghijklmnopqrstuvwxyz</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;string:4:8&#125;</span>  <span class=\"comment\"># efghijkl</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;string:(-1)&#125;</span> <span class=\"comment\"># z</span></span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;string:(-2):2&#125;</span> <span class=\"comment\"># yz</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Tangled-Web\"><a href=\"#Tangled-Web\" class=\"headerlink\" title=\"Tangled Web\"></a>Tangled Web</h1><h2 id=\"download-from-web-page\"><a href=\"#download-from-web-page\" class=\"headerlink\" title=\"download from web page\"></a>download from web page</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget URL</span><br><span class=\"line\">wget ftp_link -O dl_file.img -o <span class=\"built_in\">log</span></span><br><span class=\"line\">wget -t 5 URL   <span class=\"comment\"># try 5 times</span></span><br><span class=\"line\">wget -t 0 URL   <span class=\"comment\"># try infinitely</span></span><br><span class=\"line\">wget --<span class=\"built_in\">limit</span>-rate 20k URL   <span class=\"comment\"># limit speed</span></span><br><span class=\"line\">wget -Q 100m URL    <span class=\"comment\"># --quota, total download size</span></span><br><span class=\"line\">wget -c URL <span class=\"comment\"># resume downloading</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># download the complete website by recursively collecting all the URL</span></span><br><span class=\"line\">wget --mirror --convert-links exampledomain.com</span><br><span class=\"line\">wget -r -N -l -k DEPTH URL</span><br><span class=\"line\"><span class=\"comment\"># -l : depth, along with -r. -N enable time stamping. </span></span><br><span class=\"line\"><span class=\"comment\"># -k or --convert-links : convert the links to other pages</span></span><br><span class=\"line\"></span><br><span class=\"line\">wget --user username --password pass URL</span><br><span class=\"line\">wget --user username --ask-password URL</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"download-as-plain-text\"><a href=\"#download-as-plain-text\" class=\"headerlink\" title=\"download as plain text\"></a>download as plain text</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lynx URL -dump &gt; webpage_as_text.txt</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"cURL\"><a href=\"#cURL\" class=\"headerlink\" title=\"cURL\"></a>cURL</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl URL -o index.html --progress   <span class=\"comment\"># show progress</span></span><br><span class=\"line\">curl URL/file -C offset <span class=\"comment\"># Continuing and resuming</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Setting the referer string with cURL</span></span><br><span class=\"line\"><span class=\"comment\"># click link_1 in page_a, we access to page_b. Without link_1, we are not able to access page_b.</span></span><br><span class=\"line\">curl --referer link_1 page_b_URL </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Cookies with cURL</span></span><br><span class=\"line\">curl URL --cookie <span class=\"string\">\"user=ryan;pass=hi\"</span></span><br><span class=\"line\">curl URL --cookie-jar cookie_file   <span class=\"comment\"># specify a file to which the cookies encountered are to be stored</span></span><br><span class=\"line\"></span><br><span class=\"line\">curl URL --<span class=\"built_in\">limit</span>-rate 20k</span><br><span class=\"line\">curl URL --max-filesize bytes   </span><br><span class=\"line\"><span class=\"comment\"># return a non-zero exit code if the file size exceeds. zero if it succeeds</span></span><br><span class=\"line\"></span><br><span class=\"line\">curl -u user:pass URL</span><br><span class=\"line\">curl -u user URL</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -I or -head : dump only the HTTP headers, without downloading the remote file.</span></span><br><span class=\"line\">curl -I URL</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"access-Gmail\"><a href=\"#access-Gmail\" class=\"headerlink\" title=\"access Gmail\"></a>access Gmail</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Desc: Fetch gmail tool</span></span><br><span class=\"line\">username=<span class=\"string\">'PUT_USERNAME_HERE'</span></span><br><span class=\"line\">password=<span class=\"string\">'PUT_PASSWORD_HERE'</span></span><br><span class=\"line\">SHOW_COUNT=5 <span class=\"comment\"># No of recent unread mails to be shown</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span></span><br><span class=\"line\">curl -u <span class=\"variable\">$username</span>:<span class=\"variable\">$password</span> --silent <span class=\"string\">\"https://mail.google.com/mail/feed/atom\"</span> | \\</span><br><span class=\"line\">tr -d <span class=\"string\">'\\n'</span> | sed <span class=\"string\">'s:&lt;/entry&gt;:\\n:g'</span> |\\</span><br><span class=\"line\">sed -n <span class=\"string\">'s/.*&lt;title&gt;\\(.*\\)&lt;\\/title.*&lt;author&gt;&lt;name&gt;\\([^&lt;]*\\)&lt;\\/name&gt;&lt;email&gt;\\([^&lt;]*\\).*/From: \\2 [\\3] \\nSubject: \\1\\n/p'</span> | \\</span><br><span class=\"line\">head -n $(( <span class=\"variable\">$SHOW_COUNT</span> * 3 ))</span><br><span class=\"line\"><span class=\"comment\"># tr -d '\\n' removes the newline character</span></span><br><span class=\"line\"><span class=\"comment\"># sed 's:&lt;/entry&gt;:\\n:g' replaces every &lt;/entry&gt; element with a newline</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"parsing-data-from-website\"><a href=\"#parsing-data-from-website\" class=\"headerlink\" title=\"parsing data from website\"></a>parsing data from website</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"image-crawler-and-downloader\"><a href=\"#image-crawler-and-downloader\" class=\"headerlink\" title=\"image crawler and downloader\"></a>image crawler and downloader</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Filename: img_downloader.sh</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$#</span> -ne 3 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"Usage: <span class=\"variable\">$0</span> URL -d DIRECTORY\"</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> -1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># shift is used to shift arguments to the left</span></span><br><span class=\"line\"><span class=\"comment\"># $1 will take the next argument value</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> &#123;1..4&#125;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"variable\">$1</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">        -d) <span class=\"built_in\">shift</span>; directory=<span class=\"variable\">$1</span>; <span class=\"built_in\">shift</span> ;;</span><br><span class=\"line\">        *) url=<span class=\"variable\">$&#123;url:-$1&#125;</span>; <span class=\"built_in\">shift</span>;;</span><br><span class=\"line\">    <span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">mkdir -p <span class=\"variable\">$directory</span>;</span><br><span class=\"line\">baseurl=$(<span class=\"built_in\">echo</span> <span class=\"variable\">$url</span> | egrep -o <span class=\"string\">\"https?://[a-z.]+\"</span>)</span><br><span class=\"line\"><span class=\"built_in\">echo</span> Downloading <span class=\"variable\">$url</span></span><br><span class=\"line\">curl -s <span class=\"variable\">$url</span> | egrep -o <span class=\"string\">\"&lt;img src=[^&gt;]*&gt;\"</span> | sed <span class=\"string\">'s/&lt;img src=\\\"\\([^\"]*\\).*/\\1/g'</span> &gt;/tmp/$$.list</span><br><span class=\"line\">sed -i <span class=\"string\">\"s|^/|<span class=\"variable\">$baseurl</span>/|\"</span> /tmp/$$.list</span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"variable\">$directory</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> filename;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> Downloading <span class=\"variable\">$filename</span></span><br><span class=\"line\">    curl -s -O <span class=\"string\">\"<span class=\"variable\">$filename</span>\"</span> --silent</span><br><span class=\"line\"><span class=\"keyword\">done</span> &lt; /tmp/$$.list</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"web-photo-album-generator\"><a href=\"#web-photo-album-generator\" class=\"headerlink\" title=\"web photo album generator\"></a>web photo album generator</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Description: Create a photo album using images in current directory</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Creating album..\"</span></span><br><span class=\"line\">mkdir -p thumbs</span><br><span class=\"line\">cat &lt;&lt;EOF1 &gt; index.html</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">    body</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        width:470px;</span><br><span class=\"line\">        margin:auto;</span><br><span class=\"line\">        border: 1px dashed grey;</span><br><span class=\"line\">        padding:10px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    img</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        margin:5px;</span><br><span class=\"line\">        border: 1px solid black;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;center&gt;&lt;h1&gt; <span class=\"comment\">#Album title &lt;/h1&gt;&lt;/center&gt;</span></span><br><span class=\"line\">&lt;p&gt;</span><br><span class=\"line\">EOF1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> img <span class=\"keyword\">in</span> *.jpg;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    convert <span class=\"string\">\"<span class=\"variable\">$img</span>\"</span> -resize <span class=\"string\">\"100x\"</span> <span class=\"string\">\"thumbs/<span class=\"variable\">$img</span>\"</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"&lt;a href=\\\"<span class=\"variable\">$img</span>\\\" &gt;&lt;img src=\\\"thumbs/<span class=\"variable\">$img</span>\\\" title=\\\"<span class=\"variable\">$img</span>\\\" /&gt;&lt;/a&gt;\"</span> &gt;&gt; index.html</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\">cat &lt;&lt;EOF2 &gt;&gt; index.html</span><br><span class=\"line\">&lt;/p&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br><span class=\"line\">EOF2</span><br><span class=\"line\"><span class=\"built_in\">echo</span> Album generated to index.html</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"twitter-command-line-client\"><a href=\"#twitter-command-line-client\" class=\"headerlink\" title=\"twitter command-line client\"></a>twitter command-line client</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"create-a-‘define’-utility-by-using-web-backend\"><a href=\"#create-a-‘define’-utility-by-using-web-backend\" class=\"headerlink\" title=\"create a ‘define’ utility by using web backend\"></a>create a ‘define’ utility by using web backend</h2><ol>\n<li><a href=\"http://www.dictionaryapi.com/register/index.htm\" target=\"_blank\" rel=\"noopener\">http://www.dictionaryapi.com/register/index.htm</a></li>\n<li>get key<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Desc: A script to fetch definitions from dictionaryapi.com</span></span><br><span class=\"line\">apikey=YOUR_API_KEY_HERE <span class=\"comment\"># fd750d43-a3b8-4f47-8055-e8db4ebfeeed</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$#</span> -ne 2 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"Usage: <span class=\"variable\">$0</span> WORD NUMBER\"</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span> -1;</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">curl --silent http://www.dictionaryapi.com/api/v1/references/learners/xml/<span class=\"variable\">$1</span>?key=<span class=\"variable\">$apikey</span> | \\</span><br><span class=\"line\">grep -o \\&lt;dt\\&gt;.*\\&lt;/dt\\&gt; | \\</span><br><span class=\"line\">sed <span class=\"string\">'s$&lt;/*[a-z]*&gt;$$g'</span> | \\</span><br><span class=\"line\">head -n <span class=\"variable\">$2</span> | nl</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"find-broken-links-in-a-website\"><a href=\"#find-broken-links-in-a-website\" class=\"headerlink\" title=\"find broken links in a website\"></a>find broken links in a website</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Desc: Find broken links in a website</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$#</span> -ne 1 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$Usage</span>: <span class=\"variable\">$0</span> URL\\n\"</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1;</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> Broken links:</span><br><span class=\"line\">mkdir /tmp/$$.lynx</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /tmp/$$.lynx</span><br><span class=\"line\">lynx -traversal <span class=\"variable\">$1</span> &gt; /dev/null</span><br><span class=\"line\">count=0;</span><br><span class=\"line\">sort -u reject.dat &gt; links.txt</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> link;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    output=`curl -I <span class=\"variable\">$link</span> -s | grep <span class=\"string\">\"HTTP/.*OK\"</span>`;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ -z <span class=\"variable\">$output</span> ]];</span><br><span class=\"line\">    <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"variable\">$link</span>;</span><br><span class=\"line\">        <span class=\"built_in\">let</span> count++</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span> &lt; links.txt</span><br><span class=\"line\">[ <span class=\"variable\">$count</span> -eq 0 ] &amp;&amp; <span class=\"built_in\">echo</span> No broken links found.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"track-changes-to-a-website\"><a href=\"#track-changes-to-a-website\" class=\"headerlink\" title=\"track changes to a website\"></a>track changes to a website</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Desc: Script to track changes to webpage</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$#</span> -ne 1 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$Usage</span>: <span class=\"variable\">$0</span> URL\\n\"</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1;</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">first_time=0</span><br><span class=\"line\"><span class=\"comment\"># Not first time</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ ! -e <span class=\"string\">\"last.html\"</span> ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    first_time=1</span><br><span class=\"line\">    <span class=\"comment\"># Set it is first time run</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">curl --silent <span class=\"variable\">$1</span> -o recent.html</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$first_time</span> -ne 1 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    changes=$(diff -u last.html recent.html)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ -n <span class=\"string\">\"<span class=\"variable\">$changes</span>\"</span> ];</span><br><span class=\"line\">    <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> -e <span class=\"string\">\"Changes:\\n\"</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$changes</span>\"</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\nWebsite has no changes\"</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"[First run] Archiving..\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">cp recent.html last.html</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"post-to-web-page-and-read-response\"><a href=\"#post-to-web-page-and-read-response\" class=\"headerlink\" title=\"post to web page and read response\"></a>post to web page and read response</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># POST and read the HTML response</span></span><br><span class=\"line\">curl URL -d <span class=\"string\">\"host=hostname&amp;user=username\"</span>   <span class=\"comment\"># -d is the argument used for posting</span></span><br><span class=\"line\">wget php_URL --post-data <span class=\"string\">\"host=hostname&amp;user=username\"</span> -O output.html</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Backup-Plan\"><a href=\"#Backup-Plan\" class=\"headerlink\" title=\"Backup Plan\"></a>Backup Plan</h1><h2 id=\"Archive-with-tar\"><a href=\"#Archive-with-tar\" class=\"headerlink\" title=\"Archive with tar\"></a>Archive with tar</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -cf output.tar [SOURCES]    <span class=\"comment\"># -c create file, -f specify filename</span></span><br><span class=\"line\">tar -tf archive.tar <span class=\"comment\"># list files in an archive</span></span><br><span class=\"line\">tar -tvf archive.tar    <span class=\"comment\"># -v verbose, print more details</span></span><br><span class=\"line\"></span><br><span class=\"line\">tar -rvf original.tar new_file  <span class=\"comment\"># -r append a file into an archive</span></span><br><span class=\"line\"></span><br><span class=\"line\">tar -xf archive.tar <span class=\"comment\"># -x for extract</span></span><br><span class=\"line\">tar -xf archive.tar -C /path/to/extract <span class=\"comment\"># -C to indicate where the files</span></span><br><span class=\"line\">tar -xvf file.tar file1 file4   <span class=\"comment\"># only extract file1 and file4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># '-' make archive as output</span></span><br><span class=\"line\">tar cvf - files/ | ssh a@A <span class=\"string\">\"tar xv -C Documents/\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># merge multiple tar files with the -A option</span></span><br><span class=\"line\">tar -Af file.tar file_be_merged.tar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -u : append updated files according to timestamp.</span></span><br><span class=\"line\">tar -uf archive.tar filea   <span class=\"comment\"># when extracting, newer version will be picked up</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Comparing files in the archive and file system</span></span><br><span class=\"line\">tar -df archive.tar <span class=\"comment\"># -d to print difference</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Deleting files from the archive</span></span><br><span class=\"line\">tar -f archive.tar --delete file1 file2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -a : compress by looking at the extension</span></span><br><span class=\"line\">tar -acvf archive.tar.gz filea fileb filec</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Exclude a set of files from archiving</span></span><br><span class=\"line\">tar -cf arch.tar * --exclude <span class=\"string\">\"*.txt\"</span></span><br><span class=\"line\">tar -cf arch.tar * -X list  <span class=\"comment\"># list: file1 file2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Excluding version control directories</span></span><br><span class=\"line\">tar --exclude-vcs -czvvf archive.tar.gz eye_of_gnome_svn</span><br><span class=\"line\">tar -cf arc.tar * --exclude <span class=\"string\">\"*.txt\"</span> --totals</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"archive-with-cpio\"><a href=\"#archive-with-cpio\" class=\"headerlink\" title=\"archive with cpio\"></a>archive with cpio</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># store files with attributes such as permissions, ownership</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> file1 file2 file3 | cpio -ov &gt; archive.cpio</span><br><span class=\"line\">cpio -it &lt; archive.cpio <span class=\"comment\"># list files in a cpio archive</span></span><br><span class=\"line\">cpio -id &lt; archive.cpio <span class=\"comment\"># extract files from the cpio archive</span></span><br><span class=\"line\"><span class=\"comment\"># -o specifies the output</span></span><br><span class=\"line\"><span class=\"comment\"># -v is used for printing a list of files archived</span></span><br><span class=\"line\"><span class=\"comment\"># -i is for specifying the input</span></span><br><span class=\"line\"><span class=\"comment\"># -t is for listing</span></span><br><span class=\"line\"><span class=\"comment\"># -d stands for extracting</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"compress-data-with-gzip\"><a href=\"#compress-data-with-gzip\" class=\"headerlink\" title=\"compress data with gzip\"></a>compress data with gzip</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gzip filename</span><br><span class=\"line\">gunzip filename.gz</span><br><span class=\"line\">gzip -l test.txt.gz <span class=\"comment\"># list out the properties of a compressed file</span></span><br><span class=\"line\">cat file | gzip -c &gt; file.gz    <span class=\"comment\"># -c option is used to specify output to stdout</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># zip multiple files</span></span><br><span class=\"line\">FILE_LIST=<span class=\"string\">\"file1 file2 file3 file4 file5\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> f <span class=\"keyword\">in</span> <span class=\"variable\">$FILE_LIST</span>;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">tar -rvf archive.tar <span class=\"variable\">$f</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">gzip archive.tar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># extract a gzipped tarball</span></span><br><span class=\"line\">tar -xavvf archive.tar.gz -C extract_directory</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># zcat - reading gzipped files without extracting</span></span><br><span class=\"line\">zcat test.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Compression ratio</span></span><br><span class=\"line\">gzip -5 test.img    <span class=\"comment\"># 1 is the lowest, but fastest</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># bzip2 offers more effective compression while taking more time</span></span><br><span class=\"line\">bzip2 filename</span><br><span class=\"line\">bunzip2 filename.bz2</span><br><span class=\"line\"></span><br><span class=\"line\">tar -xjvf archive.tar.bz2   <span class=\"comment\"># -j denotes that the archive is bzip2</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"archive-and-compress-with-zip\"><a href=\"#archive-and-compress-with-zip\" class=\"headerlink\" title=\"archive and compress with zip\"></a>archive and compress with zip</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">zip archive_name.zip [SOURCE FILES/DIRS]</span><br><span class=\"line\">zip -r archive.zip folder1 folder2  <span class=\"comment\"># Archive directories and files recursively</span></span><br><span class=\"line\">unzip file.zip  <span class=\"comment\"># without removing filename.zip</span></span><br><span class=\"line\">zip file.zip -u newfile <span class=\"comment\"># update files in the archive with newer files</span></span><br><span class=\"line\">zip -d arc.zip file.txt <span class=\"comment\"># Delete a file from a zipped archive</span></span><br><span class=\"line\">unzip -l archive.zip    <span class=\"comment\"># list the files in an archive</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"faster-archive-with-pbzip2\"><a href=\"#faster-archive-with-pbzip2\" class=\"headerlink\" title=\"faster archive with pbzip2\"></a>faster archive with pbzip2</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># pbzip2 can use multiple cores, hence decreasing overall time</span></span><br><span class=\"line\">pbzip2 myfile.tar</span><br><span class=\"line\">tar cf myfile.tar.bz2 --use-compress-prog=pbzip2 dir_to_compress</span><br><span class=\"line\">pbzip2 -dc myfile.tar.bz2 | tar x   <span class=\"comment\"># Extracting a pbzip2</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"create-filesystem-with-compression\"><a href=\"#create-filesystem-with-compression\" class=\"headerlink\" title=\"create filesystem with compression\"></a>create filesystem with compression</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># squashfs</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"backup-snapshots-with-rsync\"><a href=\"#backup-snapshots-with-rsync\" class=\"headerlink\" title=\"backup snapshots with rsync\"></a>backup snapshots with rsync</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"version-control-based-backup-with-Git\"><a href=\"#version-control-based-backup-with-Git\" class=\"headerlink\" title=\"version control-based backup with Git\"></a>version control-based backup with Git</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## u1 as remote machine; 192.168.1.135</span></span><br><span class=\"line\"><span class=\"comment\"># Set up and initiate the remote backup directory</span></span><br><span class=\"line\">mkdir -p ~/git_repo/demo.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~/git_repo/demo.git</span><br><span class=\"line\">git init --bare</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## base as source host machine</span></span><br><span class=\"line\">git config --global user.name <span class=\"string\">\"ryan\"</span></span><br><span class=\"line\">git config --global user.email luoxu2011@gmail.com</span><br><span class=\"line\"><span class=\"comment\"># source documents in ~/git_demo </span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~/git_demo</span><br><span class=\"line\">git init</span><br><span class=\"line\">git remote add origin ryan@192.168.1.135:~/git_repo/demo.git</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">\"data1\"</span></span><br><span class=\"line\">git push origin master</span><br><span class=\"line\"></span><br><span class=\"line\">git <span class=\"built_in\">log</span></span><br><span class=\"line\"><span class=\"comment\"># revert back to any previous state or version</span></span><br><span class=\"line\">git checkout COMMIT_ID</span><br><span class=\"line\"><span class=\"comment\"># make this revert permanent</span></span><br><span class=\"line\">git commit -am <span class=\"string\">\"Restore @ <span class=\"variable\">$(date)</span> commit ID:xxxxxx\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> ryan@192.168.1.135:~/git_repo/demo.git</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"create-entire-disk-images-using-fsarciver\"><a href=\"#create-entire-disk-images-using-fsarciver\" class=\"headerlink\" title=\"create entire disk images using fsarciver\"></a>create entire disk images using fsarciver</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Old-Boy-Network\"><a href=\"#Old-Boy-Network\" class=\"headerlink\" title=\"Old Boy Network\"></a>Old Boy Network</h1><h2 id=\"Setup-the-network\"><a href=\"#Setup-the-network\" class=\"headerlink\" title=\"Setup the network\"></a>Setup the network</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># manually set the IP address for a network interface</span></span><br><span class=\"line\">sudo ifconfig wlan0 xxx.xxx.xx.xx netmask 255.255.252.0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Printing the list of network interfaces</span></span><br><span class=\"line\">ifconfig | cut -c-10 | tr -d <span class=\"string\">' '</span> | tr -s <span class=\"string\">'\\n'</span></span><br><span class=\"line\"><span class=\"comment\"># first 10 characters is reserved for network interfaces</span></span><br><span class=\"line\"><span class=\"comment\"># take the first 10 columns, remove space, squeeze newline</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Displaying IP addresses</span></span><br><span class=\"line\">ifconfig wlan0 | egrep -o <span class=\"string\">\"inet addr:[^ ]*\"</span> | grep -o <span class=\"string\">\"[0-9.]*\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># spoof the hardware address at the software level</span></span><br><span class=\"line\">ifconfig eth0 hw ether 00:1c:bf:87:25:d5</span><br><span class=\"line\"></span><br><span class=\"line\">cat /etc/resolv.conf    <span class=\"comment\"># nameserver 8.8.8.8</span></span><br><span class=\"line\">host google.com <span class=\"comment\"># list out all of the IP attached to the domain name</span></span><br><span class=\"line\">nslookup google.com <span class=\"comment\"># </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> 192.168.0.9 backupserver &gt;&gt; /etc/hosts</span><br><span class=\"line\">ping backupserver <span class=\"comment\"># get 192.168.0.9</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Showing routing table information</span></span><br><span class=\"line\">route -n</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set a default gateway</span></span><br><span class=\"line\">route add default gw IP_ADDRESS INTERFACE_NAME</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Ping\"><a href=\"#Ping\" class=\"headerlink\" title=\"Ping\"></a>Ping</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ping hostname <span class=\"comment\"># Round Trip Time (RTT)</span></span><br><span class=\"line\">ping 192.168.0.1 -c 2 <span class=\"comment\"># Limiting the number of packets to be sent</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Return status of the ping command</span></span><br><span class=\"line\">ping domain -c2</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $? -eq 0 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> Successful ;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> Failure</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># traceroute displays the address of all intermediate gateways</span></span><br><span class=\"line\">traceroute google.com</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"list-all-the-machine-alive\"><a href=\"#list-all-the-machine-alive\" class=\"headerlink\" title=\"list all the machine alive\"></a>list all the machine alive</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># check alive host</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> ip <span class=\"keyword\">in</span> 192.168.0.&#123;1..255&#125; ;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    ping <span class=\"variable\">$ip</span> -c 2 &amp;&gt; /dev/null ;  <span class=\"comment\"># &amp;&gt; /dev/null : redirect both stderr and stdout</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ $? -eq 0 ];</span><br><span class=\"line\">    <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"variable\">$ip</span> is alive</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Parallel pings : enclose the loop body in ( )&amp;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> ip <span class=\"keyword\">in</span> 192.168.0.&#123;1..255&#125; ;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    (</span><br><span class=\"line\">        ping <span class=\"variable\">$ip</span> -c2 &amp;&gt; /dev/null ;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> [ $? -eq 0 ];</span><br><span class=\"line\">        <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">echo</span> <span class=\"variable\">$ip</span> is alive</span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">    )&amp;</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"built_in\">wait</span> <span class=\"comment\"># waits for the time until all the child ( ) subshell processes complete</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"run-command-on-a-remote-host-with-SSH\"><a href=\"#run-command-on-a-remote-host-with-SSH\" class=\"headerlink\" title=\"run command on a remote host with SSH\"></a>run command on a remote host with SSH</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># By default, the SSH server runs at port 22</span></span><br><span class=\"line\">ssh user@locahost -p 422</span><br><span class=\"line\"></span><br><span class=\"line\">COMMANDS=<span class=\"string\">\"command1; command2; command3\"</span></span><br><span class=\"line\">$ ssh user@hostname <span class=\"string\">\"<span class=\"variable\">$COMMANDS</span>\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># collects the uptime of a list of remote hosts</span></span><br><span class=\"line\"><span class=\"comment\">#Description: Uptime monitor</span></span><br><span class=\"line\">IP_LIST=<span class=\"string\">\"192.168.0.1 192.168.0.5 192.168.0.9\"</span></span><br><span class=\"line\">USER=<span class=\"string\">\"test\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> IP <span class=\"keyword\">in</span> <span class=\"variable\">$IP_LIST</span>;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    utime=$(ssh <span class=\"variable\">$&#123;USER&#125;</span>@<span class=\"variable\">$&#123;IP&#125;</span> uptime | awk <span class=\"string\">'&#123; print $3 &#125;'</span> )</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$IP</span> uptime: <span class=\"variable\">$utime</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Redirecting data into stdin of remote host</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'text'</span> | ssh user@remote_host <span class=\"string\">'echo'</span></span><br><span class=\"line\">ssh user@remote_host <span class=\"string\">'echo'</span> &lt; file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Running graphical commands on a remote machine</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"transfer-files-through-the-network\"><a href=\"#transfer-files-through-the-network\" class=\"headerlink\" title=\"transfer files through the network\"></a>transfer files through the network</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># FTP can only be used if the FTP server is installed on the remote machine.</span></span><br><span class=\"line\"><span class=\"comment\"># FTP usually runs on port 21.</span></span><br><span class=\"line\">lftp username@ftphost</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># To change the directory of a local machine, use lcd</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># download a file</span></span><br><span class=\"line\">lftp username@ftphost:~&gt; get filename</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># To upload a file from the current directory</span></span><br><span class=\"line\">lftp username@ftphost:~&gt; put filename</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># An lftp session can be terminated by using the quit</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Automated FTP transfer</span></span><br><span class=\"line\"><span class=\"comment\"># -i option of ftp turns off the interactive session</span></span><br><span class=\"line\"><span class=\"comment\"># -n option tells ftp to not attempt automatically logging in and use the username and password we supply it.</span></span><br><span class=\"line\">HOST=<span class=\"string\">'domain.com'</span></span><br><span class=\"line\">USER=<span class=\"string\">'foo'</span></span><br><span class=\"line\">PASSWD=<span class=\"string\">'password'</span></span><br><span class=\"line\">ftp -i -n <span class=\"variable\">$HOST</span> &lt;&lt;EOF   </span><br><span class=\"line\">user <span class=\"variable\">$&#123;USER&#125;</span> <span class=\"variable\">$&#123;PASSWD&#125;</span></span><br><span class=\"line\">binary</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /home/slynux</span><br><span class=\"line\">put testfile.jpg</span><br><span class=\"line\">get serverfile.jpg</span><br><span class=\"line\">quit</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># SFTP requires an OpenSSH server to be installed and running</span></span><br><span class=\"line\">sftp user@domainname</span><br><span class=\"line\">sftp -oPort=422 user@domainname <span class=\"comment\"># in case port no is not 22</span></span><br><span class=\"line\"></span><br><span class=\"line\">scp SOURCE DESTINATION</span><br><span class=\"line\">scp filename user@remotehost:/home/path <span class=\"comment\"># -r Recursive copy</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"connect-to-a-wireless-network\"><a href=\"#connect-to-a-wireless-network\" class=\"headerlink\" title=\"connect to a wireless network\"></a>connect to a wireless network</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"passwordless-SSH\"><a href=\"#passwordless-SSH\" class=\"headerlink\" title=\"passwordless SSH\"></a>passwordless SSH</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa</span><br><span class=\"line\">ssh USER@REMOTE_HOST <span class=\"string\">\"cat &gt;&gt; ~/.ssh/authorized_keys\"</span> &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"port-forwarding-using-SSH\"><a href=\"#port-forwarding-using-SSH\" class=\"headerlink\" title=\"port forwarding using SSH\"></a>port forwarding using SSH</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"mounte-a-remote-drive-at-a-local-mount-point\"><a href=\"#mounte-a-remote-drive-at-a-local-mount-point\" class=\"headerlink\" title=\"mounte a remote drive at a local mount point\"></a>mounte a remote drive at a local mount point</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"network-traffic-and-port-analysis\"><a href=\"#network-traffic-and-port-analysis\" class=\"headerlink\" title=\"network traffic and port analysis\"></a>network traffic and port analysis</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># list all opened ports on the system along with the details</span></span><br><span class=\"line\">lsof -i</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># In order to list out the opened ports from the current machine</span></span><br><span class=\"line\">lsof -i | grep <span class=\"string\">\":[0-9]\\+-&gt;\"</span> -o | grep <span class=\"string\">\"[0-9]\\+\"</span> -o | sort | uniq</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># netstat -tnp to list opened port and services</span></span><br><span class=\"line\">netstat -tnp</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"create-arbitrary-sockets\"><a href=\"#create-arbitrary-sockets\" class=\"headerlink\" title=\"create arbitrary sockets\"></a>create arbitrary sockets</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># reate network sockets to do data transfer over a TCP/IP network</span></span><br><span class=\"line\"><span class=\"comment\"># create a listening socket on port 1234 on the local machine</span></span><br><span class=\"line\">nc -l 1234  <span class=\"comment\"># netcat</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Connect to the socket</span></span><br><span class=\"line\">nc HOST 1234 <span class=\"comment\"># replace HOST with localhost, or the IP address or hostname</span></span><br><span class=\"line\"></span><br><span class=\"line\">ryan@base:~$ nc -l 12345</span><br><span class=\"line\">ryan@u1:~$ nc base 12345</span><br><span class=\"line\"><span class=\"comment\"># type hi in u1, hi will appear in base as well</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Quickly copying files over the network</span></span><br><span class=\"line\">nc -l 1234 &gt; destination_filename   <span class=\"comment\"># on receiving machine</span></span><br><span class=\"line\">nc HOST 1234 &lt; source_filename  <span class=\"comment\"># on sender machine</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"share-an-internet-connection\"><a href=\"#share-an-internet-connection\" class=\"headerlink\" title=\"share an internet connection\"></a>share an internet connection</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># you don't have a router and you need to share the Internet?</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"basic-firewall-using-iptables\"><a href=\"#basic-firewall-using-iptables\" class=\"headerlink\" title=\"basic firewall using iptables\"></a>basic firewall using iptables</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Block traffic to a specific IP address</span></span><br><span class=\"line\">iptables -A OUTPUT -d 8.8.8.8 -j DROP</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Block traffic to a specific port</span></span><br><span class=\"line\">iptables -A OUTPUT -p tcp -dport 21 -j DROP</span><br><span class=\"line\"><span class=\"comment\"># -A which instructs iptables to append a new rule to the chain</span></span><br><span class=\"line\"><span class=\"comment\"># OUTPUT chain which runs on all the outgoing traffic</span></span><br><span class=\"line\"><span class=\"comment\"># -j to instruct iptables to DROP the packet</span></span><br><span class=\"line\"><span class=\"comment\"># -p parameter to specify that this rule should match only TCP on the port specified with -dport which block all the outbound FTP traffic</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># clear the changes made to the iptables chains</span></span><br><span class=\"line\">iptables --flush</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Put-on-the-Monitor’s-Cap\"><a href=\"#Put-on-the-Monitor’s-Cap\" class=\"headerlink\" title=\"Put on the Monitor’s Cap\"></a>Put on the Monitor’s Cap</h1><h2 id=\"Monitor-disk-usage\"><a href=\"#Monitor-disk-usage\" class=\"headerlink\" title=\"Monitor disk usage\"></a>Monitor disk usage</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">du -a DIRECTORY <span class=\"comment\"># -a for all files recursively</span></span><br><span class=\"line\">du -h FILENAME</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Displaying the grand total sum of disk usage</span></span><br><span class=\"line\">du -c FILENAME1 FILENAME2..</span><br><span class=\"line\">du -c DIRECTORY</span><br><span class=\"line\"><span class=\"comment\"># -s (summarize), which will print only the grand total</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Excluding files from the disk usage calculation</span></span><br><span class=\"line\">du --exclude <span class=\"string\">\"*.txt\"</span> FILES</span><br><span class=\"line\">du --exclude-from EXCLUDE.txt DIRECTORY</span><br><span class=\"line\">du --max-depth 2 DIRECTORY</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Finding the 10 largest size files from a given directory</span></span><br><span class=\"line\">du -ak SOURCE_DIR | sort -nrk 1 | head</span><br><span class=\"line\"><span class=\"comment\"># -a makes du traverse the SOURCE_DIR and calculates the size of all files</span></span><br><span class=\"line\"><span class=\"comment\"># sort is used to perform a numerical sort with column 1 and reverse it</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># find only the largest files and not directories</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -<span class=\"built_in\">exec</span> du -k &#123;&#125; \\; | sort -nrk 1 | head</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"execution-time-for-a-command\"><a href=\"#execution-time-for-a-command\" class=\"headerlink\" title=\"execution time for a command\"></a>execution time for a command</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">time COMMAND</span><br><span class=\"line\">/usr/bin/time -a -o output.txt COMMAND</span><br><span class=\"line\"><span class=\"comment\"># append the time statistics to a file without overwriting, use the -a</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Real time: %e</span></span><br><span class=\"line\"><span class=\"comment\"># User: %U</span></span><br><span class=\"line\"><span class=\"comment\"># sys: %S</span></span><br><span class=\"line\">/usr/bin/time -f <span class=\"string\">\"Time: %U\"</span> -a -o timing.log COMMAND  <span class=\"comment\"># formatted output</span></span><br><span class=\"line\">/usr/bin/time -f <span class=\"string\">\"Time: %U\"</span> COMMAND&gt; command_output.txt 2&gt;time.log</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># %C Name and command-line arguments of the command being timed.</span></span><br><span class=\"line\"><span class=\"comment\"># %D Average size of the process unshared data area, in kilobytes.</span></span><br><span class=\"line\"><span class=\"comment\"># %E Elapsed real (wall clock) time used by the process in [hours:]minutes:seconds.</span></span><br><span class=\"line\"><span class=\"comment\"># %x Exit status of the command.</span></span><br><span class=\"line\"><span class=\"comment\"># %k Number of signals delivered to the process.</span></span><br><span class=\"line\"><span class=\"comment\"># %W Number of times the process was swapped out of the main memory.</span></span><br><span class=\"line\"><span class=\"comment\"># %Z System page size in bytes. This is a per-system constant, but varies between systems</span></span><br><span class=\"line\"><span class=\"comment\"># %P Percentage of the CPU that this job got. This is just user + system times divided by the total running time. It also prints a percentage sign.</span></span><br><span class=\"line\"><span class=\"comment\"># %K Average total (data + stack + text) memory usage of the process, in Kilobytes.</span></span><br><span class=\"line\"><span class=\"comment\"># %w Number of times that the program was context-switched voluntarily, for instance while waiting for an I/O operation to complete.</span></span><br><span class=\"line\"><span class=\"comment\"># %c Number of times the process was context-switched involuntarily (because the time slice expired).</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"logged-in-users-boot-logs-and-boot-failure\"><a href=\"#logged-in-users-boot-logs-and-boot-failure\" class=\"headerlink\" title=\"logged in users, boot logs and boot failure\"></a>logged in users, boot logs and boot failure</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">who</span><br><span class=\"line\">w <span class=\"comment\"># more detailed information about the logged in users</span></span><br><span class=\"line\">users <span class=\"comment\"># list only the usernames of the users</span></span><br><span class=\"line\">users | tr <span class=\"string\">' '</span> <span class=\"string\">'\\n'</span> | sort | uniq   <span class=\"comment\"># find unique users</span></span><br><span class=\"line\">uptime <span class=\"comment\"># how long the system has been powered on</span></span><br><span class=\"line\"><span class=\"comment\"># 21:44:33 up 3:17, 8 users, load average: 0.09, 0.14, 0.09</span></span><br><span class=\"line\">uptime | grep -Po <span class=\"string\">'\\d&#123;2&#125;\\:\\d&#123;2&#125;\\:\\d&#123;2&#125;'</span> <span class=\"comment\"># xtract only three two-digit numbers separated by colons.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># get information about previous boot and user logged sessions</span></span><br><span class=\"line\">last</span><br><span class=\"line\">last -f /var/<span class=\"built_in\">log</span>/wtmp</span><br><span class=\"line\">last USER <span class=\"comment\"># about login sessions for a single user</span></span><br><span class=\"line\">last reboot <span class=\"comment\"># Get information about reboot sessions</span></span><br><span class=\"line\">lastb  <span class=\"comment\"># about failed user login sessions</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"top-10-cpu-consuming-processes-in-an-hour\"><a href=\"#top-10-cpu-consuming-processes-in-an-hour\" class=\"headerlink\" title=\"top 10 cpu consuming processes in an hour\"></a>top 10 cpu consuming processes in an hour</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># monitoring and calculating CPU usages in one hour</span></span><br><span class=\"line\">SECS=3600</span><br><span class=\"line\">UNIT_TIME=60</span><br><span class=\"line\"><span class=\"comment\">#Change the SECS to total seconds for which monitoring is to be performed.</span></span><br><span class=\"line\"><span class=\"comment\">#UNIT_TIME is the interval in seconds between each sampling</span></span><br><span class=\"line\">STEPS=$(( <span class=\"variable\">$SECS</span> / <span class=\"variable\">$UNIT_TIME</span> ))</span><br><span class=\"line\"><span class=\"built_in\">echo</span> Watching CPU usage... ;</span><br><span class=\"line\"><span class=\"keyword\">for</span>((i=0;i&lt;STEPS;i++))</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    ps -eocomm,pcpu | tail -n +2 &gt;&gt; /tmp/cpu_usage.$$</span><br><span class=\"line\">    sleep <span class=\"variable\">$UNIT_TIME</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> CPU eaters :</span><br><span class=\"line\">cat /tmp/cpu_usage.$$ | \\</span><br><span class=\"line\">awk <span class=\"string\">'&#123; process[$1]+=$2; &#125;END&#123;for(i in process)&#123;printf(\"%-20s %s\\n\",i, process[i]) ;&#125;&#125;'</span> \\</span><br><span class=\"line\">| sort -nrk 2 | head</span><br><span class=\"line\">rm /tmp/cpu_usage.$$</span><br><span class=\"line\"><span class=\"comment\">#Remove the temporary log file</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"mmonitor-command-output-with-watch\"><a href=\"#mmonitor-command-output-with-watch\" class=\"headerlink\" title=\"mmonitor command output with watch\"></a>mmonitor command output with watch</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># monitor the output of a command</span></span><br><span class=\"line\">watch COMMAND</span><br><span class=\"line\">watch <span class=\"string\">'ls -l | grep \"^d\"'</span> <span class=\"comment\"># will update the output at a default interval of two seconds</span></span><br><span class=\"line\">watch -n 5 <span class=\"string\">'ls -l'</span> <span class=\"comment\"># at regular intervals of 5 seconds</span></span><br><span class=\"line\">watch -d <span class=\"string\">'COMMAND'</span> <span class=\"comment\"># Difference highlighting</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"log-access-to-files-and-directories\"><a href=\"#log-access-to-files-and-directories\" class=\"headerlink\" title=\"log access to files and directories\"></a>log access to files and directories</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"logfile-management-with-logrotate\"><a href=\"#logfile-management-with-logrotate\" class=\"headerlink\" title=\"logfile management with logrotate\"></a>logfile management with logrotate</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># logrotate has the configuration directory at /etc/logrotate.d.</span></span><br><span class=\"line\"><span class=\"comment\"># customerized config file: /etc/logrotate.d/program</span></span><br><span class=\"line\">/var/<span class=\"built_in\">log</span>/program.log &#123;  <span class=\"comment\"># logfile path</span></span><br><span class=\"line\">missingok   <span class=\"comment\"># Ignore if the logfile is missing and return without rotating the log.</span></span><br><span class=\"line\">notifempty  <span class=\"comment\"># Only rotate the log if the source logfile is not empty</span></span><br><span class=\"line\">size 30k    <span class=\"comment\"># Limit the size of the logfile</span></span><br><span class=\"line\">compress    <span class=\"comment\"># Enable compression with gzip for older logs.</span></span><br><span class=\"line\">weekly      <span class=\"comment\"># Specify the interval at which the rotation is to be performed</span></span><br><span class=\"line\">rotate 5    <span class=\"comment\"># It is the number of older copies of logfile archives to be kept</span></span><br><span class=\"line\">create 0600 root root   <span class=\"comment\"># Specify the mode, user, and the group of the logfile archive</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"logging-with-syslog\"><a href=\"#logging-with-syslog\" class=\"headerlink\" title=\"logging with syslog\"></a>logging with syslog</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#/var/log/boot.log      Boot log information.</span></span><br><span class=\"line\"><span class=\"comment\">#/var/log/httpd         Apache web server log.</span></span><br><span class=\"line\"><span class=\"comment\">#/var/log/messages      Post boot kernel information.</span></span><br><span class=\"line\"><span class=\"comment\">#/var/log/auth.log      User authentication log.</span></span><br><span class=\"line\"><span class=\"comment\">#/var/log/dmesg         System boot up messages.</span></span><br><span class=\"line\"><span class=\"comment\">#/var/log/mail.log      Mail server log.</span></span><br><span class=\"line\"><span class=\"comment\">#/var/log/Xorg.0.log    X Server log.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#logger LOG_MESSAGE</span></span><br><span class=\"line\">logger This is a <span class=\"built_in\">test</span> <span class=\"built_in\">log</span> line</span><br><span class=\"line\">tail -n 1 /var/<span class=\"built_in\">log</span>/messages</span><br><span class=\"line\"><span class=\"comment\"># Sep 29 07:47:44 slynux-laptop slynux: This is a test log line</span></span><br><span class=\"line\"><span class=\"comment\"># it logs to /var/log/messages by default</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># with a specified tag</span></span><br><span class=\"line\">logger -t TAG This is a message</span><br><span class=\"line\"><span class=\"comment\"># Sep 29 07:48:42 slynux-laptop TAG: This is a message</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># You can see the tag strings and associated logfiles from the configuration files located in the /etc/rsyslog.d/ directory.</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"monitor-user-login-to-find-intruder\"><a href=\"#monitor-user-login-to-find-intruder\" class=\"headerlink\" title=\"monitor user login to find intruder\"></a>monitor user login to find intruder</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#Filename: intruder_detect.sh</span></span><br><span class=\"line\"><span class=\"comment\">#Description: Intruder reporting tool with auth.log input</span></span><br><span class=\"line\">AUTHLOG=/var/<span class=\"built_in\">log</span>/auth.log</span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ -n <span class=\"variable\">$1</span> ]];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">AUTHLOG=<span class=\"variable\">$1</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> Using Log file : <span class=\"variable\">$AUTHLOG</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">LOG=/tmp/valid.$$.<span class=\"built_in\">log</span></span><br><span class=\"line\">grep -v <span class=\"string\">\"invalid\"</span> <span class=\"variable\">$AUTHLOG</span> &gt; <span class=\"variable\">$LOG</span></span><br><span class=\"line\">users=$(grep <span class=\"string\">\"Failed password\"</span> <span class=\"variable\">$LOG</span> | awk <span class=\"string\">'&#123; print $(NF-5) &#125;'</span> | sort |</span><br><span class=\"line\">uniq)</span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">\"%-5s|%-10s|%-10s|%-13s|%-33s|%s\\n\"</span> <span class=\"string\">\"Sr#\"</span> <span class=\"string\">\"User\"</span> <span class=\"string\">\"Attempts\"</span> <span class=\"string\">\"IP</span></span><br><span class=\"line\"><span class=\"string\">address\"</span> <span class=\"string\">\"Host_Mapping\"</span> <span class=\"string\">\"Time range\"</span></span><br><span class=\"line\">ucount=0;</span><br><span class=\"line\">ip_list=<span class=\"string\">\"<span class=\"variable\">$(egrep -o \"[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\" $LOG | sort |</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"variable\">uniq)</span>\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> ip <span class=\"keyword\">in</span> <span class=\"variable\">$ip_list</span>;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">grep <span class=\"variable\">$ip</span> <span class=\"variable\">$LOG</span> &gt; /tmp/temp.$$.<span class=\"built_in\">log</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> user <span class=\"keyword\">in</span> <span class=\"variable\">$users</span>;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">grep <span class=\"variable\">$user</span> /tmp/temp.$$.<span class=\"built_in\">log</span>&gt; /tmp/$$.<span class=\"built_in\">log</span></span><br><span class=\"line\">cut -c-16 /tmp/$$.<span class=\"built_in\">log</span> &gt; $$.time</span><br><span class=\"line\">tstart=$(head -1 $$.time);</span><br><span class=\"line\">start=$(date -d <span class=\"string\">\"<span class=\"variable\">$tstart</span>\"</span> <span class=\"string\">\"+%s\"</span>);</span><br><span class=\"line\">tend=$(tail -1 $$.time);</span><br><span class=\"line\">end=$(date -d <span class=\"string\">\"<span class=\"variable\">$tend</span>\"</span> <span class=\"string\">\"+%s\"</span>)</span><br><span class=\"line\"><span class=\"built_in\">limit</span>=$(( <span class=\"variable\">$end</span> - <span class=\"variable\">$start</span> ))</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$limit</span> -gt 120 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> ucount++;</span><br><span class=\"line\">IP=$(egrep -o <span class=\"string\">\"[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\"</span> /tmp/$$.<span class=\"built_in\">log</span> |</span><br><span class=\"line\">head -1 );</span><br><span class=\"line\">TIME_RANGE=<span class=\"string\">\"<span class=\"variable\">$tstart</span>--&gt;<span class=\"variable\">$tend</span>\"</span></span><br><span class=\"line\">ATTEMPTS=$(cat /tmp/$$.<span class=\"built_in\">log</span>|wc -l);</span><br><span class=\"line\">HOST=$(host <span class=\"variable\">$IP</span> | awk <span class=\"string\">'&#123; print $NF &#125;'</span> )</span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">\"%-5s|%-10s|%-10s|%-10s|%-33s|%-s\\n\"</span> <span class=\"string\">\"<span class=\"variable\">$ucount</span>\"</span> <span class=\"string\">\"<span class=\"variable\">$user</span>\"</span></span><br><span class=\"line\"><span class=\"string\">\"<span class=\"variable\">$ATTEMPTS</span>\"</span> <span class=\"string\">\"<span class=\"variable\">$IP</span>\"</span> <span class=\"string\">\"<span class=\"variable\">$HOST</span>\"</span> <span class=\"string\">\"<span class=\"variable\">$TIME_RANGE</span>\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">rm /tmp/valid.$$.<span class=\"built_in\">log</span> /tmp/$$.<span class=\"built_in\">log</span> $$.time /tmp/temp.$$.<span class=\"built_in\">log</span> 2&gt; /dev/null</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"remote-disk-usage-health-monitor\"><a href=\"#remote-disk-usage-health-monitor\" class=\"headerlink\" title=\"remote disk usage health monitor\"></a>remote disk usage health monitor</h2><ol>\n<li>set up a common user account on all the remote machines</li>\n<li>configure auto-login with SSH<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#Filename: disklog.sh</span></span><br><span class=\"line\"><span class=\"comment\">#Description: Monitor disk usage health for remote systems</span></span><br><span class=\"line\">logfile=<span class=\"string\">\"diskusage.log\"</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ -n <span class=\"variable\">$1</span> ]]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    logfile=<span class=\"variable\">$1</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ ! -e <span class=\"variable\">$logfile</span> ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span> <span class=\"string\">\"%-8s %-14s %-9s %-8s %-6s %-6s %-6s %s\\n\"</span> <span class=\"string\">\"Date\"</span> <span class=\"string\">\"IP</span></span><br><span class=\"line\"><span class=\"string\">    address\"</span> <span class=\"string\">\"Device\"</span> <span class=\"string\">\"Capacity\"</span> <span class=\"string\">\"Used\"</span> <span class=\"string\">\"Free\"</span> <span class=\"string\">\"Percent\"</span> <span class=\"string\">\"Status\"</span> &gt; <span class=\"variable\">$logfile</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">IP_LIST=<span class=\"string\">\"127.0.0.1 0.0.0.0\"</span></span><br><span class=\"line\"><span class=\"comment\">#provide the list of remote machine IP addresses</span></span><br><span class=\"line\">(</span><br><span class=\"line\"><span class=\"keyword\">for</span> ip <span class=\"keyword\">in</span> <span class=\"variable\">$IP_LIST</span>;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\"><span class=\"comment\">#slynux is the username, change as necessary</span></span><br><span class=\"line\">ssh slynux@<span class=\"variable\">$ip</span> <span class=\"string\">'df -H'</span> | grep ^/dev/ &gt; /tmp/$$.df</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> line;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">cur_date=$(date +%D)</span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">\"%-8s %-14s \"</span> <span class=\"variable\">$cur_date</span> <span class=\"variable\">$ip</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$line</span> | awk <span class=\"string\">'&#123; printf(\"%-9s %-8s %-6s %-6s</span></span><br><span class=\"line\"><span class=\"string\">%-8s\",$1,$2,$3,$4,$5); &#125;'</span></span><br><span class=\"line\">pusg=$(<span class=\"built_in\">echo</span> <span class=\"variable\">$line</span> | egrep -o <span class=\"string\">\"[0-9]+%\"</span>)</span><br><span class=\"line\">pusg=<span class=\"variable\">$&#123;pusg/\\%/&#125;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$pusg</span> -lt 80 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> SAFE</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> ALERT</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span>&lt; /tmp/$$.df</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">) &gt;&gt; <span class=\"variable\">$logfile</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># We can use the cron utility to run the script at regular intervals</span></span><br><span class=\"line\"><span class=\"comment\"># every day at 10 a.m., write the following entry in the crontab</span></span><br><span class=\"line\">00 10 * * * /home/path/disklog.sh /home/user/diskusg.log</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"measure-and-optimize-power-usage\"><a href=\"#measure-and-optimize-power-usage\" class=\"headerlink\" title=\"measure and optimize power usage\"></a>measure and optimize power usage</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># The log data is stored in the /var/log/wtmp file</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#Filename: active_users.sh</span></span><br><span class=\"line\"><span class=\"comment\">#Description: Reporting tool to find out active users</span></span><br><span class=\"line\"><span class=\"built_in\">log</span>=/var/<span class=\"built_in\">log</span>/wtmp</span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ -n <span class=\"variable\">$1</span> ]];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"built_in\">log</span>=<span class=\"variable\">$1</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">\"%-4s %-10s %-10s %-6s %-8s\\n\"</span> <span class=\"string\">\"Rank\"</span> <span class=\"string\">\"User\"</span> <span class=\"string\">\"Start\"</span> <span class=\"string\">\"Logins\"</span></span><br><span class=\"line\"><span class=\"string\">\"Usage hours\"</span></span><br><span class=\"line\">last -f <span class=\"variable\">$log</span> | head -n -2 &gt; /tmp/ulog.$$</span><br><span class=\"line\">cat /tmp/ulog.$$ | cut -d<span class=\"string\">' '</span> -f1 | sort | uniq&gt; /tmp/users.$$</span><br><span class=\"line\">(</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> user;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">grep ^<span class=\"variable\">$user</span> /tmp/ulog.$$ &gt; /tmp/user.$$</span><br><span class=\"line\">minutes=0</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> t</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">s=$(<span class=\"built_in\">echo</span> <span class=\"variable\">$t</span> | awk -F: <span class=\"string\">'&#123; print ($1 * 60) + $2 &#125;'</span>)</span><br><span class=\"line\"><span class=\"built_in\">let</span> minutes=minutes+s</span><br><span class=\"line\"><span class=\"keyword\">done</span>&lt; &lt;(cat /tmp/user.$$ | awk <span class=\"string\">'&#123; print $NF &#125;'</span> | tr -d <span class=\"string\">')('</span>)</span><br><span class=\"line\">firstlog=$(tail -n 1 /tmp/user.$$ | awk <span class=\"string\">'&#123; print $5,$6 &#125;'</span>)</span><br><span class=\"line\">nlogins=$(cat /tmp/user.$$ | wc -l)</span><br><span class=\"line\">hours=$(<span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$minutes</span> / 60.0\"</span> | bc)</span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">\"%-10s %-10s %-6s %-8s\\n\"</span> <span class=\"variable\">$user</span> <span class=\"string\">\"<span class=\"variable\">$firstlog</span>\"</span> <span class=\"variable\">$nlogins</span> <span class=\"variable\">$hours</span></span><br><span class=\"line\"><span class=\"keyword\">done</span>&lt; /tmp/users.$$</span><br><span class=\"line\">) | sort -nrk 4 | awk <span class=\"string\">'&#123; printf(\"%-4s %s\\n\", NR, $0) &#125;'</span></span><br><span class=\"line\">rm /tmp/users.$$ /tmp/user.$$ /tmp/ulog.$$</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Measuring-and-optimizing-power-usage\"><a href=\"#Measuring-and-optimizing-power-usage\" class=\"headerlink\" title=\"Measuring and optimizing power usage\"></a>Measuring and optimizing power usage</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">powertop</span><br><span class=\"line\">powertop --html <span class=\"comment\"># generating HTML reports</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"monitor-disk-activity\"><a href=\"#monitor-disk-activity\" class=\"headerlink\" title=\"monitor disk activity\"></a>monitor disk activity</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iotop -o    <span class=\"comment\"># show only those processes which are doing active I/O</span></span><br><span class=\"line\">iotop -b -n 2 <span class=\"comment\"># print the statistics two times and then exit</span></span><br><span class=\"line\">iotop -p PID <span class=\"comment\"># Monitor a specific process</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"check-disk-and-filesystem-for-errors\"><a href=\"#check-disk-and-filesystem-for-errors\" class=\"headerlink\" title=\"check disk and filesystem for errors\"></a>check disk and filesystem for errors</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># check for errors on a partition or filesystem</span></span><br><span class=\"line\">fsck /dev/sdb3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># check all the filesystems configured in /etc/fstab</span></span><br><span class=\"line\">fsck -A</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Instruct fsck to automatically attempt fixing errors</span></span><br><span class=\"line\">fsck -a /dev/sda2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># simulate the actions</span></span><br><span class=\"line\">fsck -AN</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Administration-Calls\"><a href=\"#Administration-Calls\" class=\"headerlink\" title=\"Administration Calls\"></a>Administration Calls</h1><h2 id=\"Gathering-information-about-processes\"><a href=\"#Gathering-information-about-processes\" class=\"headerlink\" title=\"Gathering information about processes\"></a>Gathering information about processes</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -f <span class=\"comment\"># -f (stands for full) </span></span><br><span class=\"line\"><span class=\"comment\"># other than the ones attached to the current terminal, -e (every) option</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># display the required columns of output, -o</span></span><br><span class=\"line\">ps -eo comm,pcpu | head</span><br><span class=\"line\"><span class=\"comment\">#pcpu Percentage of CPU</span></span><br><span class=\"line\"><span class=\"comment\">#pid Process ID</span></span><br><span class=\"line\"><span class=\"comment\">#ppid Parent Process ID</span></span><br><span class=\"line\"><span class=\"comment\">#pmem Percentage of memory</span></span><br><span class=\"line\"><span class=\"comment\">#comm Executable filename</span></span><br><span class=\"line\"><span class=\"comment\">#cmd Simple command</span></span><br><span class=\"line\"><span class=\"comment\">#user The user who started the process</span></span><br><span class=\"line\"><span class=\"comment\">#nice The priority (niceness)</span></span><br><span class=\"line\"><span class=\"comment\">#time Cumulative CPU time</span></span><br><span class=\"line\"><span class=\"comment\">#etime Elapsed time since the process started</span></span><br><span class=\"line\"><span class=\"comment\">#tty The associated TTY device</span></span><br><span class=\"line\"><span class=\"comment\">#euid The effective user</span></span><br><span class=\"line\"><span class=\"comment\">#stat Process state</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># display several parameters along with the top CPU consuming processes</span></span><br><span class=\"line\">top</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Sorting the ps output</span></span><br><span class=\"line\">ps -eo comm,pcpu --sort -pcpu | head</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Finding the process ID when given command names</span></span><br><span class=\"line\">ps -C COMMAND_NAME</span><br><span class=\"line\">ps -C COMMAND_NAME -o pid= <span class=\"comment\"># lists the process IDs</span></span><br><span class=\"line\">pgrep COMMAND</span><br><span class=\"line\">pgrep bash -d <span class=\"string\">\":\"</span> <span class=\"comment\"># define delimiter rather than using a newline</span></span><br><span class=\"line\">pgrep -u root,slynux COMMAND <span class=\"comment\"># Specify a list of owners of the user for the matching processes</span></span><br><span class=\"line\">pgrep -c COMMAND <span class=\"comment\"># Return the count of matching processes</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Specify an effective users' list by using -u EUSER1, EUSER2,</span></span><br><span class=\"line\"><span class=\"comment\"># Specify a real users' list by using -U RUSER1, RUSER2</span></span><br><span class=\"line\">ps -u root -U root -o user,pcpu</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># TTY filter for ps</span></span><br><span class=\"line\">ps -t pts/0,pts/1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Information about process threads</span></span><br><span class=\"line\">ps -eLf</span><br><span class=\"line\"><span class=\"comment\"># -L : show information about threads. </span></span><br><span class=\"line\"><span class=\"comment\"># NLWP is the thread count for a process and NLP is the thread ID for each entry</span></span><br><span class=\"line\">ps -eLf --sort -nlwp | head</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Showing environment variables for a process</span></span><br><span class=\"line\">ps -eo cmd e</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># if /usr/bin/windowapp did not work</span></span><br><span class=\"line\">ps -C windowapp -eo cmd e   <span class=\"comment\"># find out the env variable, and prefix to the cmd</span></span><br><span class=\"line\">DISPLAY=:0 /usr/bin/windowapp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">which</span> <span class=\"comment\"># find the location of a command</span></span><br><span class=\"line\"><span class=\"built_in\">which</span> ls <span class=\"comment\"># /bin/ls</span></span><br><span class=\"line\">whereis ls</span><br><span class=\"line\">whatis ls <span class=\"comment\"># one-line description of the command</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Add path</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/ryan/bin</span><br><span class=\"line\"></span><br><span class=\"line\">file FILENAME <span class=\"comment\"># return file type</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># specifies the average of the total number of runnable processes</span></span><br><span class=\"line\">uptime</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Killing-processes-and-send-or-respond-to-signals\"><a href=\"#Killing-processes-and-send-or-respond-to-signals\" class=\"headerlink\" title=\"Killing processes and send or respond to signals\"></a>Killing processes and send or respond to signals</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">kill</span> -l <span class=\"comment\"># print signal numbers and corresponding signal names</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># specify a signal to be sent to a process via the kill</span></span><br><span class=\"line\"><span class=\"built_in\">kill</span> -s SIGNAL PID</span><br><span class=\"line\"><span class=\"built_in\">kill</span> -s SIGKILL PROCESS_ID <span class=\"comment\"># same as : kill -9 PROCESS_ID</span></span><br><span class=\"line\"></span><br><span class=\"line\">killall -u USERNAME process_name</span><br><span class=\"line\">pkill process_name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># trap is a command used to assign signal handler to signals in a script</span></span><br><span class=\"line\"><span class=\"built_in\">trap</span> <span class=\"string\">'signal_handler_function_name'</span> SIGNAL LIST</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#Filename: sighandle.sh</span></span><br><span class=\"line\"><span class=\"comment\">#Description: Signal handler</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> handler()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> Hey, received signal : SIGINT</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">echo</span> My process ID is $$</span><br><span class=\"line\"><span class=\"built_in\">trap</span> <span class=\"string\">'handler'</span> SIGINT</span><br><span class=\"line\"><span class=\"comment\">#handler is the name of the signal handler function for SIGINT signal</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    sleep 1</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Sending-messages-to-user-terminals\"><a href=\"#Sending-messages-to-user-terminals\" class=\"headerlink\" title=\"Sending messages to user terminals\"></a>Sending messages to user terminals</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># broadcast a message to all users and all logged in terminals</span></span><br><span class=\"line\">cat message.txt | wall</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Gathering-system-information\"><a href=\"#Gathering-system-information\" class=\"headerlink\" title=\"Gathering system information\"></a>Gathering system information</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># print the hostname of the current system</span></span><br><span class=\"line\">hostname</span><br><span class=\"line\">uname -n</span><br><span class=\"line\">uname -a</span><br><span class=\"line\">uname -r <span class=\"comment\"># kernel release</span></span><br><span class=\"line\">uname -m <span class=\"comment\"># machine type</span></span><br><span class=\"line\"></span><br><span class=\"line\">cat /proc/cpuinfo <span class=\"comment\"># print details about the CPU</span></span><br><span class=\"line\">cat /proc/meminfo <span class=\"comment\"># memory info</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Using-proc-to-gather-information\"><a href=\"#Using-proc-to-gather-information\" class=\"headerlink\" title=\"Using /proc to gather information\"></a>Using /proc to gather information</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /proc/4295/environ will display all the environment variables</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Scheduling-with-cron\"><a href=\"#Scheduling-with-cron\" class=\"headerlink\" title=\"Scheduling with cron\"></a>Scheduling with cron</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">02 * * * * /home/slynux/test.sh <span class=\"comment\"># execute test.sh at 2nd mintues of all hours</span></span><br><span class=\"line\">00 5,6,7 * * /home/slynux/test.sh <span class=\"comment\">#  fifth, sixth, and seventh hours</span></span><br><span class=\"line\">00 */12 * * 0 /home/slynux/script.sh  <span class=\"comment\"># every hour on Sundays</span></span><br><span class=\"line\">00 02 * * * /sbin/shutdown -h <span class=\"comment\"># 2 A.M. everyday</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -e option to crontab to start editing the cron table</span></span><br><span class=\"line\">crontab -e</span><br><span class=\"line\"></span><br><span class=\"line\">crontab&lt;&lt;EOF</span><br><span class=\"line\">02 * * * * /home/slynux/script.sh</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Minute (0 - 59)   5,10 or */5</span></span><br><span class=\"line\"><span class=\"comment\"># Hour (0 - 23)</span></span><br><span class=\"line\"><span class=\"comment\"># Day (1 - 31)</span></span><br><span class=\"line\"><span class=\"comment\"># Month (1 - 12)</span></span><br><span class=\"line\"><span class=\"comment\"># Weekday (0 - 6)</span></span><br><span class=\"line\"><span class=\"comment\"># COMMAND (the script</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Specifying environment variables</span></span><br><span class=\"line\">crontab&lt;&lt;EOF</span><br><span class=\"line\">http_proxy=http://192.168.0.3:3128</span><br><span class=\"line\">00 * * * * /home/slynux/download.sh</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Running commands at system start up/boot</span></span><br><span class=\"line\">@reboot <span class=\"built_in\">command</span></span><br><span class=\"line\"></span><br><span class=\"line\">crontab -l <span class=\"comment\"># list existed job</span></span><br><span class=\"line\">crontab -r <span class=\"comment\"># remove cron table for current user</span></span><br><span class=\"line\">crontab -u ryan -r <span class=\"comment\"># need root</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Writing-and-reading-the-MySQL-database-from-bash\"><a href=\"#Writing-and-reading-the-MySQL-database-from-bash\" class=\"headerlink\" title=\"Writing and reading the MySQL database from bash\"></a>Writing and reading the MySQL database from bash</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"User-administration-scripts\"><a href=\"#User-administration-scripts\" class=\"headerlink\" title=\"User administration scripts\"></a>User administration scripts</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd USER -p PASSWORD</span><br><span class=\"line\">passwd USER</span><br><span class=\"line\">addgroup USER GROUP</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Bulk-image-resizing-and-format-conversion\"><a href=\"#Bulk-image-resizing-and-format-conversion\" class=\"headerlink\" title=\"Bulk image resizing and format conversion\"></a>Bulk image resizing and format conversion</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Taking-screenshots-from-the-terminal\"><a href=\"#Taking-screenshots-from-the-terminal\" class=\"headerlink\" title=\"Taking screenshots from the terminal\"></a>Taking screenshots from the terminal</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Managing-multiple-terminals-from-one\"><a href=\"#Managing-multiple-terminals-from-one\" class=\"headerlink\" title=\"Managing multiple terminals from one\"></a>Managing multiple terminals from one</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># using a utility called GNU screen</span></span><br></pre></td></tr></table></figure>\n\n<p>– END –</p>\n","site":{"data":{}},"excerpt":"<p>Notes for &lt;&lt; Linux Shell Scripts Cook Book&gt;&gt;.<br>It is very helpful for people with zero or little knowledge about Linux Shell Scripts.</p>","more":"<h1 id=\"Shell-Something-Out\"><a href=\"#Shell-Something-Out\" class=\"headerlink\" title=\"Shell Something Out\"></a>Shell Something Out</h1><h2 id=\"introduction\"><a href=\"#introduction\" class=\"headerlink\" title=\"introduction\"></a>introduction</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\"># indicate using which shell interpretor</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># when a shell starts, it initially define various setting from ~/.bashrc or ~/.bash_profile</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"printing-in-the-terminal\"><a href=\"#printing-in-the-terminal\" class=\"headerlink\" title=\"printing in the terminal\"></a>printing in the terminal</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"hi \\!\"</span>    <span class=\"comment\"># ! needs escape, otherwise means not operator</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n hello   <span class=\"comment\"># escape new line</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"string contains escape sequence\"</span>   <span class=\"comment\"># when using escape sequence</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\e[31m this is red text \\e[0m\"</span>    <span class=\"comment\"># \\e[31m - red; \\e[0m - reset</span></span><br><span class=\"line\"><span class=\"comment\"># reset = 0, black = 40, red = 41, green = 42, yellow = 43, blue = 44, magenta = 45, cyan = 46, and white=47</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">\"%-5s %-10s %-4.2f \\n\"</span> 11 ryan 99.88888</span><br><span class=\"line\"><span class=\"comment\"># printf without newline</span></span><br><span class=\"line\"><span class=\"comment\"># %-5s: string substitution + left alignment + width 5</span></span><br><span class=\"line\"><span class=\"comment\"># %-4.2f: float + 2 decimal</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"variable-and-environment-variable\"><a href=\"#variable-and-environment-variable\" class=\"headerlink\" title=\"variable and environment variable\"></a>variable and environment variable</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">env <span class=\"comment\"># view all the environment variables relative to a terminal</span></span><br><span class=\"line\">cat /proc/<span class=\"variable\">$PID</span>/environ | tr <span class=\"string\">'\\0'</span> <span class=\"string\">'\\n'</span></span><br><span class=\"line\"><span class=\"comment\"># environment variable for that process</span></span><br><span class=\"line\"><span class=\"comment\"># trade to get each variable one line</span></span><br><span class=\"line\"></span><br><span class=\"line\">pgrep &lt;program&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># equality vs assignment</span></span><br><span class=\"line\">var = value</span><br><span class=\"line\">var=value</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># PATH is defined in /etc/environment or /etc/profile or ~/.bashrc</span></span><br><span class=\"line\"><span class=\"comment\"># store a list of paths where to search for executables, libraries</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$NEW_PATH</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># get length of variable</span></span><br><span class=\"line\">LENGTH=<span class=\"variable\">$&#123;#VAR&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># identify current shell</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$SHELL</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># UID value of root is 0</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$UID</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"math\"><a href=\"#math\" class=\"headerlink\" title=\"math\"></a>math</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n=10</span><br><span class=\"line\"><span class=\"built_in\">let</span> result=n+10</span><br><span class=\"line\"><span class=\"built_in\">let</span> n++</span><br><span class=\"line\"><span class=\"built_in\">let</span> n+=6</span><br><span class=\"line\"></span><br><span class=\"line\">result=$[n+2]</span><br><span class=\"line\">result=$[<span class=\"variable\">$n</span>+2]</span><br><span class=\"line\"></span><br><span class=\"line\">result=$((n+5))</span><br><span class=\"line\"></span><br><span class=\"line\">result=`expr 4+3`</span><br><span class=\"line\">result=$(expr n+5)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># bc for advanced</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"4*0.53\"</span> | bc</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"scale=2; 3/8\"</span> | bc    <span class=\"comment\"># semicolon as a delimiter</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># base convention</span></span><br><span class=\"line\">n=100</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"obase=2; <span class=\"variable\">$n</span>\"</span> | bc <span class=\"comment\"># 1100100</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"obase=10;ibase=2; <span class=\"variable\">$n</span>\"</span> | bc <span class=\"comment\"># 4</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"sqrt(100)\"</span> | bc</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"10^10\"</span> | bc</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"file-description-and-redirection\"><a href=\"#file-description-and-redirection\" class=\"headerlink\" title=\"file description and redirection\"></a>file description and redirection</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 0-stdin, 1-stdout, 2-stderr</span></span><br><span class=\"line\"><span class=\"comment\"># run echo $? immediately after the command execution to print the exit status</span></span><br><span class=\"line\"><span class=\"comment\"># 0 means successful completion</span></span><br><span class=\"line\"></span><br><span class=\"line\">cat a* 2&gt;err.txt    <span class=\"comment\"># 2 stands for stderr. so error will be redirect to err.txt</span></span><br><span class=\"line\">cat a* | tee out.txt | cat -n</span><br><span class=\"line\"><span class=\"comment\"># 1. get 2 stderr which show up and 2 stdout which go to next level </span></span><br><span class=\"line\"><span class=\"comment\"># 2. tee will get 2 stdout into both out.txt and pipeline</span></span><br><span class=\"line\"><span class=\"comment\"># 3. cat get stdin and add line number</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"arrays-and-associative-arrays\"><a href=\"#arrays-and-associative-arrays\" class=\"headerlink\" title=\"arrays and associative arrays\"></a>arrays and associative arrays</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array_var[0]=<span class=\"string\">'test1'</span></span><br><span class=\"line\">array_var[1]=<span class=\"string\">'test2'</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;array_var[0]&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;array_var[*]&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;array_var[@]&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;#array_var[@]&#125;</span>   <span class=\"comment\">#2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># associate array</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -A ass_array</span><br><span class=\"line\">ass_array[apple]=100</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># list array indexes</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;!array_var[*]&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"visiting-aliases\"><a href=\"#visiting-aliases\" class=\"headerlink\" title=\"visiting aliases\"></a>visiting aliases</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> install=<span class=\"string\">'sudo apt-get install'</span></span><br><span class=\"line\">install docker <span class=\"comment\"># = sudo apt-get install docker</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"grabbing-info-about-the-terminal\"><a href=\"#grabbing-info-about-the-terminal\" class=\"headerlink\" title=\"grabbing info about the terminal\"></a>grabbing info about the terminal</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tput cols   <span class=\"comment\"># get width of terminal</span></span><br><span class=\"line\">tput lines  <span class=\"comment\"># get height of terminal</span></span><br><span class=\"line\">tput cup 100 100</span><br><span class=\"line\">tput setb n  <span class=\"comment\"># 0-7 background color, 7-grey</span></span><br><span class=\"line\">tput setf n  <span class=\"comment\"># 0-7 text color, 0-black</span></span><br><span class=\"line\">tput bold</span><br><span class=\"line\">tput smul</span><br><span class=\"line\">tput rmul   <span class=\"comment\"># underline</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># hide password</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n <span class=\"string\">\"Enter password: \"</span></span><br><span class=\"line\">stty -<span class=\"built_in\">echo</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> password</span><br><span class=\"line\">stty <span class=\"built_in\">echo</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> Password <span class=\"built_in\">read</span>.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"dates-and-delays\"><a href=\"#dates-and-delays\" class=\"headerlink\" title=\"dates and delays\"></a>dates and delays</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">date +%s    <span class=\"comment\"># epoch time</span></span><br><span class=\"line\">date <span class=\"string\">\"+%d %B %Y\"</span> <span class=\"comment\"># 16 May 2018</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># get time take for a program</span></span><br><span class=\"line\">start=`date +%s`</span><br><span class=\"line\">...</span><br><span class=\"line\">end=`date +%s`</span><br><span class=\"line\"><span class=\"built_in\">let</span> time_taken=end-start</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>weekday:  %a Sat; %A Saturday</li>\n<li>Month:    %b Nov; %B November</li>\n<li>Day:      %d</li>\n<li>Date:     %D 10/20/99</li>\n<li>Year:     %y 10; %Y 2010</li>\n<li>Hour:     %I or %H    </li>\n<li>Minute:   %M</li>\n<li>Second:   %S</li>\n<li>Epoch:    %s</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># delay scripts</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n Count:</span><br><span class=\"line\">tput sc     <span class=\"comment\"># tput sc to store the cursor position</span></span><br><span class=\"line\">count=0</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"variable\">$count</span> -lt 40 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">let</span> count++</span><br><span class=\"line\">        sleep 1;</span><br><span class=\"line\">        tput rc     <span class=\"comment\"># tput rc to restore the cursor position</span></span><br><span class=\"line\">        tput ed     <span class=\"comment\"># clean existed number</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> -n <span class=\"variable\">$count</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"debugging-the-script\"><a href=\"#debugging-the-script\" class=\"headerlink\" title=\"debugging the script\"></a>debugging the script</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -x scripts.sh</span><br><span class=\"line\"><span class=\"comment\"># in scripts, using set -x and set +x to debug specific portion</span></span><br><span class=\"line\"><span class=\"comment\"># set -x : display arguments and commands</span></span><br><span class=\"line\"><span class=\"comment\"># set +x : disable debugging</span></span><br><span class=\"line\"><span class=\"comment\"># set -v : display input</span></span><br><span class=\"line\"><span class=\"comment\"># set +v : disable print input</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## DEBUG</span></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> DEBUG()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        [ <span class=\"string\">\"<span class=\"variable\">$_DEBUG</span>\"</span> == <span class=\"string\">\"on\"</span> ] &amp;&amp; <span class=\"variable\">$@</span> || :</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> &#123;1..10&#125;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">        DEBUG <span class=\"built_in\">echo</span> <span class=\"variable\">$i</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># #!/bin/bash -xv : enable debugging</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"function-and-arguments\"><a href=\"#function-and-arguments\" class=\"headerlink\" title=\"function and arguments\"></a>function and arguments</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># function can return default 0 or any one argument if success</span></span><br><span class=\"line\"><span class=\"comment\"># check if a command terminated successfully</span></span><br><span class=\"line\"><span class=\"variable\">$CMD</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $? -eq 0 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> successfully </span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> unsuccessfully</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"reading-the-output-of-a-sequence-of-commands\"><a href=\"#reading-the-output-of-a-sequence-of-commands\" class=\"headerlink\" title=\"reading the output of a sequence of commands\"></a>reading the output of a sequence of commands</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># add line number</span></span><br><span class=\"line\">ls | cat -n &gt; out.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># a subshell can be defined using () operation</span></span><br><span class=\"line\"><span class=\"comment\"># always quote them in double quotes to preserve the space and newline character</span></span><br><span class=\"line\">out=<span class=\"string\">\"<span class=\"variable\">$(cat test.txt)</span>\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"reading-n-characters-without-pressing-the-return-key\"><a href=\"#reading-n-characters-without-pressing-the-return-key\" class=\"headerlink\" title=\"reading n characters without pressing the return key\"></a>reading n characters without pressing the return key</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">read</span> -n 2 var <span class=\"comment\"># read 2 chars from input</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> -s password <span class=\"comment\"># read password in nonechoed mode</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> -p <span class=\"string\">\" Enter : \"</span> var <span class=\"comment\"># display a message</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> -t 2 var <span class=\"comment\"># read input within 2 sec</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> -d <span class=\"string\">\":\"</span> var <span class=\"comment\"># use delimiter to end input. hi:</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"running-a-command-until-it-succeeds\"><a href=\"#running-a-command-until-it-succeeds\" class=\"headerlink\" title=\"running a command until it succeeds\"></a>running a command until it succeeds</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">repeat</span></span>()&#123; <span class=\"keyword\">while</span> :; <span class=\"keyword\">do</span> <span class=\"variable\">$@</span> &amp;&amp; <span class=\"built_in\">return</span>; sleep 30; <span class=\"keyword\">done</span> &#125;</span><br><span class=\"line\">repeat wget -c url</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"field-separations-and-iterators\"><a href=\"#field-separations-and-iterators\" class=\"headerlink\" title=\"field separations and iterators\"></a>field separations and iterators</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># IFS internal field separator</span></span><br><span class=\"line\">data_set1=<span class=\"string\">\"1 2 3 4 5\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> data <span class=\"keyword\">in</span> data_set1;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$data</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\">data_set1=<span class=\"string\">\"1;2;3;4;5\"</span></span><br><span class=\"line\">IFS=<span class=\"string\">\";\"</span> <span class=\"comment\"># so that system how to delimite data</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> data <span class=\"keyword\">in</span> data_set1;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$data</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> var <span class=\"keyword\">in</span> vars; <span class=\"comment\"># for i in &#123;1..10&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$var</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># while</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> condition</span><br><span class=\"line\"><span class=\"keyword\">do</span> </span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># until</span></span><br><span class=\"line\">until [ <span class=\"variable\">$x</span> -eq 9 ] <span class=\"comment\"># once meet, loop ends</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"comparisons-and-tests\"><a href=\"#comparisons-and-tests\" class=\"headerlink\" title=\"comparisons and tests\"></a>comparisons and tests</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> condition;</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> condition;</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> condition; </span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># logical operators</span></span><br><span class=\"line\">[ condition ] &amp;&amp; action; <span class=\"comment\"># action if condition true</span></span><br><span class=\"line\">[ condition ] || action; <span class=\"comment\"># action if condition fasle</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># at least one space in []</span></span><br><span class=\"line\">[ <span class=\"variable\">$var</span> -eq 0 ]</span><br><span class=\"line\">[ <span class=\"variable\">$var</span> -nq 0 ]  <span class=\"comment\"># !=</span></span><br><span class=\"line\"><span class=\"comment\"># -gt, -ls, -ge &gt;=, -le &lt;=</span></span><br><span class=\"line\">[ <span class=\"variable\">$var</span> -ne 0 -a <span class=\"variable\">$var2</span> -ne 0 ] <span class=\"comment\"># -a means and</span></span><br><span class=\"line\">[ <span class=\"variable\">$var</span> -ne 0 -o <span class=\"variable\">$var2</span> -ne 0 ] <span class=\"comment\"># -o means or</span></span><br><span class=\"line\"></span><br><span class=\"line\">[ -f <span class=\"variable\">$file</span> ] <span class=\"comment\"># true if holds a file path or filename</span></span><br><span class=\"line\">[ -x <span class=\"variable\">$file</span> ] <span class=\"comment\"># true if file is executable</span></span><br><span class=\"line\">[ -w <span class=\"variable\">$file</span> ] <span class=\"comment\"># true if file is writable</span></span><br><span class=\"line\">[ -r <span class=\"variable\">$file</span> ] <span class=\"comment\"># true if file is readable</span></span><br><span class=\"line\">[ -d <span class=\"variable\">$file</span> ] <span class=\"comment\"># true if it is a directory</span></span><br><span class=\"line\">[ -e <span class=\"variable\">$file</span> ] <span class=\"comment\"># true if it is existed file</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># file exists sample</span></span><br><span class=\"line\">fpath=<span class=\"string\">\"/etc/passwd\"</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -e <span class=\"variable\">$fpath</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> file exists.</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> file not exists.</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># string comparison, use double square brackets, single brackets sometimes errors</span></span><br><span class=\"line\">[[ <span class=\"variable\">$str1</span> = <span class=\"variable\">$str2</span> ]] <span class=\"comment\"># space needed beside =</span></span><br><span class=\"line\">[[ -z <span class=\"variable\">$str</span> ]] <span class=\"comment\"># true if str hols an empty string, str=\"\"</span></span><br><span class=\"line\">[[ -n <span class=\"variable\">$str</span> ]] <span class=\"comment\"># true if str hols an non-empty string, str=\"xx\"</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Have-a-Good-Command\"><a href=\"#Have-a-Good-Command\" class=\"headerlink\" title=\"Have a Good Command\"></a>Have a Good Command</h1><h2 id=\"concatenating-with-cat\"><a href=\"#concatenating-with-cat\" class=\"headerlink\" title=\"concatenating with cat\"></a>concatenating with cat</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cat can read both file and stdin</span></span><br><span class=\"line\">cat -T filename <span class=\"comment\"># display tab as ^I</span></span><br><span class=\"line\">cat -n filename <span class=\"comment\"># add line number, -b kill blank line</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"record-and-play-back-of-terminal-sessions\"><a href=\"#record-and-play-back-of-terminal-sessions\" class=\"headerlink\" title=\"record and play back of terminal sessions\"></a>record and play back of terminal sessions</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -t dump timing data to stderr</span></span><br><span class=\"line\">script -t 2&gt;timing.log -a output.session</span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br><span class=\"line\"></span><br><span class=\"line\">scriptreplay timing.log output.session</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"find-file-and-file-listing\"><a href=\"#find-file-and-file-listing\" class=\"headerlink\" title=\"find file and file listing\"></a>find file and file listing</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find . -<span class=\"built_in\">print</span>   <span class=\"comment\"># delimit by \\n</span></span><br><span class=\"line\"><span class=\"comment\"># ./1.txt</span></span><br><span class=\"line\"><span class=\"comment\"># ./2.txt</span></span><br><span class=\"line\">find . -print0  <span class=\"comment\"># delimit by \\n</span></span><br><span class=\"line\"><span class=\"comment\"># ./1.txt./2.txt</span></span><br><span class=\"line\">find . -name <span class=\"string\">\"*.txt\"</span> -<span class=\"built_in\">print</span></span><br><span class=\"line\">find . \\( -name <span class=\"string\">\"*.txt\"</span> -o -name <span class=\"string\">\"*.pdf\"</span> \\) -<span class=\"built_in\">print</span>  <span class=\"comment\"># (*.txt or *.pdf)</span></span><br><span class=\"line\">find  . -path <span class=\"string\">\"*/slynux/*\"</span> -<span class=\"built_in\">print</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># regex = regular expession, -i ignore case</span></span><br><span class=\"line\">find . -regex <span class=\"string\">\".*\\(\\.py\\|\\.txt\\)\"</span> <span class=\"comment\"># \".*.py|.txt\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># exclude !</span></span><br><span class=\"line\">find . ! -name <span class=\"string\">\"*.txt\"</span> -<span class=\"built_in\">print</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># level control</span></span><br><span class=\"line\">find . -maxdepth 2 ! -name <span class=\"string\">\"*.txt\"</span> -<span class=\"built_in\">print</span> <span class=\"comment\"># ./xxx/xxx</span></span><br><span class=\"line\">find . -mindepth 2 ! -name <span class=\"string\">\"*.txt\"</span> -<span class=\"built_in\">print</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># every object as a file. files: regular file, directory, character devices, block devices, symlinks, hardlinks, sockets, FIFO</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> d -<span class=\"built_in\">print</span>   </span><br><span class=\"line\"><span class=\"comment\"># d-dir, f-regular file, l-symbolic link, c-character special device, b-block device,s-socket, p-FIFO</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># file times</span></span><br><span class=\"line\"><span class=\"comment\"># -atime : access time</span></span><br><span class=\"line\"><span class=\"comment\"># -mtime : modification time = content</span></span><br><span class=\"line\"><span class=\"comment\"># -ctime : change time = metadata (such as permissions or ownership)</span></span><br><span class=\"line\"><span class=\"comment\"># time in minutes ( -amin, -mmin, -cmin)</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -atime -7 -<span class=\"built_in\">print</span> <span class=\"comment\"># within last 7 days</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -atime 7 -<span class=\"built_in\">print</span> <span class=\"comment\"># exactly 7 days old</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -atime +7 -<span class=\"built_in\">print</span> <span class=\"comment\"># older than 7 days</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># find files that newer than file.txt</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -newer file.txt -<span class=\"built_in\">print</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># file size over 2k, lt and eq; (M or G)</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -size +2k <span class=\"comment\"># -2k, 2k</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># delete all files with .log</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -name <span class=\"string\">\"*.log\"</span> -delete</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># based on permission, -perm</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -name <span class=\"string\">\"*.php\"</span> ! -perm 644 -<span class=\"built_in\">print</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># based on ownership, -user</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -user ryan -<span class=\"built_in\">print</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># using with exec \\;</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -user root -<span class=\"built_in\">exec</span> chown ryan &#123;&#125; \\;</span><br><span class=\"line\"><span class=\"comment\"># &#123;&#125; here will be replaced by the find result.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># exclude file</span></span><br><span class=\"line\">find . -name <span class=\"string\">\".git\"</span> -prune</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"xargs\"><a href=\"#xargs\" class=\"headerlink\" title=\"xargs\"></a>xargs</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># space is default delimiter, change to X </span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"splitXsplitXsplitXsplit\"</span> | xargs -d X -n 2</span><br><span class=\"line\"><span class=\"comment\"># split split</span></span><br><span class=\"line\"><span class=\"comment\"># split split</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"splitXsplitXsplitXsplit\"</span> | xargs -d X -n 2 ./show.sh</span><br><span class=\"line\"><span class=\"comment\"># show : split split</span></span><br><span class=\"line\"><span class=\"comment\"># show : split split</span></span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"comment\"># use -I to specify a replacament string when xargs expands</span></span><br><span class=\"line\">cat args.txt | xargs -I &#123;&#125; ./show.sh &#123;&#125; -l</span><br><span class=\"line\"><span class=\"comment\"># each argument will be pass to replace &#123;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -name <span class=\"string\">\"*.txt\"</span> -print0 | xargs -0 rm -f</span><br><span class=\"line\"><span class=\"comment\"># -print0 give one line output; -0 : delimiter is \\0</span></span><br><span class=\"line\"></span><br><span class=\"line\">cat files.txt | ( <span class=\"keyword\">while</span> <span class=\"built_in\">read</span> arg; <span class=\"keyword\">do</span> cat <span class=\"variable\">$arg</span>; <span class=\"keyword\">done</span> )</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"translat-with-tr\"><a href=\"#translat-with-tr\" class=\"headerlink\" title=\"translat with tr\"></a>translat with tr</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># only take stdin as input</span></span><br><span class=\"line\">tr [options] set1 set2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># uppler to lower</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"HELLO WHO IS THIS\"</span> | tr <span class=\"string\">'A-Z'</span> <span class=\"string\">'a-z'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># delete</span></span><br><span class=\"line\">cat file.txt | tr -d <span class=\"string\">'&lt;SET&gt;'</span></span><br><span class=\"line\">cat file.txt | tr -d -c <span class=\"string\">'0-9 \\n'</span> <span class=\"comment\"># complement; keep only 0-9, space and tab.</span></span><br><span class=\"line\">cat file.txt | tr -s <span class=\"string\">' '</span> <span class=\"comment\"># -s : squeeze repeating characters</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># $[ operation ] performs a numeric operation</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># character class</span></span><br><span class=\"line\"><span class=\"comment\">## alnum: Alphanumeric characters</span></span><br><span class=\"line\"><span class=\"comment\">## alpha: Alphabetic characters</span></span><br><span class=\"line\"><span class=\"comment\">## cntrl: Control (nonprinting) characters</span></span><br><span class=\"line\"><span class=\"comment\">## digit: Numeric characters</span></span><br><span class=\"line\"><span class=\"comment\">## graph: Graphic characters</span></span><br><span class=\"line\"><span class=\"comment\">## lower: Lowercase alphabetic characters</span></span><br><span class=\"line\"><span class=\"comment\">## print: Printable characters</span></span><br><span class=\"line\"><span class=\"comment\">## punct: Punctuation characters</span></span><br><span class=\"line\"><span class=\"comment\">## space: Whitespace characters</span></span><br><span class=\"line\"><span class=\"comment\">## upper: Uppercase characters</span></span><br><span class=\"line\"><span class=\"comment\">## xdigit: Hexadecimal characters</span></span><br><span class=\"line\">tr <span class=\"string\">'[:lower:]'</span> <span class=\"string\">'[:upper:]'</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"checksum-and-verification\"><a href=\"#checksum-and-verification\" class=\"headerlink\" title=\"checksum and verification\"></a>checksum and verification</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">md5sum filename</span><br><span class=\"line\">md5deep -rl directory_path &gt; directory.md5 <span class=\"comment\"># -l : using relative path</span></span><br><span class=\"line\"></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -print0 | xargs -0 md5sum &gt; dir.md5</span><br><span class=\"line\">md5sum -c dir.md5</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"cryptographic-tool-and-hash\"><a href=\"#cryptographic-tool-and-hash\" class=\"headerlink\" title=\"cryptographic tool and hash\"></a>cryptographic tool and hash</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crypt PASSPHRASE &lt;input_file &gt;encrypted_file</span><br><span class=\"line\">crypt PASSPHRASE -d &lt;encrypted_file &gt;output_file</span><br><span class=\"line\"></span><br><span class=\"line\">gpg -c filename <span class=\"comment\"># encrypt</span></span><br><span class=\"line\">gpg filename.gpg <span class=\"comment\"># decrypt</span></span><br><span class=\"line\"></span><br><span class=\"line\">base64 filename &gt; outputfile</span><br><span class=\"line\">base64 -d file &gt; outputfile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># md5sum and sha1sum to verify password</span></span><br><span class=\"line\"><span class=\"comment\"># store password in hash format</span></span><br><span class=\"line\"><span class=\"comment\"># when user provide password, they convert to hash and compare</span></span><br><span class=\"line\"></span><br><span class=\"line\">openssl passwd -1 -salt SALT_STRING PASSWORD</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"sort-unique-and-duplicate\"><a href=\"#sort-unique-and-duplicate\" class=\"headerlink\" title=\"sort unique and duplicate\"></a>sort unique and duplicate</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sort file1.txt file2.txt &gt; sorted.txt</span><br><span class=\"line\">sort -n file.txt    <span class=\"comment\"># numerical sort, -r reverse order, -M by months</span></span><br><span class=\"line\">sort -m sort1 sort2 <span class=\"comment\"># merge two sorted files</span></span><br><span class=\"line\">sort file1 file2 | uniq <span class=\"comment\"># find the unique lines</span></span><br><span class=\"line\"><span class=\"comment\"># check if a file is sorted</span></span><br><span class=\"line\">sort -C filename    <span class=\"comment\"># return 0 -&gt; sorted</span></span><br><span class=\"line\"></span><br><span class=\"line\">sort -nrk 1 data.txt    <span class=\"comment\"># -n numeric, -r reverse, -k specified the key, column 1</span></span><br><span class=\"line\">sort -nk 2,3 data.txt   <span class=\"comment\"># 1010dddddee, 01 is the key</span></span><br><span class=\"line\"><span class=\"comment\"># -b ignore leading blank lines</span></span><br><span class=\"line\"><span class=\"comment\"># -d sort in the dictionary order</span></span><br><span class=\"line\"></span><br><span class=\"line\">sort unsorted.txt | uniq -u <span class=\"comment\"># show only unique lines</span></span><br><span class=\"line\">sort unsorted.txt | uniq -c <span class=\"comment\"># count how many times of each lines</span></span><br><span class=\"line\">sort unsorted.txt | uniq -d <span class=\"comment\"># show only duplicate lines</span></span><br><span class=\"line\">sort data.txt | uniq -s 2 -w 2 <span class=\"comment\"># -s 2 : ignore fisrt 2 char; -w 2 : max compare chars</span></span><br><span class=\"line\"><span class=\"comment\"># u:01:bash - only 01 will be compared</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># xargs use space as default delimiter, if stdin contains space, need to use \\0</span></span><br><span class=\"line\">uniq -z file.txt | xargs -0 rm</span><br><span class=\"line\"><span class=\"comment\"># -z zero-byte terminated output, -0 use \\0 as delimiter</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"temp-file-naming-and-random-number\"><a href=\"#temp-file-naming-and-random-number\" class=\"headerlink\" title=\"temp file naming and random number\"></a>temp file naming and random number</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filename=`mktemp`</span><br><span class=\"line\">dirname=`mktemp -d`</span><br><span class=\"line\">tmpfile=`mktemp -u` <span class=\"comment\"># generate name without creating file</span></span><br><span class=\"line\">mktemp test.xxx <span class=\"comment\"># /home/ryan/test.NpW</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"split-files-and-data\"><a href=\"#split-files-and-data\" class=\"headerlink\" title=\"split files and data\"></a>split files and data</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">split [COMMAND_ARGS] PREFIX</span><br><span class=\"line\">split -b 10k data.file -d -a 4 split_file <span class=\"comment\"># -d numeric suffixes, -a length</span></span><br><span class=\"line\"><span class=\"comment\"># split_file0001 split_file0002</span></span><br><span class=\"line\"></span><br><span class=\"line\">split -l 10 data.file   <span class=\"comment\"># 10 lines for each file</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># csplit : content based split</span></span><br><span class=\"line\">csplit server.log /SERVER/ -n 2 -s &#123;*&#125; -f server -b <span class=\"string\">\"%02d.log\"</span> ; rm</span><br><span class=\"line\">server00.log</span><br><span class=\"line\"><span class=\"comment\"># /SERVER/ : SERVER is the string to split</span></span><br><span class=\"line\"><span class=\"comment\"># -n 2 : the number of digit as suffix of file name</span></span><br><span class=\"line\"><span class=\"comment\"># -f server : prefix of filename, server01</span></span><br><span class=\"line\"><span class=\"comment\"># -b \"%02d.log\" : suffix format, filename = prefix + suffix, server01.log</span></span><br><span class=\"line\"><span class=\"comment\"># -s : silent without printing other messages</span></span><br><span class=\"line\"><span class=\"comment\"># server00.log will be beginning to the first SERVER which is empty</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"slice-filename-based-on-extension\"><a href=\"#slice-filename-based-on-extension\" class=\"headerlink\" title=\"slice filename based on extension\"></a>slice filename based on extension</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># $&#123;VAR%.*&#125; : remove the part that matches .*</span></span><br><span class=\"line\">file=<span class=\"string\">\"sample.jpg\"</span></span><br><span class=\"line\">name=<span class=\"variable\">$&#123;file%.*&#125;</span> <span class=\"comment\"># sample</span></span><br><span class=\"line\">extension=<span class=\"variable\">$&#123;file#*.&#125;</span> <span class=\"comment\"># jpg, prefer ##</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># % and %%, similar to # and ##</span></span><br><span class=\"line\">file=<span class=\"string\">\"ryan.nus.sg.log\"</span></span><br><span class=\"line\">name=<span class=\"variable\">$&#123;file%.*&#125;</span> <span class=\"comment\"># ryan.nus.sg</span></span><br><span class=\"line\">name=<span class=\"variable\">$&#123;file%%.*&#125;</span> <span class=\"comment\"># ryan</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"rename-and-move-files-in-bulk\"><a href=\"#rename-and-move-files-in-bulk\" class=\"headerlink\" title=\"rename and move files in bulk\"></a>rename and move files in bulk</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">count=1</span><br><span class=\"line\"><span class=\"keyword\">for</span> img <span class=\"keyword\">in</span> `find . -<span class=\"built_in\">type</span> f -iname <span class=\"string\">\"*.jpg\"</span> -maxdepth 1`</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    new=image-<span class=\"variable\">$count</span>.<span class=\"variable\">$&#123;img##*.&#125;</span></span><br><span class=\"line\">    mv <span class=\"variable\">$img</span> <span class=\"variable\">$new</span></span><br><span class=\"line\">    <span class=\"built_in\">let</span> count++</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\">rename *.JPG *.jpg</span><br><span class=\"line\">rename <span class=\"string\">'s/ /_/g'</span> *  <span class=\"comment\"># replace space by _</span></span><br><span class=\"line\">rename <span class=\"string\">'y/A-Z/a-z/'</span> * <span class=\"comment\"># upper to lower</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"spell-check-and-dictionary-manipulation\"><a href=\"#spell-check-and-dictionary-manipulation\" class=\"headerlink\" title=\"spell check and dictionary manipulation\"></a>spell check and dictionary manipulation</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"automate-interactive-input\"><a href=\"#automate-interactive-input\" class=\"headerlink\" title=\"automate interactive input\"></a>automate interactive input</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"1\\nhello\\n\"</span> | ./interactive.sh</span><br><span class=\"line\">./interactive.sh &lt; input.data</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># expect</span></span><br><span class=\"line\">./automate_expect.sh</span><br><span class=\"line\"><span class=\"comment\">#Filename: automate_expect.sh</span></span><br><span class=\"line\">spawn ./interactive .sh <span class=\"comment\"># specifies which commands are to be automated</span></span><br><span class=\"line\">expect <span class=\"string\">\"Enter number:\"</span></span><br><span class=\"line\">send <span class=\"string\">\"1\\n\"</span></span><br><span class=\"line\">expect <span class=\"string\">\"Enter name:\"</span></span><br><span class=\"line\">send <span class=\"string\">\"hello\\n\"</span></span><br><span class=\"line\">expect eof  <span class=\"comment\"># end of the command interaction</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"make-commands-using-parallel-processes\"><a href=\"#make-commands-using-parallel-processes\" class=\"headerlink\" title=\"make commands using parallel processes\"></a>make commands using parallel processes</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PIDs=()</span><br><span class=\"line\"><span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> File1.iso File2.iso</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">md5sum <span class=\"variable\">$file</span> &amp;</span><br><span class=\"line\">PIDs+=(<span class=\"string\">\"$!\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"built_in\">wait</span> <span class=\"variable\">$&#123;PIDs[@]&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"File-In-File-Out\"><a href=\"#File-In-File-Out\" class=\"headerlink\" title=\"File In File Out\"></a>File In File Out</h1><h2 id=\"generate-files-of-any-size\"><a href=\"#generate-files-of-any-size\" class=\"headerlink\" title=\"generate files of any size\"></a>generate files of any size</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dd <span class=\"keyword\">if</span>=/dev/zero of=junk.data bs=1M count=1</span><br><span class=\"line\"><span class=\"comment\"># bs block size, count - number of blocks</span></span><br><span class=\"line\"><span class=\"comment\"># /dev/zero is a character special device, which infinitely returns the zero byte (\\0).</span></span><br><span class=\"line\"><span class=\"comment\"># also used to check the speed of memory operation</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"itersection-and-set-difference-A-B\"><a href=\"#itersection-and-set-difference-A-B\" class=\"headerlink\" title=\"itersection and set difference (A-B)\"></a>itersection and set difference (A-B)</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">comm A.txt B.txt</span><br><span class=\"line\"><span class=\"comment\"># 1st column - only in A</span></span><br><span class=\"line\"><span class=\"comment\"># 2nd column - only in B</span></span><br><span class=\"line\"><span class=\"comment\"># 3rd column - common lines. each column are delimited by \\t</span></span><br><span class=\"line\"></span><br><span class=\"line\">comm A.txt B.txt -1 -2  <span class=\"comment\"># remove 1 and 2, so show intersaction</span></span><br><span class=\"line\">comm A.txt B.txt -3 | sed <span class=\"string\">'s/^\\t//'</span></span><br><span class=\"line\"><span class=\"comment\"># s-substitute, to remove every \\t</span></span><br><span class=\"line\"><span class=\"comment\"># /^ - start of line marker; // - no char, replacement string</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"find-and-delete-duplicate-file\"><a href=\"#find-and-delete-duplicate-file\" class=\"headerlink\" title=\"find and delete duplicate file\"></a>find and delete duplicate file</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># remove_duplicates.sh</span></span><br><span class=\"line\"><span class=\"comment\"># -S : sorted by file size</span></span><br><span class=\"line\"><span class=\"comment\"># --time-style=long-iso : print date in ISO format</span></span><br><span class=\"line\"><span class=\"comment\"># getline : get the first line and dump it</span></span><br><span class=\"line\">ls -lS --time-style=long-iso | awk <span class=\"string\">'BEGIN &#123;</span></span><br><span class=\"line\"><span class=\"string\">    getline; getline;</span></span><br><span class=\"line\"><span class=\"string\">    name1=$8; size=$5</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#123;</span></span><br><span class=\"line\"><span class=\"string\">    name2=$8;</span></span><br><span class=\"line\"><span class=\"string\">    if (size==$5) </span></span><br><span class=\"line\"><span class=\"string\">    &#123;</span></span><br><span class=\"line\"><span class=\"string\">        \"md5sum \"name1 | getline; csum1=$1;</span></span><br><span class=\"line\"><span class=\"string\">        \"md5sum \"name2 | getline; csum2=$1;</span></span><br><span class=\"line\"><span class=\"string\">        if ( csum1==csum2 )</span></span><br><span class=\"line\"><span class=\"string\">        &#123;</span></span><br><span class=\"line\"><span class=\"string\">            print name1; print name2</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;;</span></span><br><span class=\"line\"><span class=\"string\">    size=$5; name1=name2;</span></span><br><span class=\"line\"><span class=\"string\">&#125;'</span> | sort -u &gt; duplicate_files</span><br><span class=\"line\">cat duplicate_files | xargs -I &#123;&#125; md5sum &#123;&#125; | sort | uniq -w 32 |</span><br><span class=\"line\">awk <span class=\"string\">'&#123; print \"^\"$2\"$\" &#125;'</span> | sort -u &gt; duplicate_sample</span><br><span class=\"line\"><span class=\"built_in\">echo</span> Removing..</span><br><span class=\"line\">comm duplicate_files duplicate_sample -2 -3 | tee /dev/stderr |</span><br><span class=\"line\">xargs rm</span><br><span class=\"line\"><span class=\"built_in\">echo</span> Removed duplicates files successfully.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"file-permission-ownership-and-sticky-bit\"><a href=\"#file-permission-ownership-and-sticky-bit\" class=\"headerlink\" title=\"file permission, ownership and sticky bit\"></a>file permission, ownership and sticky bit</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - regular file,d dir，c char device，b block device,l symbolic link,s socket,p pipe</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># u – specifies user permissions</span></span><br><span class=\"line\"><span class=\"comment\"># g – specifies group permissions</span></span><br><span class=\"line\"><span class=\"comment\"># o – specifies others permissions</span></span><br><span class=\"line\">chmod a+x filename <span class=\"comment\"># all</span></span><br><span class=\"line\">chown user.group filename</span><br><span class=\"line\">chmod 777 . -R  <span class=\"comment\"># -R apply recursively</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"make-file-immutable\"><a href=\"#make-file-immutable\" class=\"headerlink\" title=\"make file immutable\"></a>make file immutable</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chattr +i file  <span class=\"comment\"># cannot remove</span></span><br><span class=\"line\">chattr -i file  <span class=\"comment\"># remove immutable</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"generate-blank-files-in-bulk\"><a href=\"#generate-blank-files-in-bulk\" class=\"headerlink\" title=\"generate blank files in bulk\"></a>generate blank files in bulk</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch filename <span class=\"comment\"># create new file or change timestamp</span></span><br><span class=\"line\"><span class=\"comment\"># -a modify access time, -m modification time</span></span><br><span class=\"line\">touch -d <span class=\"string\">\"Jan 20 2018\"</span> filename <span class=\"comment\"># change date</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"find-symbolic-links-and-their-targets\"><a href=\"#find-symbolic-links-and-their-targets\" class=\"headerlink\" title=\"find symbolic links and their targets\"></a>find symbolic links and their targets</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># create symbolic link</span></span><br><span class=\"line\">ln -s target sym_link_name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print symbolic link</span></span><br><span class=\"line\">ls -l | grep <span class=\"string\">\"^l\"</span>   <span class=\"comment\"># ^l means starting with l</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> l -<span class=\"built_in\">print</span></span><br><span class=\"line\"></span><br><span class=\"line\">readlink link_name</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"enumerate-file-type-statistics\"><a href=\"#enumerate-file-type-statistics\" class=\"headerlink\" title=\"enumerate file type statistics\"></a>enumerate file type statistics</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># type of file</span></span><br><span class=\"line\">file filename   <span class=\"comment\"># -b to exclude the filename in the output</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Filename: filestat.sh</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$#</span> -ne 1 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Usage is <span class=\"variable\">$0</span> basepath\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">path=<span class=\"variable\">$1</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -A statarray;</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> line;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">ftype=`file -b <span class=\"string\">\"<span class=\"variable\">$line</span>\"</span> | cut -d, -f1`   <span class=\"comment\"># use , delimiter and use only 1st field</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> statarray[<span class=\"string\">\"<span class=\"variable\">$ftype</span>\"</span>]++;</span><br><span class=\"line\"><span class=\"keyword\">done</span> &lt; &lt;(find <span class=\"variable\">$path</span> -<span class=\"built_in\">type</span> f -<span class=\"built_in\">print</span>)</span><br><span class=\"line\"><span class=\"built_in\">echo</span> ============ File types and counts =============</span><br><span class=\"line\"><span class=\"keyword\">for</span> ftype <span class=\"keyword\">in</span> <span class=\"string\">\"<span class=\"variable\">$&#123;!statarray[@]&#125;</span>\"</span>;    <span class=\"comment\"># list of array indexes</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$ftype</span> : <span class=\"variable\">$&#123;statarray[\"$ftype\"]&#125;</span> </span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\">./filetype.sh /home/slynux/programs</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> line;</span><br><span class=\"line\"><span class=\"keyword\">do</span> something</span><br><span class=\"line\"><span class=\"keyword\">done</span> &lt; filename</span><br><span class=\"line\"><span class=\"comment\"># &lt;(find $path -type f -print) is equivalent to a filename</span></span><br><span class=\"line\"><span class=\"comment\"># the first &lt; is for input redirection and the second &lt; is for converting the subprocess output to a filename</span></span><br><span class=\"line\"><span class=\"comment\"># space there to avoid &lt;&lt; operator</span></span><br><span class=\"line\"><span class=\"comment\"># bash 3.x : done &lt;&lt;&lt; \"`find $path -type f -print`\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"use-loopback-files\"><a href=\"#use-loopback-files\" class=\"headerlink\" title=\"use loopback files\"></a>use loopback files</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"create-ISO-file-and-hybrid-ISO\"><a href=\"#create-ISO-file-and-hybrid-ISO\" class=\"headerlink\" title=\"create ISO file and hybrid ISO\"></a>create ISO file and hybrid ISO</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dd <span class=\"keyword\">if</span>=/dev/cdrom of=image.iso</span><br><span class=\"line\">mkisofs -V <span class=\"string\">\"Label\"</span> -o image.iso source_dir/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"find-the-difference-between-files-patching\"><a href=\"#find-the-difference-between-files-patching\" class=\"headerlink\" title=\"find the difference between files, patching\"></a>find the difference between files, patching</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diff -u version1.txt version2.txt &gt; version.patch</span><br><span class=\"line\">patch -p1 version1.txt &lt; version.patch <span class=\"comment\"># get version2</span></span><br><span class=\"line\">patch -p1 version2.txt &lt; version.patch <span class=\"comment\"># get version1</span></span><br><span class=\"line\"></span><br><span class=\"line\">diff -Naur directory1 directory2</span><br><span class=\"line\"><span class=\"comment\"># -N treat absent file as empty, -a consider all files as txt, -u unified</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"head-and-tail\"><a href=\"#head-and-tail\" class=\"headerlink\" title=\"head and tail\"></a>head and tail</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head -n 4 file  <span class=\"comment\"># first 4</span></span><br><span class=\"line\">head -n -4 file <span class=\"comment\"># exclude last 4</span></span><br><span class=\"line\"></span><br><span class=\"line\">tail -n 5 file <span class=\"comment\"># last 5</span></span><br><span class=\"line\">tail -n +6 file <span class=\"comment\"># exclude first 5</span></span><br><span class=\"line\"></span><br><span class=\"line\">tail -f growing_file    <span class=\"comment\"># follow</span></span><br><span class=\"line\">tail -f file --pid <span class=\"variable\">$PID</span> <span class=\"comment\"># tail until PID finish</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"list-only-directory\"><a href=\"#list-only-directory\" class=\"headerlink\" title=\"list only directory\"></a>list only directory</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -d */</span><br><span class=\"line\">ls -F | grep <span class=\"string\">\"/$\"</span></span><br><span class=\"line\">ls -l | grep <span class=\"string\">\"^d\"</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> d -maxdepth 1 -<span class=\"built_in\">print</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"fast-command-line-navigation-pushd-and-popd\"><a href=\"#fast-command-line-navigation-pushd-and-popd\" class=\"headerlink\" title=\"fast command line navigation, pushd and popd\"></a>fast command line navigation, pushd and popd</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">pushd</span> home/     <span class=\"comment\"># /home /</span></span><br><span class=\"line\"><span class=\"built_in\">pushd</span> ../lib    <span class=\"comment\"># /lib /home /</span></span><br><span class=\"line\"><span class=\"built_in\">pushd</span> ../var    <span class=\"comment\"># /var /lib /home /</span></span><br><span class=\"line\">                <span class=\"comment\">#   0    1    2   3</span></span><br><span class=\"line\"><span class=\"built_in\">pushd</span> +2        <span class=\"comment\"># /home / /var /lib </span></span><br><span class=\"line\"><span class=\"built_in\">dirs</span></span><br><span class=\"line\"><span class=\"built_in\">popd</span>            <span class=\"comment\"># / /var /lib</span></span><br><span class=\"line\"><span class=\"built_in\">popd</span> +2         <span class=\"comment\"># / /var</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> -        <span class=\"comment\"># switch back</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"count-number-of-lines-words-and-chars\"><a href=\"#count-number-of-lines-words-and-chars\" class=\"headerlink\" title=\"count number of lines, words and chars\"></a>count number of lines, words and chars</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wc -l file  <span class=\"comment\"># number of line</span></span><br><span class=\"line\">wc -w file  <span class=\"comment\"># number of word</span></span><br><span class=\"line\">wc -c file</span><br><span class=\"line\">wc file -L  <span class=\"comment\"># get length of longest line</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"print-the-directory-tree\"><a href=\"#print-the-directory-tree\" class=\"headerlink\" title=\"print the directory tree\"></a>print the directory tree</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tree . -P <span class=\"string\">\"*.sh\"</span>    <span class=\"comment\"># highlight the files matching the pattern</span></span><br><span class=\"line\">tree . -I <span class=\"string\">\"*.sh\"</span>    <span class=\"comment\"># exclude pattern</span></span><br><span class=\"line\">tree -h <span class=\"comment\"># size</span></span><br><span class=\"line\">tree . -H http://localhost -o out.html</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Texting-and-Driving\"><a href=\"#Texting-and-Driving\" class=\"headerlink\" title=\"Texting and Driving\"></a>Texting and Driving</h1><h2 id=\"regular-expression\"><a href=\"#regular-expression\" class=\"headerlink\" title=\"regular expression\"></a>regular expression</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># match all words</span></span><br><span class=\"line\"><span class=\"comment\"># ? zero or one occurrence of the previous expression</span></span><br><span class=\"line\">( ?[a-zA-Z]+ ?)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ip</span></span><br><span class=\"line\">[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ^     start of line</span></span><br><span class=\"line\"><span class=\"comment\"># $     end of line</span></span><br><span class=\"line\"><span class=\"comment\"># .     any one char</span></span><br><span class=\"line\"><span class=\"comment\"># []    any one chars in [chars]</span></span><br><span class=\"line\"><span class=\"comment\"># [^]   any one chars except [chars]</span></span><br><span class=\"line\"><span class=\"comment\"># [-]   any chars within the range [1-5]</span></span><br><span class=\"line\"><span class=\"comment\"># ?     the preceding item must use one or 0 times, colou?r = color or colour</span></span><br><span class=\"line\"><span class=\"comment\"># +     the preceding item must use one or more times, 90+ = 900 or 90000</span></span><br><span class=\"line\"><span class=\"comment\"># *     the preceding item must use 0 or more times, 90* = 90, 900</span></span><br><span class=\"line\"><span class=\"comment\"># ()    treats the terms as one entity, ma(tri)?x = max or matrix</span></span><br><span class=\"line\"><span class=\"comment\"># &#123;n&#125;   the preceding item must use n times, [0-9]&#123;3&#125; = [0-9][0-9][0-9]</span></span><br><span class=\"line\"><span class=\"comment\"># &#123;n,&#125;  specify minimum times that preceding item use, [0-9]&#123;2,&#125; = any 2 digits or longer</span></span><br><span class=\"line\"><span class=\"comment\"># &#123;n,m&#125; [0-9]&#123;2,5&#125; = any number that has 2 digits to 5 digits</span></span><br><span class=\"line\"><span class=\"comment\"># |     alternation, 1 | 2 = 1 or 2</span></span><br><span class=\"line\"><span class=\"comment\"># \\     escape, a\\.b = a.b</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"search-text-inside-a-file\"><a href=\"#search-text-inside-a-file\" class=\"headerlink\" title=\"search text inside a file\"></a>search text inside a file</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep <span class=\"string\">\"pattern\"</span> filename --color=auto</span><br><span class=\"line\">grep -E <span class=\"string\">\"[a-z]+\"</span> filename <span class=\"comment\"># -E extended reg ex</span></span><br><span class=\"line\"><span class=\"comment\"># -o ouput only match portion</span></span><br><span class=\"line\"><span class=\"comment\"># -v print all the lines except the matched line</span></span><br><span class=\"line\"><span class=\"comment\"># -c count number of matched line</span></span><br><span class=\"line\"><span class=\"comment\"># -e count number of matched item</span></span><br><span class=\"line\"><span class=\"comment\"># -i ignore case</span></span><br><span class=\"line\"></span><br><span class=\"line\">grep <span class=\"string\">\"pattern\"</span> -n filename <span class=\"comment\"># print line number</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> gnu is not unix | grep -b -o <span class=\"string\">\"not\"</span> <span class=\"comment\"># 7:not</span></span><br><span class=\"line\">grep -l linux file1 file2 <span class=\"comment\"># list which file contain, -L for non-matching</span></span><br><span class=\"line\">grep <span class=\"string\">\"pattern\"</span> . -R -n  <span class=\"comment\"># common</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># pattern file</span></span><br><span class=\"line\">grep -f pat_file</span><br><span class=\"line\"></span><br><span class=\"line\">grep <span class=\"string\">\"main()\"</span> . -r --include *.&#123;c,cpp&#125;  <span class=\"comment\">#  search *.c and *.ccp</span></span><br><span class=\"line\">grep <span class=\"string\">\"main()\"</span> . -r --exclude *.&#123;c,cpp&#125;  <span class=\"comment\">#  not search *.c and *.ccp</span></span><br><span class=\"line\">grep <span class=\"string\">\"main()\"</span> . -r --exclude-dir ./tmp  <span class=\"comment\"># exclude dir</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># xargs</span></span><br><span class=\"line\">grep <span class=\"string\">\"test\"</span> file* -lZ | xargs -0 rm <span class=\"comment\"># -Z and -0</span></span><br><span class=\"line\"><span class=\"comment\"># -q : quite, return status without showing</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Printing lines before and after text matches</span></span><br><span class=\"line\"><span class=\"comment\"># print three lines after a match, -A; -b lines before; -c both</span></span><br><span class=\"line\">seq 10 | grep 5 -A 3    <span class=\"comment\">#5\\n6\\n7\\n8</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"cut-a-file-by-column\"><a href=\"#cut-a-file-by-column\" class=\"headerlink\" title=\"cut a file by column\"></a>cut a file by column</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cut -f 2,3 filename <span class=\"comment\"># show 2nd and 3rd column, --complement for reverse</span></span><br><span class=\"line\"><span class=\"comment\"># -d \":\" to indicate delimiter</span></span><br><span class=\"line\"></span><br><span class=\"line\">cut -c 1-5 filename    <span class=\"comment\"># 1st to 5th chars</span></span><br><span class=\"line\">cut -c -5 filename    <span class=\"comment\"># 1st 5 chars</span></span><br><span class=\"line\">cut -c 2- filename    <span class=\"comment\"># from 2nd to the end</span></span><br><span class=\"line\"></span><br><span class=\"line\">cut filename -c 1-3,6-9 --output-delimiter <span class=\"string\">\",\"</span>  <span class=\"comment\"># abc,fghi</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"sed-for-text-replacement\"><a href=\"#sed-for-text-replacement\" class=\"headerlink\" title=\"sed for text replacement\"></a>sed for text replacement</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed <span class=\"string\">'s/pattern/replace_string/'</span> file    <span class=\"comment\"># -i save changes</span></span><br><span class=\"line\">sed <span class=\"string\">'s/pattern/replace_string/'</span> file &gt; newfile</span><br><span class=\"line\"></span><br><span class=\"line\">sed <span class=\"string\">'s/pattern/replace_string/g'</span> file   <span class=\"comment\"># substitute every occurrence</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> thisthisthisthis | sed <span class=\"string\">'s/this/THIS/2g'</span> <span class=\"comment\"># thisTHISTHISTHIS</span></span><br><span class=\"line\"><span class=\"comment\"># / can be | or :</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># remove blank line</span></span><br><span class=\"line\">sed <span class=\"string\">'/^$/d'</span> filename    <span class=\"comment\"># d - delete</span></span><br><span class=\"line\"></span><br><span class=\"line\">sed -i .bak <span class=\"string\">'s/abc/def/'</span> filename <span class=\"comment\"># change original file as .bak</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Matched string notation (&amp;)</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> this is an example | sed <span class=\"string\">'s/\\w\\+/[&amp;]/g'</span> <span class=\"comment\"># \\w\\+ matches every word. &amp; refer to each of words</span></span><br><span class=\"line\"><span class=\"comment\"># [this] [is] [an] [example]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Substring match notation (\\1)</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> seven EIGHT | sed <span class=\"string\">'s/\\([a-z]\\+\\) \\([A-Z]\\+\\)/\\2 \\1/'</span></span><br><span class=\"line\"><span class=\"comment\"># \\([a-z]\\+\\) match 1st word and \\1 refer to </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># multiple action</span></span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> abc | sed -e <span class=\"string\">'s/a/A/'</span> -e <span class=\"string\">'s/c/C/'</span>    <span class=\"comment\">#AbC</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"awk-for-text-processing\"><a href=\"#awk-for-text-processing\" class=\"headerlink\" title=\"awk for text processing\"></a>awk for text processing</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># for each input, &#123;statement&#125; will execute.</span></span><br><span class=\"line\">awk <span class=\"string\">'BEGIN &#123; statements &#125; &#123; statements &#125; END &#123; end statements &#125;'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># NR : number of record. each input line as one record</span></span><br><span class=\"line\"><span class=\"comment\"># NF : number of field. delimiter by space</span></span><br><span class=\"line\"><span class=\"comment\"># $0 : text content of current line</span></span><br><span class=\"line\"><span class=\"comment\"># $1, $2.. 1st field, 2nd field</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># like java, string is within \"\". </span></span><br><span class=\"line\">awk <span class=\"string\">'&#123; print \"Line no:\"NR\",No of fields:\"NF, \"$0=\"$0, \"$1=\"$1&#125;'</span></span><br><span class=\"line\"></span><br><span class=\"line\">awk <span class=\"string\">'&#123; print $3,$2 &#125;'</span> file</span><br><span class=\"line\">awk <span class=\"string\">'END&#123; print NR &#125;'</span> file  <span class=\"comment\"># get number of lines</span></span><br><span class=\"line\"></span><br><span class=\"line\">awk <span class=\"string\">'&#123; print v1,v2 &#125;'</span> v1=<span class=\"variable\">$var1</span> v2=<span class=\"variable\">$var2</span> filename</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># getline var</span></span><br><span class=\"line\"></span><br><span class=\"line\">awk <span class=\"string\">'NR &lt; 5'</span> <span class=\"comment\"># first four lines</span></span><br><span class=\"line\">awk <span class=\"string\">'NR==1,NR==4'</span> <span class=\"comment\">#First four lines</span></span><br><span class=\"line\">awk <span class=\"string\">'/linux/'</span> <span class=\"comment\"># Lines containing the pattern</span></span><br><span class=\"line\">awk <span class=\"string\">'!/linux/'</span> <span class=\"comment\"># Lines not containing the pattern</span></span><br><span class=\"line\">awk -F : <span class=\"string\">'&#123; print $NF &#125;'</span> /etc/passwd   <span class=\"comment\"># -F delimiter</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># awk built in function</span></span><br><span class=\"line\"><span class=\"comment\"># length(string): string length.</span></span><br><span class=\"line\"><span class=\"comment\"># index(string, search_string): position at which search_string is found</span></span><br><span class=\"line\"><span class=\"comment\"># split(string, array, delimiter): stores strings list generated by delimiter in the array</span></span><br><span class=\"line\"><span class=\"comment\"># substr(string, start-position, end-position): </span></span><br><span class=\"line\"><span class=\"comment\"># sub(regex, replacement_str, string): replaces the first occurring match</span></span><br><span class=\"line\"><span class=\"comment\"># gsub(regex, replacment_str, string): replaces every regular expression match.</span></span><br><span class=\"line\"><span class=\"comment\"># match(regex, string): non-zero output if a match is found, otherwise zero. </span></span><br><span class=\"line\"><span class=\"comment\"># with match(). RSTART contains the position the match starts. RLENGTH contains match length</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"find-frequency-of-words\"><a href=\"#find-frequency-of-words\" class=\"headerlink\" title=\"find frequency of words\"></a>find frequency of words</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"compress-and-decompress-javascript\"><a href=\"#compress-and-decompress-javascript\" class=\"headerlink\" title=\"compress and decompress javascript\"></a>compress and decompress javascript</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat sample.js | \\</span><br><span class=\"line\">tr -d <span class=\"string\">'\\n\\t'</span> | \\    <span class=\"comment\"># Removes the \\n and \\t characters</span></span><br><span class=\"line\">tr -s <span class=\"string\">' '</span> | \\       <span class=\"comment\"># squeeze repeating space</span></span><br><span class=\"line\">sed <span class=\"string\">'s:/\\*.*\\*/::g'</span> | \\ <span class=\"comment\"># Removes comments, use : as delimiter instead of /, .* match all text</span></span><br><span class=\"line\">sed <span class=\"string\">'s/ \\?\\([&#123;&#125;();,:]\\) \\?/\\1/g'</span>    <span class=\"comment\"># Removes all the spaces before and after the characters. </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># decompression</span></span><br><span class=\"line\"><span class=\"comment\"># s/;/;\\n/g replaces ; with ;\\n</span></span><br><span class=\"line\"><span class=\"comment\"># s/&#123;/&#123;\\n\\n/g replaces &#123; with &#123;\\n\\n</span></span><br><span class=\"line\"><span class=\"comment\"># s/&#125;/\\n\\n&#125;/g replaces &#125; with \\n\\n&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"merge-files-as-columns\"><a href=\"#merge-files-as-columns\" class=\"headerlink\" title=\"merge files as columns\"></a>merge files as columns</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">paste file1 file2 -d <span class=\"string\">\",\"</span></span><br><span class=\"line\"><span class=\"comment\"># 1, xxx</span></span><br><span class=\"line\"><span class=\"comment\"># 2, xxxxx</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"print-the-nth-word-or-column\"><a href=\"#print-the-nth-word-or-column\" class=\"headerlink\" title=\"print the nth word or column\"></a>print the nth word or column</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># print the fifth column</span></span><br><span class=\"line\">awk <span class=\"string\">'&#123; print $5 &#125;'</span> filename</span><br><span class=\"line\"></span><br><span class=\"line\">ls -l | awk <span class=\"string\">'&#123; print $1 \" : \" $8 &#125;'</span> <span class=\"comment\"># get 1st and 8th column</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"print-text-between-line-number-or-pattern\"><a href=\"#print-text-between-line-number-or-pattern\" class=\"headerlink\" title=\"print text between line number or pattern\"></a>print text between line number or pattern</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk <span class=\"string\">'NR==M, NR==N'</span> filename</span><br><span class=\"line\">awk <span class=\"string\">'/start_pattern/, /end _pattern/'</span> filename</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"print-line-reversely\"><a href=\"#print-line-reversely\" class=\"headerlink\" title=\"print line reversely\"></a>print line reversely</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">seq 9 | \\</span><br><span class=\"line\">awk <span class=\"string\">'&#123; lifo[NR]=$0 &#125;</span></span><br><span class=\"line\"><span class=\"string\">END&#123; for(lno=NR;lno&gt;-1;lno--)&#123; print lifo[lno]; &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;'</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"parse-email-and-URL\"><a href=\"#parse-email-and-URL\" class=\"headerlink\" title=\"parse email and URL\"></a>parse email and URL</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">egrep -o <span class=\"string\">'[A-Za-z0-9._]+@[A-Za-z0-9.]+\\.[a-zA-Z]&#123;2,4&#125;'</span> filename</span><br><span class=\"line\">egrep -o <span class=\"string\">\"http://[a-zA-Z0-9.]+\\.[a-zA-Z]&#123;2,3&#125;\"</span> filename</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"remove-a-sentence-containing-a-word\"><a href=\"#remove-a-sentence-containing-a-word\" class=\"headerlink\" title=\"remove a sentence containing a word\"></a>remove a sentence containing a word</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed <span class=\"string\">'s/ [^.]*mobile phones[^.]*\\.//g'</span> sentence.txt</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"replace-a-pattern-with-text-in-one-directory\"><a href=\"#replace-a-pattern-with-text-in-one-directory\" class=\"headerlink\" title=\"replace a pattern with text in one directory\"></a>replace a pattern with text in one directory</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find . -name *.cpp -print0 | xargs -I&#123;&#125; -0 sed -i <span class=\"string\">'s/Copyright/Copyleft/g'</span> &#123;&#125;</span><br><span class=\"line\">find . -name *.cpp -<span class=\"built_in\">exec</span> sed -i <span class=\"string\">'s/Copyright/Copyleft/g'</span> \\&#123;\\&#125; \\;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"text-slicing-and-parameter-operations\"><a href=\"#text-slicing-and-parameter-operations\" class=\"headerlink\" title=\"text slicing and parameter operations\"></a>text slicing and parameter operations</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var=<span class=\"string\">\"This is a line of text\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var/line/REPLACED_text&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">string=<span class=\"string\">\"abcdefghijklmnopqrstuvwxyz\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;string:4&#125;</span>    <span class=\"comment\"># efghijklmnopqrstuvwxyz</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;string:4:8&#125;</span>  <span class=\"comment\"># efghijkl</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;string:(-1)&#125;</span> <span class=\"comment\"># z</span></span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;string:(-2):2&#125;</span> <span class=\"comment\"># yz</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Tangled-Web\"><a href=\"#Tangled-Web\" class=\"headerlink\" title=\"Tangled Web\"></a>Tangled Web</h1><h2 id=\"download-from-web-page\"><a href=\"#download-from-web-page\" class=\"headerlink\" title=\"download from web page\"></a>download from web page</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget URL</span><br><span class=\"line\">wget ftp_link -O dl_file.img -o <span class=\"built_in\">log</span></span><br><span class=\"line\">wget -t 5 URL   <span class=\"comment\"># try 5 times</span></span><br><span class=\"line\">wget -t 0 URL   <span class=\"comment\"># try infinitely</span></span><br><span class=\"line\">wget --<span class=\"built_in\">limit</span>-rate 20k URL   <span class=\"comment\"># limit speed</span></span><br><span class=\"line\">wget -Q 100m URL    <span class=\"comment\"># --quota, total download size</span></span><br><span class=\"line\">wget -c URL <span class=\"comment\"># resume downloading</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># download the complete website by recursively collecting all the URL</span></span><br><span class=\"line\">wget --mirror --convert-links exampledomain.com</span><br><span class=\"line\">wget -r -N -l -k DEPTH URL</span><br><span class=\"line\"><span class=\"comment\"># -l : depth, along with -r. -N enable time stamping. </span></span><br><span class=\"line\"><span class=\"comment\"># -k or --convert-links : convert the links to other pages</span></span><br><span class=\"line\"></span><br><span class=\"line\">wget --user username --password pass URL</span><br><span class=\"line\">wget --user username --ask-password URL</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"download-as-plain-text\"><a href=\"#download-as-plain-text\" class=\"headerlink\" title=\"download as plain text\"></a>download as plain text</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lynx URL -dump &gt; webpage_as_text.txt</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"cURL\"><a href=\"#cURL\" class=\"headerlink\" title=\"cURL\"></a>cURL</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl URL -o index.html --progress   <span class=\"comment\"># show progress</span></span><br><span class=\"line\">curl URL/file -C offset <span class=\"comment\"># Continuing and resuming</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Setting the referer string with cURL</span></span><br><span class=\"line\"><span class=\"comment\"># click link_1 in page_a, we access to page_b. Without link_1, we are not able to access page_b.</span></span><br><span class=\"line\">curl --referer link_1 page_b_URL </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Cookies with cURL</span></span><br><span class=\"line\">curl URL --cookie <span class=\"string\">\"user=ryan;pass=hi\"</span></span><br><span class=\"line\">curl URL --cookie-jar cookie_file   <span class=\"comment\"># specify a file to which the cookies encountered are to be stored</span></span><br><span class=\"line\"></span><br><span class=\"line\">curl URL --<span class=\"built_in\">limit</span>-rate 20k</span><br><span class=\"line\">curl URL --max-filesize bytes   </span><br><span class=\"line\"><span class=\"comment\"># return a non-zero exit code if the file size exceeds. zero if it succeeds</span></span><br><span class=\"line\"></span><br><span class=\"line\">curl -u user:pass URL</span><br><span class=\"line\">curl -u user URL</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -I or -head : dump only the HTTP headers, without downloading the remote file.</span></span><br><span class=\"line\">curl -I URL</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"access-Gmail\"><a href=\"#access-Gmail\" class=\"headerlink\" title=\"access Gmail\"></a>access Gmail</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Desc: Fetch gmail tool</span></span><br><span class=\"line\">username=<span class=\"string\">'PUT_USERNAME_HERE'</span></span><br><span class=\"line\">password=<span class=\"string\">'PUT_PASSWORD_HERE'</span></span><br><span class=\"line\">SHOW_COUNT=5 <span class=\"comment\"># No of recent unread mails to be shown</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span></span><br><span class=\"line\">curl -u <span class=\"variable\">$username</span>:<span class=\"variable\">$password</span> --silent <span class=\"string\">\"https://mail.google.com/mail/feed/atom\"</span> | \\</span><br><span class=\"line\">tr -d <span class=\"string\">'\\n'</span> | sed <span class=\"string\">'s:&lt;/entry&gt;:\\n:g'</span> |\\</span><br><span class=\"line\">sed -n <span class=\"string\">'s/.*&lt;title&gt;\\(.*\\)&lt;\\/title.*&lt;author&gt;&lt;name&gt;\\([^&lt;]*\\)&lt;\\/name&gt;&lt;email&gt;\\([^&lt;]*\\).*/From: \\2 [\\3] \\nSubject: \\1\\n/p'</span> | \\</span><br><span class=\"line\">head -n $(( <span class=\"variable\">$SHOW_COUNT</span> * 3 ))</span><br><span class=\"line\"><span class=\"comment\"># tr -d '\\n' removes the newline character</span></span><br><span class=\"line\"><span class=\"comment\"># sed 's:&lt;/entry&gt;:\\n:g' replaces every &lt;/entry&gt; element with a newline</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"parsing-data-from-website\"><a href=\"#parsing-data-from-website\" class=\"headerlink\" title=\"parsing data from website\"></a>parsing data from website</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"image-crawler-and-downloader\"><a href=\"#image-crawler-and-downloader\" class=\"headerlink\" title=\"image crawler and downloader\"></a>image crawler and downloader</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Filename: img_downloader.sh</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$#</span> -ne 3 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"Usage: <span class=\"variable\">$0</span> URL -d DIRECTORY\"</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> -1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># shift is used to shift arguments to the left</span></span><br><span class=\"line\"><span class=\"comment\"># $1 will take the next argument value</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> &#123;1..4&#125;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"variable\">$1</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">        -d) <span class=\"built_in\">shift</span>; directory=<span class=\"variable\">$1</span>; <span class=\"built_in\">shift</span> ;;</span><br><span class=\"line\">        *) url=<span class=\"variable\">$&#123;url:-$1&#125;</span>; <span class=\"built_in\">shift</span>;;</span><br><span class=\"line\">    <span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">mkdir -p <span class=\"variable\">$directory</span>;</span><br><span class=\"line\">baseurl=$(<span class=\"built_in\">echo</span> <span class=\"variable\">$url</span> | egrep -o <span class=\"string\">\"https?://[a-z.]+\"</span>)</span><br><span class=\"line\"><span class=\"built_in\">echo</span> Downloading <span class=\"variable\">$url</span></span><br><span class=\"line\">curl -s <span class=\"variable\">$url</span> | egrep -o <span class=\"string\">\"&lt;img src=[^&gt;]*&gt;\"</span> | sed <span class=\"string\">'s/&lt;img src=\\\"\\([^\"]*\\).*/\\1/g'</span> &gt;/tmp/$$.list</span><br><span class=\"line\">sed -i <span class=\"string\">\"s|^/|<span class=\"variable\">$baseurl</span>/|\"</span> /tmp/$$.list</span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"variable\">$directory</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> filename;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> Downloading <span class=\"variable\">$filename</span></span><br><span class=\"line\">    curl -s -O <span class=\"string\">\"<span class=\"variable\">$filename</span>\"</span> --silent</span><br><span class=\"line\"><span class=\"keyword\">done</span> &lt; /tmp/$$.list</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"web-photo-album-generator\"><a href=\"#web-photo-album-generator\" class=\"headerlink\" title=\"web photo album generator\"></a>web photo album generator</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Description: Create a photo album using images in current directory</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Creating album..\"</span></span><br><span class=\"line\">mkdir -p thumbs</span><br><span class=\"line\">cat &lt;&lt;EOF1 &gt; index.html</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">    body</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        width:470px;</span><br><span class=\"line\">        margin:auto;</span><br><span class=\"line\">        border: 1px dashed grey;</span><br><span class=\"line\">        padding:10px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    img</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        margin:5px;</span><br><span class=\"line\">        border: 1px solid black;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;center&gt;&lt;h1&gt; <span class=\"comment\">#Album title &lt;/h1&gt;&lt;/center&gt;</span></span><br><span class=\"line\">&lt;p&gt;</span><br><span class=\"line\">EOF1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> img <span class=\"keyword\">in</span> *.jpg;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    convert <span class=\"string\">\"<span class=\"variable\">$img</span>\"</span> -resize <span class=\"string\">\"100x\"</span> <span class=\"string\">\"thumbs/<span class=\"variable\">$img</span>\"</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"&lt;a href=\\\"<span class=\"variable\">$img</span>\\\" &gt;&lt;img src=\\\"thumbs/<span class=\"variable\">$img</span>\\\" title=\\\"<span class=\"variable\">$img</span>\\\" /&gt;&lt;/a&gt;\"</span> &gt;&gt; index.html</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\">cat &lt;&lt;EOF2 &gt;&gt; index.html</span><br><span class=\"line\">&lt;/p&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br><span class=\"line\">EOF2</span><br><span class=\"line\"><span class=\"built_in\">echo</span> Album generated to index.html</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"twitter-command-line-client\"><a href=\"#twitter-command-line-client\" class=\"headerlink\" title=\"twitter command-line client\"></a>twitter command-line client</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"create-a-‘define’-utility-by-using-web-backend\"><a href=\"#create-a-‘define’-utility-by-using-web-backend\" class=\"headerlink\" title=\"create a ‘define’ utility by using web backend\"></a>create a ‘define’ utility by using web backend</h2><ol>\n<li><a href=\"http://www.dictionaryapi.com/register/index.htm\" target=\"_blank\" rel=\"noopener\">http://www.dictionaryapi.com/register/index.htm</a></li>\n<li>get key<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Desc: A script to fetch definitions from dictionaryapi.com</span></span><br><span class=\"line\">apikey=YOUR_API_KEY_HERE <span class=\"comment\"># fd750d43-a3b8-4f47-8055-e8db4ebfeeed</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$#</span> -ne 2 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"Usage: <span class=\"variable\">$0</span> WORD NUMBER\"</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span> -1;</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">curl --silent http://www.dictionaryapi.com/api/v1/references/learners/xml/<span class=\"variable\">$1</span>?key=<span class=\"variable\">$apikey</span> | \\</span><br><span class=\"line\">grep -o \\&lt;dt\\&gt;.*\\&lt;/dt\\&gt; | \\</span><br><span class=\"line\">sed <span class=\"string\">'s$&lt;/*[a-z]*&gt;$$g'</span> | \\</span><br><span class=\"line\">head -n <span class=\"variable\">$2</span> | nl</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"find-broken-links-in-a-website\"><a href=\"#find-broken-links-in-a-website\" class=\"headerlink\" title=\"find broken links in a website\"></a>find broken links in a website</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Desc: Find broken links in a website</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$#</span> -ne 1 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$Usage</span>: <span class=\"variable\">$0</span> URL\\n\"</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1;</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> Broken links:</span><br><span class=\"line\">mkdir /tmp/$$.lynx</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /tmp/$$.lynx</span><br><span class=\"line\">lynx -traversal <span class=\"variable\">$1</span> &gt; /dev/null</span><br><span class=\"line\">count=0;</span><br><span class=\"line\">sort -u reject.dat &gt; links.txt</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> link;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    output=`curl -I <span class=\"variable\">$link</span> -s | grep <span class=\"string\">\"HTTP/.*OK\"</span>`;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ -z <span class=\"variable\">$output</span> ]];</span><br><span class=\"line\">    <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"variable\">$link</span>;</span><br><span class=\"line\">        <span class=\"built_in\">let</span> count++</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span> &lt; links.txt</span><br><span class=\"line\">[ <span class=\"variable\">$count</span> -eq 0 ] &amp;&amp; <span class=\"built_in\">echo</span> No broken links found.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"track-changes-to-a-website\"><a href=\"#track-changes-to-a-website\" class=\"headerlink\" title=\"track changes to a website\"></a>track changes to a website</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Desc: Script to track changes to webpage</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$#</span> -ne 1 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$Usage</span>: <span class=\"variable\">$0</span> URL\\n\"</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1;</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">first_time=0</span><br><span class=\"line\"><span class=\"comment\"># Not first time</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ ! -e <span class=\"string\">\"last.html\"</span> ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    first_time=1</span><br><span class=\"line\">    <span class=\"comment\"># Set it is first time run</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">curl --silent <span class=\"variable\">$1</span> -o recent.html</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$first_time</span> -ne 1 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    changes=$(diff -u last.html recent.html)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ -n <span class=\"string\">\"<span class=\"variable\">$changes</span>\"</span> ];</span><br><span class=\"line\">    <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> -e <span class=\"string\">\"Changes:\\n\"</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$changes</span>\"</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\nWebsite has no changes\"</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"[First run] Archiving..\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">cp recent.html last.html</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"post-to-web-page-and-read-response\"><a href=\"#post-to-web-page-and-read-response\" class=\"headerlink\" title=\"post to web page and read response\"></a>post to web page and read response</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># POST and read the HTML response</span></span><br><span class=\"line\">curl URL -d <span class=\"string\">\"host=hostname&amp;user=username\"</span>   <span class=\"comment\"># -d is the argument used for posting</span></span><br><span class=\"line\">wget php_URL --post-data <span class=\"string\">\"host=hostname&amp;user=username\"</span> -O output.html</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Backup-Plan\"><a href=\"#Backup-Plan\" class=\"headerlink\" title=\"Backup Plan\"></a>Backup Plan</h1><h2 id=\"Archive-with-tar\"><a href=\"#Archive-with-tar\" class=\"headerlink\" title=\"Archive with tar\"></a>Archive with tar</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -cf output.tar [SOURCES]    <span class=\"comment\"># -c create file, -f specify filename</span></span><br><span class=\"line\">tar -tf archive.tar <span class=\"comment\"># list files in an archive</span></span><br><span class=\"line\">tar -tvf archive.tar    <span class=\"comment\"># -v verbose, print more details</span></span><br><span class=\"line\"></span><br><span class=\"line\">tar -rvf original.tar new_file  <span class=\"comment\"># -r append a file into an archive</span></span><br><span class=\"line\"></span><br><span class=\"line\">tar -xf archive.tar <span class=\"comment\"># -x for extract</span></span><br><span class=\"line\">tar -xf archive.tar -C /path/to/extract <span class=\"comment\"># -C to indicate where the files</span></span><br><span class=\"line\">tar -xvf file.tar file1 file4   <span class=\"comment\"># only extract file1 and file4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># '-' make archive as output</span></span><br><span class=\"line\">tar cvf - files/ | ssh a@A <span class=\"string\">\"tar xv -C Documents/\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># merge multiple tar files with the -A option</span></span><br><span class=\"line\">tar -Af file.tar file_be_merged.tar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -u : append updated files according to timestamp.</span></span><br><span class=\"line\">tar -uf archive.tar filea   <span class=\"comment\"># when extracting, newer version will be picked up</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Comparing files in the archive and file system</span></span><br><span class=\"line\">tar -df archive.tar <span class=\"comment\"># -d to print difference</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Deleting files from the archive</span></span><br><span class=\"line\">tar -f archive.tar --delete file1 file2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -a : compress by looking at the extension</span></span><br><span class=\"line\">tar -acvf archive.tar.gz filea fileb filec</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Exclude a set of files from archiving</span></span><br><span class=\"line\">tar -cf arch.tar * --exclude <span class=\"string\">\"*.txt\"</span></span><br><span class=\"line\">tar -cf arch.tar * -X list  <span class=\"comment\"># list: file1 file2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Excluding version control directories</span></span><br><span class=\"line\">tar --exclude-vcs -czvvf archive.tar.gz eye_of_gnome_svn</span><br><span class=\"line\">tar -cf arc.tar * --exclude <span class=\"string\">\"*.txt\"</span> --totals</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"archive-with-cpio\"><a href=\"#archive-with-cpio\" class=\"headerlink\" title=\"archive with cpio\"></a>archive with cpio</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># store files with attributes such as permissions, ownership</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> file1 file2 file3 | cpio -ov &gt; archive.cpio</span><br><span class=\"line\">cpio -it &lt; archive.cpio <span class=\"comment\"># list files in a cpio archive</span></span><br><span class=\"line\">cpio -id &lt; archive.cpio <span class=\"comment\"># extract files from the cpio archive</span></span><br><span class=\"line\"><span class=\"comment\"># -o specifies the output</span></span><br><span class=\"line\"><span class=\"comment\"># -v is used for printing a list of files archived</span></span><br><span class=\"line\"><span class=\"comment\"># -i is for specifying the input</span></span><br><span class=\"line\"><span class=\"comment\"># -t is for listing</span></span><br><span class=\"line\"><span class=\"comment\"># -d stands for extracting</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"compress-data-with-gzip\"><a href=\"#compress-data-with-gzip\" class=\"headerlink\" title=\"compress data with gzip\"></a>compress data with gzip</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gzip filename</span><br><span class=\"line\">gunzip filename.gz</span><br><span class=\"line\">gzip -l test.txt.gz <span class=\"comment\"># list out the properties of a compressed file</span></span><br><span class=\"line\">cat file | gzip -c &gt; file.gz    <span class=\"comment\"># -c option is used to specify output to stdout</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># zip multiple files</span></span><br><span class=\"line\">FILE_LIST=<span class=\"string\">\"file1 file2 file3 file4 file5\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> f <span class=\"keyword\">in</span> <span class=\"variable\">$FILE_LIST</span>;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">tar -rvf archive.tar <span class=\"variable\">$f</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">gzip archive.tar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># extract a gzipped tarball</span></span><br><span class=\"line\">tar -xavvf archive.tar.gz -C extract_directory</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># zcat - reading gzipped files without extracting</span></span><br><span class=\"line\">zcat test.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Compression ratio</span></span><br><span class=\"line\">gzip -5 test.img    <span class=\"comment\"># 1 is the lowest, but fastest</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># bzip2 offers more effective compression while taking more time</span></span><br><span class=\"line\">bzip2 filename</span><br><span class=\"line\">bunzip2 filename.bz2</span><br><span class=\"line\"></span><br><span class=\"line\">tar -xjvf archive.tar.bz2   <span class=\"comment\"># -j denotes that the archive is bzip2</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"archive-and-compress-with-zip\"><a href=\"#archive-and-compress-with-zip\" class=\"headerlink\" title=\"archive and compress with zip\"></a>archive and compress with zip</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">zip archive_name.zip [SOURCE FILES/DIRS]</span><br><span class=\"line\">zip -r archive.zip folder1 folder2  <span class=\"comment\"># Archive directories and files recursively</span></span><br><span class=\"line\">unzip file.zip  <span class=\"comment\"># without removing filename.zip</span></span><br><span class=\"line\">zip file.zip -u newfile <span class=\"comment\"># update files in the archive with newer files</span></span><br><span class=\"line\">zip -d arc.zip file.txt <span class=\"comment\"># Delete a file from a zipped archive</span></span><br><span class=\"line\">unzip -l archive.zip    <span class=\"comment\"># list the files in an archive</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"faster-archive-with-pbzip2\"><a href=\"#faster-archive-with-pbzip2\" class=\"headerlink\" title=\"faster archive with pbzip2\"></a>faster archive with pbzip2</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># pbzip2 can use multiple cores, hence decreasing overall time</span></span><br><span class=\"line\">pbzip2 myfile.tar</span><br><span class=\"line\">tar cf myfile.tar.bz2 --use-compress-prog=pbzip2 dir_to_compress</span><br><span class=\"line\">pbzip2 -dc myfile.tar.bz2 | tar x   <span class=\"comment\"># Extracting a pbzip2</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"create-filesystem-with-compression\"><a href=\"#create-filesystem-with-compression\" class=\"headerlink\" title=\"create filesystem with compression\"></a>create filesystem with compression</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># squashfs</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"backup-snapshots-with-rsync\"><a href=\"#backup-snapshots-with-rsync\" class=\"headerlink\" title=\"backup snapshots with rsync\"></a>backup snapshots with rsync</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"version-control-based-backup-with-Git\"><a href=\"#version-control-based-backup-with-Git\" class=\"headerlink\" title=\"version control-based backup with Git\"></a>version control-based backup with Git</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## u1 as remote machine; 192.168.1.135</span></span><br><span class=\"line\"><span class=\"comment\"># Set up and initiate the remote backup directory</span></span><br><span class=\"line\">mkdir -p ~/git_repo/demo.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~/git_repo/demo.git</span><br><span class=\"line\">git init --bare</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## base as source host machine</span></span><br><span class=\"line\">git config --global user.name <span class=\"string\">\"ryan\"</span></span><br><span class=\"line\">git config --global user.email luoxu2011@gmail.com</span><br><span class=\"line\"><span class=\"comment\"># source documents in ~/git_demo </span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~/git_demo</span><br><span class=\"line\">git init</span><br><span class=\"line\">git remote add origin ryan@192.168.1.135:~/git_repo/demo.git</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">\"data1\"</span></span><br><span class=\"line\">git push origin master</span><br><span class=\"line\"></span><br><span class=\"line\">git <span class=\"built_in\">log</span></span><br><span class=\"line\"><span class=\"comment\"># revert back to any previous state or version</span></span><br><span class=\"line\">git checkout COMMIT_ID</span><br><span class=\"line\"><span class=\"comment\"># make this revert permanent</span></span><br><span class=\"line\">git commit -am <span class=\"string\">\"Restore @ <span class=\"variable\">$(date)</span> commit ID:xxxxxx\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> ryan@192.168.1.135:~/git_repo/demo.git</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"create-entire-disk-images-using-fsarciver\"><a href=\"#create-entire-disk-images-using-fsarciver\" class=\"headerlink\" title=\"create entire disk images using fsarciver\"></a>create entire disk images using fsarciver</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Old-Boy-Network\"><a href=\"#Old-Boy-Network\" class=\"headerlink\" title=\"Old Boy Network\"></a>Old Boy Network</h1><h2 id=\"Setup-the-network\"><a href=\"#Setup-the-network\" class=\"headerlink\" title=\"Setup the network\"></a>Setup the network</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># manually set the IP address for a network interface</span></span><br><span class=\"line\">sudo ifconfig wlan0 xxx.xxx.xx.xx netmask 255.255.252.0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Printing the list of network interfaces</span></span><br><span class=\"line\">ifconfig | cut -c-10 | tr -d <span class=\"string\">' '</span> | tr -s <span class=\"string\">'\\n'</span></span><br><span class=\"line\"><span class=\"comment\"># first 10 characters is reserved for network interfaces</span></span><br><span class=\"line\"><span class=\"comment\"># take the first 10 columns, remove space, squeeze newline</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Displaying IP addresses</span></span><br><span class=\"line\">ifconfig wlan0 | egrep -o <span class=\"string\">\"inet addr:[^ ]*\"</span> | grep -o <span class=\"string\">\"[0-9.]*\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># spoof the hardware address at the software level</span></span><br><span class=\"line\">ifconfig eth0 hw ether 00:1c:bf:87:25:d5</span><br><span class=\"line\"></span><br><span class=\"line\">cat /etc/resolv.conf    <span class=\"comment\"># nameserver 8.8.8.8</span></span><br><span class=\"line\">host google.com <span class=\"comment\"># list out all of the IP attached to the domain name</span></span><br><span class=\"line\">nslookup google.com <span class=\"comment\"># </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> 192.168.0.9 backupserver &gt;&gt; /etc/hosts</span><br><span class=\"line\">ping backupserver <span class=\"comment\"># get 192.168.0.9</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Showing routing table information</span></span><br><span class=\"line\">route -n</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set a default gateway</span></span><br><span class=\"line\">route add default gw IP_ADDRESS INTERFACE_NAME</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Ping\"><a href=\"#Ping\" class=\"headerlink\" title=\"Ping\"></a>Ping</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ping hostname <span class=\"comment\"># Round Trip Time (RTT)</span></span><br><span class=\"line\">ping 192.168.0.1 -c 2 <span class=\"comment\"># Limiting the number of packets to be sent</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Return status of the ping command</span></span><br><span class=\"line\">ping domain -c2</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $? -eq 0 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> Successful ;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> Failure</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># traceroute displays the address of all intermediate gateways</span></span><br><span class=\"line\">traceroute google.com</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"list-all-the-machine-alive\"><a href=\"#list-all-the-machine-alive\" class=\"headerlink\" title=\"list all the machine alive\"></a>list all the machine alive</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># check alive host</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> ip <span class=\"keyword\">in</span> 192.168.0.&#123;1..255&#125; ;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    ping <span class=\"variable\">$ip</span> -c 2 &amp;&gt; /dev/null ;  <span class=\"comment\"># &amp;&gt; /dev/null : redirect both stderr and stdout</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ $? -eq 0 ];</span><br><span class=\"line\">    <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"variable\">$ip</span> is alive</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Parallel pings : enclose the loop body in ( )&amp;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> ip <span class=\"keyword\">in</span> 192.168.0.&#123;1..255&#125; ;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    (</span><br><span class=\"line\">        ping <span class=\"variable\">$ip</span> -c2 &amp;&gt; /dev/null ;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> [ $? -eq 0 ];</span><br><span class=\"line\">        <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">echo</span> <span class=\"variable\">$ip</span> is alive</span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">    )&amp;</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"built_in\">wait</span> <span class=\"comment\"># waits for the time until all the child ( ) subshell processes complete</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"run-command-on-a-remote-host-with-SSH\"><a href=\"#run-command-on-a-remote-host-with-SSH\" class=\"headerlink\" title=\"run command on a remote host with SSH\"></a>run command on a remote host with SSH</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># By default, the SSH server runs at port 22</span></span><br><span class=\"line\">ssh user@locahost -p 422</span><br><span class=\"line\"></span><br><span class=\"line\">COMMANDS=<span class=\"string\">\"command1; command2; command3\"</span></span><br><span class=\"line\">$ ssh user@hostname <span class=\"string\">\"<span class=\"variable\">$COMMANDS</span>\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># collects the uptime of a list of remote hosts</span></span><br><span class=\"line\"><span class=\"comment\">#Description: Uptime monitor</span></span><br><span class=\"line\">IP_LIST=<span class=\"string\">\"192.168.0.1 192.168.0.5 192.168.0.9\"</span></span><br><span class=\"line\">USER=<span class=\"string\">\"test\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> IP <span class=\"keyword\">in</span> <span class=\"variable\">$IP_LIST</span>;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    utime=$(ssh <span class=\"variable\">$&#123;USER&#125;</span>@<span class=\"variable\">$&#123;IP&#125;</span> uptime | awk <span class=\"string\">'&#123; print $3 &#125;'</span> )</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$IP</span> uptime: <span class=\"variable\">$utime</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Redirecting data into stdin of remote host</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'text'</span> | ssh user@remote_host <span class=\"string\">'echo'</span></span><br><span class=\"line\">ssh user@remote_host <span class=\"string\">'echo'</span> &lt; file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Running graphical commands on a remote machine</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"transfer-files-through-the-network\"><a href=\"#transfer-files-through-the-network\" class=\"headerlink\" title=\"transfer files through the network\"></a>transfer files through the network</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># FTP can only be used if the FTP server is installed on the remote machine.</span></span><br><span class=\"line\"><span class=\"comment\"># FTP usually runs on port 21.</span></span><br><span class=\"line\">lftp username@ftphost</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># To change the directory of a local machine, use lcd</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># download a file</span></span><br><span class=\"line\">lftp username@ftphost:~&gt; get filename</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># To upload a file from the current directory</span></span><br><span class=\"line\">lftp username@ftphost:~&gt; put filename</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># An lftp session can be terminated by using the quit</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Automated FTP transfer</span></span><br><span class=\"line\"><span class=\"comment\"># -i option of ftp turns off the interactive session</span></span><br><span class=\"line\"><span class=\"comment\"># -n option tells ftp to not attempt automatically logging in and use the username and password we supply it.</span></span><br><span class=\"line\">HOST=<span class=\"string\">'domain.com'</span></span><br><span class=\"line\">USER=<span class=\"string\">'foo'</span></span><br><span class=\"line\">PASSWD=<span class=\"string\">'password'</span></span><br><span class=\"line\">ftp -i -n <span class=\"variable\">$HOST</span> &lt;&lt;EOF   </span><br><span class=\"line\">user <span class=\"variable\">$&#123;USER&#125;</span> <span class=\"variable\">$&#123;PASSWD&#125;</span></span><br><span class=\"line\">binary</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /home/slynux</span><br><span class=\"line\">put testfile.jpg</span><br><span class=\"line\">get serverfile.jpg</span><br><span class=\"line\">quit</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># SFTP requires an OpenSSH server to be installed and running</span></span><br><span class=\"line\">sftp user@domainname</span><br><span class=\"line\">sftp -oPort=422 user@domainname <span class=\"comment\"># in case port no is not 22</span></span><br><span class=\"line\"></span><br><span class=\"line\">scp SOURCE DESTINATION</span><br><span class=\"line\">scp filename user@remotehost:/home/path <span class=\"comment\"># -r Recursive copy</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"connect-to-a-wireless-network\"><a href=\"#connect-to-a-wireless-network\" class=\"headerlink\" title=\"connect to a wireless network\"></a>connect to a wireless network</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"passwordless-SSH\"><a href=\"#passwordless-SSH\" class=\"headerlink\" title=\"passwordless SSH\"></a>passwordless SSH</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa</span><br><span class=\"line\">ssh USER@REMOTE_HOST <span class=\"string\">\"cat &gt;&gt; ~/.ssh/authorized_keys\"</span> &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"port-forwarding-using-SSH\"><a href=\"#port-forwarding-using-SSH\" class=\"headerlink\" title=\"port forwarding using SSH\"></a>port forwarding using SSH</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"mounte-a-remote-drive-at-a-local-mount-point\"><a href=\"#mounte-a-remote-drive-at-a-local-mount-point\" class=\"headerlink\" title=\"mounte a remote drive at a local mount point\"></a>mounte a remote drive at a local mount point</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"network-traffic-and-port-analysis\"><a href=\"#network-traffic-and-port-analysis\" class=\"headerlink\" title=\"network traffic and port analysis\"></a>network traffic and port analysis</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># list all opened ports on the system along with the details</span></span><br><span class=\"line\">lsof -i</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># In order to list out the opened ports from the current machine</span></span><br><span class=\"line\">lsof -i | grep <span class=\"string\">\":[0-9]\\+-&gt;\"</span> -o | grep <span class=\"string\">\"[0-9]\\+\"</span> -o | sort | uniq</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># netstat -tnp to list opened port and services</span></span><br><span class=\"line\">netstat -tnp</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"create-arbitrary-sockets\"><a href=\"#create-arbitrary-sockets\" class=\"headerlink\" title=\"create arbitrary sockets\"></a>create arbitrary sockets</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># reate network sockets to do data transfer over a TCP/IP network</span></span><br><span class=\"line\"><span class=\"comment\"># create a listening socket on port 1234 on the local machine</span></span><br><span class=\"line\">nc -l 1234  <span class=\"comment\"># netcat</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Connect to the socket</span></span><br><span class=\"line\">nc HOST 1234 <span class=\"comment\"># replace HOST with localhost, or the IP address or hostname</span></span><br><span class=\"line\"></span><br><span class=\"line\">ryan@base:~$ nc -l 12345</span><br><span class=\"line\">ryan@u1:~$ nc base 12345</span><br><span class=\"line\"><span class=\"comment\"># type hi in u1, hi will appear in base as well</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Quickly copying files over the network</span></span><br><span class=\"line\">nc -l 1234 &gt; destination_filename   <span class=\"comment\"># on receiving machine</span></span><br><span class=\"line\">nc HOST 1234 &lt; source_filename  <span class=\"comment\"># on sender machine</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"share-an-internet-connection\"><a href=\"#share-an-internet-connection\" class=\"headerlink\" title=\"share an internet connection\"></a>share an internet connection</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># you don't have a router and you need to share the Internet?</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"basic-firewall-using-iptables\"><a href=\"#basic-firewall-using-iptables\" class=\"headerlink\" title=\"basic firewall using iptables\"></a>basic firewall using iptables</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Block traffic to a specific IP address</span></span><br><span class=\"line\">iptables -A OUTPUT -d 8.8.8.8 -j DROP</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Block traffic to a specific port</span></span><br><span class=\"line\">iptables -A OUTPUT -p tcp -dport 21 -j DROP</span><br><span class=\"line\"><span class=\"comment\"># -A which instructs iptables to append a new rule to the chain</span></span><br><span class=\"line\"><span class=\"comment\"># OUTPUT chain which runs on all the outgoing traffic</span></span><br><span class=\"line\"><span class=\"comment\"># -j to instruct iptables to DROP the packet</span></span><br><span class=\"line\"><span class=\"comment\"># -p parameter to specify that this rule should match only TCP on the port specified with -dport which block all the outbound FTP traffic</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># clear the changes made to the iptables chains</span></span><br><span class=\"line\">iptables --flush</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Put-on-the-Monitor’s-Cap\"><a href=\"#Put-on-the-Monitor’s-Cap\" class=\"headerlink\" title=\"Put on the Monitor’s Cap\"></a>Put on the Monitor’s Cap</h1><h2 id=\"Monitor-disk-usage\"><a href=\"#Monitor-disk-usage\" class=\"headerlink\" title=\"Monitor disk usage\"></a>Monitor disk usage</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">du -a DIRECTORY <span class=\"comment\"># -a for all files recursively</span></span><br><span class=\"line\">du -h FILENAME</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Displaying the grand total sum of disk usage</span></span><br><span class=\"line\">du -c FILENAME1 FILENAME2..</span><br><span class=\"line\">du -c DIRECTORY</span><br><span class=\"line\"><span class=\"comment\"># -s (summarize), which will print only the grand total</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Excluding files from the disk usage calculation</span></span><br><span class=\"line\">du --exclude <span class=\"string\">\"*.txt\"</span> FILES</span><br><span class=\"line\">du --exclude-from EXCLUDE.txt DIRECTORY</span><br><span class=\"line\">du --max-depth 2 DIRECTORY</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Finding the 10 largest size files from a given directory</span></span><br><span class=\"line\">du -ak SOURCE_DIR | sort -nrk 1 | head</span><br><span class=\"line\"><span class=\"comment\"># -a makes du traverse the SOURCE_DIR and calculates the size of all files</span></span><br><span class=\"line\"><span class=\"comment\"># sort is used to perform a numerical sort with column 1 and reverse it</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># find only the largest files and not directories</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -<span class=\"built_in\">exec</span> du -k &#123;&#125; \\; | sort -nrk 1 | head</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"execution-time-for-a-command\"><a href=\"#execution-time-for-a-command\" class=\"headerlink\" title=\"execution time for a command\"></a>execution time for a command</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">time COMMAND</span><br><span class=\"line\">/usr/bin/time -a -o output.txt COMMAND</span><br><span class=\"line\"><span class=\"comment\"># append the time statistics to a file without overwriting, use the -a</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Real time: %e</span></span><br><span class=\"line\"><span class=\"comment\"># User: %U</span></span><br><span class=\"line\"><span class=\"comment\"># sys: %S</span></span><br><span class=\"line\">/usr/bin/time -f <span class=\"string\">\"Time: %U\"</span> -a -o timing.log COMMAND  <span class=\"comment\"># formatted output</span></span><br><span class=\"line\">/usr/bin/time -f <span class=\"string\">\"Time: %U\"</span> COMMAND&gt; command_output.txt 2&gt;time.log</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># %C Name and command-line arguments of the command being timed.</span></span><br><span class=\"line\"><span class=\"comment\"># %D Average size of the process unshared data area, in kilobytes.</span></span><br><span class=\"line\"><span class=\"comment\"># %E Elapsed real (wall clock) time used by the process in [hours:]minutes:seconds.</span></span><br><span class=\"line\"><span class=\"comment\"># %x Exit status of the command.</span></span><br><span class=\"line\"><span class=\"comment\"># %k Number of signals delivered to the process.</span></span><br><span class=\"line\"><span class=\"comment\"># %W Number of times the process was swapped out of the main memory.</span></span><br><span class=\"line\"><span class=\"comment\"># %Z System page size in bytes. This is a per-system constant, but varies between systems</span></span><br><span class=\"line\"><span class=\"comment\"># %P Percentage of the CPU that this job got. This is just user + system times divided by the total running time. It also prints a percentage sign.</span></span><br><span class=\"line\"><span class=\"comment\"># %K Average total (data + stack + text) memory usage of the process, in Kilobytes.</span></span><br><span class=\"line\"><span class=\"comment\"># %w Number of times that the program was context-switched voluntarily, for instance while waiting for an I/O operation to complete.</span></span><br><span class=\"line\"><span class=\"comment\"># %c Number of times the process was context-switched involuntarily (because the time slice expired).</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"logged-in-users-boot-logs-and-boot-failure\"><a href=\"#logged-in-users-boot-logs-and-boot-failure\" class=\"headerlink\" title=\"logged in users, boot logs and boot failure\"></a>logged in users, boot logs and boot failure</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">who</span><br><span class=\"line\">w <span class=\"comment\"># more detailed information about the logged in users</span></span><br><span class=\"line\">users <span class=\"comment\"># list only the usernames of the users</span></span><br><span class=\"line\">users | tr <span class=\"string\">' '</span> <span class=\"string\">'\\n'</span> | sort | uniq   <span class=\"comment\"># find unique users</span></span><br><span class=\"line\">uptime <span class=\"comment\"># how long the system has been powered on</span></span><br><span class=\"line\"><span class=\"comment\"># 21:44:33 up 3:17, 8 users, load average: 0.09, 0.14, 0.09</span></span><br><span class=\"line\">uptime | grep -Po <span class=\"string\">'\\d&#123;2&#125;\\:\\d&#123;2&#125;\\:\\d&#123;2&#125;'</span> <span class=\"comment\"># xtract only three two-digit numbers separated by colons.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># get information about previous boot and user logged sessions</span></span><br><span class=\"line\">last</span><br><span class=\"line\">last -f /var/<span class=\"built_in\">log</span>/wtmp</span><br><span class=\"line\">last USER <span class=\"comment\"># about login sessions for a single user</span></span><br><span class=\"line\">last reboot <span class=\"comment\"># Get information about reboot sessions</span></span><br><span class=\"line\">lastb  <span class=\"comment\"># about failed user login sessions</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"top-10-cpu-consuming-processes-in-an-hour\"><a href=\"#top-10-cpu-consuming-processes-in-an-hour\" class=\"headerlink\" title=\"top 10 cpu consuming processes in an hour\"></a>top 10 cpu consuming processes in an hour</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># monitoring and calculating CPU usages in one hour</span></span><br><span class=\"line\">SECS=3600</span><br><span class=\"line\">UNIT_TIME=60</span><br><span class=\"line\"><span class=\"comment\">#Change the SECS to total seconds for which monitoring is to be performed.</span></span><br><span class=\"line\"><span class=\"comment\">#UNIT_TIME is the interval in seconds between each sampling</span></span><br><span class=\"line\">STEPS=$(( <span class=\"variable\">$SECS</span> / <span class=\"variable\">$UNIT_TIME</span> ))</span><br><span class=\"line\"><span class=\"built_in\">echo</span> Watching CPU usage... ;</span><br><span class=\"line\"><span class=\"keyword\">for</span>((i=0;i&lt;STEPS;i++))</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    ps -eocomm,pcpu | tail -n +2 &gt;&gt; /tmp/cpu_usage.$$</span><br><span class=\"line\">    sleep <span class=\"variable\">$UNIT_TIME</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> CPU eaters :</span><br><span class=\"line\">cat /tmp/cpu_usage.$$ | \\</span><br><span class=\"line\">awk <span class=\"string\">'&#123; process[$1]+=$2; &#125;END&#123;for(i in process)&#123;printf(\"%-20s %s\\n\",i, process[i]) ;&#125;&#125;'</span> \\</span><br><span class=\"line\">| sort -nrk 2 | head</span><br><span class=\"line\">rm /tmp/cpu_usage.$$</span><br><span class=\"line\"><span class=\"comment\">#Remove the temporary log file</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"mmonitor-command-output-with-watch\"><a href=\"#mmonitor-command-output-with-watch\" class=\"headerlink\" title=\"mmonitor command output with watch\"></a>mmonitor command output with watch</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># monitor the output of a command</span></span><br><span class=\"line\">watch COMMAND</span><br><span class=\"line\">watch <span class=\"string\">'ls -l | grep \"^d\"'</span> <span class=\"comment\"># will update the output at a default interval of two seconds</span></span><br><span class=\"line\">watch -n 5 <span class=\"string\">'ls -l'</span> <span class=\"comment\"># at regular intervals of 5 seconds</span></span><br><span class=\"line\">watch -d <span class=\"string\">'COMMAND'</span> <span class=\"comment\"># Difference highlighting</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"log-access-to-files-and-directories\"><a href=\"#log-access-to-files-and-directories\" class=\"headerlink\" title=\"log access to files and directories\"></a>log access to files and directories</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"logfile-management-with-logrotate\"><a href=\"#logfile-management-with-logrotate\" class=\"headerlink\" title=\"logfile management with logrotate\"></a>logfile management with logrotate</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># logrotate has the configuration directory at /etc/logrotate.d.</span></span><br><span class=\"line\"><span class=\"comment\"># customerized config file: /etc/logrotate.d/program</span></span><br><span class=\"line\">/var/<span class=\"built_in\">log</span>/program.log &#123;  <span class=\"comment\"># logfile path</span></span><br><span class=\"line\">missingok   <span class=\"comment\"># Ignore if the logfile is missing and return without rotating the log.</span></span><br><span class=\"line\">notifempty  <span class=\"comment\"># Only rotate the log if the source logfile is not empty</span></span><br><span class=\"line\">size 30k    <span class=\"comment\"># Limit the size of the logfile</span></span><br><span class=\"line\">compress    <span class=\"comment\"># Enable compression with gzip for older logs.</span></span><br><span class=\"line\">weekly      <span class=\"comment\"># Specify the interval at which the rotation is to be performed</span></span><br><span class=\"line\">rotate 5    <span class=\"comment\"># It is the number of older copies of logfile archives to be kept</span></span><br><span class=\"line\">create 0600 root root   <span class=\"comment\"># Specify the mode, user, and the group of the logfile archive</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"logging-with-syslog\"><a href=\"#logging-with-syslog\" class=\"headerlink\" title=\"logging with syslog\"></a>logging with syslog</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#/var/log/boot.log      Boot log information.</span></span><br><span class=\"line\"><span class=\"comment\">#/var/log/httpd         Apache web server log.</span></span><br><span class=\"line\"><span class=\"comment\">#/var/log/messages      Post boot kernel information.</span></span><br><span class=\"line\"><span class=\"comment\">#/var/log/auth.log      User authentication log.</span></span><br><span class=\"line\"><span class=\"comment\">#/var/log/dmesg         System boot up messages.</span></span><br><span class=\"line\"><span class=\"comment\">#/var/log/mail.log      Mail server log.</span></span><br><span class=\"line\"><span class=\"comment\">#/var/log/Xorg.0.log    X Server log.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#logger LOG_MESSAGE</span></span><br><span class=\"line\">logger This is a <span class=\"built_in\">test</span> <span class=\"built_in\">log</span> line</span><br><span class=\"line\">tail -n 1 /var/<span class=\"built_in\">log</span>/messages</span><br><span class=\"line\"><span class=\"comment\"># Sep 29 07:47:44 slynux-laptop slynux: This is a test log line</span></span><br><span class=\"line\"><span class=\"comment\"># it logs to /var/log/messages by default</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># with a specified tag</span></span><br><span class=\"line\">logger -t TAG This is a message</span><br><span class=\"line\"><span class=\"comment\"># Sep 29 07:48:42 slynux-laptop TAG: This is a message</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># You can see the tag strings and associated logfiles from the configuration files located in the /etc/rsyslog.d/ directory.</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"monitor-user-login-to-find-intruder\"><a href=\"#monitor-user-login-to-find-intruder\" class=\"headerlink\" title=\"monitor user login to find intruder\"></a>monitor user login to find intruder</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#Filename: intruder_detect.sh</span></span><br><span class=\"line\"><span class=\"comment\">#Description: Intruder reporting tool with auth.log input</span></span><br><span class=\"line\">AUTHLOG=/var/<span class=\"built_in\">log</span>/auth.log</span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ -n <span class=\"variable\">$1</span> ]];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">AUTHLOG=<span class=\"variable\">$1</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> Using Log file : <span class=\"variable\">$AUTHLOG</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">LOG=/tmp/valid.$$.<span class=\"built_in\">log</span></span><br><span class=\"line\">grep -v <span class=\"string\">\"invalid\"</span> <span class=\"variable\">$AUTHLOG</span> &gt; <span class=\"variable\">$LOG</span></span><br><span class=\"line\">users=$(grep <span class=\"string\">\"Failed password\"</span> <span class=\"variable\">$LOG</span> | awk <span class=\"string\">'&#123; print $(NF-5) &#125;'</span> | sort |</span><br><span class=\"line\">uniq)</span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">\"%-5s|%-10s|%-10s|%-13s|%-33s|%s\\n\"</span> <span class=\"string\">\"Sr#\"</span> <span class=\"string\">\"User\"</span> <span class=\"string\">\"Attempts\"</span> <span class=\"string\">\"IP</span></span><br><span class=\"line\"><span class=\"string\">address\"</span> <span class=\"string\">\"Host_Mapping\"</span> <span class=\"string\">\"Time range\"</span></span><br><span class=\"line\">ucount=0;</span><br><span class=\"line\">ip_list=<span class=\"string\">\"<span class=\"variable\">$(egrep -o \"[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\" $LOG | sort |</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"variable\">uniq)</span>\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> ip <span class=\"keyword\">in</span> <span class=\"variable\">$ip_list</span>;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">grep <span class=\"variable\">$ip</span> <span class=\"variable\">$LOG</span> &gt; /tmp/temp.$$.<span class=\"built_in\">log</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> user <span class=\"keyword\">in</span> <span class=\"variable\">$users</span>;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">grep <span class=\"variable\">$user</span> /tmp/temp.$$.<span class=\"built_in\">log</span>&gt; /tmp/$$.<span class=\"built_in\">log</span></span><br><span class=\"line\">cut -c-16 /tmp/$$.<span class=\"built_in\">log</span> &gt; $$.time</span><br><span class=\"line\">tstart=$(head -1 $$.time);</span><br><span class=\"line\">start=$(date -d <span class=\"string\">\"<span class=\"variable\">$tstart</span>\"</span> <span class=\"string\">\"+%s\"</span>);</span><br><span class=\"line\">tend=$(tail -1 $$.time);</span><br><span class=\"line\">end=$(date -d <span class=\"string\">\"<span class=\"variable\">$tend</span>\"</span> <span class=\"string\">\"+%s\"</span>)</span><br><span class=\"line\"><span class=\"built_in\">limit</span>=$(( <span class=\"variable\">$end</span> - <span class=\"variable\">$start</span> ))</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$limit</span> -gt 120 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> ucount++;</span><br><span class=\"line\">IP=$(egrep -o <span class=\"string\">\"[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\"</span> /tmp/$$.<span class=\"built_in\">log</span> |</span><br><span class=\"line\">head -1 );</span><br><span class=\"line\">TIME_RANGE=<span class=\"string\">\"<span class=\"variable\">$tstart</span>--&gt;<span class=\"variable\">$tend</span>\"</span></span><br><span class=\"line\">ATTEMPTS=$(cat /tmp/$$.<span class=\"built_in\">log</span>|wc -l);</span><br><span class=\"line\">HOST=$(host <span class=\"variable\">$IP</span> | awk <span class=\"string\">'&#123; print $NF &#125;'</span> )</span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">\"%-5s|%-10s|%-10s|%-10s|%-33s|%-s\\n\"</span> <span class=\"string\">\"<span class=\"variable\">$ucount</span>\"</span> <span class=\"string\">\"<span class=\"variable\">$user</span>\"</span></span><br><span class=\"line\"><span class=\"string\">\"<span class=\"variable\">$ATTEMPTS</span>\"</span> <span class=\"string\">\"<span class=\"variable\">$IP</span>\"</span> <span class=\"string\">\"<span class=\"variable\">$HOST</span>\"</span> <span class=\"string\">\"<span class=\"variable\">$TIME_RANGE</span>\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">rm /tmp/valid.$$.<span class=\"built_in\">log</span> /tmp/$$.<span class=\"built_in\">log</span> $$.time /tmp/temp.$$.<span class=\"built_in\">log</span> 2&gt; /dev/null</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"remote-disk-usage-health-monitor\"><a href=\"#remote-disk-usage-health-monitor\" class=\"headerlink\" title=\"remote disk usage health monitor\"></a>remote disk usage health monitor</h2><ol>\n<li>set up a common user account on all the remote machines</li>\n<li>configure auto-login with SSH<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#Filename: disklog.sh</span></span><br><span class=\"line\"><span class=\"comment\">#Description: Monitor disk usage health for remote systems</span></span><br><span class=\"line\">logfile=<span class=\"string\">\"diskusage.log\"</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ -n <span class=\"variable\">$1</span> ]]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    logfile=<span class=\"variable\">$1</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ ! -e <span class=\"variable\">$logfile</span> ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span> <span class=\"string\">\"%-8s %-14s %-9s %-8s %-6s %-6s %-6s %s\\n\"</span> <span class=\"string\">\"Date\"</span> <span class=\"string\">\"IP</span></span><br><span class=\"line\"><span class=\"string\">    address\"</span> <span class=\"string\">\"Device\"</span> <span class=\"string\">\"Capacity\"</span> <span class=\"string\">\"Used\"</span> <span class=\"string\">\"Free\"</span> <span class=\"string\">\"Percent\"</span> <span class=\"string\">\"Status\"</span> &gt; <span class=\"variable\">$logfile</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">IP_LIST=<span class=\"string\">\"127.0.0.1 0.0.0.0\"</span></span><br><span class=\"line\"><span class=\"comment\">#provide the list of remote machine IP addresses</span></span><br><span class=\"line\">(</span><br><span class=\"line\"><span class=\"keyword\">for</span> ip <span class=\"keyword\">in</span> <span class=\"variable\">$IP_LIST</span>;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\"><span class=\"comment\">#slynux is the username, change as necessary</span></span><br><span class=\"line\">ssh slynux@<span class=\"variable\">$ip</span> <span class=\"string\">'df -H'</span> | grep ^/dev/ &gt; /tmp/$$.df</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> line;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">cur_date=$(date +%D)</span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">\"%-8s %-14s \"</span> <span class=\"variable\">$cur_date</span> <span class=\"variable\">$ip</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$line</span> | awk <span class=\"string\">'&#123; printf(\"%-9s %-8s %-6s %-6s</span></span><br><span class=\"line\"><span class=\"string\">%-8s\",$1,$2,$3,$4,$5); &#125;'</span></span><br><span class=\"line\">pusg=$(<span class=\"built_in\">echo</span> <span class=\"variable\">$line</span> | egrep -o <span class=\"string\">\"[0-9]+%\"</span>)</span><br><span class=\"line\">pusg=<span class=\"variable\">$&#123;pusg/\\%/&#125;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$pusg</span> -lt 80 ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> SAFE</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> ALERT</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span>&lt; /tmp/$$.df</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">) &gt;&gt; <span class=\"variable\">$logfile</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># We can use the cron utility to run the script at regular intervals</span></span><br><span class=\"line\"><span class=\"comment\"># every day at 10 a.m., write the following entry in the crontab</span></span><br><span class=\"line\">00 10 * * * /home/path/disklog.sh /home/user/diskusg.log</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"measure-and-optimize-power-usage\"><a href=\"#measure-and-optimize-power-usage\" class=\"headerlink\" title=\"measure and optimize power usage\"></a>measure and optimize power usage</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># The log data is stored in the /var/log/wtmp file</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#Filename: active_users.sh</span></span><br><span class=\"line\"><span class=\"comment\">#Description: Reporting tool to find out active users</span></span><br><span class=\"line\"><span class=\"built_in\">log</span>=/var/<span class=\"built_in\">log</span>/wtmp</span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ -n <span class=\"variable\">$1</span> ]];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"built_in\">log</span>=<span class=\"variable\">$1</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">\"%-4s %-10s %-10s %-6s %-8s\\n\"</span> <span class=\"string\">\"Rank\"</span> <span class=\"string\">\"User\"</span> <span class=\"string\">\"Start\"</span> <span class=\"string\">\"Logins\"</span></span><br><span class=\"line\"><span class=\"string\">\"Usage hours\"</span></span><br><span class=\"line\">last -f <span class=\"variable\">$log</span> | head -n -2 &gt; /tmp/ulog.$$</span><br><span class=\"line\">cat /tmp/ulog.$$ | cut -d<span class=\"string\">' '</span> -f1 | sort | uniq&gt; /tmp/users.$$</span><br><span class=\"line\">(</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> user;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">grep ^<span class=\"variable\">$user</span> /tmp/ulog.$$ &gt; /tmp/user.$$</span><br><span class=\"line\">minutes=0</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> t</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">s=$(<span class=\"built_in\">echo</span> <span class=\"variable\">$t</span> | awk -F: <span class=\"string\">'&#123; print ($1 * 60) + $2 &#125;'</span>)</span><br><span class=\"line\"><span class=\"built_in\">let</span> minutes=minutes+s</span><br><span class=\"line\"><span class=\"keyword\">done</span>&lt; &lt;(cat /tmp/user.$$ | awk <span class=\"string\">'&#123; print $NF &#125;'</span> | tr -d <span class=\"string\">')('</span>)</span><br><span class=\"line\">firstlog=$(tail -n 1 /tmp/user.$$ | awk <span class=\"string\">'&#123; print $5,$6 &#125;'</span>)</span><br><span class=\"line\">nlogins=$(cat /tmp/user.$$ | wc -l)</span><br><span class=\"line\">hours=$(<span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$minutes</span> / 60.0\"</span> | bc)</span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">\"%-10s %-10s %-6s %-8s\\n\"</span> <span class=\"variable\">$user</span> <span class=\"string\">\"<span class=\"variable\">$firstlog</span>\"</span> <span class=\"variable\">$nlogins</span> <span class=\"variable\">$hours</span></span><br><span class=\"line\"><span class=\"keyword\">done</span>&lt; /tmp/users.$$</span><br><span class=\"line\">) | sort -nrk 4 | awk <span class=\"string\">'&#123; printf(\"%-4s %s\\n\", NR, $0) &#125;'</span></span><br><span class=\"line\">rm /tmp/users.$$ /tmp/user.$$ /tmp/ulog.$$</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Measuring-and-optimizing-power-usage\"><a href=\"#Measuring-and-optimizing-power-usage\" class=\"headerlink\" title=\"Measuring and optimizing power usage\"></a>Measuring and optimizing power usage</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">powertop</span><br><span class=\"line\">powertop --html <span class=\"comment\"># generating HTML reports</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"monitor-disk-activity\"><a href=\"#monitor-disk-activity\" class=\"headerlink\" title=\"monitor disk activity\"></a>monitor disk activity</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iotop -o    <span class=\"comment\"># show only those processes which are doing active I/O</span></span><br><span class=\"line\">iotop -b -n 2 <span class=\"comment\"># print the statistics two times and then exit</span></span><br><span class=\"line\">iotop -p PID <span class=\"comment\"># Monitor a specific process</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"check-disk-and-filesystem-for-errors\"><a href=\"#check-disk-and-filesystem-for-errors\" class=\"headerlink\" title=\"check disk and filesystem for errors\"></a>check disk and filesystem for errors</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># check for errors on a partition or filesystem</span></span><br><span class=\"line\">fsck /dev/sdb3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># check all the filesystems configured in /etc/fstab</span></span><br><span class=\"line\">fsck -A</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Instruct fsck to automatically attempt fixing errors</span></span><br><span class=\"line\">fsck -a /dev/sda2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># simulate the actions</span></span><br><span class=\"line\">fsck -AN</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Administration-Calls\"><a href=\"#Administration-Calls\" class=\"headerlink\" title=\"Administration Calls\"></a>Administration Calls</h1><h2 id=\"Gathering-information-about-processes\"><a href=\"#Gathering-information-about-processes\" class=\"headerlink\" title=\"Gathering information about processes\"></a>Gathering information about processes</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -f <span class=\"comment\"># -f (stands for full) </span></span><br><span class=\"line\"><span class=\"comment\"># other than the ones attached to the current terminal, -e (every) option</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># display the required columns of output, -o</span></span><br><span class=\"line\">ps -eo comm,pcpu | head</span><br><span class=\"line\"><span class=\"comment\">#pcpu Percentage of CPU</span></span><br><span class=\"line\"><span class=\"comment\">#pid Process ID</span></span><br><span class=\"line\"><span class=\"comment\">#ppid Parent Process ID</span></span><br><span class=\"line\"><span class=\"comment\">#pmem Percentage of memory</span></span><br><span class=\"line\"><span class=\"comment\">#comm Executable filename</span></span><br><span class=\"line\"><span class=\"comment\">#cmd Simple command</span></span><br><span class=\"line\"><span class=\"comment\">#user The user who started the process</span></span><br><span class=\"line\"><span class=\"comment\">#nice The priority (niceness)</span></span><br><span class=\"line\"><span class=\"comment\">#time Cumulative CPU time</span></span><br><span class=\"line\"><span class=\"comment\">#etime Elapsed time since the process started</span></span><br><span class=\"line\"><span class=\"comment\">#tty The associated TTY device</span></span><br><span class=\"line\"><span class=\"comment\">#euid The effective user</span></span><br><span class=\"line\"><span class=\"comment\">#stat Process state</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># display several parameters along with the top CPU consuming processes</span></span><br><span class=\"line\">top</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Sorting the ps output</span></span><br><span class=\"line\">ps -eo comm,pcpu --sort -pcpu | head</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Finding the process ID when given command names</span></span><br><span class=\"line\">ps -C COMMAND_NAME</span><br><span class=\"line\">ps -C COMMAND_NAME -o pid= <span class=\"comment\"># lists the process IDs</span></span><br><span class=\"line\">pgrep COMMAND</span><br><span class=\"line\">pgrep bash -d <span class=\"string\">\":\"</span> <span class=\"comment\"># define delimiter rather than using a newline</span></span><br><span class=\"line\">pgrep -u root,slynux COMMAND <span class=\"comment\"># Specify a list of owners of the user for the matching processes</span></span><br><span class=\"line\">pgrep -c COMMAND <span class=\"comment\"># Return the count of matching processes</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Specify an effective users' list by using -u EUSER1, EUSER2,</span></span><br><span class=\"line\"><span class=\"comment\"># Specify a real users' list by using -U RUSER1, RUSER2</span></span><br><span class=\"line\">ps -u root -U root -o user,pcpu</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># TTY filter for ps</span></span><br><span class=\"line\">ps -t pts/0,pts/1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Information about process threads</span></span><br><span class=\"line\">ps -eLf</span><br><span class=\"line\"><span class=\"comment\"># -L : show information about threads. </span></span><br><span class=\"line\"><span class=\"comment\"># NLWP is the thread count for a process and NLP is the thread ID for each entry</span></span><br><span class=\"line\">ps -eLf --sort -nlwp | head</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Showing environment variables for a process</span></span><br><span class=\"line\">ps -eo cmd e</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># if /usr/bin/windowapp did not work</span></span><br><span class=\"line\">ps -C windowapp -eo cmd e   <span class=\"comment\"># find out the env variable, and prefix to the cmd</span></span><br><span class=\"line\">DISPLAY=:0 /usr/bin/windowapp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">which</span> <span class=\"comment\"># find the location of a command</span></span><br><span class=\"line\"><span class=\"built_in\">which</span> ls <span class=\"comment\"># /bin/ls</span></span><br><span class=\"line\">whereis ls</span><br><span class=\"line\">whatis ls <span class=\"comment\"># one-line description of the command</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Add path</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/ryan/bin</span><br><span class=\"line\"></span><br><span class=\"line\">file FILENAME <span class=\"comment\"># return file type</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># specifies the average of the total number of runnable processes</span></span><br><span class=\"line\">uptime</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Killing-processes-and-send-or-respond-to-signals\"><a href=\"#Killing-processes-and-send-or-respond-to-signals\" class=\"headerlink\" title=\"Killing processes and send or respond to signals\"></a>Killing processes and send or respond to signals</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">kill</span> -l <span class=\"comment\"># print signal numbers and corresponding signal names</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># specify a signal to be sent to a process via the kill</span></span><br><span class=\"line\"><span class=\"built_in\">kill</span> -s SIGNAL PID</span><br><span class=\"line\"><span class=\"built_in\">kill</span> -s SIGKILL PROCESS_ID <span class=\"comment\"># same as : kill -9 PROCESS_ID</span></span><br><span class=\"line\"></span><br><span class=\"line\">killall -u USERNAME process_name</span><br><span class=\"line\">pkill process_name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># trap is a command used to assign signal handler to signals in a script</span></span><br><span class=\"line\"><span class=\"built_in\">trap</span> <span class=\"string\">'signal_handler_function_name'</span> SIGNAL LIST</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#Filename: sighandle.sh</span></span><br><span class=\"line\"><span class=\"comment\">#Description: Signal handler</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> handler()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> Hey, received signal : SIGINT</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">echo</span> My process ID is $$</span><br><span class=\"line\"><span class=\"built_in\">trap</span> <span class=\"string\">'handler'</span> SIGINT</span><br><span class=\"line\"><span class=\"comment\">#handler is the name of the signal handler function for SIGINT signal</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    sleep 1</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Sending-messages-to-user-terminals\"><a href=\"#Sending-messages-to-user-terminals\" class=\"headerlink\" title=\"Sending messages to user terminals\"></a>Sending messages to user terminals</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># broadcast a message to all users and all logged in terminals</span></span><br><span class=\"line\">cat message.txt | wall</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Gathering-system-information\"><a href=\"#Gathering-system-information\" class=\"headerlink\" title=\"Gathering system information\"></a>Gathering system information</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># print the hostname of the current system</span></span><br><span class=\"line\">hostname</span><br><span class=\"line\">uname -n</span><br><span class=\"line\">uname -a</span><br><span class=\"line\">uname -r <span class=\"comment\"># kernel release</span></span><br><span class=\"line\">uname -m <span class=\"comment\"># machine type</span></span><br><span class=\"line\"></span><br><span class=\"line\">cat /proc/cpuinfo <span class=\"comment\"># print details about the CPU</span></span><br><span class=\"line\">cat /proc/meminfo <span class=\"comment\"># memory info</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Using-proc-to-gather-information\"><a href=\"#Using-proc-to-gather-information\" class=\"headerlink\" title=\"Using /proc to gather information\"></a>Using /proc to gather information</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /proc/4295/environ will display all the environment variables</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Scheduling-with-cron\"><a href=\"#Scheduling-with-cron\" class=\"headerlink\" title=\"Scheduling with cron\"></a>Scheduling with cron</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">02 * * * * /home/slynux/test.sh <span class=\"comment\"># execute test.sh at 2nd mintues of all hours</span></span><br><span class=\"line\">00 5,6,7 * * /home/slynux/test.sh <span class=\"comment\">#  fifth, sixth, and seventh hours</span></span><br><span class=\"line\">00 */12 * * 0 /home/slynux/script.sh  <span class=\"comment\"># every hour on Sundays</span></span><br><span class=\"line\">00 02 * * * /sbin/shutdown -h <span class=\"comment\"># 2 A.M. everyday</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -e option to crontab to start editing the cron table</span></span><br><span class=\"line\">crontab -e</span><br><span class=\"line\"></span><br><span class=\"line\">crontab&lt;&lt;EOF</span><br><span class=\"line\">02 * * * * /home/slynux/script.sh</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Minute (0 - 59)   5,10 or */5</span></span><br><span class=\"line\"><span class=\"comment\"># Hour (0 - 23)</span></span><br><span class=\"line\"><span class=\"comment\"># Day (1 - 31)</span></span><br><span class=\"line\"><span class=\"comment\"># Month (1 - 12)</span></span><br><span class=\"line\"><span class=\"comment\"># Weekday (0 - 6)</span></span><br><span class=\"line\"><span class=\"comment\"># COMMAND (the script</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Specifying environment variables</span></span><br><span class=\"line\">crontab&lt;&lt;EOF</span><br><span class=\"line\">http_proxy=http://192.168.0.3:3128</span><br><span class=\"line\">00 * * * * /home/slynux/download.sh</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Running commands at system start up/boot</span></span><br><span class=\"line\">@reboot <span class=\"built_in\">command</span></span><br><span class=\"line\"></span><br><span class=\"line\">crontab -l <span class=\"comment\"># list existed job</span></span><br><span class=\"line\">crontab -r <span class=\"comment\"># remove cron table for current user</span></span><br><span class=\"line\">crontab -u ryan -r <span class=\"comment\"># need root</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Writing-and-reading-the-MySQL-database-from-bash\"><a href=\"#Writing-and-reading-the-MySQL-database-from-bash\" class=\"headerlink\" title=\"Writing and reading the MySQL database from bash\"></a>Writing and reading the MySQL database from bash</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"User-administration-scripts\"><a href=\"#User-administration-scripts\" class=\"headerlink\" title=\"User administration scripts\"></a>User administration scripts</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd USER -p PASSWORD</span><br><span class=\"line\">passwd USER</span><br><span class=\"line\">addgroup USER GROUP</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Bulk-image-resizing-and-format-conversion\"><a href=\"#Bulk-image-resizing-and-format-conversion\" class=\"headerlink\" title=\"Bulk image resizing and format conversion\"></a>Bulk image resizing and format conversion</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Taking-screenshots-from-the-terminal\"><a href=\"#Taking-screenshots-from-the-terminal\" class=\"headerlink\" title=\"Taking screenshots from the terminal\"></a>Taking screenshots from the terminal</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Managing-multiple-terminals-from-one\"><a href=\"#Managing-multiple-terminals-from-one\" class=\"headerlink\" title=\"Managing multiple terminals from one\"></a>Managing multiple terminals from one</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># using a utility called GNU screen</span></span><br></pre></td></tr></table></figure>\n\n<p>– END –</p>"},{"title":"PostgreSQL 10 Windows 使用记录","date":"2018-02-22T13:48:57.000Z","_content":"PostgreSQL 10 Windows 使用记录\n<!--more-->\n\n# Windows 基本指令\n- cd /d\n- dir\n\n\n# 问题\n\n## 重置 postgres 用户的密码\n1. 打开 H:\\PostgreSQL\\10\\data\\pg_hba.conf\n2. 将下面的 md5 都改成 trust，保存。\n```\n# IPv4 local connections:\nhost    all             all             127.0.0.1/32            md5\n# IPv6 local connections:\nhost    all             all             ::1/128                 md5\n# Allow replication connections from localhost, by a user with the\n# replication privilege.\nhost    replication     all             127.0.0.1/32            md5\nhost    replication     all             ::1/128                 md5\n```\n3. 打开 cmd\n```\npsql -U postgres\n```\n4. 无需密码，直接进入，然后\n```\nalter user postgres with password '<password>';\n```\n5. 修改好密码后，退出\n```\n\\q\n```\n6. 将 pg_hba.conf 的 trust 改回 md5 即可。\n\n## SQuirrel 连接数据库\n- jdbc:postgresql://localhost:5432/dk\n- postgres\n- xxxxx\n\n## Create database and user\n```\npsql -U postgres\n用户 postgres 的口令：\n\npostgres=# create database logocessor\nCREATE DATABASE\n\npostgres=# CREATE USER logocessor WITH PASSWORD 'logocessor';\nCREATE ROLE\n\npostgres=# GRANT ALL PRIVILEGES ON database logocessor TO logocessor;\nGRANT\n```\n\n## SQL 指令\n\n### Create table\n```\nCREATE TABLE account(\n\tuser_id serial PRIMARY KEY,\n\tuser_name VARCHAR (50) UNIQUE NOT NULL,\n\tpassword VARCHAR (50) NOT NULL,\n\temail VARCHAR (355) UNIQUE NOT NULL,\n\tcreated_on TIMESTAMP NOT NULL,\n\tlast_login TIMESTAMP\n\trole_id integer NOT NULL,\n);\n```\n\n### Insert\n```\nINSERT INTO table(column1, column2, …)\nVALUES\n (value1, value2, …);\n```\n\n\n------------------------\n\n\ndrop table dream;\n\nCREATE TABLE dream(\n\tdream_id serial PRIMARY KEY,\n\ttitle VARCHAR (100),\n\tcontent VARCHAR (50000) NOT NULL,\n\tuser_id integer NOT NULL\n);\n\nSELECT * FROM dream;\n\nINSERT INTO dream (content, user_id)\nVALUES\n ('Happy New Year everyone and welcome to the first Retro Flame blog post of the year. I’m back again with my annual ‘Dream Year’ post. Each year at this time, I look ahead  and ask myself what my IDEAL year would look like (absolutely zero limits) and then write it all down here on the blog. I started doing this in 2016 and as soon as I saw the difference it made on the way I approached a year, I promised I would do it every year. You also seem to really like it too, so here I am today with my Dream 2018 version.',1);\n ","source":"_posts/PostgreSQL-10-Windows-使用记录.md","raw":"---\ntitle: PostgreSQL 10 Windows 使用记录\ndate: 2018-02-22 21:48:57\ncategories: 使用记录\ntags: [PostgreSQL, 10, Windows, 使用记录]\n---\nPostgreSQL 10 Windows 使用记录\n<!--more-->\n\n# Windows 基本指令\n- cd /d\n- dir\n\n\n# 问题\n\n## 重置 postgres 用户的密码\n1. 打开 H:\\PostgreSQL\\10\\data\\pg_hba.conf\n2. 将下面的 md5 都改成 trust，保存。\n```\n# IPv4 local connections:\nhost    all             all             127.0.0.1/32            md5\n# IPv6 local connections:\nhost    all             all             ::1/128                 md5\n# Allow replication connections from localhost, by a user with the\n# replication privilege.\nhost    replication     all             127.0.0.1/32            md5\nhost    replication     all             ::1/128                 md5\n```\n3. 打开 cmd\n```\npsql -U postgres\n```\n4. 无需密码，直接进入，然后\n```\nalter user postgres with password '<password>';\n```\n5. 修改好密码后，退出\n```\n\\q\n```\n6. 将 pg_hba.conf 的 trust 改回 md5 即可。\n\n## SQuirrel 连接数据库\n- jdbc:postgresql://localhost:5432/dk\n- postgres\n- xxxxx\n\n## Create database and user\n```\npsql -U postgres\n用户 postgres 的口令：\n\npostgres=# create database logocessor\nCREATE DATABASE\n\npostgres=# CREATE USER logocessor WITH PASSWORD 'logocessor';\nCREATE ROLE\n\npostgres=# GRANT ALL PRIVILEGES ON database logocessor TO logocessor;\nGRANT\n```\n\n## SQL 指令\n\n### Create table\n```\nCREATE TABLE account(\n\tuser_id serial PRIMARY KEY,\n\tuser_name VARCHAR (50) UNIQUE NOT NULL,\n\tpassword VARCHAR (50) NOT NULL,\n\temail VARCHAR (355) UNIQUE NOT NULL,\n\tcreated_on TIMESTAMP NOT NULL,\n\tlast_login TIMESTAMP\n\trole_id integer NOT NULL,\n);\n```\n\n### Insert\n```\nINSERT INTO table(column1, column2, …)\nVALUES\n (value1, value2, …);\n```\n\n\n------------------------\n\n\ndrop table dream;\n\nCREATE TABLE dream(\n\tdream_id serial PRIMARY KEY,\n\ttitle VARCHAR (100),\n\tcontent VARCHAR (50000) NOT NULL,\n\tuser_id integer NOT NULL\n);\n\nSELECT * FROM dream;\n\nINSERT INTO dream (content, user_id)\nVALUES\n ('Happy New Year everyone and welcome to the first Retro Flame blog post of the year. I’m back again with my annual ‘Dream Year’ post. Each year at this time, I look ahead  and ask myself what my IDEAL year would look like (absolutely zero limits) and then write it all down here on the blog. I started doing this in 2016 and as soon as I saw the difference it made on the way I approached a year, I promised I would do it every year. You also seem to really like it too, so here I am today with my Dream 2018 version.',1);\n ","slug":"PostgreSQL-10-Windows-使用记录","published":1,"updated":"2020-04-30T09:23:19.531Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedid000xsd5tk21hyu6p","content":"<p>PostgreSQL 10 Windows 使用记录</p>\n<a id=\"more\"></a>\n\n<h1 id=\"Windows-基本指令\"><a href=\"#Windows-基本指令\" class=\"headerlink\" title=\"Windows 基本指令\"></a>Windows 基本指令</h1><ul>\n<li>cd /d</li>\n<li>dir</li>\n</ul>\n<h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><h2 id=\"重置-postgres-用户的密码\"><a href=\"#重置-postgres-用户的密码\" class=\"headerlink\" title=\"重置 postgres 用户的密码\"></a>重置 postgres 用户的密码</h2><ol>\n<li><p>打开 H:\\PostgreSQL\\10\\data\\pg_hba.conf</p>\n</li>\n<li><p>将下面的 md5 都改成 trust，保存。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># IPv4 local connections:</span><br><span class=\"line\">host    all             all             127.0.0.1/32            md5</span><br><span class=\"line\"># IPv6 local connections:</span><br><span class=\"line\">host    all             all             ::1/128                 md5</span><br><span class=\"line\"># Allow replication connections from localhost, by a user with the</span><br><span class=\"line\"># replication privilege.</span><br><span class=\"line\">host    replication     all             127.0.0.1/32            md5</span><br><span class=\"line\">host    replication     all             ::1/128                 md5</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开 cmd</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">psql -U postgres</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>无需密码，直接进入，然后</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alter user postgres with password &apos;&lt;password&gt;&apos;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改好密码后，退出</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\q</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将 pg_hba.conf 的 trust 改回 md5 即可。</p>\n</li>\n</ol>\n<h2 id=\"SQuirrel-连接数据库\"><a href=\"#SQuirrel-连接数据库\" class=\"headerlink\" title=\"SQuirrel 连接数据库\"></a>SQuirrel 连接数据库</h2><ul>\n<li>jdbc:postgresql://localhost:5432/dk</li>\n<li>postgres</li>\n<li>xxxxx</li>\n</ul>\n<h2 id=\"Create-database-and-user\"><a href=\"#Create-database-and-user\" class=\"headerlink\" title=\"Create database and user\"></a>Create database and user</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">psql -U postgres</span><br><span class=\"line\">用户 postgres 的口令：</span><br><span class=\"line\"></span><br><span class=\"line\">postgres=# create database logocessor</span><br><span class=\"line\">CREATE DATABASE</span><br><span class=\"line\"></span><br><span class=\"line\">postgres=# CREATE USER logocessor WITH PASSWORD &apos;logocessor&apos;;</span><br><span class=\"line\">CREATE ROLE</span><br><span class=\"line\"></span><br><span class=\"line\">postgres=# GRANT ALL PRIVILEGES ON database logocessor TO logocessor;</span><br><span class=\"line\">GRANT</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SQL-指令\"><a href=\"#SQL-指令\" class=\"headerlink\" title=\"SQL 指令\"></a>SQL 指令</h2><h3 id=\"Create-table\"><a href=\"#Create-table\" class=\"headerlink\" title=\"Create table\"></a>Create table</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE account(</span><br><span class=\"line\">\tuser_id serial PRIMARY KEY,</span><br><span class=\"line\">\tuser_name VARCHAR (50) UNIQUE NOT NULL,</span><br><span class=\"line\">\tpassword VARCHAR (50) NOT NULL,</span><br><span class=\"line\">\temail VARCHAR (355) UNIQUE NOT NULL,</span><br><span class=\"line\">\tcreated_on TIMESTAMP NOT NULL,</span><br><span class=\"line\">\tlast_login TIMESTAMP</span><br><span class=\"line\">\trole_id integer NOT NULL,</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Insert\"><a href=\"#Insert\" class=\"headerlink\" title=\"Insert\"></a>Insert</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSERT INTO table(column1, column2, …)</span><br><span class=\"line\">VALUES</span><br><span class=\"line\"> (value1, value2, …);</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>drop table dream;</p>\n<p>CREATE TABLE dream(<br>    dream_id serial PRIMARY KEY,<br>    title VARCHAR (100),<br>    content VARCHAR (50000) NOT NULL,<br>    user_id integer NOT NULL<br>);</p>\n<p>SELECT * FROM dream;</p>\n<p>INSERT INTO dream (content, user_id)<br>VALUES<br> (‘Happy New Year everyone and welcome to the first Retro Flame blog post of the year. I’m back again with my annual ‘Dream Year’ post. Each year at this time, I look ahead  and ask myself what my IDEAL year would look like (absolutely zero limits) and then write it all down here on the blog. I started doing this in 2016 and as soon as I saw the difference it made on the way I approached a year, I promised I would do it every year. You also seem to really like it too, so here I am today with my Dream 2018 version.’,1);</p>\n","site":{"data":{}},"excerpt":"<p>PostgreSQL 10 Windows 使用记录</p>","more":"<h1 id=\"Windows-基本指令\"><a href=\"#Windows-基本指令\" class=\"headerlink\" title=\"Windows 基本指令\"></a>Windows 基本指令</h1><ul>\n<li>cd /d</li>\n<li>dir</li>\n</ul>\n<h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><h2 id=\"重置-postgres-用户的密码\"><a href=\"#重置-postgres-用户的密码\" class=\"headerlink\" title=\"重置 postgres 用户的密码\"></a>重置 postgres 用户的密码</h2><ol>\n<li><p>打开 H:\\PostgreSQL\\10\\data\\pg_hba.conf</p>\n</li>\n<li><p>将下面的 md5 都改成 trust，保存。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># IPv4 local connections:</span><br><span class=\"line\">host    all             all             127.0.0.1/32            md5</span><br><span class=\"line\"># IPv6 local connections:</span><br><span class=\"line\">host    all             all             ::1/128                 md5</span><br><span class=\"line\"># Allow replication connections from localhost, by a user with the</span><br><span class=\"line\"># replication privilege.</span><br><span class=\"line\">host    replication     all             127.0.0.1/32            md5</span><br><span class=\"line\">host    replication     all             ::1/128                 md5</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开 cmd</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">psql -U postgres</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>无需密码，直接进入，然后</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alter user postgres with password &apos;&lt;password&gt;&apos;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改好密码后，退出</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\q</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将 pg_hba.conf 的 trust 改回 md5 即可。</p>\n</li>\n</ol>\n<h2 id=\"SQuirrel-连接数据库\"><a href=\"#SQuirrel-连接数据库\" class=\"headerlink\" title=\"SQuirrel 连接数据库\"></a>SQuirrel 连接数据库</h2><ul>\n<li>jdbc:postgresql://localhost:5432/dk</li>\n<li>postgres</li>\n<li>xxxxx</li>\n</ul>\n<h2 id=\"Create-database-and-user\"><a href=\"#Create-database-and-user\" class=\"headerlink\" title=\"Create database and user\"></a>Create database and user</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">psql -U postgres</span><br><span class=\"line\">用户 postgres 的口令：</span><br><span class=\"line\"></span><br><span class=\"line\">postgres=# create database logocessor</span><br><span class=\"line\">CREATE DATABASE</span><br><span class=\"line\"></span><br><span class=\"line\">postgres=# CREATE USER logocessor WITH PASSWORD &apos;logocessor&apos;;</span><br><span class=\"line\">CREATE ROLE</span><br><span class=\"line\"></span><br><span class=\"line\">postgres=# GRANT ALL PRIVILEGES ON database logocessor TO logocessor;</span><br><span class=\"line\">GRANT</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SQL-指令\"><a href=\"#SQL-指令\" class=\"headerlink\" title=\"SQL 指令\"></a>SQL 指令</h2><h3 id=\"Create-table\"><a href=\"#Create-table\" class=\"headerlink\" title=\"Create table\"></a>Create table</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE account(</span><br><span class=\"line\">\tuser_id serial PRIMARY KEY,</span><br><span class=\"line\">\tuser_name VARCHAR (50) UNIQUE NOT NULL,</span><br><span class=\"line\">\tpassword VARCHAR (50) NOT NULL,</span><br><span class=\"line\">\temail VARCHAR (355) UNIQUE NOT NULL,</span><br><span class=\"line\">\tcreated_on TIMESTAMP NOT NULL,</span><br><span class=\"line\">\tlast_login TIMESTAMP</span><br><span class=\"line\">\trole_id integer NOT NULL,</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Insert\"><a href=\"#Insert\" class=\"headerlink\" title=\"Insert\"></a>Insert</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSERT INTO table(column1, column2, …)</span><br><span class=\"line\">VALUES</span><br><span class=\"line\"> (value1, value2, …);</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>drop table dream;</p>\n<p>CREATE TABLE dream(<br>    dream_id serial PRIMARY KEY,<br>    title VARCHAR (100),<br>    content VARCHAR (50000) NOT NULL,<br>    user_id integer NOT NULL<br>);</p>\n<p>SELECT * FROM dream;</p>\n<p>INSERT INTO dream (content, user_id)<br>VALUES<br> (‘Happy New Year everyone and welcome to the first Retro Flame blog post of the year. I’m back again with my annual ‘Dream Year’ post. Each year at this time, I look ahead  and ask myself what my IDEAL year would look like (absolutely zero limits) and then write it all down here on the blog. I started doing this in 2016 and as soon as I saw the difference it made on the way I approached a year, I promised I would do it every year. You also seem to really like it too, so here I am today with my Dream 2018 version.’,1);</p>"},{"title":"Selenium - Simple URL Ping","date":"2018-02-12T14:18:35.000Z","_content":"\nUse Selenium to create a program to\n- open chrome browser\n- open gmail.com\n- login\n\n<!--more-->\n\nDownload first:\n1. [selenium-server-standalone-3.9.1.jar](http://www.seleniumhq.org/download/)\n2. [chromedriver_win32](https://chromedriver.storage.googleapis.com/index.html?path=2.35/)\n\n# UrlTestDemo\n```\npackage main;\n\nimport java.util.concurrent.TimeUnit;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.chrome.ChromeDriver;\n\npublic class UrlTestDemo {\n\n\tstatic WebDriver driver;\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\tString chromedriver = \"D:\\\\workspace\\\\RyanTool\\\\lib\\\\chromedriver.exe\";\n\t\tString url = \"https://accounts.google.com/signin/v2/identifier?service=mail&passive=true&rm=false&continue=https%3A%2F%2Fmail.google.com%2Fmail%2F&ss=1&scc=1&ltmpl=default&ltmplcache=2&emr=1&osid=1&flowName=GlifWebSignIn&flowEntry=ServiceLogin\";\n\t\tString userId = \"xxx\";\n\t\tString password = \"xxx\";\n\t\tString userIdXpath = \"//*[@id=\\\"identifierId\\\"]\";\n\t\tString passwordXpath = \"//*[@id=\\\"password\\\"]/div[1]/div/div[1]/input\";\n\t\tString idNextBtnXpath = \"//*[@id=\\\"identifierNext\\\"]/content/span\";\n\t\tString pwdNextBtnXpath = \"//*[@id=\\\"passwordNext\\\"]/content/span\";\n\t\t\n\t\tSystem.setProperty(\"webdriver.chrome.driver\",chromedriver);\n\t\tdriver = new ChromeDriver();\n\n\t\topenUrl(url);\n\t\tinput(userIdXpath, userId);\n\t\tclick(idNextBtnXpath);\n\t\tinput(passwordXpath, password);\n\t\tclick(pwdNextBtnXpath);\n\t\tsleep(4);\n\t\t\n\t\tdriver.close();\n\t}\n\n\tprivate static void sleep(int i) {\n\t\ttry {\n\t\t\tTimeUnit.SECONDS.sleep(i);\n\t\t} catch (InterruptedException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\tprivate static void click(String btnXpath) {\n\t\tdriver.findElement(By.xpath(btnXpath)).click();\n\t\tsleep(1);\n\t}\n\n\tprivate static void input(String xpath, String content) {\n\t\tdriver.findElement(By.xpath(xpath)).sendKeys(content);\n\t\tsleep(1);\n\t}\n\n\tprivate static void openUrl(String url) {\n\t\tdriver.get(url);\n\t\tsleep(3);\n\t}\n\n}\n```","source":"_posts/Selenium-Simple-URL-Ping.md","raw":"---\ntitle: Selenium - Simple URL Ping\ndate: 2018-02-12 22:18:35\ncategories: Selenium\ntags: [Selenium, Ping, URL, Login]\n---\n\nUse Selenium to create a program to\n- open chrome browser\n- open gmail.com\n- login\n\n<!--more-->\n\nDownload first:\n1. [selenium-server-standalone-3.9.1.jar](http://www.seleniumhq.org/download/)\n2. [chromedriver_win32](https://chromedriver.storage.googleapis.com/index.html?path=2.35/)\n\n# UrlTestDemo\n```\npackage main;\n\nimport java.util.concurrent.TimeUnit;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.chrome.ChromeDriver;\n\npublic class UrlTestDemo {\n\n\tstatic WebDriver driver;\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\tString chromedriver = \"D:\\\\workspace\\\\RyanTool\\\\lib\\\\chromedriver.exe\";\n\t\tString url = \"https://accounts.google.com/signin/v2/identifier?service=mail&passive=true&rm=false&continue=https%3A%2F%2Fmail.google.com%2Fmail%2F&ss=1&scc=1&ltmpl=default&ltmplcache=2&emr=1&osid=1&flowName=GlifWebSignIn&flowEntry=ServiceLogin\";\n\t\tString userId = \"xxx\";\n\t\tString password = \"xxx\";\n\t\tString userIdXpath = \"//*[@id=\\\"identifierId\\\"]\";\n\t\tString passwordXpath = \"//*[@id=\\\"password\\\"]/div[1]/div/div[1]/input\";\n\t\tString idNextBtnXpath = \"//*[@id=\\\"identifierNext\\\"]/content/span\";\n\t\tString pwdNextBtnXpath = \"//*[@id=\\\"passwordNext\\\"]/content/span\";\n\t\t\n\t\tSystem.setProperty(\"webdriver.chrome.driver\",chromedriver);\n\t\tdriver = new ChromeDriver();\n\n\t\topenUrl(url);\n\t\tinput(userIdXpath, userId);\n\t\tclick(idNextBtnXpath);\n\t\tinput(passwordXpath, password);\n\t\tclick(pwdNextBtnXpath);\n\t\tsleep(4);\n\t\t\n\t\tdriver.close();\n\t}\n\n\tprivate static void sleep(int i) {\n\t\ttry {\n\t\t\tTimeUnit.SECONDS.sleep(i);\n\t\t} catch (InterruptedException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\tprivate static void click(String btnXpath) {\n\t\tdriver.findElement(By.xpath(btnXpath)).click();\n\t\tsleep(1);\n\t}\n\n\tprivate static void input(String xpath, String content) {\n\t\tdriver.findElement(By.xpath(xpath)).sendKeys(content);\n\t\tsleep(1);\n\t}\n\n\tprivate static void openUrl(String url) {\n\t\tdriver.get(url);\n\t\tsleep(3);\n\t}\n\n}\n```","slug":"Selenium-Simple-URL-Ping","published":1,"updated":"2020-04-30T09:23:19.531Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedid000ysd5tvpt07yew","content":"<p>Use Selenium to create a program to</p>\n<ul>\n<li>open chrome browser</li>\n<li>open gmail.com</li>\n<li>login</li>\n</ul>\n<a id=\"more\"></a>\n\n<p>Download first:</p>\n<ol>\n<li><a href=\"http://www.seleniumhq.org/download/\" target=\"_blank\" rel=\"noopener\">selenium-server-standalone-3.9.1.jar</a></li>\n<li><a href=\"https://chromedriver.storage.googleapis.com/index.html?path=2.35/\" target=\"_blank\" rel=\"noopener\">chromedriver_win32</a></li>\n</ol>\n<h1 id=\"UrlTestDemo\"><a href=\"#UrlTestDemo\" class=\"headerlink\" title=\"UrlTestDemo\"></a>UrlTestDemo</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.concurrent.TimeUnit;</span><br><span class=\"line\"></span><br><span class=\"line\">import org.openqa.selenium.By;</span><br><span class=\"line\">import org.openqa.selenium.WebDriver;</span><br><span class=\"line\">import org.openqa.selenium.chrome.ChromeDriver;</span><br><span class=\"line\"></span><br><span class=\"line\">public class UrlTestDemo &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstatic WebDriver driver;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tString chromedriver = &quot;D:\\\\workspace\\\\RyanTool\\\\lib\\\\chromedriver.exe&quot;;</span><br><span class=\"line\">\t\tString url = &quot;https://accounts.google.com/signin/v2/identifier?service=mail&amp;passive=true&amp;rm=false&amp;continue=https%3A%2F%2Fmail.google.com%2Fmail%2F&amp;ss=1&amp;scc=1&amp;ltmpl=default&amp;ltmplcache=2&amp;emr=1&amp;osid=1&amp;flowName=GlifWebSignIn&amp;flowEntry=ServiceLogin&quot;;</span><br><span class=\"line\">\t\tString userId = &quot;xxx&quot;;</span><br><span class=\"line\">\t\tString password = &quot;xxx&quot;;</span><br><span class=\"line\">\t\tString userIdXpath = &quot;//*[@id=\\&quot;identifierId\\&quot;]&quot;;</span><br><span class=\"line\">\t\tString passwordXpath = &quot;//*[@id=\\&quot;password\\&quot;]/div[1]/div/div[1]/input&quot;;</span><br><span class=\"line\">\t\tString idNextBtnXpath = &quot;//*[@id=\\&quot;identifierNext\\&quot;]/content/span&quot;;</span><br><span class=\"line\">\t\tString pwdNextBtnXpath = &quot;//*[@id=\\&quot;passwordNext\\&quot;]/content/span&quot;;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.setProperty(&quot;webdriver.chrome.driver&quot;,chromedriver);</span><br><span class=\"line\">\t\tdriver = new ChromeDriver();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\topenUrl(url);</span><br><span class=\"line\">\t\tinput(userIdXpath, userId);</span><br><span class=\"line\">\t\tclick(idNextBtnXpath);</span><br><span class=\"line\">\t\tinput(passwordXpath, password);</span><br><span class=\"line\">\t\tclick(pwdNextBtnXpath);</span><br><span class=\"line\">\t\tsleep(4);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tdriver.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void sleep(int i) &#123;</span><br><span class=\"line\">\t\ttry &#123;</span><br><span class=\"line\">\t\t\tTimeUnit.SECONDS.sleep(i);</span><br><span class=\"line\">\t\t&#125; catch (InterruptedException e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void click(String btnXpath) &#123;</span><br><span class=\"line\">\t\tdriver.findElement(By.xpath(btnXpath)).click();</span><br><span class=\"line\">\t\tsleep(1);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void input(String xpath, String content) &#123;</span><br><span class=\"line\">\t\tdriver.findElement(By.xpath(xpath)).sendKeys(content);</span><br><span class=\"line\">\t\tsleep(1);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void openUrl(String url) &#123;</span><br><span class=\"line\">\t\tdriver.get(url);</span><br><span class=\"line\">\t\tsleep(3);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>Use Selenium to create a program to</p>\n<ul>\n<li>open chrome browser</li>\n<li>open gmail.com</li>\n<li>login</li>\n</ul>","more":"<p>Download first:</p>\n<ol>\n<li><a href=\"http://www.seleniumhq.org/download/\" target=\"_blank\" rel=\"noopener\">selenium-server-standalone-3.9.1.jar</a></li>\n<li><a href=\"https://chromedriver.storage.googleapis.com/index.html?path=2.35/\" target=\"_blank\" rel=\"noopener\">chromedriver_win32</a></li>\n</ol>\n<h1 id=\"UrlTestDemo\"><a href=\"#UrlTestDemo\" class=\"headerlink\" title=\"UrlTestDemo\"></a>UrlTestDemo</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.concurrent.TimeUnit;</span><br><span class=\"line\"></span><br><span class=\"line\">import org.openqa.selenium.By;</span><br><span class=\"line\">import org.openqa.selenium.WebDriver;</span><br><span class=\"line\">import org.openqa.selenium.chrome.ChromeDriver;</span><br><span class=\"line\"></span><br><span class=\"line\">public class UrlTestDemo &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstatic WebDriver driver;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tString chromedriver = &quot;D:\\\\workspace\\\\RyanTool\\\\lib\\\\chromedriver.exe&quot;;</span><br><span class=\"line\">\t\tString url = &quot;https://accounts.google.com/signin/v2/identifier?service=mail&amp;passive=true&amp;rm=false&amp;continue=https%3A%2F%2Fmail.google.com%2Fmail%2F&amp;ss=1&amp;scc=1&amp;ltmpl=default&amp;ltmplcache=2&amp;emr=1&amp;osid=1&amp;flowName=GlifWebSignIn&amp;flowEntry=ServiceLogin&quot;;</span><br><span class=\"line\">\t\tString userId = &quot;xxx&quot;;</span><br><span class=\"line\">\t\tString password = &quot;xxx&quot;;</span><br><span class=\"line\">\t\tString userIdXpath = &quot;//*[@id=\\&quot;identifierId\\&quot;]&quot;;</span><br><span class=\"line\">\t\tString passwordXpath = &quot;//*[@id=\\&quot;password\\&quot;]/div[1]/div/div[1]/input&quot;;</span><br><span class=\"line\">\t\tString idNextBtnXpath = &quot;//*[@id=\\&quot;identifierNext\\&quot;]/content/span&quot;;</span><br><span class=\"line\">\t\tString pwdNextBtnXpath = &quot;//*[@id=\\&quot;passwordNext\\&quot;]/content/span&quot;;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.setProperty(&quot;webdriver.chrome.driver&quot;,chromedriver);</span><br><span class=\"line\">\t\tdriver = new ChromeDriver();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\topenUrl(url);</span><br><span class=\"line\">\t\tinput(userIdXpath, userId);</span><br><span class=\"line\">\t\tclick(idNextBtnXpath);</span><br><span class=\"line\">\t\tinput(passwordXpath, password);</span><br><span class=\"line\">\t\tclick(pwdNextBtnXpath);</span><br><span class=\"line\">\t\tsleep(4);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tdriver.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void sleep(int i) &#123;</span><br><span class=\"line\">\t\ttry &#123;</span><br><span class=\"line\">\t\t\tTimeUnit.SECONDS.sleep(i);</span><br><span class=\"line\">\t\t&#125; catch (InterruptedException e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void click(String btnXpath) &#123;</span><br><span class=\"line\">\t\tdriver.findElement(By.xpath(btnXpath)).click();</span><br><span class=\"line\">\t\tsleep(1);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void input(String xpath, String content) &#123;</span><br><span class=\"line\">\t\tdriver.findElement(By.xpath(xpath)).sendKeys(content);</span><br><span class=\"line\">\t\tsleep(1);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate static void openUrl(String url) &#123;</span><br><span class=\"line\">\t\tdriver.get(url);</span><br><span class=\"line\">\t\tsleep(3);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Servlet - Generate Random Image","date":"2018-08-12T03:37:17.000Z","_content":"\n# 用 Servlet 生成随机的验证码图片。\n\n1. 创建 image对象和 graphic对象\n2. 设置背景颜色\n3. 设置边框\n4. 画随机干扰线\n5. 写入随机颠倒数字\n\n代码如下：\n\n<!--more-->\n\n```\npackage io.demo.response;\n\nimport java.awt.Color;\nimport java.awt.Font;\nimport java.awt.Graphics;\nimport java.awt.Graphics2D;\nimport java.awt.image.BufferedImage;\nimport java.io.IOException;\nimport java.util.Random;\n\nimport javax.imageio.ImageIO;\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\n@WebServlet(\"/RandomImage\")\npublic class RandomImage extends HttpServlet {\n\tprivate static final long serialVersionUID = 1L;\n\t\n\tpublic static final int WIDTH = 120;\n\tpublic static final int HEIGHT = 30;\n       \n\tprotected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\t\n\t\tBufferedImage image = new BufferedImage(WIDTH, HEIGHT, BufferedImage.TYPE_INT_RGB);\n\t\t\n\t\tGraphics2D g = (Graphics2D) image.getGraphics();\n\t\t\n\t\tsetBackground(g);\n\t\tsetBorder(g);\n\t\tdrawRandomLine(g);\n\t\tdrawRandomNumber(g);\n\t\t\n\t\t// pass image to browser\n\t\tresponse.setContentType(\"image/jpeg\");\n\t\tImageIO.write(image, \"jpg\", response.getOutputStream());\n\t\t\n\t}\n\n\tprivate void drawRandomNumber(Graphics2D g) {\n\t\tg.setColor(Color.BLUE);\n\t\tg.setFont(new Font(\"\", Font.BOLD, 20));\n\t\t\n\t\tfor (int i = 0; i < 5; i++) {\n\t\t\tint degree = new Random().nextInt()%30; \t// can be +-\n\t\t\tg.rotate(degree*Math.PI/180, 24*i, HEIGHT);\n\t\t\tg.drawString(String.valueOf(new Random().nextInt(10)), 24*i+7, HEIGHT-7);\n\t\t\tg.rotate(-degree*Math.PI/180, 24*i, HEIGHT);\n\t\t}\n\t}\n\n\tprivate void setBorder(Graphics g) {\n\t\tg.setColor(Color.BLACK);\n\t\tg.drawRect(1, 1, WIDTH-2, HEIGHT-2);\n\t}\n\n\tprivate void setBackground(Graphics g) {\n\t\tg.setColor(Color.ORANGE);\n\t\tg.fillRect(0, 0, WIDTH, HEIGHT);\n\t}\n\n\tprivate void drawRandomLine(Graphics g) {\n\t\tg.setColor(Color.GRAY);\n\t\tfor (int i = 0; i < 5; i++) {\n\t\t\tint x1 = new Random().nextInt(WIDTH);\n\t\t\tint y1 = new Random().nextInt(HEIGHT);\n\t\t\tint x2 = new Random().nextInt(WIDTH);\n\t\t\tint y2 = new Random().nextInt(HEIGHT);\n\t\t\tg.drawLine(x1, y1, x2, y2);\n\t\t}\n\t}\n\n\tprotected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\tdoGet(request, response);\n\t}\n\n}\n\n```\n\n# 调用的 html page\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<title>Register Page</title>\n\n<script type=\"text/javascript\">\n\tfunction changeImage(img){\n\t\timg.src = img.src + \"?\" + new Date();\n\t}\n</script>\n\n</head>\n<body>\n\n\t<form action=\"\">\n\t\tUsername: <input type=\"text\" name=\"username\"><br/>\n\t\tPassword: <input type=\"password\" name=\"password\"><br/>\n\t\tVerification Code: <input type=\"text\" name=\"checkcode\"><br/>\n\t\t<img alt=\"\" src=\"/javaweb-heima/RandomImage\" onclick=\"changeImage(this)\">\n\t</form>\n\n</body>\n</html>\n```\n\n# 效果图\n![random-image](/images/random-image.jpeg)","source":"_posts/Servlet-Generate-Random-Image.md","raw":"---\ntitle: Servlet - Generate Random Image\ndate: 2018-08-12 11:37:17\ncategories: JavaWeb\ntags: [Servlet, image, random]\n---\n\n# 用 Servlet 生成随机的验证码图片。\n\n1. 创建 image对象和 graphic对象\n2. 设置背景颜色\n3. 设置边框\n4. 画随机干扰线\n5. 写入随机颠倒数字\n\n代码如下：\n\n<!--more-->\n\n```\npackage io.demo.response;\n\nimport java.awt.Color;\nimport java.awt.Font;\nimport java.awt.Graphics;\nimport java.awt.Graphics2D;\nimport java.awt.image.BufferedImage;\nimport java.io.IOException;\nimport java.util.Random;\n\nimport javax.imageio.ImageIO;\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\n@WebServlet(\"/RandomImage\")\npublic class RandomImage extends HttpServlet {\n\tprivate static final long serialVersionUID = 1L;\n\t\n\tpublic static final int WIDTH = 120;\n\tpublic static final int HEIGHT = 30;\n       \n\tprotected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\t\n\t\tBufferedImage image = new BufferedImage(WIDTH, HEIGHT, BufferedImage.TYPE_INT_RGB);\n\t\t\n\t\tGraphics2D g = (Graphics2D) image.getGraphics();\n\t\t\n\t\tsetBackground(g);\n\t\tsetBorder(g);\n\t\tdrawRandomLine(g);\n\t\tdrawRandomNumber(g);\n\t\t\n\t\t// pass image to browser\n\t\tresponse.setContentType(\"image/jpeg\");\n\t\tImageIO.write(image, \"jpg\", response.getOutputStream());\n\t\t\n\t}\n\n\tprivate void drawRandomNumber(Graphics2D g) {\n\t\tg.setColor(Color.BLUE);\n\t\tg.setFont(new Font(\"\", Font.BOLD, 20));\n\t\t\n\t\tfor (int i = 0; i < 5; i++) {\n\t\t\tint degree = new Random().nextInt()%30; \t// can be +-\n\t\t\tg.rotate(degree*Math.PI/180, 24*i, HEIGHT);\n\t\t\tg.drawString(String.valueOf(new Random().nextInt(10)), 24*i+7, HEIGHT-7);\n\t\t\tg.rotate(-degree*Math.PI/180, 24*i, HEIGHT);\n\t\t}\n\t}\n\n\tprivate void setBorder(Graphics g) {\n\t\tg.setColor(Color.BLACK);\n\t\tg.drawRect(1, 1, WIDTH-2, HEIGHT-2);\n\t}\n\n\tprivate void setBackground(Graphics g) {\n\t\tg.setColor(Color.ORANGE);\n\t\tg.fillRect(0, 0, WIDTH, HEIGHT);\n\t}\n\n\tprivate void drawRandomLine(Graphics g) {\n\t\tg.setColor(Color.GRAY);\n\t\tfor (int i = 0; i < 5; i++) {\n\t\t\tint x1 = new Random().nextInt(WIDTH);\n\t\t\tint y1 = new Random().nextInt(HEIGHT);\n\t\t\tint x2 = new Random().nextInt(WIDTH);\n\t\t\tint y2 = new Random().nextInt(HEIGHT);\n\t\t\tg.drawLine(x1, y1, x2, y2);\n\t\t}\n\t}\n\n\tprotected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\tdoGet(request, response);\n\t}\n\n}\n\n```\n\n# 调用的 html page\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<title>Register Page</title>\n\n<script type=\"text/javascript\">\n\tfunction changeImage(img){\n\t\timg.src = img.src + \"?\" + new Date();\n\t}\n</script>\n\n</head>\n<body>\n\n\t<form action=\"\">\n\t\tUsername: <input type=\"text\" name=\"username\"><br/>\n\t\tPassword: <input type=\"password\" name=\"password\"><br/>\n\t\tVerification Code: <input type=\"text\" name=\"checkcode\"><br/>\n\t\t<img alt=\"\" src=\"/javaweb-heima/RandomImage\" onclick=\"changeImage(this)\">\n\t</form>\n\n</body>\n</html>\n```\n\n# 效果图\n![random-image](/images/random-image.jpeg)","slug":"Servlet-Generate-Random-Image","published":1,"updated":"2020-04-30T09:23:19.531Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedie000zsd5t5kie283n","content":"<h1 id=\"用-Servlet-生成随机的验证码图片。\"><a href=\"#用-Servlet-生成随机的验证码图片。\" class=\"headerlink\" title=\"用 Servlet 生成随机的验证码图片。\"></a>用 Servlet 生成随机的验证码图片。</h1><ol>\n<li>创建 image对象和 graphic对象</li>\n<li>设置背景颜色</li>\n<li>设置边框</li>\n<li>画随机干扰线</li>\n<li>写入随机颠倒数字</li>\n</ol>\n<p>代码如下：</p>\n<a id=\"more\"></a>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package io.demo.response;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.awt.Color;</span><br><span class=\"line\">import java.awt.Font;</span><br><span class=\"line\">import java.awt.Graphics;</span><br><span class=\"line\">import java.awt.Graphics2D;</span><br><span class=\"line\">import java.awt.image.BufferedImage;</span><br><span class=\"line\">import java.io.IOException;</span><br><span class=\"line\">import java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\">import javax.imageio.ImageIO;</span><br><span class=\"line\">import javax.servlet.ServletException;</span><br><span class=\"line\">import javax.servlet.annotation.WebServlet;</span><br><span class=\"line\">import javax.servlet.http.HttpServlet;</span><br><span class=\"line\">import javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\">import javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"></span><br><span class=\"line\">@WebServlet(&quot;/RandomImage&quot;)</span><br><span class=\"line\">public class RandomImage extends HttpServlet &#123;</span><br><span class=\"line\">\tprivate static final long serialVersionUID = 1L;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic static final int WIDTH = 120;</span><br><span class=\"line\">\tpublic static final int HEIGHT = 30;</span><br><span class=\"line\">       </span><br><span class=\"line\">\tprotected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tBufferedImage image = new BufferedImage(WIDTH, HEIGHT, BufferedImage.TYPE_INT_RGB);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tGraphics2D g = (Graphics2D) image.getGraphics();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tsetBackground(g);</span><br><span class=\"line\">\t\tsetBorder(g);</span><br><span class=\"line\">\t\tdrawRandomLine(g);</span><br><span class=\"line\">\t\tdrawRandomNumber(g);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t// pass image to browser</span><br><span class=\"line\">\t\tresponse.setContentType(&quot;image/jpeg&quot;);</span><br><span class=\"line\">\t\tImageIO.write(image, &quot;jpg&quot;, response.getOutputStream());</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void drawRandomNumber(Graphics2D g) &#123;</span><br><span class=\"line\">\t\tg.setColor(Color.BLUE);</span><br><span class=\"line\">\t\tg.setFont(new Font(&quot;&quot;, Font.BOLD, 20));</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tfor (int i = 0; i &lt; 5; i++) &#123;</span><br><span class=\"line\">\t\t\tint degree = new Random().nextInt()%30; \t// can be +-</span><br><span class=\"line\">\t\t\tg.rotate(degree*Math.PI/180, 24*i, HEIGHT);</span><br><span class=\"line\">\t\t\tg.drawString(String.valueOf(new Random().nextInt(10)), 24*i+7, HEIGHT-7);</span><br><span class=\"line\">\t\t\tg.rotate(-degree*Math.PI/180, 24*i, HEIGHT);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void setBorder(Graphics g) &#123;</span><br><span class=\"line\">\t\tg.setColor(Color.BLACK);</span><br><span class=\"line\">\t\tg.drawRect(1, 1, WIDTH-2, HEIGHT-2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void setBackground(Graphics g) &#123;</span><br><span class=\"line\">\t\tg.setColor(Color.ORANGE);</span><br><span class=\"line\">\t\tg.fillRect(0, 0, WIDTH, HEIGHT);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void drawRandomLine(Graphics g) &#123;</span><br><span class=\"line\">\t\tg.setColor(Color.GRAY);</span><br><span class=\"line\">\t\tfor (int i = 0; i &lt; 5; i++) &#123;</span><br><span class=\"line\">\t\t\tint x1 = new Random().nextInt(WIDTH);</span><br><span class=\"line\">\t\t\tint y1 = new Random().nextInt(HEIGHT);</span><br><span class=\"line\">\t\t\tint x2 = new Random().nextInt(WIDTH);</span><br><span class=\"line\">\t\t\tint y2 = new Random().nextInt(HEIGHT);</span><br><span class=\"line\">\t\t\tg.drawLine(x1, y1, x2, y2);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprotected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class=\"line\">\t\tdoGet(request, response);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"调用的-html-page\"><a href=\"#调用的-html-page\" class=\"headerlink\" title=\"调用的 html page\"></a>调用的 html page</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">&lt;title&gt;Register Page&lt;/title&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">\tfunction changeImage(img)&#123;</span><br><span class=\"line\">\t\timg.src = img.src + &quot;?&quot; + new Date();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;form action=&quot;&quot;&gt;</span><br><span class=\"line\">\t\tUsername: &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;br/&gt;</span><br><span class=\"line\">\t\tPassword: &lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;br/&gt;</span><br><span class=\"line\">\t\tVerification Code: &lt;input type=&quot;text&quot; name=&quot;checkcode&quot;&gt;&lt;br/&gt;</span><br><span class=\"line\">\t\t&lt;img alt=&quot;&quot; src=&quot;/javaweb-heima/RandomImage&quot; onclick=&quot;changeImage(this)&quot;&gt;</span><br><span class=\"line\">\t&lt;/form&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h1><p><img src=\"/images/random-image.jpeg\" alt=\"random-image\"></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"用-Servlet-生成随机的验证码图片。\"><a href=\"#用-Servlet-生成随机的验证码图片。\" class=\"headerlink\" title=\"用 Servlet 生成随机的验证码图片。\"></a>用 Servlet 生成随机的验证码图片。</h1><ol>\n<li>创建 image对象和 graphic对象</li>\n<li>设置背景颜色</li>\n<li>设置边框</li>\n<li>画随机干扰线</li>\n<li>写入随机颠倒数字</li>\n</ol>\n<p>代码如下：</p>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package io.demo.response;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.awt.Color;</span><br><span class=\"line\">import java.awt.Font;</span><br><span class=\"line\">import java.awt.Graphics;</span><br><span class=\"line\">import java.awt.Graphics2D;</span><br><span class=\"line\">import java.awt.image.BufferedImage;</span><br><span class=\"line\">import java.io.IOException;</span><br><span class=\"line\">import java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\">import javax.imageio.ImageIO;</span><br><span class=\"line\">import javax.servlet.ServletException;</span><br><span class=\"line\">import javax.servlet.annotation.WebServlet;</span><br><span class=\"line\">import javax.servlet.http.HttpServlet;</span><br><span class=\"line\">import javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\">import javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"></span><br><span class=\"line\">@WebServlet(&quot;/RandomImage&quot;)</span><br><span class=\"line\">public class RandomImage extends HttpServlet &#123;</span><br><span class=\"line\">\tprivate static final long serialVersionUID = 1L;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic static final int WIDTH = 120;</span><br><span class=\"line\">\tpublic static final int HEIGHT = 30;</span><br><span class=\"line\">       </span><br><span class=\"line\">\tprotected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tBufferedImage image = new BufferedImage(WIDTH, HEIGHT, BufferedImage.TYPE_INT_RGB);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tGraphics2D g = (Graphics2D) image.getGraphics();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tsetBackground(g);</span><br><span class=\"line\">\t\tsetBorder(g);</span><br><span class=\"line\">\t\tdrawRandomLine(g);</span><br><span class=\"line\">\t\tdrawRandomNumber(g);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t// pass image to browser</span><br><span class=\"line\">\t\tresponse.setContentType(&quot;image/jpeg&quot;);</span><br><span class=\"line\">\t\tImageIO.write(image, &quot;jpg&quot;, response.getOutputStream());</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void drawRandomNumber(Graphics2D g) &#123;</span><br><span class=\"line\">\t\tg.setColor(Color.BLUE);</span><br><span class=\"line\">\t\tg.setFont(new Font(&quot;&quot;, Font.BOLD, 20));</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tfor (int i = 0; i &lt; 5; i++) &#123;</span><br><span class=\"line\">\t\t\tint degree = new Random().nextInt()%30; \t// can be +-</span><br><span class=\"line\">\t\t\tg.rotate(degree*Math.PI/180, 24*i, HEIGHT);</span><br><span class=\"line\">\t\t\tg.drawString(String.valueOf(new Random().nextInt(10)), 24*i+7, HEIGHT-7);</span><br><span class=\"line\">\t\t\tg.rotate(-degree*Math.PI/180, 24*i, HEIGHT);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void setBorder(Graphics g) &#123;</span><br><span class=\"line\">\t\tg.setColor(Color.BLACK);</span><br><span class=\"line\">\t\tg.drawRect(1, 1, WIDTH-2, HEIGHT-2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void setBackground(Graphics g) &#123;</span><br><span class=\"line\">\t\tg.setColor(Color.ORANGE);</span><br><span class=\"line\">\t\tg.fillRect(0, 0, WIDTH, HEIGHT);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate void drawRandomLine(Graphics g) &#123;</span><br><span class=\"line\">\t\tg.setColor(Color.GRAY);</span><br><span class=\"line\">\t\tfor (int i = 0; i &lt; 5; i++) &#123;</span><br><span class=\"line\">\t\t\tint x1 = new Random().nextInt(WIDTH);</span><br><span class=\"line\">\t\t\tint y1 = new Random().nextInt(HEIGHT);</span><br><span class=\"line\">\t\t\tint x2 = new Random().nextInt(WIDTH);</span><br><span class=\"line\">\t\t\tint y2 = new Random().nextInt(HEIGHT);</span><br><span class=\"line\">\t\t\tg.drawLine(x1, y1, x2, y2);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprotected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class=\"line\">\t\tdoGet(request, response);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"调用的-html-page\"><a href=\"#调用的-html-page\" class=\"headerlink\" title=\"调用的 html page\"></a>调用的 html page</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">&lt;title&gt;Register Page&lt;/title&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">\tfunction changeImage(img)&#123;</span><br><span class=\"line\">\t\timg.src = img.src + &quot;?&quot; + new Date();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;form action=&quot;&quot;&gt;</span><br><span class=\"line\">\t\tUsername: &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;br/&gt;</span><br><span class=\"line\">\t\tPassword: &lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;br/&gt;</span><br><span class=\"line\">\t\tVerification Code: &lt;input type=&quot;text&quot; name=&quot;checkcode&quot;&gt;&lt;br/&gt;</span><br><span class=\"line\">\t\t&lt;img alt=&quot;&quot; src=&quot;/javaweb-heima/RandomImage&quot; onclick=&quot;changeImage(this)&quot;&gt;</span><br><span class=\"line\">\t&lt;/form&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h1><p><img src=\"/images/random-image.jpeg\" alt=\"random-image\"></p>"},{"title":"Hello World","date":"2017-11-23T16:00:00.000Z","_content":"\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n<!--more-->\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n\n## Anything ##\n\n### Log ###\n\n- Create Hexo blog\n- Change to Next\n- Add photo\n- Add social link\n- Add About, Tags and Categories\n- Add gitment\n- Add copyright post\n- Add donate\n- Add Commonweal 404\n\n### toDo ###\n\n### Doing ###\n- Pro Git\n\n\n### Done ###\n\n## Tips for blog ##\n\n### Read more >> ###\n\nFrom: http://www.jianshu.com/p/c07ccdfba068\n\n\tcategories: blog #文章文类\n\ttags: [博客，文章] #文章标签，只有一项时 tags: blog\n\t---\n\t\n\t这段文字会显示在首页。\n\t<!--more-->\n\t这些内容会被隐藏，点击 Read more 才能看到。\n\n### Code ###\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\n```\n$ hexo new \"My New Post\"\n```\n\n    $ hexo new \"My New Post\"\n\n\n\n\n\n\n### ZA WU ###\n---\ntitle: \"RESTful Web Service with AngularJS\"\ndate: 2017-12-17 22:10:18\ncategories: Rest\ntags: [Rest, Web Service, AngularJS, Spring]\n---\n\n[Building a RESTful Web Service](https://spring.io/guides/gs/rest-service/)\n\n[Building REST services with Spring](https://spring.io/guides/tutorials/bookmarks/)\n\n[Understanding REST](https://spring.io/understanding/REST)\n\n[Consuming a RESTful Web Service with AngularJS](https://spring.io/guides/gs/consuming-rest-angularjs/)\n\n[使用Spring Boot和Gradle创建AngularJS项目](http://blog.javachen.com/2015/01/06/build-app-with-spring-boot-and-gradle.html)\n\n\n# Spring Boot & AngularJS\n\nReference: [使用Spring Boot和Gradle创建AngularJS项目](http://blog.javachen.com/2015/01/06/build-app-with-spring-boot-and-gradle.html)\n\n1. Generate Project\n\t- http://start.spring.io/\n\t- GroupId: com.demo\n\t- Artifact: ng-spring-boot\n\nStructure:\n![Project Structure](/images/ngspringboot-structure.png)\n\n修改 main 方法，获取 ApplicationContext 信息。\n\n\n====\nTemp:\n\nTake from ZhiHu, will delete soon.\n\nURL定位资源，用HTTP动词（GET,POST,DELETE,DETC）描述操作。\n\n1. REST描述的是在网络中client和server的一种交互形式\n\n2. Server 提供的 RESTful API中，URL中只使用名词来指定资源，原则上不使用动词。\n“资源”是REST架构或者说整个网络处理的核心。\n比如：\nhttp://api.qc.com/v1/newsfeed: 获取某人的新鲜; \nhttp://api.qc.com/v1/friends: 获取某人的好友列表;\nhttp://api.qc.com/v1/profile: 获取某人的详细信息;\n\n\n3. 用HTTP协议里的动词来实现资源的添加，修改，删除等操作。\n\n即通过HTTP动词来实现资源的状态扭转：\nGET 用来获取资源\nPOST 用来新建资源（也可以用于更新资源）\nPUT 用来更新资源，DELETE 用来删除资源\n\n比如：\nGET /products : will return the list of all products\nPOST /products : will add a product to the collection\nGET /products/4 : will retrieve product #4\nPUT /products/4 : will update product #4\n\n4. Server和Client之间传递某资源的一个表现形式，\n比如用JSON，XML传输文本，或者用JPG，WebP传输图片等。当然还可以压缩HTTP传输时的数据（on-wire data compression）。\n\n5. 用 HTTP Status Code传递Server的状态信息。\n比如最常用的 200 表示成功，500 表示Server内部错误等。\n\nWeb端和Server只使用上述定义的API来传递数据和改变数据状态。\n格式一般是JSON。\n\n\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2017-11-24 00:00:00\ncategories: Note\n---\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n<!--more-->\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n\n## Anything ##\n\n### Log ###\n\n- Create Hexo blog\n- Change to Next\n- Add photo\n- Add social link\n- Add About, Tags and Categories\n- Add gitment\n- Add copyright post\n- Add donate\n- Add Commonweal 404\n\n### toDo ###\n\n### Doing ###\n- Pro Git\n\n\n### Done ###\n\n## Tips for blog ##\n\n### Read more >> ###\n\nFrom: http://www.jianshu.com/p/c07ccdfba068\n\n\tcategories: blog #文章文类\n\ttags: [博客，文章] #文章标签，只有一项时 tags: blog\n\t---\n\t\n\t这段文字会显示在首页。\n\t<!--more-->\n\t这些内容会被隐藏，点击 Read more 才能看到。\n\n### Code ###\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\n```\n$ hexo new \"My New Post\"\n```\n\n    $ hexo new \"My New Post\"\n\n\n\n\n\n\n### ZA WU ###\n---\ntitle: \"RESTful Web Service with AngularJS\"\ndate: 2017-12-17 22:10:18\ncategories: Rest\ntags: [Rest, Web Service, AngularJS, Spring]\n---\n\n[Building a RESTful Web Service](https://spring.io/guides/gs/rest-service/)\n\n[Building REST services with Spring](https://spring.io/guides/tutorials/bookmarks/)\n\n[Understanding REST](https://spring.io/understanding/REST)\n\n[Consuming a RESTful Web Service with AngularJS](https://spring.io/guides/gs/consuming-rest-angularjs/)\n\n[使用Spring Boot和Gradle创建AngularJS项目](http://blog.javachen.com/2015/01/06/build-app-with-spring-boot-and-gradle.html)\n\n\n# Spring Boot & AngularJS\n\nReference: [使用Spring Boot和Gradle创建AngularJS项目](http://blog.javachen.com/2015/01/06/build-app-with-spring-boot-and-gradle.html)\n\n1. Generate Project\n\t- http://start.spring.io/\n\t- GroupId: com.demo\n\t- Artifact: ng-spring-boot\n\nStructure:\n![Project Structure](/images/ngspringboot-structure.png)\n\n修改 main 方法，获取 ApplicationContext 信息。\n\n\n====\nTemp:\n\nTake from ZhiHu, will delete soon.\n\nURL定位资源，用HTTP动词（GET,POST,DELETE,DETC）描述操作。\n\n1. REST描述的是在网络中client和server的一种交互形式\n\n2. Server 提供的 RESTful API中，URL中只使用名词来指定资源，原则上不使用动词。\n“资源”是REST架构或者说整个网络处理的核心。\n比如：\nhttp://api.qc.com/v1/newsfeed: 获取某人的新鲜; \nhttp://api.qc.com/v1/friends: 获取某人的好友列表;\nhttp://api.qc.com/v1/profile: 获取某人的详细信息;\n\n\n3. 用HTTP协议里的动词来实现资源的添加，修改，删除等操作。\n\n即通过HTTP动词来实现资源的状态扭转：\nGET 用来获取资源\nPOST 用来新建资源（也可以用于更新资源）\nPUT 用来更新资源，DELETE 用来删除资源\n\n比如：\nGET /products : will return the list of all products\nPOST /products : will add a product to the collection\nGET /products/4 : will retrieve product #4\nPUT /products/4 : will update product #4\n\n4. Server和Client之间传递某资源的一个表现形式，\n比如用JSON，XML传输文本，或者用JPG，WebP传输图片等。当然还可以压缩HTTP传输时的数据（on-wire data compression）。\n\n5. 用 HTTP Status Code传递Server的状态信息。\n比如最常用的 200 表示成功，500 表示Server内部错误等。\n\nWeb端和Server只使用上述定义的API来传递数据和改变数据状态。\n格式一般是JSON。\n\n\n","slug":"hello-world","published":1,"updated":"2020-04-30T09:23:19.531Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedie0010sd5tb6u9rn1e","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><a id=\"more\"></a>\n\n<h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<h2 id=\"Anything\"><a href=\"#Anything\" class=\"headerlink\" title=\"Anything\"></a>Anything</h2><h3 id=\"Log\"><a href=\"#Log\" class=\"headerlink\" title=\"Log\"></a>Log</h3><ul>\n<li>Create Hexo blog</li>\n<li>Change to Next</li>\n<li>Add photo</li>\n<li>Add social link</li>\n<li>Add About, Tags and Categories</li>\n<li>Add gitment</li>\n<li>Add copyright post</li>\n<li>Add donate</li>\n<li>Add Commonweal 404</li>\n</ul>\n<h3 id=\"toDo\"><a href=\"#toDo\" class=\"headerlink\" title=\"toDo\"></a>toDo</h3><h3 id=\"Doing\"><a href=\"#Doing\" class=\"headerlink\" title=\"Doing\"></a>Doing</h3><ul>\n<li>Pro Git</li>\n</ul>\n<h3 id=\"Done\"><a href=\"#Done\" class=\"headerlink\" title=\"Done\"></a>Done</h3><h2 id=\"Tips-for-blog\"><a href=\"#Tips-for-blog\" class=\"headerlink\" title=\"Tips for blog\"></a>Tips for blog</h2><h3 id=\"Read-more-gt-gt\"><a href=\"#Read-more-gt-gt\" class=\"headerlink\" title=\"Read more &gt;&gt;\"></a>Read more &gt;&gt;</h3><p>From: <a href=\"http://www.jianshu.com/p/c07ccdfba068\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/c07ccdfba068</a></p>\n<pre><code>categories: blog #文章文类\ntags: [博客，文章] #文章标签，只有一项时 tags: blog\n---\n\n这段文字会显示在首页。\n&lt;!--more--&gt;\n这些内容会被隐藏，点击 Read more 才能看到。</code></pre><h3 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new &quot;My New Post&quot;</span><br></pre></td></tr></table></figure>\n\n<pre><code>$ hexo new &quot;My New Post&quot;</code></pre><h3 id=\"ZA-WU\"><a href=\"#ZA-WU\" class=\"headerlink\" title=\"ZA WU\"></a>ZA WU</h3><hr>\n<p>title: “RESTful Web Service with AngularJS”<br>date: 2017-12-17 22:10:18<br>categories: Rest<br>tags: [Rest, Web Service, AngularJS, Spring]</p>\n<hr>\n<p><a href=\"https://spring.io/guides/gs/rest-service/\" target=\"_blank\" rel=\"noopener\">Building a RESTful Web Service</a></p>\n<p><a href=\"https://spring.io/guides/tutorials/bookmarks/\" target=\"_blank\" rel=\"noopener\">Building REST services with Spring</a></p>\n<p><a href=\"https://spring.io/understanding/REST\" target=\"_blank\" rel=\"noopener\">Understanding REST</a></p>\n<p><a href=\"https://spring.io/guides/gs/consuming-rest-angularjs/\" target=\"_blank\" rel=\"noopener\">Consuming a RESTful Web Service with AngularJS</a></p>\n<p><a href=\"http://blog.javachen.com/2015/01/06/build-app-with-spring-boot-and-gradle.html\" target=\"_blank\" rel=\"noopener\">使用Spring Boot和Gradle创建AngularJS项目</a></p>\n<h1 id=\"Spring-Boot-amp-AngularJS\"><a href=\"#Spring-Boot-amp-AngularJS\" class=\"headerlink\" title=\"Spring Boot &amp; AngularJS\"></a>Spring Boot &amp; AngularJS</h1><p>Reference: <a href=\"http://blog.javachen.com/2015/01/06/build-app-with-spring-boot-and-gradle.html\" target=\"_blank\" rel=\"noopener\">使用Spring Boot和Gradle创建AngularJS项目</a></p>\n<ol>\n<li>Generate Project<ul>\n<li><a href=\"http://start.spring.io/\" target=\"_blank\" rel=\"noopener\">http://start.spring.io/</a></li>\n<li>GroupId: com.demo</li>\n<li>Artifact: ng-spring-boot</li>\n</ul>\n</li>\n</ol>\n<p>Structure:<br><img src=\"/images/ngspringboot-structure.png\" alt=\"Project Structure\"></p>\n<p>修改 main 方法，获取 ApplicationContext 信息。</p>\n<p>====<br>Temp:</p>\n<p>Take from ZhiHu, will delete soon.</p>\n<p>URL定位资源，用HTTP动词（GET,POST,DELETE,DETC）描述操作。</p>\n<ol>\n<li><p>REST描述的是在网络中client和server的一种交互形式</p>\n</li>\n<li><p>Server 提供的 RESTful API中，URL中只使用名词来指定资源，原则上不使用动词。<br>“资源”是REST架构或者说整个网络处理的核心。<br>比如：<br><a href=\"http://api.qc.com/v1/newsfeed\" target=\"_blank\" rel=\"noopener\">http://api.qc.com/v1/newsfeed</a>: 获取某人的新鲜;<br><a href=\"http://api.qc.com/v1/friends\" target=\"_blank\" rel=\"noopener\">http://api.qc.com/v1/friends</a>: 获取某人的好友列表;<br><a href=\"http://api.qc.com/v1/profile\" target=\"_blank\" rel=\"noopener\">http://api.qc.com/v1/profile</a>: 获取某人的详细信息;</p>\n</li>\n</ol>\n<ol start=\"3\">\n<li>用HTTP协议里的动词来实现资源的添加，修改，删除等操作。</li>\n</ol>\n<p>即通过HTTP动词来实现资源的状态扭转：<br>GET 用来获取资源<br>POST 用来新建资源（也可以用于更新资源）<br>PUT 用来更新资源，DELETE 用来删除资源</p>\n<p>比如：<br>GET /products : will return the list of all products<br>POST /products : will add a product to the collection<br>GET /products/4 : will retrieve product #4<br>PUT /products/4 : will update product #4</p>\n<ol start=\"4\">\n<li><p>Server和Client之间传递某资源的一个表现形式，<br>比如用JSON，XML传输文本，或者用JPG，WebP传输图片等。当然还可以压缩HTTP传输时的数据（on-wire data compression）。</p>\n</li>\n<li><p>用 HTTP Status Code传递Server的状态信息。<br>比如最常用的 200 表示成功，500 表示Server内部错误等。</p>\n</li>\n</ol>\n<p>Web端和Server只使用上述定义的API来传递数据和改变数据状态。<br>格式一般是JSON。</p>\n","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2>","more":"<h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<h2 id=\"Anything\"><a href=\"#Anything\" class=\"headerlink\" title=\"Anything\"></a>Anything</h2><h3 id=\"Log\"><a href=\"#Log\" class=\"headerlink\" title=\"Log\"></a>Log</h3><ul>\n<li>Create Hexo blog</li>\n<li>Change to Next</li>\n<li>Add photo</li>\n<li>Add social link</li>\n<li>Add About, Tags and Categories</li>\n<li>Add gitment</li>\n<li>Add copyright post</li>\n<li>Add donate</li>\n<li>Add Commonweal 404</li>\n</ul>\n<h3 id=\"toDo\"><a href=\"#toDo\" class=\"headerlink\" title=\"toDo\"></a>toDo</h3><h3 id=\"Doing\"><a href=\"#Doing\" class=\"headerlink\" title=\"Doing\"></a>Doing</h3><ul>\n<li>Pro Git</li>\n</ul>\n<h3 id=\"Done\"><a href=\"#Done\" class=\"headerlink\" title=\"Done\"></a>Done</h3><h2 id=\"Tips-for-blog\"><a href=\"#Tips-for-blog\" class=\"headerlink\" title=\"Tips for blog\"></a>Tips for blog</h2><h3 id=\"Read-more-gt-gt\"><a href=\"#Read-more-gt-gt\" class=\"headerlink\" title=\"Read more &gt;&gt;\"></a>Read more &gt;&gt;</h3><p>From: <a href=\"http://www.jianshu.com/p/c07ccdfba068\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/c07ccdfba068</a></p>\n<pre><code>categories: blog #文章文类\ntags: [博客，文章] #文章标签，只有一项时 tags: blog\n---\n\n这段文字会显示在首页。\n&lt;!--more--&gt;\n这些内容会被隐藏，点击 Read more 才能看到。</code></pre><h3 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new &quot;My New Post&quot;</span><br></pre></td></tr></table></figure>\n\n<pre><code>$ hexo new &quot;My New Post&quot;</code></pre><h3 id=\"ZA-WU\"><a href=\"#ZA-WU\" class=\"headerlink\" title=\"ZA WU\"></a>ZA WU</h3><hr>\n<p>title: “RESTful Web Service with AngularJS”<br>date: 2017-12-17 22:10:18<br>categories: Rest<br>tags: [Rest, Web Service, AngularJS, Spring]</p>\n<hr>\n<p><a href=\"https://spring.io/guides/gs/rest-service/\" target=\"_blank\" rel=\"noopener\">Building a RESTful Web Service</a></p>\n<p><a href=\"https://spring.io/guides/tutorials/bookmarks/\" target=\"_blank\" rel=\"noopener\">Building REST services with Spring</a></p>\n<p><a href=\"https://spring.io/understanding/REST\" target=\"_blank\" rel=\"noopener\">Understanding REST</a></p>\n<p><a href=\"https://spring.io/guides/gs/consuming-rest-angularjs/\" target=\"_blank\" rel=\"noopener\">Consuming a RESTful Web Service with AngularJS</a></p>\n<p><a href=\"http://blog.javachen.com/2015/01/06/build-app-with-spring-boot-and-gradle.html\" target=\"_blank\" rel=\"noopener\">使用Spring Boot和Gradle创建AngularJS项目</a></p>\n<h1 id=\"Spring-Boot-amp-AngularJS\"><a href=\"#Spring-Boot-amp-AngularJS\" class=\"headerlink\" title=\"Spring Boot &amp; AngularJS\"></a>Spring Boot &amp; AngularJS</h1><p>Reference: <a href=\"http://blog.javachen.com/2015/01/06/build-app-with-spring-boot-and-gradle.html\" target=\"_blank\" rel=\"noopener\">使用Spring Boot和Gradle创建AngularJS项目</a></p>\n<ol>\n<li>Generate Project<ul>\n<li><a href=\"http://start.spring.io/\" target=\"_blank\" rel=\"noopener\">http://start.spring.io/</a></li>\n<li>GroupId: com.demo</li>\n<li>Artifact: ng-spring-boot</li>\n</ul>\n</li>\n</ol>\n<p>Structure:<br><img src=\"/images/ngspringboot-structure.png\" alt=\"Project Structure\"></p>\n<p>修改 main 方法，获取 ApplicationContext 信息。</p>\n<p>====<br>Temp:</p>\n<p>Take from ZhiHu, will delete soon.</p>\n<p>URL定位资源，用HTTP动词（GET,POST,DELETE,DETC）描述操作。</p>\n<ol>\n<li><p>REST描述的是在网络中client和server的一种交互形式</p>\n</li>\n<li><p>Server 提供的 RESTful API中，URL中只使用名词来指定资源，原则上不使用动词。<br>“资源”是REST架构或者说整个网络处理的核心。<br>比如：<br><a href=\"http://api.qc.com/v1/newsfeed\" target=\"_blank\" rel=\"noopener\">http://api.qc.com/v1/newsfeed</a>: 获取某人的新鲜;<br><a href=\"http://api.qc.com/v1/friends\" target=\"_blank\" rel=\"noopener\">http://api.qc.com/v1/friends</a>: 获取某人的好友列表;<br><a href=\"http://api.qc.com/v1/profile\" target=\"_blank\" rel=\"noopener\">http://api.qc.com/v1/profile</a>: 获取某人的详细信息;</p>\n</li>\n</ol>\n<ol start=\"3\">\n<li>用HTTP协议里的动词来实现资源的添加，修改，删除等操作。</li>\n</ol>\n<p>即通过HTTP动词来实现资源的状态扭转：<br>GET 用来获取资源<br>POST 用来新建资源（也可以用于更新资源）<br>PUT 用来更新资源，DELETE 用来删除资源</p>\n<p>比如：<br>GET /products : will return the list of all products<br>POST /products : will add a product to the collection<br>GET /products/4 : will retrieve product #4<br>PUT /products/4 : will update product #4</p>\n<ol start=\"4\">\n<li><p>Server和Client之间传递某资源的一个表现形式，<br>比如用JSON，XML传输文本，或者用JPG，WebP传输图片等。当然还可以压缩HTTP传输时的数据（on-wire data compression）。</p>\n</li>\n<li><p>用 HTTP Status Code传递Server的状态信息。<br>比如最常用的 200 表示成功，500 表示Server内部错误等。</p>\n</li>\n</ol>\n<p>Web端和Server只使用上述定义的API来传递数据和改变数据状态。<br>格式一般是JSON。</p>"},{"title":"编程入门指南","date":"2018-01-16T01:23:42.000Z","_content":"这是一篇《编程入门指南 v1.5》的摘要。\n<!--more-->\n\n最近陷入一个很糟糕的状况，就是看到什么都想学，学一会就停下来了。\n我觉得可能跟我基础不扎实有关系。恰好读到这篇文章，摘下关键部分来提醒自己。\n\n源地址：[编程入门指南 v1.5](https://zhuanlan.zhihu.com/p/19959253)\n\n# 启蒙\n1. 完成 [MIT 6.00.1x](https://courses.edx.org/courses/course-v1:MITx+6.00.1x_7+3T2015/course/) （计算机科学和 Python 编程导论）。[网易公开课地址](http://open.163.com/special/opencourse/bianchengdaolun.html):它强调学习计算机科学领域里的重要概念和范式。能让你在自学时开阔眼界；课程内容：\n\t1. 计算概念\n\t2. Python 编程语言\n\t3. 简单的数据结构与算法\n\t4. 测试与调试。\n2. 完成 [Harvard CS50x](http://open.163.com/special/opencourse/cs50.html)（哈佛大学：计算机科学）。这门课与MIT的导论课互补。教学语言涉及 \n\t1. C\n\t2. PHP\n\t3. JavaScript + SQL\n\t4. HTML + CSS，\n3. 支线任务：阅读《编码》\n4. 完成 [Python 教程](https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000)\n\n# 入门\n## Structure and Interpretation of Computer Programs (SICP)《计算机程序的构造和解释》\n1. [Udacity CS212: Design of Computer Program](https://classroom.udacity.com/courses/cs212)：教学语言为 Python，内容有一定难度。\n2. [How to Design Programs, Second Edition](http://www.ccs.neu.edu/home/matthias/HtDP2e/Draft/index.html)：HtDP 的起点比SICP低，书中的内容循循善诱，对初学者很友好，如果觉得完成SICP过于困难，可以考虑先读一读 HtDP。\n3. [UC Berkeley SICP 授课视频以及 SICP 的两位作者给 Hewlett-Packard 公司员工培训时的录像](https://github.com/DeathKing/Learning-SICP/)（中文化项目）\n4. [Composing Programs](http://composingprograms.com/)：一个继承了SICP思想但使用Python作为教学语言的编程导论（其中包含了一些小项目）\n5. [SICP 解题集](http://sicp.readthedocs.io/en/latest/index.html)：对于书后的习题，作为初学者应尽力并量力完成。\n6. 开始一些简单的项目，诸如搭建一个网站并维护它，或是编写一个小游戏再不断进行扩展，如果你自己的想法不明确，推荐你关注[炼瓜研究所](http://zhuanlan.zhihu.com/alchemelon) ，或者从 [Mega Project List](https://github.com/karan/Projects/) 中选取自己喜欢的项目。\n\n## The Elements of Computing Systems\n- 它会教会你从最基本的 Nand 门开始构建计算机，直到俄罗斯方块在你的计算机上顺利运行。 \n- 入门阶段的目标就是坚持完成这本书的所有项目（包括一个最简的编译器与操作系统）。\n\n### 计算机系统基础: Computer Systems: A Programmer's Perspective, 3/E《深入理解计算机系统》\n- 该书就是从一个程序员的视角观察计算机系统，以「程序在计算机中如何执行」为主线，全面阐述计算机系统内部实现的诸多细节。\n- 上层设计到底层实现都了然于胸，并能在脑中回放数据在网络->内存->缓存->CPU 的流向\n\n1.  Coursera 上的 MOOC: The Hardware/Software Interface，这门课的内容是 CSAPP 的一个子集，但是最经典的实验部分都移植过来了.\n2.  看看 The C Programming Language (C程序设计语言)，回顾一下C语言的知识\n\n### 数据结构与算法基础\n1. 《算法导论》 Introduction to Algorithms。都不懂就跳过习题和证明，如果还觉得心虚先看看《数据结构与算法分析》\n2. [Algorithms: Design and Analysis Part 1 & Part 2](https://www.coursera.org/specializations/algorithms)；网易公开课：[麻省理工学院：算法导论](http://open.163.com/special/opencourse/algorithms.html)\n•\t培养使用常规算法解决小规模问题的能力，结合前文的SICP部分可以读读：《编程珠玑》，《程序设计实践》\n\n### 编程语言基础\n- 能至少实现一个简单的解释器\n\n1.  《程序设计语言-实践之路》：CMU 编程语言原理的教材，程序语言入门书，极大扩展眼界，拉开与普通人的差距。\n2.  [Programming Languages](https://www.coursera.org/learn/programming-languages)：课堂上你能接触到\n\t- 极端 FP （函数式）的 SML\n\t- 中性偏 FP 的 Racket\n\t- 以及极端 OOP （面向对象）的 Ruby\n\t- 问题的 FP 分解 vs OOP 分解\n\t- ML 的模式匹配\n\t- Lisp 宏、不变性与可变性、解释器的实现原理\n\t- 让你在将来学习新语言时更加轻松并写出更好的程序。\n3. [Udacity CS262 Programming Language](https://www.udacity.com/course/programming-languages--cs262)：写一个简单的浏览器——其实就是一个 JavaScript 和 HTML 的解释器，完成后的成品还是很有趣的；接下来，试着完成一个之前在SICP部分提到过的项目：用Python写一个 [Scheme Interpreter](http://inst.eecs.berkeley.edu/~cs61a/fa13/proj/scheme/scheme.html)\n\n### 其他\n1. 到 Stack Overflow 提问：[能有效解决问题的提问方法。](https://mp.weixin.qq.com/s?__biz=MzI3NDI5ODQ2Ng==&mid=2247483666&idx=1&sn=201c119360515cfd7765a6fe6fb5d855)\n2. 到 CoCode 与人交流\n3. 搭建一个个人博客，像你看到这样的\n4. 订阅自己喜欢的博客\n\n在 Stack Overflow 上票选得出的程序员必读书单中，排在前两位的两本书：\n\n1. Code Complete：不管是对于经验丰富的程序员还是对于那些没有受过太多的正规训练的新手程序员，此书都能用来填补自己的知识缺陷。对于入门阶段的新手们，可以重点看看涉及变量名，测试，个人性格的章节。\n\n2. The Pragmatic Programmer :有人称这本书为代码小全：从 DRY 到 KISS，从做人到做程序员均有涉及。\n\n\n完成这些，你就入门啦!","source":"_posts/编程入门指南.md","raw":"---\ntitle: \"编程入门指南\"\ndate: 2018-01-16 09:23:42\ncategories: 指南-Guide\ntags: [程序员, 指南, 入门]\n---\n这是一篇《编程入门指南 v1.5》的摘要。\n<!--more-->\n\n最近陷入一个很糟糕的状况，就是看到什么都想学，学一会就停下来了。\n我觉得可能跟我基础不扎实有关系。恰好读到这篇文章，摘下关键部分来提醒自己。\n\n源地址：[编程入门指南 v1.5](https://zhuanlan.zhihu.com/p/19959253)\n\n# 启蒙\n1. 完成 [MIT 6.00.1x](https://courses.edx.org/courses/course-v1:MITx+6.00.1x_7+3T2015/course/) （计算机科学和 Python 编程导论）。[网易公开课地址](http://open.163.com/special/opencourse/bianchengdaolun.html):它强调学习计算机科学领域里的重要概念和范式。能让你在自学时开阔眼界；课程内容：\n\t1. 计算概念\n\t2. Python 编程语言\n\t3. 简单的数据结构与算法\n\t4. 测试与调试。\n2. 完成 [Harvard CS50x](http://open.163.com/special/opencourse/cs50.html)（哈佛大学：计算机科学）。这门课与MIT的导论课互补。教学语言涉及 \n\t1. C\n\t2. PHP\n\t3. JavaScript + SQL\n\t4. HTML + CSS，\n3. 支线任务：阅读《编码》\n4. 完成 [Python 教程](https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000)\n\n# 入门\n## Structure and Interpretation of Computer Programs (SICP)《计算机程序的构造和解释》\n1. [Udacity CS212: Design of Computer Program](https://classroom.udacity.com/courses/cs212)：教学语言为 Python，内容有一定难度。\n2. [How to Design Programs, Second Edition](http://www.ccs.neu.edu/home/matthias/HtDP2e/Draft/index.html)：HtDP 的起点比SICP低，书中的内容循循善诱，对初学者很友好，如果觉得完成SICP过于困难，可以考虑先读一读 HtDP。\n3. [UC Berkeley SICP 授课视频以及 SICP 的两位作者给 Hewlett-Packard 公司员工培训时的录像](https://github.com/DeathKing/Learning-SICP/)（中文化项目）\n4. [Composing Programs](http://composingprograms.com/)：一个继承了SICP思想但使用Python作为教学语言的编程导论（其中包含了一些小项目）\n5. [SICP 解题集](http://sicp.readthedocs.io/en/latest/index.html)：对于书后的习题，作为初学者应尽力并量力完成。\n6. 开始一些简单的项目，诸如搭建一个网站并维护它，或是编写一个小游戏再不断进行扩展，如果你自己的想法不明确，推荐你关注[炼瓜研究所](http://zhuanlan.zhihu.com/alchemelon) ，或者从 [Mega Project List](https://github.com/karan/Projects/) 中选取自己喜欢的项目。\n\n## The Elements of Computing Systems\n- 它会教会你从最基本的 Nand 门开始构建计算机，直到俄罗斯方块在你的计算机上顺利运行。 \n- 入门阶段的目标就是坚持完成这本书的所有项目（包括一个最简的编译器与操作系统）。\n\n### 计算机系统基础: Computer Systems: A Programmer's Perspective, 3/E《深入理解计算机系统》\n- 该书就是从一个程序员的视角观察计算机系统，以「程序在计算机中如何执行」为主线，全面阐述计算机系统内部实现的诸多细节。\n- 上层设计到底层实现都了然于胸，并能在脑中回放数据在网络->内存->缓存->CPU 的流向\n\n1.  Coursera 上的 MOOC: The Hardware/Software Interface，这门课的内容是 CSAPP 的一个子集，但是最经典的实验部分都移植过来了.\n2.  看看 The C Programming Language (C程序设计语言)，回顾一下C语言的知识\n\n### 数据结构与算法基础\n1. 《算法导论》 Introduction to Algorithms。都不懂就跳过习题和证明，如果还觉得心虚先看看《数据结构与算法分析》\n2. [Algorithms: Design and Analysis Part 1 & Part 2](https://www.coursera.org/specializations/algorithms)；网易公开课：[麻省理工学院：算法导论](http://open.163.com/special/opencourse/algorithms.html)\n•\t培养使用常规算法解决小规模问题的能力，结合前文的SICP部分可以读读：《编程珠玑》，《程序设计实践》\n\n### 编程语言基础\n- 能至少实现一个简单的解释器\n\n1.  《程序设计语言-实践之路》：CMU 编程语言原理的教材，程序语言入门书，极大扩展眼界，拉开与普通人的差距。\n2.  [Programming Languages](https://www.coursera.org/learn/programming-languages)：课堂上你能接触到\n\t- 极端 FP （函数式）的 SML\n\t- 中性偏 FP 的 Racket\n\t- 以及极端 OOP （面向对象）的 Ruby\n\t- 问题的 FP 分解 vs OOP 分解\n\t- ML 的模式匹配\n\t- Lisp 宏、不变性与可变性、解释器的实现原理\n\t- 让你在将来学习新语言时更加轻松并写出更好的程序。\n3. [Udacity CS262 Programming Language](https://www.udacity.com/course/programming-languages--cs262)：写一个简单的浏览器——其实就是一个 JavaScript 和 HTML 的解释器，完成后的成品还是很有趣的；接下来，试着完成一个之前在SICP部分提到过的项目：用Python写一个 [Scheme Interpreter](http://inst.eecs.berkeley.edu/~cs61a/fa13/proj/scheme/scheme.html)\n\n### 其他\n1. 到 Stack Overflow 提问：[能有效解决问题的提问方法。](https://mp.weixin.qq.com/s?__biz=MzI3NDI5ODQ2Ng==&mid=2247483666&idx=1&sn=201c119360515cfd7765a6fe6fb5d855)\n2. 到 CoCode 与人交流\n3. 搭建一个个人博客，像你看到这样的\n4. 订阅自己喜欢的博客\n\n在 Stack Overflow 上票选得出的程序员必读书单中，排在前两位的两本书：\n\n1. Code Complete：不管是对于经验丰富的程序员还是对于那些没有受过太多的正规训练的新手程序员，此书都能用来填补自己的知识缺陷。对于入门阶段的新手们，可以重点看看涉及变量名，测试，个人性格的章节。\n\n2. The Pragmatic Programmer :有人称这本书为代码小全：从 DRY 到 KISS，从做人到做程序员均有涉及。\n\n\n完成这些，你就入门啦!","slug":"编程入门指南","published":1,"updated":"2020-04-30T09:23:19.531Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedif0011sd5t219lpify","content":"<p>这是一篇《编程入门指南 v1.5》的摘要。</p>\n<a id=\"more\"></a>\n\n<p>最近陷入一个很糟糕的状况，就是看到什么都想学，学一会就停下来了。<br>我觉得可能跟我基础不扎实有关系。恰好读到这篇文章，摘下关键部分来提醒自己。</p>\n<p>源地址：<a href=\"https://zhuanlan.zhihu.com/p/19959253\" target=\"_blank\" rel=\"noopener\">编程入门指南 v1.5</a></p>\n<h1 id=\"启蒙\"><a href=\"#启蒙\" class=\"headerlink\" title=\"启蒙\"></a>启蒙</h1><ol>\n<li>完成 <a href=\"https://courses.edx.org/courses/course-v1:MITx+6.00.1x_7+3T2015/course/\" target=\"_blank\" rel=\"noopener\">MIT 6.00.1x</a> （计算机科学和 Python 编程导论）。<a href=\"http://open.163.com/special/opencourse/bianchengdaolun.html\" target=\"_blank\" rel=\"noopener\">网易公开课地址</a>:它强调学习计算机科学领域里的重要概念和范式。能让你在自学时开阔眼界；课程内容：<ol>\n<li>计算概念</li>\n<li>Python 编程语言</li>\n<li>简单的数据结构与算法</li>\n<li>测试与调试。</li>\n</ol>\n</li>\n<li>完成 <a href=\"http://open.163.com/special/opencourse/cs50.html\" target=\"_blank\" rel=\"noopener\">Harvard CS50x</a>（哈佛大学：计算机科学）。这门课与MIT的导论课互补。教学语言涉及 <ol>\n<li>C</li>\n<li>PHP</li>\n<li>JavaScript + SQL</li>\n<li>HTML + CSS，</li>\n</ol>\n</li>\n<li>支线任务：阅读《编码》</li>\n<li>完成 <a href=\"https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000\" target=\"_blank\" rel=\"noopener\">Python 教程</a></li>\n</ol>\n<h1 id=\"入门\"><a href=\"#入门\" class=\"headerlink\" title=\"入门\"></a>入门</h1><h2 id=\"Structure-and-Interpretation-of-Computer-Programs-SICP-《计算机程序的构造和解释》\"><a href=\"#Structure-and-Interpretation-of-Computer-Programs-SICP-《计算机程序的构造和解释》\" class=\"headerlink\" title=\"Structure and Interpretation of Computer Programs (SICP)《计算机程序的构造和解释》\"></a>Structure and Interpretation of Computer Programs (SICP)《计算机程序的构造和解释》</h2><ol>\n<li><a href=\"https://classroom.udacity.com/courses/cs212\" target=\"_blank\" rel=\"noopener\">Udacity CS212: Design of Computer Program</a>：教学语言为 Python，内容有一定难度。</li>\n<li><a href=\"http://www.ccs.neu.edu/home/matthias/HtDP2e/Draft/index.html\" target=\"_blank\" rel=\"noopener\">How to Design Programs, Second Edition</a>：HtDP 的起点比SICP低，书中的内容循循善诱，对初学者很友好，如果觉得完成SICP过于困难，可以考虑先读一读 HtDP。</li>\n<li><a href=\"https://github.com/DeathKing/Learning-SICP/\" target=\"_blank\" rel=\"noopener\">UC Berkeley SICP 授课视频以及 SICP 的两位作者给 Hewlett-Packard 公司员工培训时的录像</a>（中文化项目）</li>\n<li><a href=\"http://composingprograms.com/\" target=\"_blank\" rel=\"noopener\">Composing Programs</a>：一个继承了SICP思想但使用Python作为教学语言的编程导论（其中包含了一些小项目）</li>\n<li><a href=\"http://sicp.readthedocs.io/en/latest/index.html\" target=\"_blank\" rel=\"noopener\">SICP 解题集</a>：对于书后的习题，作为初学者应尽力并量力完成。</li>\n<li>开始一些简单的项目，诸如搭建一个网站并维护它，或是编写一个小游戏再不断进行扩展，如果你自己的想法不明确，推荐你关注<a href=\"http://zhuanlan.zhihu.com/alchemelon\" target=\"_blank\" rel=\"noopener\">炼瓜研究所</a> ，或者从 <a href=\"https://github.com/karan/Projects/\" target=\"_blank\" rel=\"noopener\">Mega Project List</a> 中选取自己喜欢的项目。</li>\n</ol>\n<h2 id=\"The-Elements-of-Computing-Systems\"><a href=\"#The-Elements-of-Computing-Systems\" class=\"headerlink\" title=\"The Elements of Computing Systems\"></a>The Elements of Computing Systems</h2><ul>\n<li>它会教会你从最基本的 Nand 门开始构建计算机，直到俄罗斯方块在你的计算机上顺利运行。 </li>\n<li>入门阶段的目标就是坚持完成这本书的所有项目（包括一个最简的编译器与操作系统）。</li>\n</ul>\n<h3 id=\"计算机系统基础-Computer-Systems-A-Programmer’s-Perspective-3-E《深入理解计算机系统》\"><a href=\"#计算机系统基础-Computer-Systems-A-Programmer’s-Perspective-3-E《深入理解计算机系统》\" class=\"headerlink\" title=\"计算机系统基础: Computer Systems: A Programmer’s Perspective, 3/E《深入理解计算机系统》\"></a>计算机系统基础: Computer Systems: A Programmer’s Perspective, 3/E《深入理解计算机系统》</h3><ul>\n<li>该书就是从一个程序员的视角观察计算机系统，以「程序在计算机中如何执行」为主线，全面阐述计算机系统内部实现的诸多细节。</li>\n<li>上层设计到底层实现都了然于胸，并能在脑中回放数据在网络-&gt;内存-&gt;缓存-&gt;CPU 的流向</li>\n</ul>\n<ol>\n<li>Coursera 上的 MOOC: The Hardware/Software Interface，这门课的内容是 CSAPP 的一个子集，但是最经典的实验部分都移植过来了.</li>\n<li>看看 The C Programming Language (C程序设计语言)，回顾一下C语言的知识</li>\n</ol>\n<h3 id=\"数据结构与算法基础\"><a href=\"#数据结构与算法基础\" class=\"headerlink\" title=\"数据结构与算法基础\"></a>数据结构与算法基础</h3><ol>\n<li>《算法导论》 Introduction to Algorithms。都不懂就跳过习题和证明，如果还觉得心虚先看看《数据结构与算法分析》</li>\n<li><a href=\"https://www.coursera.org/specializations/algorithms\" target=\"_blank\" rel=\"noopener\">Algorithms: Design and Analysis Part 1 &amp; Part 2</a>；网易公开课：<a href=\"http://open.163.com/special/opencourse/algorithms.html\" target=\"_blank\" rel=\"noopener\">麻省理工学院：算法导论</a><br>•    培养使用常规算法解决小规模问题的能力，结合前文的SICP部分可以读读：《编程珠玑》，《程序设计实践》</li>\n</ol>\n<h3 id=\"编程语言基础\"><a href=\"#编程语言基础\" class=\"headerlink\" title=\"编程语言基础\"></a>编程语言基础</h3><ul>\n<li>能至少实现一个简单的解释器</li>\n</ul>\n<ol>\n<li>《程序设计语言-实践之路》：CMU 编程语言原理的教材，程序语言入门书，极大扩展眼界，拉开与普通人的差距。</li>\n<li><a href=\"https://www.coursera.org/learn/programming-languages\" target=\"_blank\" rel=\"noopener\">Programming Languages</a>：课堂上你能接触到<ul>\n<li>极端 FP （函数式）的 SML</li>\n<li>中性偏 FP 的 Racket</li>\n<li>以及极端 OOP （面向对象）的 Ruby</li>\n<li>问题的 FP 分解 vs OOP 分解</li>\n<li>ML 的模式匹配</li>\n<li>Lisp 宏、不变性与可变性、解释器的实现原理</li>\n<li>让你在将来学习新语言时更加轻松并写出更好的程序。</li>\n</ul>\n</li>\n<li><a href=\"https://www.udacity.com/course/programming-languages--cs262\" target=\"_blank\" rel=\"noopener\">Udacity CS262 Programming Language</a>：写一个简单的浏览器——其实就是一个 JavaScript 和 HTML 的解释器，完成后的成品还是很有趣的；接下来，试着完成一个之前在SICP部分提到过的项目：用Python写一个 <a href=\"http://inst.eecs.berkeley.edu/~cs61a/fa13/proj/scheme/scheme.html\" target=\"_blank\" rel=\"noopener\">Scheme Interpreter</a></li>\n</ol>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><ol>\n<li>到 Stack Overflow 提问：<a href=\"https://mp.weixin.qq.com/s?__biz=MzI3NDI5ODQ2Ng==&mid=2247483666&idx=1&sn=201c119360515cfd7765a6fe6fb5d855\" target=\"_blank\" rel=\"noopener\">能有效解决问题的提问方法。</a></li>\n<li>到 CoCode 与人交流</li>\n<li>搭建一个个人博客，像你看到这样的</li>\n<li>订阅自己喜欢的博客</li>\n</ol>\n<p>在 Stack Overflow 上票选得出的程序员必读书单中，排在前两位的两本书：</p>\n<ol>\n<li><p>Code Complete：不管是对于经验丰富的程序员还是对于那些没有受过太多的正规训练的新手程序员，此书都能用来填补自己的知识缺陷。对于入门阶段的新手们，可以重点看看涉及变量名，测试，个人性格的章节。</p>\n</li>\n<li><p>The Pragmatic Programmer :有人称这本书为代码小全：从 DRY 到 KISS，从做人到做程序员均有涉及。</p>\n</li>\n</ol>\n<p>完成这些，你就入门啦!</p>\n","site":{"data":{}},"excerpt":"<p>这是一篇《编程入门指南 v1.5》的摘要。</p>","more":"<p>最近陷入一个很糟糕的状况，就是看到什么都想学，学一会就停下来了。<br>我觉得可能跟我基础不扎实有关系。恰好读到这篇文章，摘下关键部分来提醒自己。</p>\n<p>源地址：<a href=\"https://zhuanlan.zhihu.com/p/19959253\" target=\"_blank\" rel=\"noopener\">编程入门指南 v1.5</a></p>\n<h1 id=\"启蒙\"><a href=\"#启蒙\" class=\"headerlink\" title=\"启蒙\"></a>启蒙</h1><ol>\n<li>完成 <a href=\"https://courses.edx.org/courses/course-v1:MITx+6.00.1x_7+3T2015/course/\" target=\"_blank\" rel=\"noopener\">MIT 6.00.1x</a> （计算机科学和 Python 编程导论）。<a href=\"http://open.163.com/special/opencourse/bianchengdaolun.html\" target=\"_blank\" rel=\"noopener\">网易公开课地址</a>:它强调学习计算机科学领域里的重要概念和范式。能让你在自学时开阔眼界；课程内容：<ol>\n<li>计算概念</li>\n<li>Python 编程语言</li>\n<li>简单的数据结构与算法</li>\n<li>测试与调试。</li>\n</ol>\n</li>\n<li>完成 <a href=\"http://open.163.com/special/opencourse/cs50.html\" target=\"_blank\" rel=\"noopener\">Harvard CS50x</a>（哈佛大学：计算机科学）。这门课与MIT的导论课互补。教学语言涉及 <ol>\n<li>C</li>\n<li>PHP</li>\n<li>JavaScript + SQL</li>\n<li>HTML + CSS，</li>\n</ol>\n</li>\n<li>支线任务：阅读《编码》</li>\n<li>完成 <a href=\"https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000\" target=\"_blank\" rel=\"noopener\">Python 教程</a></li>\n</ol>\n<h1 id=\"入门\"><a href=\"#入门\" class=\"headerlink\" title=\"入门\"></a>入门</h1><h2 id=\"Structure-and-Interpretation-of-Computer-Programs-SICP-《计算机程序的构造和解释》\"><a href=\"#Structure-and-Interpretation-of-Computer-Programs-SICP-《计算机程序的构造和解释》\" class=\"headerlink\" title=\"Structure and Interpretation of Computer Programs (SICP)《计算机程序的构造和解释》\"></a>Structure and Interpretation of Computer Programs (SICP)《计算机程序的构造和解释》</h2><ol>\n<li><a href=\"https://classroom.udacity.com/courses/cs212\" target=\"_blank\" rel=\"noopener\">Udacity CS212: Design of Computer Program</a>：教学语言为 Python，内容有一定难度。</li>\n<li><a href=\"http://www.ccs.neu.edu/home/matthias/HtDP2e/Draft/index.html\" target=\"_blank\" rel=\"noopener\">How to Design Programs, Second Edition</a>：HtDP 的起点比SICP低，书中的内容循循善诱，对初学者很友好，如果觉得完成SICP过于困难，可以考虑先读一读 HtDP。</li>\n<li><a href=\"https://github.com/DeathKing/Learning-SICP/\" target=\"_blank\" rel=\"noopener\">UC Berkeley SICP 授课视频以及 SICP 的两位作者给 Hewlett-Packard 公司员工培训时的录像</a>（中文化项目）</li>\n<li><a href=\"http://composingprograms.com/\" target=\"_blank\" rel=\"noopener\">Composing Programs</a>：一个继承了SICP思想但使用Python作为教学语言的编程导论（其中包含了一些小项目）</li>\n<li><a href=\"http://sicp.readthedocs.io/en/latest/index.html\" target=\"_blank\" rel=\"noopener\">SICP 解题集</a>：对于书后的习题，作为初学者应尽力并量力完成。</li>\n<li>开始一些简单的项目，诸如搭建一个网站并维护它，或是编写一个小游戏再不断进行扩展，如果你自己的想法不明确，推荐你关注<a href=\"http://zhuanlan.zhihu.com/alchemelon\" target=\"_blank\" rel=\"noopener\">炼瓜研究所</a> ，或者从 <a href=\"https://github.com/karan/Projects/\" target=\"_blank\" rel=\"noopener\">Mega Project List</a> 中选取自己喜欢的项目。</li>\n</ol>\n<h2 id=\"The-Elements-of-Computing-Systems\"><a href=\"#The-Elements-of-Computing-Systems\" class=\"headerlink\" title=\"The Elements of Computing Systems\"></a>The Elements of Computing Systems</h2><ul>\n<li>它会教会你从最基本的 Nand 门开始构建计算机，直到俄罗斯方块在你的计算机上顺利运行。 </li>\n<li>入门阶段的目标就是坚持完成这本书的所有项目（包括一个最简的编译器与操作系统）。</li>\n</ul>\n<h3 id=\"计算机系统基础-Computer-Systems-A-Programmer’s-Perspective-3-E《深入理解计算机系统》\"><a href=\"#计算机系统基础-Computer-Systems-A-Programmer’s-Perspective-3-E《深入理解计算机系统》\" class=\"headerlink\" title=\"计算机系统基础: Computer Systems: A Programmer’s Perspective, 3/E《深入理解计算机系统》\"></a>计算机系统基础: Computer Systems: A Programmer’s Perspective, 3/E《深入理解计算机系统》</h3><ul>\n<li>该书就是从一个程序员的视角观察计算机系统，以「程序在计算机中如何执行」为主线，全面阐述计算机系统内部实现的诸多细节。</li>\n<li>上层设计到底层实现都了然于胸，并能在脑中回放数据在网络-&gt;内存-&gt;缓存-&gt;CPU 的流向</li>\n</ul>\n<ol>\n<li>Coursera 上的 MOOC: The Hardware/Software Interface，这门课的内容是 CSAPP 的一个子集，但是最经典的实验部分都移植过来了.</li>\n<li>看看 The C Programming Language (C程序设计语言)，回顾一下C语言的知识</li>\n</ol>\n<h3 id=\"数据结构与算法基础\"><a href=\"#数据结构与算法基础\" class=\"headerlink\" title=\"数据结构与算法基础\"></a>数据结构与算法基础</h3><ol>\n<li>《算法导论》 Introduction to Algorithms。都不懂就跳过习题和证明，如果还觉得心虚先看看《数据结构与算法分析》</li>\n<li><a href=\"https://www.coursera.org/specializations/algorithms\" target=\"_blank\" rel=\"noopener\">Algorithms: Design and Analysis Part 1 &amp; Part 2</a>；网易公开课：<a href=\"http://open.163.com/special/opencourse/algorithms.html\" target=\"_blank\" rel=\"noopener\">麻省理工学院：算法导论</a><br>•    培养使用常规算法解决小规模问题的能力，结合前文的SICP部分可以读读：《编程珠玑》，《程序设计实践》</li>\n</ol>\n<h3 id=\"编程语言基础\"><a href=\"#编程语言基础\" class=\"headerlink\" title=\"编程语言基础\"></a>编程语言基础</h3><ul>\n<li>能至少实现一个简单的解释器</li>\n</ul>\n<ol>\n<li>《程序设计语言-实践之路》：CMU 编程语言原理的教材，程序语言入门书，极大扩展眼界，拉开与普通人的差距。</li>\n<li><a href=\"https://www.coursera.org/learn/programming-languages\" target=\"_blank\" rel=\"noopener\">Programming Languages</a>：课堂上你能接触到<ul>\n<li>极端 FP （函数式）的 SML</li>\n<li>中性偏 FP 的 Racket</li>\n<li>以及极端 OOP （面向对象）的 Ruby</li>\n<li>问题的 FP 分解 vs OOP 分解</li>\n<li>ML 的模式匹配</li>\n<li>Lisp 宏、不变性与可变性、解释器的实现原理</li>\n<li>让你在将来学习新语言时更加轻松并写出更好的程序。</li>\n</ul>\n</li>\n<li><a href=\"https://www.udacity.com/course/programming-languages--cs262\" target=\"_blank\" rel=\"noopener\">Udacity CS262 Programming Language</a>：写一个简单的浏览器——其实就是一个 JavaScript 和 HTML 的解释器，完成后的成品还是很有趣的；接下来，试着完成一个之前在SICP部分提到过的项目：用Python写一个 <a href=\"http://inst.eecs.berkeley.edu/~cs61a/fa13/proj/scheme/scheme.html\" target=\"_blank\" rel=\"noopener\">Scheme Interpreter</a></li>\n</ol>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><ol>\n<li>到 Stack Overflow 提问：<a href=\"https://mp.weixin.qq.com/s?__biz=MzI3NDI5ODQ2Ng==&mid=2247483666&idx=1&sn=201c119360515cfd7765a6fe6fb5d855\" target=\"_blank\" rel=\"noopener\">能有效解决问题的提问方法。</a></li>\n<li>到 CoCode 与人交流</li>\n<li>搭建一个个人博客，像你看到这样的</li>\n<li>订阅自己喜欢的博客</li>\n</ol>\n<p>在 Stack Overflow 上票选得出的程序员必读书单中，排在前两位的两本书：</p>\n<ol>\n<li><p>Code Complete：不管是对于经验丰富的程序员还是对于那些没有受过太多的正规训练的新手程序员，此书都能用来填补自己的知识缺陷。对于入门阶段的新手们，可以重点看看涉及变量名，测试，个人性格的章节。</p>\n</li>\n<li><p>The Pragmatic Programmer :有人称这本书为代码小全：从 DRY 到 KISS，从做人到做程序员均有涉及。</p>\n</li>\n</ol>\n<p>完成这些，你就入门啦!</p>"},{"title":"TSP问题-贪心算法-Python实现-算法分析","date":"2020-06-06T04:45:06.000Z","_content":"\n根据哈工大战德臣老师的计算机专业导论，用Python和贪心算法，解TSP问题，并且分析。\n\n# 概念\n## TSP 问题\n摘自维基百科：\n- 行商问题（最短路径问题）（英語：travelling salesman problem, TSP）\n- 给定一系列城市和每对城市之间的距离，求解访问每一座城市一次并回到起始城市的最短回路。\n- 它是组合优化中的一个NP困难问题\n\n## 贪心算法\n今朝有救今朝醉 - 每次面临选择的时候，选择眼前最优，而不考虑整体是否最优。\n使用贪心算法，使其转化为P问题。\n\n<!--more-->\n\n# 数据结构设计\n## 给城市编号\n- AA -> 0\n- BB -> 1\n- CC -> 2\n- DD -> 3\n\n## 城市间的距离\n用二维数组 distance 表示：\n\n|   | 0 | 1 | 2 | 3 |\n|---|---|---|---|---|\n| 0 | - | x | x | x |\n| 1 | x | - | x | x |\n| 2 | x | x | - | x |\n| 3 | x | x | x | - |\n\n那么城市 AA 和 BB 的距离就是：distance[0][1] 或者 distance[1][0]\n\n## 解（访问路径）\n用一个一维数组 result 来表示结果：\n[0,3,1,2,0,125]: AA -> DD -> BB -> CC -> AA 最后一位表示总路程\n\n\n# 控制结构（流程）设计\n![tsp_flow.jpeg](/images/tsp_flow.jpeg)\n\n# 代码实现\n## tsp_greedy.py\n```Python\n# n: number of city\n# result: []\n# distance: [][]\ndef next_city(n, result, distance):\n    current_city = result[-1]\n    min_distance = None\n    next_city = None\n    for x in range(n):\n        if x in result: continue\n        if min_distance is None or distance[current_city][x] < min_distance:\n            next_city = x\n            min_distance = distance[current_city][x]\n    return next_city\n\n# 1. 从0出发\n# 2. 在未访问过的城市中选出距离最短的城市\n# 3. 将这个城市加到路径里，将这段距离加在总路程里\n# 4. 如果路径包含了所有城市，前往5，否则，前往2\n# 5. 最后回到0，并加入这段距离\ndef tsp(n, distance):\n    result = [0]\n    total = 0\n    while(len(result) < n):\n        target = next_city(n, result, distance)\n        total += distance[result[-1]][target]\n        result.append(target)\n\n    total += distance[result[-1]][0]\n    result.append(0)\n    result.append(total)\n    return result\n```\n\n## tsp_test.py\n```Python\nimport tsp_greedy\nimport random\n\n# 根据n，生成用于测试的距离矩阵\ndef get_distance_matrix(n):\n    distance_matrix = [[0 for x in range(n)] for y in range(n)]\n    for i in range(n):\n        distance_matrix[i][i] = 0\n        for j in range(i+1,n):\n            distance = random.randint(10,99)\n            distance_matrix[i][j] = distance\n            distance_matrix[j][i] = distance\n        print('from {0} to other cities: {1}'.format(i,distance_matrix[i]))\n    return distance_matrix\n\n# Test\nn = int(input('input number of cities: '))\ndistance_matrix = get_distance_matrix(n)\n\ngreedy_result = tsp_greedy.tsp(n,distance_matrix)\nprint('greedy_result:', greedy_result)\n```\n\n\n# 算法分析\n\n## 正确性\n满足以下几点：\n- 结果包括了所有城市\n- 0开头，0结尾\n- 除0外，其他城市只出现一次\n- 总路程正确\n\n## 与最优解的偏差\n最优解的解法为穷举法，代码如下：\n\n```Python\n# 生成全排列列表的函数\n# [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\ndef permutation(arr):\n    if len(arr) == 0 or len(arr) == 1:\n        return [arr]\n    result = []\n    for i in arr:\n        temp_list = arr[:]\n        temp_list.remove(i)\n        temp = permutation(temp_list)\n        for j in temp:\n            j[0:0] = [i]    # 将i插入到数组第1位\n            result.append(j)\n    return result\n\n# 1. 获取n个城市的全排列\n# 2. 遍历全排列的每条路径\n# 3. 开头不是0的跳过，否则前往4\n# 4. 按照路径顺序，累加路程，得到总路程\n# 5. 如果此路径的总路程 < 最短总路程，替换最短总路程，并且更新最短路径\n# 6. 加入0到路径中\ndef tsp(n, dist_matrix):\n\n    cities = [x for x in range(n)]\n    perm_arr = permutation(cities)\n\n    result = None\n    min_distance = None\n    for arr in perm_arr:\n        if arr[0] != 0: continue    #skip non 0 start arr\n        current_distance = 0\n        for i in range(len(arr)-1):\n            current_distance += dist_matrix[arr[i]][arr[i+1]]\n        current_distance += dist_matrix[arr[-1]][0]\n        print('for path {0}, distance = {1}'.format(arr, current_distance))\n        if min_distance is None or current_distance < min_distance:\n            min_distance = current_distance\n            result = arr[:]\n    result.append(0)\n    result.append(min_distance)\n    return result\n```\n\n通过对比两组的计算结果，可以粗糙的得出一个偏差百分比。\nn=5，取对比100次的平均值。跑了大概3分钟，得到的结果是：5.1%\n\n测试代码：\n\n```Python\nimport tsp_force\nimport tsp_greedy\nimport random\n\n# 根据n，生成用于测试的距离矩阵\ndef get_distance_matrix(n):\n    distance_matrix = [[0 for x in range(n)] for y in range(n)]\n    for i in range(n):\n        distance_matrix[i][i] = 0\n        for j in range(i+1,n):\n            distance = random.randint(10,99)\n            distance_matrix[i][j] = distance\n            distance_matrix[j][i] = distance\n        print('from {0} to other cities: {1}'.format(i,distance_matrix[i]))\n    return distance_matrix\n\n# Test\n# n = int(input('input number of cities: '))\nn = 5\nm = 101\n\nforce_total = 0\ngreedy_total = 0\n\nfor i in range(m):\n    print('---> test #', i)\n    distance_matrix = get_distance_matrix(n)\n\n    force_result = tsp_force.tsp(n,distance_matrix)\n    print('force_result:', force_result)\n    greedy_result = tsp_greedy.tsp(n,distance_matrix)\n    print('greedy_result:', greedy_result)\n\n    force_total += force_result[-1]\n    greedy_total += greedy_result[-1]\n\nprint('force_total:',force_total)\nprint('greedy_total:',greedy_total)\nprint('difference:',(greedy_total - force_total)/force_total)\n\n```\n\n\n## 复杂度\n\n把注释拿掉，在有涉及到循环到地方标注出来。\n其中 next_city 到复杂度为 O(n^2)。\ntsp 方法应该为 O(n^3)。\n\n```Python\ndef next_city(n, result, distance):   \n    current_city = result[-1]\n    min_distance = None\n    next_city = None\n    for x in range(n):      ### O(n)\n        if x in result: continue    ### O(n^2)\n        if min_distance is None or distance[current_city][x] < min_distance:\n            next_city = x\n            min_distance = distance[current_city][x]\n    return next_city\n\ndef tsp(n, distance):\n    result = [0]\n    total = 0\n    while(len(result) < n):                     ### O(n)\n        target = next_city(n, result, distance)\n        total += distance[result[-1]][target]\n        result.append(target)\n\n    total += distance[result[-1]][0]\n    result.append(0)\n    result.append(total)\n    return result\n```\n","source":"_posts/TSP问题-贪心算法-Python实现-算法分析.md","raw":"---\ntitle: TSP问题-贪心算法-Python实现-算法分析\ndate: 2020-06-06 12:45:06\ncategories: algorithm\ntags: [TSP, algorithm, python, 贪心]\n---\n\n根据哈工大战德臣老师的计算机专业导论，用Python和贪心算法，解TSP问题，并且分析。\n\n# 概念\n## TSP 问题\n摘自维基百科：\n- 行商问题（最短路径问题）（英語：travelling salesman problem, TSP）\n- 给定一系列城市和每对城市之间的距离，求解访问每一座城市一次并回到起始城市的最短回路。\n- 它是组合优化中的一个NP困难问题\n\n## 贪心算法\n今朝有救今朝醉 - 每次面临选择的时候，选择眼前最优，而不考虑整体是否最优。\n使用贪心算法，使其转化为P问题。\n\n<!--more-->\n\n# 数据结构设计\n## 给城市编号\n- AA -> 0\n- BB -> 1\n- CC -> 2\n- DD -> 3\n\n## 城市间的距离\n用二维数组 distance 表示：\n\n|   | 0 | 1 | 2 | 3 |\n|---|---|---|---|---|\n| 0 | - | x | x | x |\n| 1 | x | - | x | x |\n| 2 | x | x | - | x |\n| 3 | x | x | x | - |\n\n那么城市 AA 和 BB 的距离就是：distance[0][1] 或者 distance[1][0]\n\n## 解（访问路径）\n用一个一维数组 result 来表示结果：\n[0,3,1,2,0,125]: AA -> DD -> BB -> CC -> AA 最后一位表示总路程\n\n\n# 控制结构（流程）设计\n![tsp_flow.jpeg](/images/tsp_flow.jpeg)\n\n# 代码实现\n## tsp_greedy.py\n```Python\n# n: number of city\n# result: []\n# distance: [][]\ndef next_city(n, result, distance):\n    current_city = result[-1]\n    min_distance = None\n    next_city = None\n    for x in range(n):\n        if x in result: continue\n        if min_distance is None or distance[current_city][x] < min_distance:\n            next_city = x\n            min_distance = distance[current_city][x]\n    return next_city\n\n# 1. 从0出发\n# 2. 在未访问过的城市中选出距离最短的城市\n# 3. 将这个城市加到路径里，将这段距离加在总路程里\n# 4. 如果路径包含了所有城市，前往5，否则，前往2\n# 5. 最后回到0，并加入这段距离\ndef tsp(n, distance):\n    result = [0]\n    total = 0\n    while(len(result) < n):\n        target = next_city(n, result, distance)\n        total += distance[result[-1]][target]\n        result.append(target)\n\n    total += distance[result[-1]][0]\n    result.append(0)\n    result.append(total)\n    return result\n```\n\n## tsp_test.py\n```Python\nimport tsp_greedy\nimport random\n\n# 根据n，生成用于测试的距离矩阵\ndef get_distance_matrix(n):\n    distance_matrix = [[0 for x in range(n)] for y in range(n)]\n    for i in range(n):\n        distance_matrix[i][i] = 0\n        for j in range(i+1,n):\n            distance = random.randint(10,99)\n            distance_matrix[i][j] = distance\n            distance_matrix[j][i] = distance\n        print('from {0} to other cities: {1}'.format(i,distance_matrix[i]))\n    return distance_matrix\n\n# Test\nn = int(input('input number of cities: '))\ndistance_matrix = get_distance_matrix(n)\n\ngreedy_result = tsp_greedy.tsp(n,distance_matrix)\nprint('greedy_result:', greedy_result)\n```\n\n\n# 算法分析\n\n## 正确性\n满足以下几点：\n- 结果包括了所有城市\n- 0开头，0结尾\n- 除0外，其他城市只出现一次\n- 总路程正确\n\n## 与最优解的偏差\n最优解的解法为穷举法，代码如下：\n\n```Python\n# 生成全排列列表的函数\n# [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\ndef permutation(arr):\n    if len(arr) == 0 or len(arr) == 1:\n        return [arr]\n    result = []\n    for i in arr:\n        temp_list = arr[:]\n        temp_list.remove(i)\n        temp = permutation(temp_list)\n        for j in temp:\n            j[0:0] = [i]    # 将i插入到数组第1位\n            result.append(j)\n    return result\n\n# 1. 获取n个城市的全排列\n# 2. 遍历全排列的每条路径\n# 3. 开头不是0的跳过，否则前往4\n# 4. 按照路径顺序，累加路程，得到总路程\n# 5. 如果此路径的总路程 < 最短总路程，替换最短总路程，并且更新最短路径\n# 6. 加入0到路径中\ndef tsp(n, dist_matrix):\n\n    cities = [x for x in range(n)]\n    perm_arr = permutation(cities)\n\n    result = None\n    min_distance = None\n    for arr in perm_arr:\n        if arr[0] != 0: continue    #skip non 0 start arr\n        current_distance = 0\n        for i in range(len(arr)-1):\n            current_distance += dist_matrix[arr[i]][arr[i+1]]\n        current_distance += dist_matrix[arr[-1]][0]\n        print('for path {0}, distance = {1}'.format(arr, current_distance))\n        if min_distance is None or current_distance < min_distance:\n            min_distance = current_distance\n            result = arr[:]\n    result.append(0)\n    result.append(min_distance)\n    return result\n```\n\n通过对比两组的计算结果，可以粗糙的得出一个偏差百分比。\nn=5，取对比100次的平均值。跑了大概3分钟，得到的结果是：5.1%\n\n测试代码：\n\n```Python\nimport tsp_force\nimport tsp_greedy\nimport random\n\n# 根据n，生成用于测试的距离矩阵\ndef get_distance_matrix(n):\n    distance_matrix = [[0 for x in range(n)] for y in range(n)]\n    for i in range(n):\n        distance_matrix[i][i] = 0\n        for j in range(i+1,n):\n            distance = random.randint(10,99)\n            distance_matrix[i][j] = distance\n            distance_matrix[j][i] = distance\n        print('from {0} to other cities: {1}'.format(i,distance_matrix[i]))\n    return distance_matrix\n\n# Test\n# n = int(input('input number of cities: '))\nn = 5\nm = 101\n\nforce_total = 0\ngreedy_total = 0\n\nfor i in range(m):\n    print('---> test #', i)\n    distance_matrix = get_distance_matrix(n)\n\n    force_result = tsp_force.tsp(n,distance_matrix)\n    print('force_result:', force_result)\n    greedy_result = tsp_greedy.tsp(n,distance_matrix)\n    print('greedy_result:', greedy_result)\n\n    force_total += force_result[-1]\n    greedy_total += greedy_result[-1]\n\nprint('force_total:',force_total)\nprint('greedy_total:',greedy_total)\nprint('difference:',(greedy_total - force_total)/force_total)\n\n```\n\n\n## 复杂度\n\n把注释拿掉，在有涉及到循环到地方标注出来。\n其中 next_city 到复杂度为 O(n^2)。\ntsp 方法应该为 O(n^3)。\n\n```Python\ndef next_city(n, result, distance):   \n    current_city = result[-1]\n    min_distance = None\n    next_city = None\n    for x in range(n):      ### O(n)\n        if x in result: continue    ### O(n^2)\n        if min_distance is None or distance[current_city][x] < min_distance:\n            next_city = x\n            min_distance = distance[current_city][x]\n    return next_city\n\ndef tsp(n, distance):\n    result = [0]\n    total = 0\n    while(len(result) < n):                     ### O(n)\n        target = next_city(n, result, distance)\n        total += distance[result[-1]][target]\n        result.append(target)\n\n    total += distance[result[-1]][0]\n    result.append(0)\n    result.append(total)\n    return result\n```\n","slug":"TSP问题-贪心算法-Python实现-算法分析","published":1,"updated":"2020-06-06T14:40:23.549Z","_id":"ckb3dedif0012sd5trtt6687b","comments":1,"layout":"post","photos":[],"link":"","content":"<p>根据哈工大战德臣老师的计算机专业导论，用Python和贪心算法，解TSP问题，并且分析。</p>\n<h1 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h1><h2 id=\"TSP-问题\"><a href=\"#TSP-问题\" class=\"headerlink\" title=\"TSP 问题\"></a>TSP 问题</h2><p>摘自维基百科：</p>\n<ul>\n<li>行商问题（最短路径问题）（英語：travelling salesman problem, TSP）</li>\n<li>给定一系列城市和每对城市之间的距离，求解访问每一座城市一次并回到起始城市的最短回路。</li>\n<li>它是组合优化中的一个NP困难问题</li>\n</ul>\n<h2 id=\"贪心算法\"><a href=\"#贪心算法\" class=\"headerlink\" title=\"贪心算法\"></a>贪心算法</h2><p>今朝有救今朝醉 - 每次面临选择的时候，选择眼前最优，而不考虑整体是否最优。<br>使用贪心算法，使其转化为P问题。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"数据结构设计\"><a href=\"#数据结构设计\" class=\"headerlink\" title=\"数据结构设计\"></a>数据结构设计</h1><h2 id=\"给城市编号\"><a href=\"#给城市编号\" class=\"headerlink\" title=\"给城市编号\"></a>给城市编号</h2><ul>\n<li>AA -&gt; 0</li>\n<li>BB -&gt; 1</li>\n<li>CC -&gt; 2</li>\n<li>DD -&gt; 3</li>\n</ul>\n<h2 id=\"城市间的距离\"><a href=\"#城市间的距离\" class=\"headerlink\" title=\"城市间的距离\"></a>城市间的距离</h2><p>用二维数组 distance 表示：</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>0</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>-</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n</tr>\n<tr>\n<td>1</td>\n<td>x</td>\n<td>-</td>\n<td>x</td>\n<td>x</td>\n</tr>\n<tr>\n<td>2</td>\n<td>x</td>\n<td>x</td>\n<td>-</td>\n<td>x</td>\n</tr>\n<tr>\n<td>3</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>那么城市 AA 和 BB 的距离就是：distance[0][1] 或者 distance[1][0]</p>\n<h2 id=\"解（访问路径）\"><a href=\"#解（访问路径）\" class=\"headerlink\" title=\"解（访问路径）\"></a>解（访问路径）</h2><p>用一个一维数组 result 来表示结果：<br>[0,3,1,2,0,125]: AA -&gt; DD -&gt; BB -&gt; CC -&gt; AA 最后一位表示总路程</p>\n<h1 id=\"控制结构（流程）设计\"><a href=\"#控制结构（流程）设计\" class=\"headerlink\" title=\"控制结构（流程）设计\"></a>控制结构（流程）设计</h1><p><img src=\"/images/tsp_flow.jpeg\" alt=\"tsp_flow.jpeg\"></p>\n<h1 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h1><h2 id=\"tsp-greedy-py\"><a href=\"#tsp-greedy-py\" class=\"headerlink\" title=\"tsp_greedy.py\"></a>tsp_greedy.py</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># n: number of city</span></span><br><span class=\"line\"><span class=\"comment\"># result: []</span></span><br><span class=\"line\"><span class=\"comment\"># distance: [][]</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">next_city</span><span class=\"params\">(n, result, distance)</span>:</span></span><br><span class=\"line\">    current_city = result[<span class=\"number\">-1</span>]</span><br><span class=\"line\">    min_distance = <span class=\"keyword\">None</span></span><br><span class=\"line\">    next_city = <span class=\"keyword\">None</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(n):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> x <span class=\"keyword\">in</span> result: <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> min_distance <span class=\"keyword\">is</span> <span class=\"keyword\">None</span> <span class=\"keyword\">or</span> distance[current_city][x] &lt; min_distance:</span><br><span class=\"line\">            next_city = x</span><br><span class=\"line\">            min_distance = distance[current_city][x]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> next_city</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 从0出发</span></span><br><span class=\"line\"><span class=\"comment\"># 2. 在未访问过的城市中选出距离最短的城市</span></span><br><span class=\"line\"><span class=\"comment\"># 3. 将这个城市加到路径里，将这段距离加在总路程里</span></span><br><span class=\"line\"><span class=\"comment\"># 4. 如果路径包含了所有城市，前往5，否则，前往2</span></span><br><span class=\"line\"><span class=\"comment\"># 5. 最后回到0，并加入这段距离</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tsp</span><span class=\"params\">(n, distance)</span>:</span></span><br><span class=\"line\">    result = [<span class=\"number\">0</span>]</span><br><span class=\"line\">    total = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(len(result) &lt; n):</span><br><span class=\"line\">        target = next_city(n, result, distance)</span><br><span class=\"line\">        total += distance[result[<span class=\"number\">-1</span>]][target]</span><br><span class=\"line\">        result.append(target)</span><br><span class=\"line\"></span><br><span class=\"line\">    total += distance[result[<span class=\"number\">-1</span>]][<span class=\"number\">0</span>]</span><br><span class=\"line\">    result.append(<span class=\"number\">0</span>)</span><br><span class=\"line\">    result.append(total)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"tsp-test-py\"><a href=\"#tsp-test-py\" class=\"headerlink\" title=\"tsp_test.py\"></a>tsp_test.py</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tsp_greedy</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据n，生成用于测试的距离矩阵</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_distance_matrix</span><span class=\"params\">(n)</span>:</span></span><br><span class=\"line\">    distance_matrix = [[<span class=\"number\">0</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(n)] <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> range(n)]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n):</span><br><span class=\"line\">        distance_matrix[i][i] = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(i+<span class=\"number\">1</span>,n):</span><br><span class=\"line\">            distance = random.randint(<span class=\"number\">10</span>,<span class=\"number\">99</span>)</span><br><span class=\"line\">            distance_matrix[i][j] = distance</span><br><span class=\"line\">            distance_matrix[j][i] = distance</span><br><span class=\"line\">        print(<span class=\"string\">'from &#123;0&#125; to other cities: &#123;1&#125;'</span>.format(i,distance_matrix[i]))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> distance_matrix</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Test</span></span><br><span class=\"line\">n = int(input(<span class=\"string\">'input number of cities: '</span>))</span><br><span class=\"line\">distance_matrix = get_distance_matrix(n)</span><br><span class=\"line\"></span><br><span class=\"line\">greedy_result = tsp_greedy.tsp(n,distance_matrix)</span><br><span class=\"line\">print(<span class=\"string\">'greedy_result:'</span>, greedy_result)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"算法分析\"><a href=\"#算法分析\" class=\"headerlink\" title=\"算法分析\"></a>算法分析</h1><h2 id=\"正确性\"><a href=\"#正确性\" class=\"headerlink\" title=\"正确性\"></a>正确性</h2><p>满足以下几点：</p>\n<ul>\n<li>结果包括了所有城市</li>\n<li>0开头，0结尾</li>\n<li>除0外，其他城市只出现一次</li>\n<li>总路程正确</li>\n</ul>\n<h2 id=\"与最优解的偏差\"><a href=\"#与最优解的偏差\" class=\"headerlink\" title=\"与最优解的偏差\"></a>与最优解的偏差</h2><p>最优解的解法为穷举法，代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 生成全排列列表的函数</span></span><br><span class=\"line\"><span class=\"comment\"># [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">permutation</span><span class=\"params\">(arr)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> len(arr) == <span class=\"number\">0</span> <span class=\"keyword\">or</span> len(arr) == <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [arr]</span><br><span class=\"line\">    result = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> arr:</span><br><span class=\"line\">        temp_list = arr[:]</span><br><span class=\"line\">        temp_list.remove(i)</span><br><span class=\"line\">        temp = permutation(temp_list)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> temp:</span><br><span class=\"line\">            j[<span class=\"number\">0</span>:<span class=\"number\">0</span>] = [i]    <span class=\"comment\"># 将i插入到数组第1位</span></span><br><span class=\"line\">            result.append(j)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 获取n个城市的全排列</span></span><br><span class=\"line\"><span class=\"comment\"># 2. 遍历全排列的每条路径</span></span><br><span class=\"line\"><span class=\"comment\"># 3. 开头不是0的跳过，否则前往4</span></span><br><span class=\"line\"><span class=\"comment\"># 4. 按照路径顺序，累加路程，得到总路程</span></span><br><span class=\"line\"><span class=\"comment\"># 5. 如果此路径的总路程 &lt; 最短总路程，替换最短总路程，并且更新最短路径</span></span><br><span class=\"line\"><span class=\"comment\"># 6. 加入0到路径中</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tsp</span><span class=\"params\">(n, dist_matrix)</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    cities = [x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(n)]</span><br><span class=\"line\">    perm_arr = permutation(cities)</span><br><span class=\"line\"></span><br><span class=\"line\">    result = <span class=\"keyword\">None</span></span><br><span class=\"line\">    min_distance = <span class=\"keyword\">None</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> arr <span class=\"keyword\">in</span> perm_arr:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> arr[<span class=\"number\">0</span>] != <span class=\"number\">0</span>: <span class=\"keyword\">continue</span>    <span class=\"comment\">#skip non 0 start arr</span></span><br><span class=\"line\">        current_distance = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(arr)<span class=\"number\">-1</span>):</span><br><span class=\"line\">            current_distance += dist_matrix[arr[i]][arr[i+<span class=\"number\">1</span>]]</span><br><span class=\"line\">        current_distance += dist_matrix[arr[<span class=\"number\">-1</span>]][<span class=\"number\">0</span>]</span><br><span class=\"line\">        print(<span class=\"string\">'for path &#123;0&#125;, distance = &#123;1&#125;'</span>.format(arr, current_distance))</span><br><span class=\"line\">        <span class=\"keyword\">if</span> min_distance <span class=\"keyword\">is</span> <span class=\"keyword\">None</span> <span class=\"keyword\">or</span> current_distance &lt; min_distance:</span><br><span class=\"line\">            min_distance = current_distance</span><br><span class=\"line\">            result = arr[:]</span><br><span class=\"line\">    result.append(<span class=\"number\">0</span>)</span><br><span class=\"line\">    result.append(min_distance)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n\n<p>通过对比两组的计算结果，可以粗糙的得出一个偏差百分比。<br>n=5，取对比100次的平均值。跑了大概3分钟，得到的结果是：5.1%</p>\n<p>测试代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tsp_force</span><br><span class=\"line\"><span class=\"keyword\">import</span> tsp_greedy</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据n，生成用于测试的距离矩阵</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_distance_matrix</span><span class=\"params\">(n)</span>:</span></span><br><span class=\"line\">    distance_matrix = [[<span class=\"number\">0</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(n)] <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> range(n)]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n):</span><br><span class=\"line\">        distance_matrix[i][i] = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(i+<span class=\"number\">1</span>,n):</span><br><span class=\"line\">            distance = random.randint(<span class=\"number\">10</span>,<span class=\"number\">99</span>)</span><br><span class=\"line\">            distance_matrix[i][j] = distance</span><br><span class=\"line\">            distance_matrix[j][i] = distance</span><br><span class=\"line\">        print(<span class=\"string\">'from &#123;0&#125; to other cities: &#123;1&#125;'</span>.format(i,distance_matrix[i]))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> distance_matrix</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Test</span></span><br><span class=\"line\"><span class=\"comment\"># n = int(input('input number of cities: '))</span></span><br><span class=\"line\">n = <span class=\"number\">5</span></span><br><span class=\"line\">m = <span class=\"number\">101</span></span><br><span class=\"line\"></span><br><span class=\"line\">force_total = <span class=\"number\">0</span></span><br><span class=\"line\">greedy_total = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(m):</span><br><span class=\"line\">    print(<span class=\"string\">'---&gt; test #'</span>, i)</span><br><span class=\"line\">    distance_matrix = get_distance_matrix(n)</span><br><span class=\"line\"></span><br><span class=\"line\">    force_result = tsp_force.tsp(n,distance_matrix)</span><br><span class=\"line\">    print(<span class=\"string\">'force_result:'</span>, force_result)</span><br><span class=\"line\">    greedy_result = tsp_greedy.tsp(n,distance_matrix)</span><br><span class=\"line\">    print(<span class=\"string\">'greedy_result:'</span>, greedy_result)</span><br><span class=\"line\"></span><br><span class=\"line\">    force_total += force_result[<span class=\"number\">-1</span>]</span><br><span class=\"line\">    greedy_total += greedy_result[<span class=\"number\">-1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">'force_total:'</span>,force_total)</span><br><span class=\"line\">print(<span class=\"string\">'greedy_total:'</span>,greedy_total)</span><br><span class=\"line\">print(<span class=\"string\">'difference:'</span>,(greedy_total - force_total)/force_total)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"复杂度\"><a href=\"#复杂度\" class=\"headerlink\" title=\"复杂度\"></a>复杂度</h2><p>把注释拿掉，在有涉及到循环到地方标注出来。<br>其中 next_city 到复杂度为 O(n^2)。<br>tsp 方法应该为 O(n^3)。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">next_city</span><span class=\"params\">(n, result, distance)</span>:</span>   </span><br><span class=\"line\">    current_city = result[<span class=\"number\">-1</span>]</span><br><span class=\"line\">    min_distance = <span class=\"keyword\">None</span></span><br><span class=\"line\">    next_city = <span class=\"keyword\">None</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(n):      <span class=\"comment\">### O(n)</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> x <span class=\"keyword\">in</span> result: <span class=\"keyword\">continue</span>    <span class=\"comment\">### O(n^2)</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> min_distance <span class=\"keyword\">is</span> <span class=\"keyword\">None</span> <span class=\"keyword\">or</span> distance[current_city][x] &lt; min_distance:</span><br><span class=\"line\">            next_city = x</span><br><span class=\"line\">            min_distance = distance[current_city][x]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> next_city</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tsp</span><span class=\"params\">(n, distance)</span>:</span></span><br><span class=\"line\">    result = [<span class=\"number\">0</span>]</span><br><span class=\"line\">    total = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(len(result) &lt; n):                     <span class=\"comment\">### O(n)</span></span><br><span class=\"line\">        target = next_city(n, result, distance)</span><br><span class=\"line\">        total += distance[result[<span class=\"number\">-1</span>]][target]</span><br><span class=\"line\">        result.append(target)</span><br><span class=\"line\"></span><br><span class=\"line\">    total += distance[result[<span class=\"number\">-1</span>]][<span class=\"number\">0</span>]</span><br><span class=\"line\">    result.append(<span class=\"number\">0</span>)</span><br><span class=\"line\">    result.append(total)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>根据哈工大战德臣老师的计算机专业导论，用Python和贪心算法，解TSP问题，并且分析。</p>\n<h1 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h1><h2 id=\"TSP-问题\"><a href=\"#TSP-问题\" class=\"headerlink\" title=\"TSP 问题\"></a>TSP 问题</h2><p>摘自维基百科：</p>\n<ul>\n<li>行商问题（最短路径问题）（英語：travelling salesman problem, TSP）</li>\n<li>给定一系列城市和每对城市之间的距离，求解访问每一座城市一次并回到起始城市的最短回路。</li>\n<li>它是组合优化中的一个NP困难问题</li>\n</ul>\n<h2 id=\"贪心算法\"><a href=\"#贪心算法\" class=\"headerlink\" title=\"贪心算法\"></a>贪心算法</h2><p>今朝有救今朝醉 - 每次面临选择的时候，选择眼前最优，而不考虑整体是否最优。<br>使用贪心算法，使其转化为P问题。</p>","more":"<h1 id=\"数据结构设计\"><a href=\"#数据结构设计\" class=\"headerlink\" title=\"数据结构设计\"></a>数据结构设计</h1><h2 id=\"给城市编号\"><a href=\"#给城市编号\" class=\"headerlink\" title=\"给城市编号\"></a>给城市编号</h2><ul>\n<li>AA -&gt; 0</li>\n<li>BB -&gt; 1</li>\n<li>CC -&gt; 2</li>\n<li>DD -&gt; 3</li>\n</ul>\n<h2 id=\"城市间的距离\"><a href=\"#城市间的距离\" class=\"headerlink\" title=\"城市间的距离\"></a>城市间的距离</h2><p>用二维数组 distance 表示：</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>0</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>-</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n</tr>\n<tr>\n<td>1</td>\n<td>x</td>\n<td>-</td>\n<td>x</td>\n<td>x</td>\n</tr>\n<tr>\n<td>2</td>\n<td>x</td>\n<td>x</td>\n<td>-</td>\n<td>x</td>\n</tr>\n<tr>\n<td>3</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>那么城市 AA 和 BB 的距离就是：distance[0][1] 或者 distance[1][0]</p>\n<h2 id=\"解（访问路径）\"><a href=\"#解（访问路径）\" class=\"headerlink\" title=\"解（访问路径）\"></a>解（访问路径）</h2><p>用一个一维数组 result 来表示结果：<br>[0,3,1,2,0,125]: AA -&gt; DD -&gt; BB -&gt; CC -&gt; AA 最后一位表示总路程</p>\n<h1 id=\"控制结构（流程）设计\"><a href=\"#控制结构（流程）设计\" class=\"headerlink\" title=\"控制结构（流程）设计\"></a>控制结构（流程）设计</h1><p><img src=\"/images/tsp_flow.jpeg\" alt=\"tsp_flow.jpeg\"></p>\n<h1 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h1><h2 id=\"tsp-greedy-py\"><a href=\"#tsp-greedy-py\" class=\"headerlink\" title=\"tsp_greedy.py\"></a>tsp_greedy.py</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># n: number of city</span></span><br><span class=\"line\"><span class=\"comment\"># result: []</span></span><br><span class=\"line\"><span class=\"comment\"># distance: [][]</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">next_city</span><span class=\"params\">(n, result, distance)</span>:</span></span><br><span class=\"line\">    current_city = result[<span class=\"number\">-1</span>]</span><br><span class=\"line\">    min_distance = <span class=\"keyword\">None</span></span><br><span class=\"line\">    next_city = <span class=\"keyword\">None</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(n):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> x <span class=\"keyword\">in</span> result: <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> min_distance <span class=\"keyword\">is</span> <span class=\"keyword\">None</span> <span class=\"keyword\">or</span> distance[current_city][x] &lt; min_distance:</span><br><span class=\"line\">            next_city = x</span><br><span class=\"line\">            min_distance = distance[current_city][x]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> next_city</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 从0出发</span></span><br><span class=\"line\"><span class=\"comment\"># 2. 在未访问过的城市中选出距离最短的城市</span></span><br><span class=\"line\"><span class=\"comment\"># 3. 将这个城市加到路径里，将这段距离加在总路程里</span></span><br><span class=\"line\"><span class=\"comment\"># 4. 如果路径包含了所有城市，前往5，否则，前往2</span></span><br><span class=\"line\"><span class=\"comment\"># 5. 最后回到0，并加入这段距离</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tsp</span><span class=\"params\">(n, distance)</span>:</span></span><br><span class=\"line\">    result = [<span class=\"number\">0</span>]</span><br><span class=\"line\">    total = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(len(result) &lt; n):</span><br><span class=\"line\">        target = next_city(n, result, distance)</span><br><span class=\"line\">        total += distance[result[<span class=\"number\">-1</span>]][target]</span><br><span class=\"line\">        result.append(target)</span><br><span class=\"line\"></span><br><span class=\"line\">    total += distance[result[<span class=\"number\">-1</span>]][<span class=\"number\">0</span>]</span><br><span class=\"line\">    result.append(<span class=\"number\">0</span>)</span><br><span class=\"line\">    result.append(total)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"tsp-test-py\"><a href=\"#tsp-test-py\" class=\"headerlink\" title=\"tsp_test.py\"></a>tsp_test.py</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tsp_greedy</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据n，生成用于测试的距离矩阵</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_distance_matrix</span><span class=\"params\">(n)</span>:</span></span><br><span class=\"line\">    distance_matrix = [[<span class=\"number\">0</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(n)] <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> range(n)]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n):</span><br><span class=\"line\">        distance_matrix[i][i] = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(i+<span class=\"number\">1</span>,n):</span><br><span class=\"line\">            distance = random.randint(<span class=\"number\">10</span>,<span class=\"number\">99</span>)</span><br><span class=\"line\">            distance_matrix[i][j] = distance</span><br><span class=\"line\">            distance_matrix[j][i] = distance</span><br><span class=\"line\">        print(<span class=\"string\">'from &#123;0&#125; to other cities: &#123;1&#125;'</span>.format(i,distance_matrix[i]))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> distance_matrix</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Test</span></span><br><span class=\"line\">n = int(input(<span class=\"string\">'input number of cities: '</span>))</span><br><span class=\"line\">distance_matrix = get_distance_matrix(n)</span><br><span class=\"line\"></span><br><span class=\"line\">greedy_result = tsp_greedy.tsp(n,distance_matrix)</span><br><span class=\"line\">print(<span class=\"string\">'greedy_result:'</span>, greedy_result)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"算法分析\"><a href=\"#算法分析\" class=\"headerlink\" title=\"算法分析\"></a>算法分析</h1><h2 id=\"正确性\"><a href=\"#正确性\" class=\"headerlink\" title=\"正确性\"></a>正确性</h2><p>满足以下几点：</p>\n<ul>\n<li>结果包括了所有城市</li>\n<li>0开头，0结尾</li>\n<li>除0外，其他城市只出现一次</li>\n<li>总路程正确</li>\n</ul>\n<h2 id=\"与最优解的偏差\"><a href=\"#与最优解的偏差\" class=\"headerlink\" title=\"与最优解的偏差\"></a>与最优解的偏差</h2><p>最优解的解法为穷举法，代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 生成全排列列表的函数</span></span><br><span class=\"line\"><span class=\"comment\"># [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">permutation</span><span class=\"params\">(arr)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> len(arr) == <span class=\"number\">0</span> <span class=\"keyword\">or</span> len(arr) == <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [arr]</span><br><span class=\"line\">    result = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> arr:</span><br><span class=\"line\">        temp_list = arr[:]</span><br><span class=\"line\">        temp_list.remove(i)</span><br><span class=\"line\">        temp = permutation(temp_list)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> temp:</span><br><span class=\"line\">            j[<span class=\"number\">0</span>:<span class=\"number\">0</span>] = [i]    <span class=\"comment\"># 将i插入到数组第1位</span></span><br><span class=\"line\">            result.append(j)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 获取n个城市的全排列</span></span><br><span class=\"line\"><span class=\"comment\"># 2. 遍历全排列的每条路径</span></span><br><span class=\"line\"><span class=\"comment\"># 3. 开头不是0的跳过，否则前往4</span></span><br><span class=\"line\"><span class=\"comment\"># 4. 按照路径顺序，累加路程，得到总路程</span></span><br><span class=\"line\"><span class=\"comment\"># 5. 如果此路径的总路程 &lt; 最短总路程，替换最短总路程，并且更新最短路径</span></span><br><span class=\"line\"><span class=\"comment\"># 6. 加入0到路径中</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tsp</span><span class=\"params\">(n, dist_matrix)</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    cities = [x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(n)]</span><br><span class=\"line\">    perm_arr = permutation(cities)</span><br><span class=\"line\"></span><br><span class=\"line\">    result = <span class=\"keyword\">None</span></span><br><span class=\"line\">    min_distance = <span class=\"keyword\">None</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> arr <span class=\"keyword\">in</span> perm_arr:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> arr[<span class=\"number\">0</span>] != <span class=\"number\">0</span>: <span class=\"keyword\">continue</span>    <span class=\"comment\">#skip non 0 start arr</span></span><br><span class=\"line\">        current_distance = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(arr)<span class=\"number\">-1</span>):</span><br><span class=\"line\">            current_distance += dist_matrix[arr[i]][arr[i+<span class=\"number\">1</span>]]</span><br><span class=\"line\">        current_distance += dist_matrix[arr[<span class=\"number\">-1</span>]][<span class=\"number\">0</span>]</span><br><span class=\"line\">        print(<span class=\"string\">'for path &#123;0&#125;, distance = &#123;1&#125;'</span>.format(arr, current_distance))</span><br><span class=\"line\">        <span class=\"keyword\">if</span> min_distance <span class=\"keyword\">is</span> <span class=\"keyword\">None</span> <span class=\"keyword\">or</span> current_distance &lt; min_distance:</span><br><span class=\"line\">            min_distance = current_distance</span><br><span class=\"line\">            result = arr[:]</span><br><span class=\"line\">    result.append(<span class=\"number\">0</span>)</span><br><span class=\"line\">    result.append(min_distance)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n\n<p>通过对比两组的计算结果，可以粗糙的得出一个偏差百分比。<br>n=5，取对比100次的平均值。跑了大概3分钟，得到的结果是：5.1%</p>\n<p>测试代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tsp_force</span><br><span class=\"line\"><span class=\"keyword\">import</span> tsp_greedy</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据n，生成用于测试的距离矩阵</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_distance_matrix</span><span class=\"params\">(n)</span>:</span></span><br><span class=\"line\">    distance_matrix = [[<span class=\"number\">0</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(n)] <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> range(n)]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n):</span><br><span class=\"line\">        distance_matrix[i][i] = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(i+<span class=\"number\">1</span>,n):</span><br><span class=\"line\">            distance = random.randint(<span class=\"number\">10</span>,<span class=\"number\">99</span>)</span><br><span class=\"line\">            distance_matrix[i][j] = distance</span><br><span class=\"line\">            distance_matrix[j][i] = distance</span><br><span class=\"line\">        print(<span class=\"string\">'from &#123;0&#125; to other cities: &#123;1&#125;'</span>.format(i,distance_matrix[i]))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> distance_matrix</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Test</span></span><br><span class=\"line\"><span class=\"comment\"># n = int(input('input number of cities: '))</span></span><br><span class=\"line\">n = <span class=\"number\">5</span></span><br><span class=\"line\">m = <span class=\"number\">101</span></span><br><span class=\"line\"></span><br><span class=\"line\">force_total = <span class=\"number\">0</span></span><br><span class=\"line\">greedy_total = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(m):</span><br><span class=\"line\">    print(<span class=\"string\">'---&gt; test #'</span>, i)</span><br><span class=\"line\">    distance_matrix = get_distance_matrix(n)</span><br><span class=\"line\"></span><br><span class=\"line\">    force_result = tsp_force.tsp(n,distance_matrix)</span><br><span class=\"line\">    print(<span class=\"string\">'force_result:'</span>, force_result)</span><br><span class=\"line\">    greedy_result = tsp_greedy.tsp(n,distance_matrix)</span><br><span class=\"line\">    print(<span class=\"string\">'greedy_result:'</span>, greedy_result)</span><br><span class=\"line\"></span><br><span class=\"line\">    force_total += force_result[<span class=\"number\">-1</span>]</span><br><span class=\"line\">    greedy_total += greedy_result[<span class=\"number\">-1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">'force_total:'</span>,force_total)</span><br><span class=\"line\">print(<span class=\"string\">'greedy_total:'</span>,greedy_total)</span><br><span class=\"line\">print(<span class=\"string\">'difference:'</span>,(greedy_total - force_total)/force_total)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"复杂度\"><a href=\"#复杂度\" class=\"headerlink\" title=\"复杂度\"></a>复杂度</h2><p>把注释拿掉，在有涉及到循环到地方标注出来。<br>其中 next_city 到复杂度为 O(n^2)。<br>tsp 方法应该为 O(n^3)。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">next_city</span><span class=\"params\">(n, result, distance)</span>:</span>   </span><br><span class=\"line\">    current_city = result[<span class=\"number\">-1</span>]</span><br><span class=\"line\">    min_distance = <span class=\"keyword\">None</span></span><br><span class=\"line\">    next_city = <span class=\"keyword\">None</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(n):      <span class=\"comment\">### O(n)</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> x <span class=\"keyword\">in</span> result: <span class=\"keyword\">continue</span>    <span class=\"comment\">### O(n^2)</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> min_distance <span class=\"keyword\">is</span> <span class=\"keyword\">None</span> <span class=\"keyword\">or</span> distance[current_city][x] &lt; min_distance:</span><br><span class=\"line\">            next_city = x</span><br><span class=\"line\">            min_distance = distance[current_city][x]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> next_city</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tsp</span><span class=\"params\">(n, distance)</span>:</span></span><br><span class=\"line\">    result = [<span class=\"number\">0</span>]</span><br><span class=\"line\">    total = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(len(result) &lt; n):                     <span class=\"comment\">### O(n)</span></span><br><span class=\"line\">        target = next_city(n, result, distance)</span><br><span class=\"line\">        total += distance[result[<span class=\"number\">-1</span>]][target]</span><br><span class=\"line\">        result.append(target)</span><br><span class=\"line\"></span><br><span class=\"line\">    total += distance[result[<span class=\"number\">-1</span>]][<span class=\"number\">0</span>]</span><br><span class=\"line\">    result.append(<span class=\"number\">0</span>)</span><br><span class=\"line\">    result.append(total)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>"},{"title":"学习 Spring Boot - 1","date":"2017-12-22T21:28:24.000Z","_content":"\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n学习 Spring Boot 有一段时间，也看过很多人的教程，中途放弃了几次，又重新开始。\n需要很不负责地说，有些教程确实因为时间的关系，已经不适合用来学习参考了。\n\n这篇博客包括以下内容：\n1. 项目初始化\n\t- Maven 的作用\n\t- 内置 TomCat\n2. 运行项目，创建简单的 info 页面\n3. 添加如下 Web Service\n\t- GET 获得全部用户信息\n\t- GET 获得某个用户信息\n\t- POST 添加一个用户\n\t- PUT 更新某个用户\n\t- DELETE 删除某个用户\n\n<!--more-->\n\n# 项目初始化\n\nSpring Boot 常用的初始方式有三种：\n- Spring Initializer\n- Spring Boot CLI\n- Spring Tool Suite\n\n后两者需要额外安装，我比较推荐使用 Spring Initializer 初始化之后，再导入到 Eclipse 中。\n\n## 初始化操作\n\n1. Go to [https://start.spring.io/](https://start.spring.io/)\n2. 如图填写，在 `Search for dependencies` 下面填 `web` 之后选择，我们需要用到这个 Dependency。\n\t![spring-init](/images/spring-init.png)\n3. 点击 `Generate Project`，生成并且下载。 解压后放在 Eclipse 的 workspace 文件夹下面。\n4. 打开 `Eclipse`, 右键-`Import..`-`Existing Maven Projects`\n5. 选择刚才解压的项目文件夹。例如：D:\\workspace\\SpringBootDemo\n6. `Projects` 窗口中会出现 `pom.xml`，完成。\n\n可能碰到的问题：\n- 这里可能会出现 `Project build error`，到 pom.xml 里面，把 Parent 的版本改成 1.5.8 即可。 估计 1.5.9 以及以上的版本和我的 Maven 不合吧。\n- `Configuration is not up-to-date`： 右键项目-`Maven`-`Update Project`。\n\n效果如下：\n![springboot-structure](/images/springboot-structure.png)\n\n## Maven 的作用\n\n在我的理解中，Maven 主要的作用就是帮助管理 library。 作为一个框架，Spring 会用到很多其他的库，这些库也有自己的版本以及各种更新。 Maven 可以帮助节约大量的操作。\n\n比如`spring-boot-starter-web`, 用到几十个库，自己下载再添加，费时且可能出错。\n而在 Maven 的 pom.xml 文件中，输入下面这段代码：\n```\n<dependencies>\n\t...\n\t<dependency>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t</dependency>\n\t...\n</dependencies>\n```\n保存后，系统会自动添加 `Maven Dependencies`，里面会有所有相关的库。\n之后只需在 pom.xml 中修改，保存之后，系统会自动完成更新。\n\n## 内置的 TomCat\n\n这是一个困扰我很长一段时间的问题，程序开始工作，向外发布信息，需要在一个 Server 上运作。 所以一般的 Web Project，我们都会添加 TomCat 作为服务器，程序运行在 TomCat 上面。\n\n但是对于 Spring Boot 来说，就不需要了，在这里，其实它只是一个普通的 Java Project。 只是内置了 TomCat，可以在`Maven Dependencies`中找到`tomcat-embed-core-8.5.23.jar`等库，说明事实上程序运行依然是通过 TomCat 完成，内置的好处就是...有太多好处了。\n\n所以只需要按照普通的 Java 程序来运行即可。\n\n\n# 运行项目，创建简单的 info 页面\n\n## 运行项目\n\n打开 DemoApplication.java，如下代码已经自动生成：\n```\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class DemoApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(DemoApplication.class, args);\n\t}\n}\n```\n\n直接按照普通的程序运行即可。\n\nConsole 里面会得到 Spring 图标，以及几个关键提示：\n- Initializing Spring embedded WebApplicationContext\n- Tomcat started on port(s): 8080 (http)\n- Started DemoApplication in 1.509 seconds\n\n这样，程序已经开始在 TomCat 上运行了。\n\n打开 `http://localhost:8080/` 会得到 `Whitelabel Error Page`，因为我们还没有创建任何内容。\n下面我们添加一个 Controller，来显示一些内容。\n\n## 添加 info 页面\n1. 添加 package: `io.ryanluoxu.springboot.demo.controller`\n2. 在此 package 下面创建 InfoController.java, 如下：\n\t```\n\timport org.springframework.web.bind.annotation.RequestMapping;\n\timport org.springframework.web.bind.annotation.RestController;\n\t\n\t@RestController\n\tpublic class InfoController {\n\t\n\t\t@RequestMapping(\"/info\")\n\t\tpublic String showInfo() {\n\t\t\tString info = \"This is a Spring Boot Starter Project by RyanLuoXu..\";\n\t\t\treturn info;\n\t\t}\n\t\n\t}\n\t```\n这样，事实上已经创建了一个简单的 web service。\n运行程序，前往 http://localhost:8080/info 即可看到 info 的内容。\n\n这里我们只是返回了一个字符串，下面我们以 JSON 格式返回更多的信息。\n\n## 添加 moreinfo 页面\n1. 添加 package: io.ryanluoxu.springboot.demo.model\n2. 在此 package下面创建 Info.java，如下：\n\t```\n\tpublic class Info {\n\t\t\n\t\tprivate String description;\n\t\tprivate String startDate;\n\t\tprivate String author;\n\t\tprivate String framework;\n\t\tprivate String database;\n\t\t\n\t\t...setters and getters...\n\t}\n\n\t```\n3. 在 InfoController.java 中添加：\n\t```\n\t@RequestMapping(\"/moreinfo\")\n\tpublic Info showMoreInfo() {\n\t\tInfo info = new Info();\n\t\t\n\t\tinfo.setAuthor(\"RyanLuoXu\");\n\t\tinfo.setDatabase(\"PostgreSQL\");\n\t\tinfo.setDescription(\"This is a Spring Boot Starter Project\");\n\t\tinfo.setFramework(\"Spring Boot\");\n\t\tinfo.setStartDate(\"2017-12-23\");\n\t\t\n\t\treturn info;\n\t}\n\t```\n\t- 创建 info 为一个类\n\t- 然后在 showMoreInfo() 里面定义它的内容，并且返回含有多个信息的 info 对象\n\t- info 会被自动转成 JSON 格式\n\n运行程序，前往 http://localhost:8080/moreinfo 即可看到 info 的内容。 如下：\n\n\n>{\n  \"description\": \"This is a Spring Boot Starter Project\",\n  \"startDate\": \"2017-12-23\",\n  \"author\": \"RyanLuoXu\",\n  \"framework\": \"Spring Boot\",\n  \"database\": \"PostgreSQL\"\n}\n\n这里为了方便，我们把信息直接放在了 Controller 里面，事实上 Controller 是通过调用 Service 里的方法得到信息的。\n下面的例子会把这部分分离开来，并且创建几个常用的 web service。\n\n# 添加 Web Service : GET, POST, PUT & DELETE\n\n这部分，我们新添加一个 User 类，实现对 user 信息的获取，更新，修改和删除。\n\n## GET 获得全部\n1. 在 io.ryanluoxu.springboot.demo.model 下面，创建 User.java， 如下：\n\t```\n\tpublic class User {\n\t\n\t\tprivate String userName;\n\t\tprivate int age;\n\t\tprivate String nationality;\n\n\t\t...setters and getters...\t\t\n\t}\n\t```\n2. 添加 package: io.ryanluoxu.springboot.demo.service\n3. 在此 package 下面，创建 UserService.java, 如下：\n\t```\n\t@Service\n\tpublic class UserService {\n\t\t\n\t\tArrayList<User> userList = new ArrayList<>();\n\t\t\n\t\tpublic UserService() {\n\t\t\t\n\t\t\t// create fake database here\n\t\t\tUser user1 = new User();\n\t\t\tuser1.setUserName(\"Melvin\");\n\t\t\tuser1.setAge(30);\n\t\t\tuser1.setNationality(\"Singaporean\");\n\t\t\t\n\t\t\tUser user2 = new User();\n\t\t\tuser2.setUserName(\"Ryan\");\n\t\t\tuser2.setAge(36);\n\t\t\tuser2.setNationality(\"American\");\n\t\t\t\n\t\t\tUser user3 = new User();\n\t\t\tuser3.setUserName(\"Hazel\");\n\t\t\tuser3.setAge(26);\n\t\t\tuser3.setNationality(\"Chinese\");\n\t\t\t\n\t\t\tuserList.add(user1);\n\t\t\tuserList.add(user2);\n\t\t\tuserList.add(user3);\n\t\t}\n\t}\n\n\t// 一旦获取 UserService 类的对象，该对象中自带以上虚拟的信息\n\t// 后续可以连接数据库，用 DAO 来获取数据\n\t```\n4. 在 UserService.java 里，添加 getUserList()：\n\t```\n\tpublic ArrayList<User> getUserList(){\n\t\treturn userList;\n\t}\t\n\t```\n5. 在 io.ryanluoxu.springboot.demo.controller 下面，创建 UserController.java：\n\t```\n\t@RestController\n\tpublic class UserController {\n\t\t\n\t\t@Autowired\n\t\tprivate UserService userService;\t// get one time instance\n\t\t\n\t\t@RequestMapping(\"/users\")\t\t\t// default method = SET\n\t\tpublic ArrayList<User> getUserList(){\n\t\t\tArrayList<User> userList = userService.getUserList();\n\t\t\treturn userList;\n\t\t}\n\t}\n\t```\n\t- 这里获取了一个 userService 对象。 \n\t- 事实上是 Spring 巡视项目，根据 `@RestController` 和 `@Service` 创建了 userController 和 userService\n\t- 然后根据 `@Autowired` 将 userService 注入到 userController 中，所谓的依赖注入。\n\t- 当 ~/users 的 web service 被翻牌的时候，getUserList() 运行，通过 userService.getUserList() 得到信息，返回给呼叫该服务的前端。\n6. 运行程序, 前往 http://localhost:8080/users 得到：\n![get-uses](/images/get-uses.png)\n\n这里通过 URL，得到所有用户信息，下面获取特定某个人的信息。\n\n## GET 获得特定某个\n1. 在 UserService.java, 添加：\n\t```\n\tpublic User getUserByName(String name) {\n\t\tUser user  = userList.stream().filter(u -> u.getUserName().equals(name)).findFirst().get();\n\t\treturn user;\n\t}\n\t```\n2. 在 UserController.java, 添加：\n\t```\n\t@RequestMapping(\"/users/{name}\")\n\tpublic User getUserByName(@PathVariable String name) {\n\t\tUser user = userService.getUserByName(name);\n\t\treturn user;\n\t}\n\t// link {name} to name; {name1} X\n\t```\n\t- `@RequestMapping(\"/users/{name}\")`\n\t- `@PathVariable String name`\n3. controller 根据前端过来的 name 参数，呼叫 userService。\n4. userService 在用户列表里找到符合条件的信息，返回给 controller。\n5. controller 再以 JSON 格式返回给前端\n6. 运行程序, 前往 http://localhost:8080/users/Melvin, 得到：\n>{\n  \"userName\": \"Melvin\",\n  \"age\": 30,\n  \"nationality\": \"Singaporean\"\n}\n\n对于 GET 来说，都是获取信息，当 URL 直接在浏览器上输入时，都是默认 GET 方法。\n下面的添加，更新和删除需要借助额外的工具：PostMan。\n- https://www.getpostman.com/\n- 下载并安装\n\n## POST 添加\n\n1. 在 UserService.java, 添加：\n\t```\n\tpublic boolean addUser(User user) {\n\t\tboolean isSuccess = false;\n\t\t\n\t\ttry {\n\t\t\tisSuccess = userList.add(user);\t\t// add user may fail when connect to database\n\t\t\t\n\t\t} catch (Exception e) {\n\t\t\tSystem.err.println(\"Fail to add user..\");\n\t\t}\n\t\t\n\t\treturn isSuccess;\n\t}\n\t```\n2. 在 UserController.java, 添加：\n\t```\n\t@RequestMapping(method=RequestMethod.POST, value=\"/users\")\n\tpublic boolean addUser(@RequestBody User user) {\t// transfer RequestBody to User instance\n\t\tboolean isSuccess = userService.addUser(user);\n\t\treturn isSuccess;\n\t}\n\t```\n\t- `@RequestMapping(method=RequestMethod.POST, value=\"/users\")`\n\t- `@RequestBody User user`\n3. 对于前端来说：\n\t- 同样是 `http://localhost:8080/users/`，此时采用的是 POST 方法\n\t- POST 的同时需要将添加的信息，以 JSON 的格式传递到 Controller\n\t- Controller 再用 `@RequestBody User user` 传递给 Service\n\t- Service 添加成功，返回一个 True。\n4. 运行程序，用 PostMan 来测试。\n\n打开 PostMan：\n1. 选择 POST 作为方法，URL=http://localhost:8080/users/\n2. Headers：\n\t- Key: Content-Type\n\t- Value: application/json\n3. Body:\n\t- raw\n\t- JSON (application/json)\n\n如图：\n![post-add-user](/images/post-add-user.png)\n\n返回的结果得到 true。\n前往 http://localhost:8080/users 得到：\n![post-result](/images/post-result.png)\n\n## PUT 更新某个\n1. 在 UserService.java, 添加：\n\t```\n\tpublic boolean updateUserByName(User updatedUser, String name) {\n\t\tboolean isSuccess = false;\n\t\t\n\t\t// get user with request name and replace it\n\t\tfor (User currentUser : userList) {\n\t\t\tif (currentUser.getUserName().equals(name)) {\n\t\t\t\tint index = userList.indexOf(currentUser);\n\t\t\t\tuserList.set(index, updatedUser);\n\t\t\t\tisSuccess = true;\n\t\t\t} \n\t\t}\n\t\t\n\t\tif (!isSuccess) {\n\t\t\tSystem.err.println(\"There is no user called \" + name);\n\t\t}\n\t\t\n\t\treturn isSuccess;\n\t}\n\t```\n2. 在 UserController.java, 添加：\n\t```\n\t@RequestMapping(method=RequestMethod.PUT, value=\"/users/{name}\")\n\tpublic boolean updateUserByName(@RequestBody User user, @PathVariable String name) {\t\n\t\tboolean isSuccess = userService.updateUserByName(user, name);\n\t\treturn isSuccess;\n\t}\n\t```\n\t- `@RequestMapping(method=RequestMethod.PUT, value=\"/users/{name}\")`\n\t- `@RequestBody User user, @PathVariable String name`\n3. 用 name 来选中某个用户，用 user 来更新信息。 成功，返回 true。\n4. 运行程序，用 PostMan 来测试。\n\n打开 PostMan：\n1. 选择 PUT 作为方法, URL = http://localhost:8080/users/Melvin\n2. Headers：\n\t- Key: Content-Type\n\t- Value: application/json\n3. Body:\n\t- raw\n\t- JSON (application/json)\n\n如图：\n![put-update-user](/images/put-update-user.png)\n\n返回的结果得到 true。\n前往 http://localhost:8080/users 得到：\n![put-result](/images/put-result.png)\n\nMelvin 的信息已经被替换掉了。\n\n## DELETE 删除某个\n1. 在 UserService.java, 添加：\n\t```\n\tpublic boolean removeUserByName(String name) {\n\t\tboolean isSuccess = false;\n\t\ttry {\n\t\t\tisSuccess = userList.removeIf(user -> user.getUserName().equals(name));\n\t\t\tif (!isSuccess) {\n\t\t\t\tSystem.err.println(\"There is no user called \" + name);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tSystem.err.println(\"Fail to remove user called \" + name);\n\t\t}\n\t\t\n\t\treturn isSuccess;\n\t}\n\t```\n2. 在 UserController.java, 添加：\n\t```\n\t@RequestMapping(method=RequestMethod.DELETE, value=\"/users/{name}\")\n\tpublic boolean removeUserByName(@PathVariable String name) {\t\n\t\tboolean isSuccess = userService.removeUserByName(name);\n\t\treturn isSuccess;\n\t}\n\t```\n3. 用 name 来选中某个用户，删除成功，返回 true。\n4. 运行程序，用 PostMan 来测试。\n\n打开 PostMan：\n1. 选择 DELETE 作为方法, URL = http://localhost:8080/users/Grace\n2. 前往 http://localhost:8080/users 验证结果。\n\n\n# Web Application Layer\n\n\tHTML(view)\n\tcontroller.js\n\tservice.js \n\t===============\n\tController.java\n\tService.java\n\tRepository.java\n\t===============\n\tBD-table\n\t\t\t\n\n** 继续学习 -> [学习 Spring Boot](/categories/SpringBoot)**","source":"_posts/学习-Spring-Boot-1.md","raw":"---\ntitle: 学习 Spring Boot - 1\ndate: 2017-12-23 05:28:24\ncategories: SpringBoot\ntags: [Spring, Spring Boot, beginner, Maven, Rest]\n---\n\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n学习 Spring Boot 有一段时间，也看过很多人的教程，中途放弃了几次，又重新开始。\n需要很不负责地说，有些教程确实因为时间的关系，已经不适合用来学习参考了。\n\n这篇博客包括以下内容：\n1. 项目初始化\n\t- Maven 的作用\n\t- 内置 TomCat\n2. 运行项目，创建简单的 info 页面\n3. 添加如下 Web Service\n\t- GET 获得全部用户信息\n\t- GET 获得某个用户信息\n\t- POST 添加一个用户\n\t- PUT 更新某个用户\n\t- DELETE 删除某个用户\n\n<!--more-->\n\n# 项目初始化\n\nSpring Boot 常用的初始方式有三种：\n- Spring Initializer\n- Spring Boot CLI\n- Spring Tool Suite\n\n后两者需要额外安装，我比较推荐使用 Spring Initializer 初始化之后，再导入到 Eclipse 中。\n\n## 初始化操作\n\n1. Go to [https://start.spring.io/](https://start.spring.io/)\n2. 如图填写，在 `Search for dependencies` 下面填 `web` 之后选择，我们需要用到这个 Dependency。\n\t![spring-init](/images/spring-init.png)\n3. 点击 `Generate Project`，生成并且下载。 解压后放在 Eclipse 的 workspace 文件夹下面。\n4. 打开 `Eclipse`, 右键-`Import..`-`Existing Maven Projects`\n5. 选择刚才解压的项目文件夹。例如：D:\\workspace\\SpringBootDemo\n6. `Projects` 窗口中会出现 `pom.xml`，完成。\n\n可能碰到的问题：\n- 这里可能会出现 `Project build error`，到 pom.xml 里面，把 Parent 的版本改成 1.5.8 即可。 估计 1.5.9 以及以上的版本和我的 Maven 不合吧。\n- `Configuration is not up-to-date`： 右键项目-`Maven`-`Update Project`。\n\n效果如下：\n![springboot-structure](/images/springboot-structure.png)\n\n## Maven 的作用\n\n在我的理解中，Maven 主要的作用就是帮助管理 library。 作为一个框架，Spring 会用到很多其他的库，这些库也有自己的版本以及各种更新。 Maven 可以帮助节约大量的操作。\n\n比如`spring-boot-starter-web`, 用到几十个库，自己下载再添加，费时且可能出错。\n而在 Maven 的 pom.xml 文件中，输入下面这段代码：\n```\n<dependencies>\n\t...\n\t<dependency>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t</dependency>\n\t...\n</dependencies>\n```\n保存后，系统会自动添加 `Maven Dependencies`，里面会有所有相关的库。\n之后只需在 pom.xml 中修改，保存之后，系统会自动完成更新。\n\n## 内置的 TomCat\n\n这是一个困扰我很长一段时间的问题，程序开始工作，向外发布信息，需要在一个 Server 上运作。 所以一般的 Web Project，我们都会添加 TomCat 作为服务器，程序运行在 TomCat 上面。\n\n但是对于 Spring Boot 来说，就不需要了，在这里，其实它只是一个普通的 Java Project。 只是内置了 TomCat，可以在`Maven Dependencies`中找到`tomcat-embed-core-8.5.23.jar`等库，说明事实上程序运行依然是通过 TomCat 完成，内置的好处就是...有太多好处了。\n\n所以只需要按照普通的 Java 程序来运行即可。\n\n\n# 运行项目，创建简单的 info 页面\n\n## 运行项目\n\n打开 DemoApplication.java，如下代码已经自动生成：\n```\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class DemoApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(DemoApplication.class, args);\n\t}\n}\n```\n\n直接按照普通的程序运行即可。\n\nConsole 里面会得到 Spring 图标，以及几个关键提示：\n- Initializing Spring embedded WebApplicationContext\n- Tomcat started on port(s): 8080 (http)\n- Started DemoApplication in 1.509 seconds\n\n这样，程序已经开始在 TomCat 上运行了。\n\n打开 `http://localhost:8080/` 会得到 `Whitelabel Error Page`，因为我们还没有创建任何内容。\n下面我们添加一个 Controller，来显示一些内容。\n\n## 添加 info 页面\n1. 添加 package: `io.ryanluoxu.springboot.demo.controller`\n2. 在此 package 下面创建 InfoController.java, 如下：\n\t```\n\timport org.springframework.web.bind.annotation.RequestMapping;\n\timport org.springframework.web.bind.annotation.RestController;\n\t\n\t@RestController\n\tpublic class InfoController {\n\t\n\t\t@RequestMapping(\"/info\")\n\t\tpublic String showInfo() {\n\t\t\tString info = \"This is a Spring Boot Starter Project by RyanLuoXu..\";\n\t\t\treturn info;\n\t\t}\n\t\n\t}\n\t```\n这样，事实上已经创建了一个简单的 web service。\n运行程序，前往 http://localhost:8080/info 即可看到 info 的内容。\n\n这里我们只是返回了一个字符串，下面我们以 JSON 格式返回更多的信息。\n\n## 添加 moreinfo 页面\n1. 添加 package: io.ryanluoxu.springboot.demo.model\n2. 在此 package下面创建 Info.java，如下：\n\t```\n\tpublic class Info {\n\t\t\n\t\tprivate String description;\n\t\tprivate String startDate;\n\t\tprivate String author;\n\t\tprivate String framework;\n\t\tprivate String database;\n\t\t\n\t\t...setters and getters...\n\t}\n\n\t```\n3. 在 InfoController.java 中添加：\n\t```\n\t@RequestMapping(\"/moreinfo\")\n\tpublic Info showMoreInfo() {\n\t\tInfo info = new Info();\n\t\t\n\t\tinfo.setAuthor(\"RyanLuoXu\");\n\t\tinfo.setDatabase(\"PostgreSQL\");\n\t\tinfo.setDescription(\"This is a Spring Boot Starter Project\");\n\t\tinfo.setFramework(\"Spring Boot\");\n\t\tinfo.setStartDate(\"2017-12-23\");\n\t\t\n\t\treturn info;\n\t}\n\t```\n\t- 创建 info 为一个类\n\t- 然后在 showMoreInfo() 里面定义它的内容，并且返回含有多个信息的 info 对象\n\t- info 会被自动转成 JSON 格式\n\n运行程序，前往 http://localhost:8080/moreinfo 即可看到 info 的内容。 如下：\n\n\n>{\n  \"description\": \"This is a Spring Boot Starter Project\",\n  \"startDate\": \"2017-12-23\",\n  \"author\": \"RyanLuoXu\",\n  \"framework\": \"Spring Boot\",\n  \"database\": \"PostgreSQL\"\n}\n\n这里为了方便，我们把信息直接放在了 Controller 里面，事实上 Controller 是通过调用 Service 里的方法得到信息的。\n下面的例子会把这部分分离开来，并且创建几个常用的 web service。\n\n# 添加 Web Service : GET, POST, PUT & DELETE\n\n这部分，我们新添加一个 User 类，实现对 user 信息的获取，更新，修改和删除。\n\n## GET 获得全部\n1. 在 io.ryanluoxu.springboot.demo.model 下面，创建 User.java， 如下：\n\t```\n\tpublic class User {\n\t\n\t\tprivate String userName;\n\t\tprivate int age;\n\t\tprivate String nationality;\n\n\t\t...setters and getters...\t\t\n\t}\n\t```\n2. 添加 package: io.ryanluoxu.springboot.demo.service\n3. 在此 package 下面，创建 UserService.java, 如下：\n\t```\n\t@Service\n\tpublic class UserService {\n\t\t\n\t\tArrayList<User> userList = new ArrayList<>();\n\t\t\n\t\tpublic UserService() {\n\t\t\t\n\t\t\t// create fake database here\n\t\t\tUser user1 = new User();\n\t\t\tuser1.setUserName(\"Melvin\");\n\t\t\tuser1.setAge(30);\n\t\t\tuser1.setNationality(\"Singaporean\");\n\t\t\t\n\t\t\tUser user2 = new User();\n\t\t\tuser2.setUserName(\"Ryan\");\n\t\t\tuser2.setAge(36);\n\t\t\tuser2.setNationality(\"American\");\n\t\t\t\n\t\t\tUser user3 = new User();\n\t\t\tuser3.setUserName(\"Hazel\");\n\t\t\tuser3.setAge(26);\n\t\t\tuser3.setNationality(\"Chinese\");\n\t\t\t\n\t\t\tuserList.add(user1);\n\t\t\tuserList.add(user2);\n\t\t\tuserList.add(user3);\n\t\t}\n\t}\n\n\t// 一旦获取 UserService 类的对象，该对象中自带以上虚拟的信息\n\t// 后续可以连接数据库，用 DAO 来获取数据\n\t```\n4. 在 UserService.java 里，添加 getUserList()：\n\t```\n\tpublic ArrayList<User> getUserList(){\n\t\treturn userList;\n\t}\t\n\t```\n5. 在 io.ryanluoxu.springboot.demo.controller 下面，创建 UserController.java：\n\t```\n\t@RestController\n\tpublic class UserController {\n\t\t\n\t\t@Autowired\n\t\tprivate UserService userService;\t// get one time instance\n\t\t\n\t\t@RequestMapping(\"/users\")\t\t\t// default method = SET\n\t\tpublic ArrayList<User> getUserList(){\n\t\t\tArrayList<User> userList = userService.getUserList();\n\t\t\treturn userList;\n\t\t}\n\t}\n\t```\n\t- 这里获取了一个 userService 对象。 \n\t- 事实上是 Spring 巡视项目，根据 `@RestController` 和 `@Service` 创建了 userController 和 userService\n\t- 然后根据 `@Autowired` 将 userService 注入到 userController 中，所谓的依赖注入。\n\t- 当 ~/users 的 web service 被翻牌的时候，getUserList() 运行，通过 userService.getUserList() 得到信息，返回给呼叫该服务的前端。\n6. 运行程序, 前往 http://localhost:8080/users 得到：\n![get-uses](/images/get-uses.png)\n\n这里通过 URL，得到所有用户信息，下面获取特定某个人的信息。\n\n## GET 获得特定某个\n1. 在 UserService.java, 添加：\n\t```\n\tpublic User getUserByName(String name) {\n\t\tUser user  = userList.stream().filter(u -> u.getUserName().equals(name)).findFirst().get();\n\t\treturn user;\n\t}\n\t```\n2. 在 UserController.java, 添加：\n\t```\n\t@RequestMapping(\"/users/{name}\")\n\tpublic User getUserByName(@PathVariable String name) {\n\t\tUser user = userService.getUserByName(name);\n\t\treturn user;\n\t}\n\t// link {name} to name; {name1} X\n\t```\n\t- `@RequestMapping(\"/users/{name}\")`\n\t- `@PathVariable String name`\n3. controller 根据前端过来的 name 参数，呼叫 userService。\n4. userService 在用户列表里找到符合条件的信息，返回给 controller。\n5. controller 再以 JSON 格式返回给前端\n6. 运行程序, 前往 http://localhost:8080/users/Melvin, 得到：\n>{\n  \"userName\": \"Melvin\",\n  \"age\": 30,\n  \"nationality\": \"Singaporean\"\n}\n\n对于 GET 来说，都是获取信息，当 URL 直接在浏览器上输入时，都是默认 GET 方法。\n下面的添加，更新和删除需要借助额外的工具：PostMan。\n- https://www.getpostman.com/\n- 下载并安装\n\n## POST 添加\n\n1. 在 UserService.java, 添加：\n\t```\n\tpublic boolean addUser(User user) {\n\t\tboolean isSuccess = false;\n\t\t\n\t\ttry {\n\t\t\tisSuccess = userList.add(user);\t\t// add user may fail when connect to database\n\t\t\t\n\t\t} catch (Exception e) {\n\t\t\tSystem.err.println(\"Fail to add user..\");\n\t\t}\n\t\t\n\t\treturn isSuccess;\n\t}\n\t```\n2. 在 UserController.java, 添加：\n\t```\n\t@RequestMapping(method=RequestMethod.POST, value=\"/users\")\n\tpublic boolean addUser(@RequestBody User user) {\t// transfer RequestBody to User instance\n\t\tboolean isSuccess = userService.addUser(user);\n\t\treturn isSuccess;\n\t}\n\t```\n\t- `@RequestMapping(method=RequestMethod.POST, value=\"/users\")`\n\t- `@RequestBody User user`\n3. 对于前端来说：\n\t- 同样是 `http://localhost:8080/users/`，此时采用的是 POST 方法\n\t- POST 的同时需要将添加的信息，以 JSON 的格式传递到 Controller\n\t- Controller 再用 `@RequestBody User user` 传递给 Service\n\t- Service 添加成功，返回一个 True。\n4. 运行程序，用 PostMan 来测试。\n\n打开 PostMan：\n1. 选择 POST 作为方法，URL=http://localhost:8080/users/\n2. Headers：\n\t- Key: Content-Type\n\t- Value: application/json\n3. Body:\n\t- raw\n\t- JSON (application/json)\n\n如图：\n![post-add-user](/images/post-add-user.png)\n\n返回的结果得到 true。\n前往 http://localhost:8080/users 得到：\n![post-result](/images/post-result.png)\n\n## PUT 更新某个\n1. 在 UserService.java, 添加：\n\t```\n\tpublic boolean updateUserByName(User updatedUser, String name) {\n\t\tboolean isSuccess = false;\n\t\t\n\t\t// get user with request name and replace it\n\t\tfor (User currentUser : userList) {\n\t\t\tif (currentUser.getUserName().equals(name)) {\n\t\t\t\tint index = userList.indexOf(currentUser);\n\t\t\t\tuserList.set(index, updatedUser);\n\t\t\t\tisSuccess = true;\n\t\t\t} \n\t\t}\n\t\t\n\t\tif (!isSuccess) {\n\t\t\tSystem.err.println(\"There is no user called \" + name);\n\t\t}\n\t\t\n\t\treturn isSuccess;\n\t}\n\t```\n2. 在 UserController.java, 添加：\n\t```\n\t@RequestMapping(method=RequestMethod.PUT, value=\"/users/{name}\")\n\tpublic boolean updateUserByName(@RequestBody User user, @PathVariable String name) {\t\n\t\tboolean isSuccess = userService.updateUserByName(user, name);\n\t\treturn isSuccess;\n\t}\n\t```\n\t- `@RequestMapping(method=RequestMethod.PUT, value=\"/users/{name}\")`\n\t- `@RequestBody User user, @PathVariable String name`\n3. 用 name 来选中某个用户，用 user 来更新信息。 成功，返回 true。\n4. 运行程序，用 PostMan 来测试。\n\n打开 PostMan：\n1. 选择 PUT 作为方法, URL = http://localhost:8080/users/Melvin\n2. Headers：\n\t- Key: Content-Type\n\t- Value: application/json\n3. Body:\n\t- raw\n\t- JSON (application/json)\n\n如图：\n![put-update-user](/images/put-update-user.png)\n\n返回的结果得到 true。\n前往 http://localhost:8080/users 得到：\n![put-result](/images/put-result.png)\n\nMelvin 的信息已经被替换掉了。\n\n## DELETE 删除某个\n1. 在 UserService.java, 添加：\n\t```\n\tpublic boolean removeUserByName(String name) {\n\t\tboolean isSuccess = false;\n\t\ttry {\n\t\t\tisSuccess = userList.removeIf(user -> user.getUserName().equals(name));\n\t\t\tif (!isSuccess) {\n\t\t\t\tSystem.err.println(\"There is no user called \" + name);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tSystem.err.println(\"Fail to remove user called \" + name);\n\t\t}\n\t\t\n\t\treturn isSuccess;\n\t}\n\t```\n2. 在 UserController.java, 添加：\n\t```\n\t@RequestMapping(method=RequestMethod.DELETE, value=\"/users/{name}\")\n\tpublic boolean removeUserByName(@PathVariable String name) {\t\n\t\tboolean isSuccess = userService.removeUserByName(name);\n\t\treturn isSuccess;\n\t}\n\t```\n3. 用 name 来选中某个用户，删除成功，返回 true。\n4. 运行程序，用 PostMan 来测试。\n\n打开 PostMan：\n1. 选择 DELETE 作为方法, URL = http://localhost:8080/users/Grace\n2. 前往 http://localhost:8080/users 验证结果。\n\n\n# Web Application Layer\n\n\tHTML(view)\n\tcontroller.js\n\tservice.js \n\t===============\n\tController.java\n\tService.java\n\tRepository.java\n\t===============\n\tBD-table\n\t\t\t\n\n** 继续学习 -> [学习 Spring Boot](/categories/SpringBoot)**","slug":"学习-Spring-Boot-1","published":1,"updated":"2020-04-30T09:23:19.532Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedig0013sd5t7ua1gjnk","content":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>学习 Spring Boot 有一段时间，也看过很多人的教程，中途放弃了几次，又重新开始。<br>需要很不负责地说，有些教程确实因为时间的关系，已经不适合用来学习参考了。</p>\n<p>这篇博客包括以下内容：</p>\n<ol>\n<li>项目初始化<ul>\n<li>Maven 的作用</li>\n<li>内置 TomCat</li>\n</ul>\n</li>\n<li>运行项目，创建简单的 info 页面</li>\n<li>添加如下 Web Service<ul>\n<li>GET 获得全部用户信息</li>\n<li>GET 获得某个用户信息</li>\n<li>POST 添加一个用户</li>\n<li>PUT 更新某个用户</li>\n<li>DELETE 删除某个用户</li>\n</ul>\n</li>\n</ol>\n<a id=\"more\"></a>\n\n<h1 id=\"项目初始化\"><a href=\"#项目初始化\" class=\"headerlink\" title=\"项目初始化\"></a>项目初始化</h1><p>Spring Boot 常用的初始方式有三种：</p>\n<ul>\n<li>Spring Initializer</li>\n<li>Spring Boot CLI</li>\n<li>Spring Tool Suite</li>\n</ul>\n<p>后两者需要额外安装，我比较推荐使用 Spring Initializer 初始化之后，再导入到 Eclipse 中。</p>\n<h2 id=\"初始化操作\"><a href=\"#初始化操作\" class=\"headerlink\" title=\"初始化操作\"></a>初始化操作</h2><ol>\n<li>Go to <a href=\"https://start.spring.io/\" target=\"_blank\" rel=\"noopener\">https://start.spring.io/</a></li>\n<li>如图填写，在 <code>Search for dependencies</code> 下面填 <code>web</code> 之后选择，我们需要用到这个 Dependency。<br> <img src=\"/images/spring-init.png\" alt=\"spring-init\"></li>\n<li>点击 <code>Generate Project</code>，生成并且下载。 解压后放在 Eclipse 的 workspace 文件夹下面。</li>\n<li>打开 <code>Eclipse</code>, 右键-<code>Import..</code>-<code>Existing Maven Projects</code></li>\n<li>选择刚才解压的项目文件夹。例如：D:\\workspace\\SpringBootDemo</li>\n<li><code>Projects</code> 窗口中会出现 <code>pom.xml</code>，完成。</li>\n</ol>\n<p>可能碰到的问题：</p>\n<ul>\n<li>这里可能会出现 <code>Project build error</code>，到 pom.xml 里面，把 Parent 的版本改成 1.5.8 即可。 估计 1.5.9 以及以上的版本和我的 Maven 不合吧。</li>\n<li><code>Configuration is not up-to-date</code>： 右键项目-<code>Maven</code>-<code>Update Project</code>。</li>\n</ul>\n<p>效果如下：<br><img src=\"/images/springboot-structure.png\" alt=\"springboot-structure\"></p>\n<h2 id=\"Maven-的作用\"><a href=\"#Maven-的作用\" class=\"headerlink\" title=\"Maven 的作用\"></a>Maven 的作用</h2><p>在我的理解中，Maven 主要的作用就是帮助管理 library。 作为一个框架，Spring 会用到很多其他的库，这些库也有自己的版本以及各种更新。 Maven 可以帮助节约大量的操作。</p>\n<p>比如<code>spring-boot-starter-web</code>, 用到几十个库，自己下载再添加，费时且可能出错。<br>而在 Maven 的 pom.xml 文件中，输入下面这段代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependencies&gt;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\t&lt;dependency&gt;</span><br><span class=\"line\">\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">\t\t&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class=\"line\">\t&lt;/dependency&gt;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure>\n\n<p>保存后，系统会自动添加 <code>Maven Dependencies</code>，里面会有所有相关的库。<br>之后只需在 pom.xml 中修改，保存之后，系统会自动完成更新。</p>\n<h2 id=\"内置的-TomCat\"><a href=\"#内置的-TomCat\" class=\"headerlink\" title=\"内置的 TomCat\"></a>内置的 TomCat</h2><p>这是一个困扰我很长一段时间的问题，程序开始工作，向外发布信息，需要在一个 Server 上运作。 所以一般的 Web Project，我们都会添加 TomCat 作为服务器，程序运行在 TomCat 上面。</p>\n<p>但是对于 Spring Boot 来说，就不需要了，在这里，其实它只是一个普通的 Java Project。 只是内置了 TomCat，可以在<code>Maven Dependencies</code>中找到<code>tomcat-embed-core-8.5.23.jar</code>等库，说明事实上程序运行依然是通过 TomCat 完成，内置的好处就是…有太多好处了。</p>\n<p>所以只需要按照普通的 Java 程序来运行即可。</p>\n<h1 id=\"运行项目，创建简单的-info-页面\"><a href=\"#运行项目，创建简单的-info-页面\" class=\"headerlink\" title=\"运行项目，创建简单的 info 页面\"></a>运行项目，创建简单的 info 页面</h1><h2 id=\"运行项目\"><a href=\"#运行项目\" class=\"headerlink\" title=\"运行项目\"></a>运行项目</h2><p>打开 DemoApplication.java，如下代码已经自动生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.boot.SpringApplication;</span><br><span class=\"line\">import org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\">@SpringBootApplication</span><br><span class=\"line\">public class DemoApplication &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\tSpringApplication.run(DemoApplication.class, args);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>直接按照普通的程序运行即可。</p>\n<p>Console 里面会得到 Spring 图标，以及几个关键提示：</p>\n<ul>\n<li>Initializing Spring embedded WebApplicationContext</li>\n<li>Tomcat started on port(s): 8080 (http)</li>\n<li>Started DemoApplication in 1.509 seconds</li>\n</ul>\n<p>这样，程序已经开始在 TomCat 上运行了。</p>\n<p>打开 <code>http://localhost:8080/</code> 会得到 <code>Whitelabel Error Page</code>，因为我们还没有创建任何内容。<br>下面我们添加一个 Controller，来显示一些内容。</p>\n<h2 id=\"添加-info-页面\"><a href=\"#添加-info-页面\" class=\"headerlink\" title=\"添加 info 页面\"></a>添加 info 页面</h2><ol>\n<li>添加 package: <code>io.ryanluoxu.springboot.demo.controller</code></li>\n<li>在此 package 下面创建 InfoController.java, 如下： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\">@RestController</span><br><span class=\"line\">public class InfoController &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@RequestMapping(&quot;/info&quot;)</span><br><span class=\"line\">\tpublic String showInfo() &#123;</span><br><span class=\"line\">\t\tString info = &quot;This is a Spring Boot Starter Project by RyanLuoXu..&quot;;</span><br><span class=\"line\">\t\treturn info;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>这样，事实上已经创建了一个简单的 web service。<br>运行程序，前往 <a href=\"http://localhost:8080/info\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/info</a> 即可看到 info 的内容。</p>\n<p>这里我们只是返回了一个字符串，下面我们以 JSON 格式返回更多的信息。</p>\n<h2 id=\"添加-moreinfo-页面\"><a href=\"#添加-moreinfo-页面\" class=\"headerlink\" title=\"添加 moreinfo 页面\"></a>添加 moreinfo 页面</h2><ol>\n<li><p>添加 package: io.ryanluoxu.springboot.demo.model</p>\n</li>\n<li><p>在此 package下面创建 Info.java，如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Info &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tprivate String description;</span><br><span class=\"line\">\tprivate String startDate;</span><br><span class=\"line\">\tprivate String author;</span><br><span class=\"line\">\tprivate String framework;</span><br><span class=\"line\">\tprivate String database;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t...setters and getters...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 InfoController.java 中添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(&quot;/moreinfo&quot;)</span><br><span class=\"line\">public Info showMoreInfo() &#123;</span><br><span class=\"line\">\tInfo info = new Info();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tinfo.setAuthor(&quot;RyanLuoXu&quot;);</span><br><span class=\"line\">\tinfo.setDatabase(&quot;PostgreSQL&quot;);</span><br><span class=\"line\">\tinfo.setDescription(&quot;This is a Spring Boot Starter Project&quot;);</span><br><span class=\"line\">\tinfo.setFramework(&quot;Spring Boot&quot;);</span><br><span class=\"line\">\tinfo.setStartDate(&quot;2017-12-23&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\treturn info;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建 info 为一个类</li>\n<li>然后在 showMoreInfo() 里面定义它的内容，并且返回含有多个信息的 info 对象</li>\n<li>info 会被自动转成 JSON 格式</li>\n</ul>\n</li>\n</ol>\n<p>运行程序，前往 <a href=\"http://localhost:8080/moreinfo\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/moreinfo</a> 即可看到 info 的内容。 如下：</p>\n<blockquote>\n<p>{<br>  “description”: “This is a Spring Boot Starter Project”,<br>  “startDate”: “2017-12-23”,<br>  “author”: “RyanLuoXu”,<br>  “framework”: “Spring Boot”,<br>  “database”: “PostgreSQL”<br>}</p>\n</blockquote>\n<p>这里为了方便，我们把信息直接放在了 Controller 里面，事实上 Controller 是通过调用 Service 里的方法得到信息的。<br>下面的例子会把这部分分离开来，并且创建几个常用的 web service。</p>\n<h1 id=\"添加-Web-Service-GET-POST-PUT-amp-DELETE\"><a href=\"#添加-Web-Service-GET-POST-PUT-amp-DELETE\" class=\"headerlink\" title=\"添加 Web Service : GET, POST, PUT &amp; DELETE\"></a>添加 Web Service : GET, POST, PUT &amp; DELETE</h1><p>这部分，我们新添加一个 User 类，实现对 user 信息的获取，更新，修改和删除。</p>\n<h2 id=\"GET-获得全部\"><a href=\"#GET-获得全部\" class=\"headerlink\" title=\"GET 获得全部\"></a>GET 获得全部</h2><ol>\n<li><p>在 io.ryanluoxu.springboot.demo.model 下面，创建 User.java， 如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class User &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String userName;</span><br><span class=\"line\">\tprivate int age;</span><br><span class=\"line\">\tprivate String nationality;</span><br><span class=\"line\"></span><br><span class=\"line\">\t...setters and getters...\t\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加 package: io.ryanluoxu.springboot.demo.service</p>\n</li>\n<li><p>在此 package 下面，创建 UserService.java, 如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Service</span><br><span class=\"line\">public class UserService &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tArrayList&lt;User&gt; userList = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic UserService() &#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t// create fake database here</span><br><span class=\"line\">\t\tUser user1 = new User();</span><br><span class=\"line\">\t\tuser1.setUserName(&quot;Melvin&quot;);</span><br><span class=\"line\">\t\tuser1.setAge(30);</span><br><span class=\"line\">\t\tuser1.setNationality(&quot;Singaporean&quot;);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tUser user2 = new User();</span><br><span class=\"line\">\t\tuser2.setUserName(&quot;Ryan&quot;);</span><br><span class=\"line\">\t\tuser2.setAge(36);</span><br><span class=\"line\">\t\tuser2.setNationality(&quot;American&quot;);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tUser user3 = new User();</span><br><span class=\"line\">\t\tuser3.setUserName(&quot;Hazel&quot;);</span><br><span class=\"line\">\t\tuser3.setAge(26);</span><br><span class=\"line\">\t\tuser3.setNationality(&quot;Chinese&quot;);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tuserList.add(user1);</span><br><span class=\"line\">\t\tuserList.add(user2);</span><br><span class=\"line\">\t\tuserList.add(user3);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 一旦获取 UserService 类的对象，该对象中自带以上虚拟的信息</span><br><span class=\"line\">// 后续可以连接数据库，用 DAO 来获取数据</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserService.java 里，添加 getUserList()：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public ArrayList&lt;User&gt; getUserList()&#123;</span><br><span class=\"line\">\treturn userList;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 io.ryanluoxu.springboot.demo.controller 下面，创建 UserController.java：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RestController</span><br><span class=\"line\">public class UserController &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@Autowired</span><br><span class=\"line\">\tprivate UserService userService;\t// get one time instance</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@RequestMapping(&quot;/users&quot;)\t\t\t// default method = SET</span><br><span class=\"line\">\tpublic ArrayList&lt;User&gt; getUserList()&#123;</span><br><span class=\"line\">\t\tArrayList&lt;User&gt; userList = userService.getUserList();</span><br><span class=\"line\">\t\treturn userList;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>这里获取了一个 userService 对象。 </li>\n<li>事实上是 Spring 巡视项目，根据 <code>@RestController</code> 和 <code>@Service</code> 创建了 userController 和 userService</li>\n<li>然后根据 <code>@Autowired</code> 将 userService 注入到 userController 中，所谓的依赖注入。</li>\n<li>当 ~/users 的 web service 被翻牌的时候，getUserList() 运行，通过 userService.getUserList() 得到信息，返回给呼叫该服务的前端。</li>\n</ul>\n</li>\n<li><p>运行程序, 前往 <a href=\"http://localhost:8080/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users</a> 得到：<br><img src=\"/images/get-uses.png\" alt=\"get-uses\"></p>\n</li>\n</ol>\n<p>这里通过 URL，得到所有用户信息，下面获取特定某个人的信息。</p>\n<h2 id=\"GET-获得特定某个\"><a href=\"#GET-获得特定某个\" class=\"headerlink\" title=\"GET 获得特定某个\"></a>GET 获得特定某个</h2><ol>\n<li><p>在 UserService.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public User getUserByName(String name) &#123;</span><br><span class=\"line\">\tUser user  = userList.stream().filter(u -&gt; u.getUserName().equals(name)).findFirst().get();</span><br><span class=\"line\">\treturn user;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserController.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(&quot;/users/&#123;name&#125;&quot;)</span><br><span class=\"line\">public User getUserByName(@PathVariable String name) &#123;</span><br><span class=\"line\">\tUser user = userService.getUserByName(name);</span><br><span class=\"line\">\treturn user;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// link &#123;name&#125; to name; &#123;name1&#125; X</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>@RequestMapping(&quot;/users/{name}&quot;)</code></li>\n<li><code>@PathVariable String name</code></li>\n</ul>\n</li>\n<li><p>controller 根据前端过来的 name 参数，呼叫 userService。</p>\n</li>\n<li><p>userService 在用户列表里找到符合条件的信息，返回给 controller。</p>\n</li>\n<li><p>controller 再以 JSON 格式返回给前端</p>\n</li>\n<li><p>运行程序, 前往 <a href=\"http://localhost:8080/users/Melvin\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users/Melvin</a>, 得到：</p>\n<blockquote>\n<p>{<br>“userName”: “Melvin”,<br>“age”: 30,<br>“nationality”: “Singaporean”<br>}</p>\n</blockquote>\n</li>\n</ol>\n<p>对于 GET 来说，都是获取信息，当 URL 直接在浏览器上输入时，都是默认 GET 方法。<br>下面的添加，更新和删除需要借助额外的工具：PostMan。</p>\n<ul>\n<li><a href=\"https://www.getpostman.com/\" target=\"_blank\" rel=\"noopener\">https://www.getpostman.com/</a></li>\n<li>下载并安装</li>\n</ul>\n<h2 id=\"POST-添加\"><a href=\"#POST-添加\" class=\"headerlink\" title=\"POST 添加\"></a>POST 添加</h2><ol>\n<li><p>在 UserService.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public boolean addUser(User user) &#123;</span><br><span class=\"line\">\tboolean isSuccess = false;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\ttry &#123;</span><br><span class=\"line\">\t\tisSuccess = userList.add(user);\t\t// add user may fail when connect to database</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\tSystem.err.println(&quot;Fail to add user..&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserController.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(method=RequestMethod.POST, value=&quot;/users&quot;)</span><br><span class=\"line\">public boolean addUser(@RequestBody User user) &#123;\t// transfer RequestBody to User instance</span><br><span class=\"line\">\tboolean isSuccess = userService.addUser(user);</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>@RequestMapping(method=RequestMethod.POST, value=&quot;/users&quot;)</code></li>\n<li><code>@RequestBody User user</code></li>\n</ul>\n</li>\n<li><p>对于前端来说：</p>\n<ul>\n<li>同样是 <code>http://localhost:8080/users/</code>，此时采用的是 POST 方法</li>\n<li>POST 的同时需要将添加的信息，以 JSON 的格式传递到 Controller</li>\n<li>Controller 再用 <code>@RequestBody User user</code> 传递给 Service</li>\n<li>Service 添加成功，返回一个 True。</li>\n</ul>\n</li>\n<li><p>运行程序，用 PostMan 来测试。</p>\n</li>\n</ol>\n<p>打开 PostMan：</p>\n<ol>\n<li>选择 POST 作为方法，URL=<a href=\"http://localhost:8080/users/\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users/</a></li>\n<li>Headers：<ul>\n<li>Key: Content-Type</li>\n<li>Value: application/json</li>\n</ul>\n</li>\n<li>Body:<ul>\n<li>raw</li>\n<li>JSON (application/json)</li>\n</ul>\n</li>\n</ol>\n<p>如图：<br><img src=\"/images/post-add-user.png\" alt=\"post-add-user\"></p>\n<p>返回的结果得到 true。<br>前往 <a href=\"http://localhost:8080/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users</a> 得到：<br><img src=\"/images/post-result.png\" alt=\"post-result\"></p>\n<h2 id=\"PUT-更新某个\"><a href=\"#PUT-更新某个\" class=\"headerlink\" title=\"PUT 更新某个\"></a>PUT 更新某个</h2><ol>\n<li><p>在 UserService.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public boolean updateUserByName(User updatedUser, String name) &#123;</span><br><span class=\"line\">\tboolean isSuccess = false;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t// get user with request name and replace it</span><br><span class=\"line\">\tfor (User currentUser : userList) &#123;</span><br><span class=\"line\">\t\tif (currentUser.getUserName().equals(name)) &#123;</span><br><span class=\"line\">\t\t\tint index = userList.indexOf(currentUser);</span><br><span class=\"line\">\t\t\tuserList.set(index, updatedUser);</span><br><span class=\"line\">\t\t\tisSuccess = true;</span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tif (!isSuccess) &#123;</span><br><span class=\"line\">\t\tSystem.err.println(&quot;There is no user called &quot; + name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserController.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(method=RequestMethod.PUT, value=&quot;/users/&#123;name&#125;&quot;)</span><br><span class=\"line\">public boolean updateUserByName(@RequestBody User user, @PathVariable String name) &#123;\t</span><br><span class=\"line\">\tboolean isSuccess = userService.updateUserByName(user, name);</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>@RequestMapping(method=RequestMethod.PUT, value=&quot;/users/{name}&quot;)</code></li>\n<li><code>@RequestBody User user, @PathVariable String name</code></li>\n</ul>\n</li>\n<li><p>用 name 来选中某个用户，用 user 来更新信息。 成功，返回 true。</p>\n</li>\n<li><p>运行程序，用 PostMan 来测试。</p>\n</li>\n</ol>\n<p>打开 PostMan：</p>\n<ol>\n<li>选择 PUT 作为方法, URL = <a href=\"http://localhost:8080/users/Melvin\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users/Melvin</a></li>\n<li>Headers：<ul>\n<li>Key: Content-Type</li>\n<li>Value: application/json</li>\n</ul>\n</li>\n<li>Body:<ul>\n<li>raw</li>\n<li>JSON (application/json)</li>\n</ul>\n</li>\n</ol>\n<p>如图：<br><img src=\"/images/put-update-user.png\" alt=\"put-update-user\"></p>\n<p>返回的结果得到 true。<br>前往 <a href=\"http://localhost:8080/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users</a> 得到：<br><img src=\"/images/put-result.png\" alt=\"put-result\"></p>\n<p>Melvin 的信息已经被替换掉了。</p>\n<h2 id=\"DELETE-删除某个\"><a href=\"#DELETE-删除某个\" class=\"headerlink\" title=\"DELETE 删除某个\"></a>DELETE 删除某个</h2><ol>\n<li><p>在 UserService.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public boolean removeUserByName(String name) &#123;</span><br><span class=\"line\">\tboolean isSuccess = false;</span><br><span class=\"line\">\ttry &#123;</span><br><span class=\"line\">\t\tisSuccess = userList.removeIf(user -&gt; user.getUserName().equals(name));</span><br><span class=\"line\">\t\tif (!isSuccess) &#123;</span><br><span class=\"line\">\t\t\tSystem.err.println(&quot;There is no user called &quot; + name);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\tSystem.err.println(&quot;Fail to remove user called &quot; + name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserController.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(method=RequestMethod.DELETE, value=&quot;/users/&#123;name&#125;&quot;)</span><br><span class=\"line\">public boolean removeUserByName(@PathVariable String name) &#123;\t</span><br><span class=\"line\">\tboolean isSuccess = userService.removeUserByName(name);</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>用 name 来选中某个用户，删除成功，返回 true。</p>\n</li>\n<li><p>运行程序，用 PostMan 来测试。</p>\n</li>\n</ol>\n<p>打开 PostMan：</p>\n<ol>\n<li>选择 DELETE 作为方法, URL = <a href=\"http://localhost:8080/users/Grace\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users/Grace</a></li>\n<li>前往 <a href=\"http://localhost:8080/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users</a> 验证结果。</li>\n</ol>\n<h1 id=\"Web-Application-Layer\"><a href=\"#Web-Application-Layer\" class=\"headerlink\" title=\"Web Application Layer\"></a>Web Application Layer</h1><pre><code>HTML(view)\ncontroller.js\nservice.js \n===============\nController.java\nService.java\nRepository.java\n===============\nBD-table</code></pre><p>** 继续学习 -&gt; <a href=\"/categories/SpringBoot\">学习 Spring Boot</a>**</p>\n","site":{"data":{}},"excerpt":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>学习 Spring Boot 有一段时间，也看过很多人的教程，中途放弃了几次，又重新开始。<br>需要很不负责地说，有些教程确实因为时间的关系，已经不适合用来学习参考了。</p>\n<p>这篇博客包括以下内容：</p>\n<ol>\n<li>项目初始化<ul>\n<li>Maven 的作用</li>\n<li>内置 TomCat</li>\n</ul>\n</li>\n<li>运行项目，创建简单的 info 页面</li>\n<li>添加如下 Web Service<ul>\n<li>GET 获得全部用户信息</li>\n<li>GET 获得某个用户信息</li>\n<li>POST 添加一个用户</li>\n<li>PUT 更新某个用户</li>\n<li>DELETE 删除某个用户</li>\n</ul>\n</li>\n</ol>","more":"<h1 id=\"项目初始化\"><a href=\"#项目初始化\" class=\"headerlink\" title=\"项目初始化\"></a>项目初始化</h1><p>Spring Boot 常用的初始方式有三种：</p>\n<ul>\n<li>Spring Initializer</li>\n<li>Spring Boot CLI</li>\n<li>Spring Tool Suite</li>\n</ul>\n<p>后两者需要额外安装，我比较推荐使用 Spring Initializer 初始化之后，再导入到 Eclipse 中。</p>\n<h2 id=\"初始化操作\"><a href=\"#初始化操作\" class=\"headerlink\" title=\"初始化操作\"></a>初始化操作</h2><ol>\n<li>Go to <a href=\"https://start.spring.io/\" target=\"_blank\" rel=\"noopener\">https://start.spring.io/</a></li>\n<li>如图填写，在 <code>Search for dependencies</code> 下面填 <code>web</code> 之后选择，我们需要用到这个 Dependency。<br> <img src=\"/images/spring-init.png\" alt=\"spring-init\"></li>\n<li>点击 <code>Generate Project</code>，生成并且下载。 解压后放在 Eclipse 的 workspace 文件夹下面。</li>\n<li>打开 <code>Eclipse</code>, 右键-<code>Import..</code>-<code>Existing Maven Projects</code></li>\n<li>选择刚才解压的项目文件夹。例如：D:\\workspace\\SpringBootDemo</li>\n<li><code>Projects</code> 窗口中会出现 <code>pom.xml</code>，完成。</li>\n</ol>\n<p>可能碰到的问题：</p>\n<ul>\n<li>这里可能会出现 <code>Project build error</code>，到 pom.xml 里面，把 Parent 的版本改成 1.5.8 即可。 估计 1.5.9 以及以上的版本和我的 Maven 不合吧。</li>\n<li><code>Configuration is not up-to-date</code>： 右键项目-<code>Maven</code>-<code>Update Project</code>。</li>\n</ul>\n<p>效果如下：<br><img src=\"/images/springboot-structure.png\" alt=\"springboot-structure\"></p>\n<h2 id=\"Maven-的作用\"><a href=\"#Maven-的作用\" class=\"headerlink\" title=\"Maven 的作用\"></a>Maven 的作用</h2><p>在我的理解中，Maven 主要的作用就是帮助管理 library。 作为一个框架，Spring 会用到很多其他的库，这些库也有自己的版本以及各种更新。 Maven 可以帮助节约大量的操作。</p>\n<p>比如<code>spring-boot-starter-web</code>, 用到几十个库，自己下载再添加，费时且可能出错。<br>而在 Maven 的 pom.xml 文件中，输入下面这段代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependencies&gt;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\t&lt;dependency&gt;</span><br><span class=\"line\">\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">\t\t&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class=\"line\">\t&lt;/dependency&gt;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure>\n\n<p>保存后，系统会自动添加 <code>Maven Dependencies</code>，里面会有所有相关的库。<br>之后只需在 pom.xml 中修改，保存之后，系统会自动完成更新。</p>\n<h2 id=\"内置的-TomCat\"><a href=\"#内置的-TomCat\" class=\"headerlink\" title=\"内置的 TomCat\"></a>内置的 TomCat</h2><p>这是一个困扰我很长一段时间的问题，程序开始工作，向外发布信息，需要在一个 Server 上运作。 所以一般的 Web Project，我们都会添加 TomCat 作为服务器，程序运行在 TomCat 上面。</p>\n<p>但是对于 Spring Boot 来说，就不需要了，在这里，其实它只是一个普通的 Java Project。 只是内置了 TomCat，可以在<code>Maven Dependencies</code>中找到<code>tomcat-embed-core-8.5.23.jar</code>等库，说明事实上程序运行依然是通过 TomCat 完成，内置的好处就是…有太多好处了。</p>\n<p>所以只需要按照普通的 Java 程序来运行即可。</p>\n<h1 id=\"运行项目，创建简单的-info-页面\"><a href=\"#运行项目，创建简单的-info-页面\" class=\"headerlink\" title=\"运行项目，创建简单的 info 页面\"></a>运行项目，创建简单的 info 页面</h1><h2 id=\"运行项目\"><a href=\"#运行项目\" class=\"headerlink\" title=\"运行项目\"></a>运行项目</h2><p>打开 DemoApplication.java，如下代码已经自动生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.boot.SpringApplication;</span><br><span class=\"line\">import org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\">@SpringBootApplication</span><br><span class=\"line\">public class DemoApplication &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\tSpringApplication.run(DemoApplication.class, args);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>直接按照普通的程序运行即可。</p>\n<p>Console 里面会得到 Spring 图标，以及几个关键提示：</p>\n<ul>\n<li>Initializing Spring embedded WebApplicationContext</li>\n<li>Tomcat started on port(s): 8080 (http)</li>\n<li>Started DemoApplication in 1.509 seconds</li>\n</ul>\n<p>这样，程序已经开始在 TomCat 上运行了。</p>\n<p>打开 <code>http://localhost:8080/</code> 会得到 <code>Whitelabel Error Page</code>，因为我们还没有创建任何内容。<br>下面我们添加一个 Controller，来显示一些内容。</p>\n<h2 id=\"添加-info-页面\"><a href=\"#添加-info-页面\" class=\"headerlink\" title=\"添加 info 页面\"></a>添加 info 页面</h2><ol>\n<li>添加 package: <code>io.ryanluoxu.springboot.demo.controller</code></li>\n<li>在此 package 下面创建 InfoController.java, 如下： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\">@RestController</span><br><span class=\"line\">public class InfoController &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@RequestMapping(&quot;/info&quot;)</span><br><span class=\"line\">\tpublic String showInfo() &#123;</span><br><span class=\"line\">\t\tString info = &quot;This is a Spring Boot Starter Project by RyanLuoXu..&quot;;</span><br><span class=\"line\">\t\treturn info;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>这样，事实上已经创建了一个简单的 web service。<br>运行程序，前往 <a href=\"http://localhost:8080/info\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/info</a> 即可看到 info 的内容。</p>\n<p>这里我们只是返回了一个字符串，下面我们以 JSON 格式返回更多的信息。</p>\n<h2 id=\"添加-moreinfo-页面\"><a href=\"#添加-moreinfo-页面\" class=\"headerlink\" title=\"添加 moreinfo 页面\"></a>添加 moreinfo 页面</h2><ol>\n<li><p>添加 package: io.ryanluoxu.springboot.demo.model</p>\n</li>\n<li><p>在此 package下面创建 Info.java，如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Info &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tprivate String description;</span><br><span class=\"line\">\tprivate String startDate;</span><br><span class=\"line\">\tprivate String author;</span><br><span class=\"line\">\tprivate String framework;</span><br><span class=\"line\">\tprivate String database;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t...setters and getters...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 InfoController.java 中添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(&quot;/moreinfo&quot;)</span><br><span class=\"line\">public Info showMoreInfo() &#123;</span><br><span class=\"line\">\tInfo info = new Info();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tinfo.setAuthor(&quot;RyanLuoXu&quot;);</span><br><span class=\"line\">\tinfo.setDatabase(&quot;PostgreSQL&quot;);</span><br><span class=\"line\">\tinfo.setDescription(&quot;This is a Spring Boot Starter Project&quot;);</span><br><span class=\"line\">\tinfo.setFramework(&quot;Spring Boot&quot;);</span><br><span class=\"line\">\tinfo.setStartDate(&quot;2017-12-23&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\treturn info;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建 info 为一个类</li>\n<li>然后在 showMoreInfo() 里面定义它的内容，并且返回含有多个信息的 info 对象</li>\n<li>info 会被自动转成 JSON 格式</li>\n</ul>\n</li>\n</ol>\n<p>运行程序，前往 <a href=\"http://localhost:8080/moreinfo\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/moreinfo</a> 即可看到 info 的内容。 如下：</p>\n<blockquote>\n<p>{<br>  “description”: “This is a Spring Boot Starter Project”,<br>  “startDate”: “2017-12-23”,<br>  “author”: “RyanLuoXu”,<br>  “framework”: “Spring Boot”,<br>  “database”: “PostgreSQL”<br>}</p>\n</blockquote>\n<p>这里为了方便，我们把信息直接放在了 Controller 里面，事实上 Controller 是通过调用 Service 里的方法得到信息的。<br>下面的例子会把这部分分离开来，并且创建几个常用的 web service。</p>\n<h1 id=\"添加-Web-Service-GET-POST-PUT-amp-DELETE\"><a href=\"#添加-Web-Service-GET-POST-PUT-amp-DELETE\" class=\"headerlink\" title=\"添加 Web Service : GET, POST, PUT &amp; DELETE\"></a>添加 Web Service : GET, POST, PUT &amp; DELETE</h1><p>这部分，我们新添加一个 User 类，实现对 user 信息的获取，更新，修改和删除。</p>\n<h2 id=\"GET-获得全部\"><a href=\"#GET-获得全部\" class=\"headerlink\" title=\"GET 获得全部\"></a>GET 获得全部</h2><ol>\n<li><p>在 io.ryanluoxu.springboot.demo.model 下面，创建 User.java， 如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class User &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String userName;</span><br><span class=\"line\">\tprivate int age;</span><br><span class=\"line\">\tprivate String nationality;</span><br><span class=\"line\"></span><br><span class=\"line\">\t...setters and getters...\t\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加 package: io.ryanluoxu.springboot.demo.service</p>\n</li>\n<li><p>在此 package 下面，创建 UserService.java, 如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Service</span><br><span class=\"line\">public class UserService &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tArrayList&lt;User&gt; userList = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic UserService() &#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t// create fake database here</span><br><span class=\"line\">\t\tUser user1 = new User();</span><br><span class=\"line\">\t\tuser1.setUserName(&quot;Melvin&quot;);</span><br><span class=\"line\">\t\tuser1.setAge(30);</span><br><span class=\"line\">\t\tuser1.setNationality(&quot;Singaporean&quot;);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tUser user2 = new User();</span><br><span class=\"line\">\t\tuser2.setUserName(&quot;Ryan&quot;);</span><br><span class=\"line\">\t\tuser2.setAge(36);</span><br><span class=\"line\">\t\tuser2.setNationality(&quot;American&quot;);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tUser user3 = new User();</span><br><span class=\"line\">\t\tuser3.setUserName(&quot;Hazel&quot;);</span><br><span class=\"line\">\t\tuser3.setAge(26);</span><br><span class=\"line\">\t\tuser3.setNationality(&quot;Chinese&quot;);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tuserList.add(user1);</span><br><span class=\"line\">\t\tuserList.add(user2);</span><br><span class=\"line\">\t\tuserList.add(user3);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 一旦获取 UserService 类的对象，该对象中自带以上虚拟的信息</span><br><span class=\"line\">// 后续可以连接数据库，用 DAO 来获取数据</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserService.java 里，添加 getUserList()：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public ArrayList&lt;User&gt; getUserList()&#123;</span><br><span class=\"line\">\treturn userList;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 io.ryanluoxu.springboot.demo.controller 下面，创建 UserController.java：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RestController</span><br><span class=\"line\">public class UserController &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@Autowired</span><br><span class=\"line\">\tprivate UserService userService;\t// get one time instance</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@RequestMapping(&quot;/users&quot;)\t\t\t// default method = SET</span><br><span class=\"line\">\tpublic ArrayList&lt;User&gt; getUserList()&#123;</span><br><span class=\"line\">\t\tArrayList&lt;User&gt; userList = userService.getUserList();</span><br><span class=\"line\">\t\treturn userList;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>这里获取了一个 userService 对象。 </li>\n<li>事实上是 Spring 巡视项目，根据 <code>@RestController</code> 和 <code>@Service</code> 创建了 userController 和 userService</li>\n<li>然后根据 <code>@Autowired</code> 将 userService 注入到 userController 中，所谓的依赖注入。</li>\n<li>当 ~/users 的 web service 被翻牌的时候，getUserList() 运行，通过 userService.getUserList() 得到信息，返回给呼叫该服务的前端。</li>\n</ul>\n</li>\n<li><p>运行程序, 前往 <a href=\"http://localhost:8080/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users</a> 得到：<br><img src=\"/images/get-uses.png\" alt=\"get-uses\"></p>\n</li>\n</ol>\n<p>这里通过 URL，得到所有用户信息，下面获取特定某个人的信息。</p>\n<h2 id=\"GET-获得特定某个\"><a href=\"#GET-获得特定某个\" class=\"headerlink\" title=\"GET 获得特定某个\"></a>GET 获得特定某个</h2><ol>\n<li><p>在 UserService.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public User getUserByName(String name) &#123;</span><br><span class=\"line\">\tUser user  = userList.stream().filter(u -&gt; u.getUserName().equals(name)).findFirst().get();</span><br><span class=\"line\">\treturn user;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserController.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(&quot;/users/&#123;name&#125;&quot;)</span><br><span class=\"line\">public User getUserByName(@PathVariable String name) &#123;</span><br><span class=\"line\">\tUser user = userService.getUserByName(name);</span><br><span class=\"line\">\treturn user;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// link &#123;name&#125; to name; &#123;name1&#125; X</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>@RequestMapping(&quot;/users/{name}&quot;)</code></li>\n<li><code>@PathVariable String name</code></li>\n</ul>\n</li>\n<li><p>controller 根据前端过来的 name 参数，呼叫 userService。</p>\n</li>\n<li><p>userService 在用户列表里找到符合条件的信息，返回给 controller。</p>\n</li>\n<li><p>controller 再以 JSON 格式返回给前端</p>\n</li>\n<li><p>运行程序, 前往 <a href=\"http://localhost:8080/users/Melvin\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users/Melvin</a>, 得到：</p>\n<blockquote>\n<p>{<br>“userName”: “Melvin”,<br>“age”: 30,<br>“nationality”: “Singaporean”<br>}</p>\n</blockquote>\n</li>\n</ol>\n<p>对于 GET 来说，都是获取信息，当 URL 直接在浏览器上输入时，都是默认 GET 方法。<br>下面的添加，更新和删除需要借助额外的工具：PostMan。</p>\n<ul>\n<li><a href=\"https://www.getpostman.com/\" target=\"_blank\" rel=\"noopener\">https://www.getpostman.com/</a></li>\n<li>下载并安装</li>\n</ul>\n<h2 id=\"POST-添加\"><a href=\"#POST-添加\" class=\"headerlink\" title=\"POST 添加\"></a>POST 添加</h2><ol>\n<li><p>在 UserService.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public boolean addUser(User user) &#123;</span><br><span class=\"line\">\tboolean isSuccess = false;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\ttry &#123;</span><br><span class=\"line\">\t\tisSuccess = userList.add(user);\t\t// add user may fail when connect to database</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\tSystem.err.println(&quot;Fail to add user..&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserController.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(method=RequestMethod.POST, value=&quot;/users&quot;)</span><br><span class=\"line\">public boolean addUser(@RequestBody User user) &#123;\t// transfer RequestBody to User instance</span><br><span class=\"line\">\tboolean isSuccess = userService.addUser(user);</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>@RequestMapping(method=RequestMethod.POST, value=&quot;/users&quot;)</code></li>\n<li><code>@RequestBody User user</code></li>\n</ul>\n</li>\n<li><p>对于前端来说：</p>\n<ul>\n<li>同样是 <code>http://localhost:8080/users/</code>，此时采用的是 POST 方法</li>\n<li>POST 的同时需要将添加的信息，以 JSON 的格式传递到 Controller</li>\n<li>Controller 再用 <code>@RequestBody User user</code> 传递给 Service</li>\n<li>Service 添加成功，返回一个 True。</li>\n</ul>\n</li>\n<li><p>运行程序，用 PostMan 来测试。</p>\n</li>\n</ol>\n<p>打开 PostMan：</p>\n<ol>\n<li>选择 POST 作为方法，URL=<a href=\"http://localhost:8080/users/\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users/</a></li>\n<li>Headers：<ul>\n<li>Key: Content-Type</li>\n<li>Value: application/json</li>\n</ul>\n</li>\n<li>Body:<ul>\n<li>raw</li>\n<li>JSON (application/json)</li>\n</ul>\n</li>\n</ol>\n<p>如图：<br><img src=\"/images/post-add-user.png\" alt=\"post-add-user\"></p>\n<p>返回的结果得到 true。<br>前往 <a href=\"http://localhost:8080/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users</a> 得到：<br><img src=\"/images/post-result.png\" alt=\"post-result\"></p>\n<h2 id=\"PUT-更新某个\"><a href=\"#PUT-更新某个\" class=\"headerlink\" title=\"PUT 更新某个\"></a>PUT 更新某个</h2><ol>\n<li><p>在 UserService.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public boolean updateUserByName(User updatedUser, String name) &#123;</span><br><span class=\"line\">\tboolean isSuccess = false;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t// get user with request name and replace it</span><br><span class=\"line\">\tfor (User currentUser : userList) &#123;</span><br><span class=\"line\">\t\tif (currentUser.getUserName().equals(name)) &#123;</span><br><span class=\"line\">\t\t\tint index = userList.indexOf(currentUser);</span><br><span class=\"line\">\t\t\tuserList.set(index, updatedUser);</span><br><span class=\"line\">\t\t\tisSuccess = true;</span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tif (!isSuccess) &#123;</span><br><span class=\"line\">\t\tSystem.err.println(&quot;There is no user called &quot; + name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserController.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(method=RequestMethod.PUT, value=&quot;/users/&#123;name&#125;&quot;)</span><br><span class=\"line\">public boolean updateUserByName(@RequestBody User user, @PathVariable String name) &#123;\t</span><br><span class=\"line\">\tboolean isSuccess = userService.updateUserByName(user, name);</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>@RequestMapping(method=RequestMethod.PUT, value=&quot;/users/{name}&quot;)</code></li>\n<li><code>@RequestBody User user, @PathVariable String name</code></li>\n</ul>\n</li>\n<li><p>用 name 来选中某个用户，用 user 来更新信息。 成功，返回 true。</p>\n</li>\n<li><p>运行程序，用 PostMan 来测试。</p>\n</li>\n</ol>\n<p>打开 PostMan：</p>\n<ol>\n<li>选择 PUT 作为方法, URL = <a href=\"http://localhost:8080/users/Melvin\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users/Melvin</a></li>\n<li>Headers：<ul>\n<li>Key: Content-Type</li>\n<li>Value: application/json</li>\n</ul>\n</li>\n<li>Body:<ul>\n<li>raw</li>\n<li>JSON (application/json)</li>\n</ul>\n</li>\n</ol>\n<p>如图：<br><img src=\"/images/put-update-user.png\" alt=\"put-update-user\"></p>\n<p>返回的结果得到 true。<br>前往 <a href=\"http://localhost:8080/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users</a> 得到：<br><img src=\"/images/put-result.png\" alt=\"put-result\"></p>\n<p>Melvin 的信息已经被替换掉了。</p>\n<h2 id=\"DELETE-删除某个\"><a href=\"#DELETE-删除某个\" class=\"headerlink\" title=\"DELETE 删除某个\"></a>DELETE 删除某个</h2><ol>\n<li><p>在 UserService.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public boolean removeUserByName(String name) &#123;</span><br><span class=\"line\">\tboolean isSuccess = false;</span><br><span class=\"line\">\ttry &#123;</span><br><span class=\"line\">\t\tisSuccess = userList.removeIf(user -&gt; user.getUserName().equals(name));</span><br><span class=\"line\">\t\tif (!isSuccess) &#123;</span><br><span class=\"line\">\t\t\tSystem.err.println(&quot;There is no user called &quot; + name);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\tSystem.err.println(&quot;Fail to remove user called &quot; + name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserController.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(method=RequestMethod.DELETE, value=&quot;/users/&#123;name&#125;&quot;)</span><br><span class=\"line\">public boolean removeUserByName(@PathVariable String name) &#123;\t</span><br><span class=\"line\">\tboolean isSuccess = userService.removeUserByName(name);</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>用 name 来选中某个用户，删除成功，返回 true。</p>\n</li>\n<li><p>运行程序，用 PostMan 来测试。</p>\n</li>\n</ol>\n<p>打开 PostMan：</p>\n<ol>\n<li>选择 DELETE 作为方法, URL = <a href=\"http://localhost:8080/users/Grace\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users/Grace</a></li>\n<li>前往 <a href=\"http://localhost:8080/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users</a> 验证结果。</li>\n</ol>\n<h1 id=\"Web-Application-Layer\"><a href=\"#Web-Application-Layer\" class=\"headerlink\" title=\"Web Application Layer\"></a>Web Application Layer</h1><pre><code>HTML(view)\ncontroller.js\nservice.js \n===============\nController.java\nService.java\nRepository.java\n===============\nBD-table</code></pre><p>** 继续学习 -&gt; <a href=\"/categories/SpringBoot\">学习 Spring Boot</a>**</p>"},{"title":"学习 Spring Boot - 2","date":"2017-12-25T03:24:17.000Z","_content":"\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n在《学习 Spring Boot - 1》里，用 Service 虚拟了用户的数据。 这篇博客接着上一篇往下，介绍如何接入 PostgreSQL 数据库。\n\n通常连接数据库，从 Service 层开始，要经过 DAO，DAO 里面需要调用已经完成 JDBC 连接设定的 DBUtil，创建了 connection 之后，通过执行 query 来传递数据。在 SpringBoot 里面，这一部分内容被预设在 Spring Data JPA 里面，通过调用 CrudRepository 即可。思路如下：\n```\nRest Client --> RestController | Service | Repository --> PostgreSQL (DBName=Demo; Table=users)\n```\n根据这个思路，需要修改或者添加：\n- SpringBoot 的设定\n- 创建 PostgreSQL 数据库 \n- 修改 User 类\n- 创建 UserRepository 接口\n- 修改 UserService 类\n\n<!--more-->\n\n# SpringBoot 的设定\n\n## pom.xml\n添加 Dependency\n- Spring Data JPA\n- PostgreSQL\n\n```\n\t<dependency>\n\t    <groupId>org.springframework.boot</groupId>\n\t    <artifactId>spring-boot-starter-data-jpa</artifactId>\n\t    <version>1.5.7.RELEASE</version>\n\t</dependency>\n\t\n\t<dependency>\n\t    <groupId>org.postgresql</groupId>\n\t    <artifactId>postgresql</artifactId>\n\t    <version>42.1.4</version>\n\t</dependency>\n```\n## application.properties (in src/main/resources)\n添加：\n```\nspring.datasource.url=jdbc:postgresql://<Host>/<DBName>\nspring.datasource.username=<username>\nspring.datasource.password=<password>\nspring.jpa.generate-ddl=true\n```\n例如：\n```\nspring.datasource.url=jdbc:postgresql://postgresql.cfqvncjculpj.ap-southeast-1.rds.amazonaws.com:5432/Demo\nspring.datasource.username=admin123\nspring.datasource.password=admin123\nspring.jpa.generate-ddl=true\n```\n\n# 创建 PostgreSQL 数据库\n    \n## 安装连接 PostgreSQL 数据库\n具体参考-> [Database - PostgreSQL on AWS](/2017/12/16/Database-PostgreSQL/)\n\n\n## 创建表格\n\n```\nCREATE TABLE users (\n    userId SERIAL,\n    userName varchar(20)  PRIMARY KEY,\n    nationality varchar(30),\n    age int\n);\n```\n\n## 输入数据\n```\nINSERT INTO users (userName, nationality, age) VALUES\n\t('Hazel','Chinese',26),\n\t('Michael','Australian',32),\n\t('Melvin','Singaporean',30)\n\t;\n```\n效果如下：\n![users-table](/images/users-table.png)\n\n# 修改 User 类\n\n**DataModel Class: User.java**\nBefore:\n```\n\tpublic class User {\n\t\n\t\tprivate String userName;\n\t\tprivate int age;\n\t\tprivate String nationality;\n\n\t\t...setters and getters...\t\t\n\t}\n```\nAfter:\n```\n\t@Entity\n\t@Table(name=\"users\")\n\tpublic class User implements Serializable {\n\t\n\t\t@Id\t\t\n\t\tprivate String userName;\n\t\t\n\t\t@Column(name=\"age\")\n\t\tprivate int age;\n\t\t\n\t\t@Column(name=\"nationality\")\n\t\tprivate String nationality;\n\t\n\t\t...setters and getters...\t\t\n\t}\n```\n\n- `@Entity` 标明这是一个与数据库对接的类\n- `@Table(name=\"users\")` 里面定义了信息所在的表格\n- `implements Serializable`\n- `@Id` 关键\n- `@Column(name=\"age\")`\n\n\n\n# 创建 UserRepository 接口\n1. 创建 package: io.ryanluoxu.springboot.demo.repository\n2. 在下面创建接口类: UserRepository.java, 如下\n```\npublic interface UserRepository extends CrudRepository<User, String>{\n\n}\n```\n\n里面包括的方法：\n- count()\n- delete(T entity)\n- deleteAll()\n- deleteAll(Iterable<? extends T> entities)\n- deleteById(ID id)\n- existsById(ID id)\n- findAll()\n- findAllById(Iterable<ID> ids)\n- findById(ID id)\n- save(S entity)\n- saveAll(Iterable<S> entities)\n\n此处 Id 对应 User 类中的 @Id。\n如果需要对 Id 以外的进行搜索，可以仅仅创建 Abstract Method:\n```\npublic ArrayList<User> findByNationality(String nationality);\n```\n不需要 Implement 类。\n\n# 修改 UserService 类\n\n## UserService.java\n1. 删去模拟数据的 Constructor\n2. 将 ArrayList 换成 UserRepository\n3. 修改调用方法\n具体如下：\n```\n@Service\npublic class UserService {\n\t\n\t@Autowired\n\tUserRepository userRepository;\n\t\n\tpublic ArrayList<User> getUserList(){\n\t\treturn (ArrayList<User>) userRepository.findAll();\n\t}\n\n\tpublic User getUserByName(String name) {\n\t\treturn userRepository.findOne(name);\n\t}\n\n\tpublic boolean addUser(User user) {\n\t\tUser u = userRepository.save(user);\n\t\tif (u != null) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tSystem.err.println(\"Fail to add - \" + user.getUserName());\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic boolean updateUserByName(User updatedUser, String name) {\n\t\t// Spring will take userName from updatedUser\n\t\t// if userName exists, update; if not, add new user\n\t\tUser u = userRepository.save(updatedUser);\n\t\tif (u != null) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tSystem.err.println(\"Fail to update - \" + updatedUser.getUserName());\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic boolean removeUserByName(String name) {\n\t\ttry {\n\t\t\tuserRepository.delete(name);\n\t\t\treturn true;\n\t\t} catch (Exception e) {\n\t\t\tSystem.err.println(\"Fail to remove user called \" + name);\t\n\t\t\treturn false;\n\t\t}\n\t}\n}\n```\n\n## Save() 同时用于更新和添加\n1. 测试1\n\tPUT - localhost:8080/users/Melvin\n\t```\n\t{\n\t    \"userName\": \"Grace\",\n\t    \"age\": 26,\n\t    \"nationality\": \"Chinese\"\n\t}\n\t```\n\t结果添加了新的用户，而没有更改 Melvin 的信息。\n2. 测试2\n\tPOST - localhost:8080/users/\n\t```\n\t{\n\t    \"userName\": \"Michael\",\n\t    \"age\": 27,\n\t    \"nationality\": \"Chinese\"\n\t}\n\t```\n\t结果Michael的信息被更改，而并没有添加新的用户。\n\n这里，添加新的用户和更新用户，用的同一个方法-save(User user)。\n区别在于定义 User 时的 @id，以及 CrudRepository<User, String>，都指明了这组数据的 Primary Key。\n\n**所以，Primary Key 不同，即为添加用户。相同，则为更新用户。 **\n\n**更新 UserService.java**\n```\n\tpublic boolean addUser(User user) {\n\t\t// name shouldn't be existed.\n\t\tif (userRepository.findOne(user.getUserName()) == null) {\n\t\t\tuserRepository.save(user);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tSystem.err.println(user.getUserName() + \" is existed..\");\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic boolean updateUserByName(User updatedUser, String name) {\n\t\t// name must be the same\n\t\tif (updatedUser.getUserName().equals(name)) {\n\t\t\tUser u = userRepository.save(updatedUser);\n\t\t\tif (u != null) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tSystem.err.println(\"Fail to update - \" + updatedUser.getUserName());\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tSystem.err.println(\"Unable to change the userName for existed user - \"  + name);\n\t\t\treturn false;\n\t\t}\n\t}\n```\n\n** 继续学习 -> [学习 Spring Boot](/categories/SpringBoot)**\n\n\n=====\n\n\nMaven to build it as jar\njava -jar to run it\n\n\nactuator\n-> / health\nmanagerment.port=\n\napplication.properties\n[Common application properties](https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html)","source":"_posts/学习-Spring-Boot-2.md","raw":"---\ntitle: 学习 Spring Boot - 2\ndate: 2017-12-25 11:24:17\ncategories: SpringBoot\ntags: [Spring, Spring Boot, beginner, PostgreSQL, Rest, JPA, Spring Data JPA]\n---\n\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n在《学习 Spring Boot - 1》里，用 Service 虚拟了用户的数据。 这篇博客接着上一篇往下，介绍如何接入 PostgreSQL 数据库。\n\n通常连接数据库，从 Service 层开始，要经过 DAO，DAO 里面需要调用已经完成 JDBC 连接设定的 DBUtil，创建了 connection 之后，通过执行 query 来传递数据。在 SpringBoot 里面，这一部分内容被预设在 Spring Data JPA 里面，通过调用 CrudRepository 即可。思路如下：\n```\nRest Client --> RestController | Service | Repository --> PostgreSQL (DBName=Demo; Table=users)\n```\n根据这个思路，需要修改或者添加：\n- SpringBoot 的设定\n- 创建 PostgreSQL 数据库 \n- 修改 User 类\n- 创建 UserRepository 接口\n- 修改 UserService 类\n\n<!--more-->\n\n# SpringBoot 的设定\n\n## pom.xml\n添加 Dependency\n- Spring Data JPA\n- PostgreSQL\n\n```\n\t<dependency>\n\t    <groupId>org.springframework.boot</groupId>\n\t    <artifactId>spring-boot-starter-data-jpa</artifactId>\n\t    <version>1.5.7.RELEASE</version>\n\t</dependency>\n\t\n\t<dependency>\n\t    <groupId>org.postgresql</groupId>\n\t    <artifactId>postgresql</artifactId>\n\t    <version>42.1.4</version>\n\t</dependency>\n```\n## application.properties (in src/main/resources)\n添加：\n```\nspring.datasource.url=jdbc:postgresql://<Host>/<DBName>\nspring.datasource.username=<username>\nspring.datasource.password=<password>\nspring.jpa.generate-ddl=true\n```\n例如：\n```\nspring.datasource.url=jdbc:postgresql://postgresql.cfqvncjculpj.ap-southeast-1.rds.amazonaws.com:5432/Demo\nspring.datasource.username=admin123\nspring.datasource.password=admin123\nspring.jpa.generate-ddl=true\n```\n\n# 创建 PostgreSQL 数据库\n    \n## 安装连接 PostgreSQL 数据库\n具体参考-> [Database - PostgreSQL on AWS](/2017/12/16/Database-PostgreSQL/)\n\n\n## 创建表格\n\n```\nCREATE TABLE users (\n    userId SERIAL,\n    userName varchar(20)  PRIMARY KEY,\n    nationality varchar(30),\n    age int\n);\n```\n\n## 输入数据\n```\nINSERT INTO users (userName, nationality, age) VALUES\n\t('Hazel','Chinese',26),\n\t('Michael','Australian',32),\n\t('Melvin','Singaporean',30)\n\t;\n```\n效果如下：\n![users-table](/images/users-table.png)\n\n# 修改 User 类\n\n**DataModel Class: User.java**\nBefore:\n```\n\tpublic class User {\n\t\n\t\tprivate String userName;\n\t\tprivate int age;\n\t\tprivate String nationality;\n\n\t\t...setters and getters...\t\t\n\t}\n```\nAfter:\n```\n\t@Entity\n\t@Table(name=\"users\")\n\tpublic class User implements Serializable {\n\t\n\t\t@Id\t\t\n\t\tprivate String userName;\n\t\t\n\t\t@Column(name=\"age\")\n\t\tprivate int age;\n\t\t\n\t\t@Column(name=\"nationality\")\n\t\tprivate String nationality;\n\t\n\t\t...setters and getters...\t\t\n\t}\n```\n\n- `@Entity` 标明这是一个与数据库对接的类\n- `@Table(name=\"users\")` 里面定义了信息所在的表格\n- `implements Serializable`\n- `@Id` 关键\n- `@Column(name=\"age\")`\n\n\n\n# 创建 UserRepository 接口\n1. 创建 package: io.ryanluoxu.springboot.demo.repository\n2. 在下面创建接口类: UserRepository.java, 如下\n```\npublic interface UserRepository extends CrudRepository<User, String>{\n\n}\n```\n\n里面包括的方法：\n- count()\n- delete(T entity)\n- deleteAll()\n- deleteAll(Iterable<? extends T> entities)\n- deleteById(ID id)\n- existsById(ID id)\n- findAll()\n- findAllById(Iterable<ID> ids)\n- findById(ID id)\n- save(S entity)\n- saveAll(Iterable<S> entities)\n\n此处 Id 对应 User 类中的 @Id。\n如果需要对 Id 以外的进行搜索，可以仅仅创建 Abstract Method:\n```\npublic ArrayList<User> findByNationality(String nationality);\n```\n不需要 Implement 类。\n\n# 修改 UserService 类\n\n## UserService.java\n1. 删去模拟数据的 Constructor\n2. 将 ArrayList 换成 UserRepository\n3. 修改调用方法\n具体如下：\n```\n@Service\npublic class UserService {\n\t\n\t@Autowired\n\tUserRepository userRepository;\n\t\n\tpublic ArrayList<User> getUserList(){\n\t\treturn (ArrayList<User>) userRepository.findAll();\n\t}\n\n\tpublic User getUserByName(String name) {\n\t\treturn userRepository.findOne(name);\n\t}\n\n\tpublic boolean addUser(User user) {\n\t\tUser u = userRepository.save(user);\n\t\tif (u != null) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tSystem.err.println(\"Fail to add - \" + user.getUserName());\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic boolean updateUserByName(User updatedUser, String name) {\n\t\t// Spring will take userName from updatedUser\n\t\t// if userName exists, update; if not, add new user\n\t\tUser u = userRepository.save(updatedUser);\n\t\tif (u != null) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tSystem.err.println(\"Fail to update - \" + updatedUser.getUserName());\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic boolean removeUserByName(String name) {\n\t\ttry {\n\t\t\tuserRepository.delete(name);\n\t\t\treturn true;\n\t\t} catch (Exception e) {\n\t\t\tSystem.err.println(\"Fail to remove user called \" + name);\t\n\t\t\treturn false;\n\t\t}\n\t}\n}\n```\n\n## Save() 同时用于更新和添加\n1. 测试1\n\tPUT - localhost:8080/users/Melvin\n\t```\n\t{\n\t    \"userName\": \"Grace\",\n\t    \"age\": 26,\n\t    \"nationality\": \"Chinese\"\n\t}\n\t```\n\t结果添加了新的用户，而没有更改 Melvin 的信息。\n2. 测试2\n\tPOST - localhost:8080/users/\n\t```\n\t{\n\t    \"userName\": \"Michael\",\n\t    \"age\": 27,\n\t    \"nationality\": \"Chinese\"\n\t}\n\t```\n\t结果Michael的信息被更改，而并没有添加新的用户。\n\n这里，添加新的用户和更新用户，用的同一个方法-save(User user)。\n区别在于定义 User 时的 @id，以及 CrudRepository<User, String>，都指明了这组数据的 Primary Key。\n\n**所以，Primary Key 不同，即为添加用户。相同，则为更新用户。 **\n\n**更新 UserService.java**\n```\n\tpublic boolean addUser(User user) {\n\t\t// name shouldn't be existed.\n\t\tif (userRepository.findOne(user.getUserName()) == null) {\n\t\t\tuserRepository.save(user);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tSystem.err.println(user.getUserName() + \" is existed..\");\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic boolean updateUserByName(User updatedUser, String name) {\n\t\t// name must be the same\n\t\tif (updatedUser.getUserName().equals(name)) {\n\t\t\tUser u = userRepository.save(updatedUser);\n\t\t\tif (u != null) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tSystem.err.println(\"Fail to update - \" + updatedUser.getUserName());\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tSystem.err.println(\"Unable to change the userName for existed user - \"  + name);\n\t\t\treturn false;\n\t\t}\n\t}\n```\n\n** 继续学习 -> [学习 Spring Boot](/categories/SpringBoot)**\n\n\n=====\n\n\nMaven to build it as jar\njava -jar to run it\n\n\nactuator\n-> / health\nmanagerment.port=\n\napplication.properties\n[Common application properties](https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html)","slug":"学习-Spring-Boot-2","published":1,"updated":"2020-04-30T09:23:19.532Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedih0014sd5tq46z8igc","content":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>在《学习 Spring Boot - 1》里，用 Service 虚拟了用户的数据。 这篇博客接着上一篇往下，介绍如何接入 PostgreSQL 数据库。</p>\n<p>通常连接数据库，从 Service 层开始，要经过 DAO，DAO 里面需要调用已经完成 JDBC 连接设定的 DBUtil，创建了 connection 之后，通过执行 query 来传递数据。在 SpringBoot 里面，这一部分内容被预设在 Spring Data JPA 里面，通过调用 CrudRepository 即可。思路如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Rest Client --&gt; RestController | Service | Repository --&gt; PostgreSQL (DBName=Demo; Table=users)</span><br></pre></td></tr></table></figure>\n\n<p>根据这个思路，需要修改或者添加：</p>\n<ul>\n<li>SpringBoot 的设定</li>\n<li>创建 PostgreSQL 数据库 </li>\n<li>修改 User 类</li>\n<li>创建 UserRepository 接口</li>\n<li>修改 UserService 类</li>\n</ul>\n<a id=\"more\"></a>\n\n<h1 id=\"SpringBoot-的设定\"><a href=\"#SpringBoot-的设定\" class=\"headerlink\" title=\"SpringBoot 的设定\"></a>SpringBoot 的设定</h1><h2 id=\"pom-xml\"><a href=\"#pom-xml\" class=\"headerlink\" title=\"pom.xml\"></a>pom.xml</h2><p>添加 Dependency</p>\n<ul>\n<li>Spring Data JPA</li>\n<li>PostgreSQL</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;1.5.7.RELEASE&lt;/version&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.postgresql&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;postgresql&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;42.1.4&lt;/version&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"application-properties-in-src-main-resources\"><a href=\"#application-properties-in-src-main-resources\" class=\"headerlink\" title=\"application.properties (in src/main/resources)\"></a>application.properties (in src/main/resources)</h2><p>添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring.datasource.url=jdbc:postgresql://&lt;Host&gt;/&lt;DBName&gt;</span><br><span class=\"line\">spring.datasource.username=&lt;username&gt;</span><br><span class=\"line\">spring.datasource.password=&lt;password&gt;</span><br><span class=\"line\">spring.jpa.generate-ddl=true</span><br></pre></td></tr></table></figure>\n\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring.datasource.url=jdbc:postgresql://postgresql.cfqvncjculpj.ap-southeast-1.rds.amazonaws.com:5432/Demo</span><br><span class=\"line\">spring.datasource.username=admin123</span><br><span class=\"line\">spring.datasource.password=admin123</span><br><span class=\"line\">spring.jpa.generate-ddl=true</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"创建-PostgreSQL-数据库\"><a href=\"#创建-PostgreSQL-数据库\" class=\"headerlink\" title=\"创建 PostgreSQL 数据库\"></a>创建 PostgreSQL 数据库</h1><h2 id=\"安装连接-PostgreSQL-数据库\"><a href=\"#安装连接-PostgreSQL-数据库\" class=\"headerlink\" title=\"安装连接 PostgreSQL 数据库\"></a>安装连接 PostgreSQL 数据库</h2><p>具体参考-&gt; <a href=\"/2017/12/16/Database-PostgreSQL/\">Database - PostgreSQL on AWS</a></p>\n<h2 id=\"创建表格\"><a href=\"#创建表格\" class=\"headerlink\" title=\"创建表格\"></a>创建表格</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE users (</span><br><span class=\"line\">    userId SERIAL,</span><br><span class=\"line\">    userName varchar(20)  PRIMARY KEY,</span><br><span class=\"line\">    nationality varchar(30),</span><br><span class=\"line\">    age int</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"输入数据\"><a href=\"#输入数据\" class=\"headerlink\" title=\"输入数据\"></a>输入数据</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSERT INTO users (userName, nationality, age) VALUES</span><br><span class=\"line\">\t(&apos;Hazel&apos;,&apos;Chinese&apos;,26),</span><br><span class=\"line\">\t(&apos;Michael&apos;,&apos;Australian&apos;,32),</span><br><span class=\"line\">\t(&apos;Melvin&apos;,&apos;Singaporean&apos;,30)</span><br><span class=\"line\">\t;</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：<br><img src=\"/images/users-table.png\" alt=\"users-table\"></p>\n<h1 id=\"修改-User-类\"><a href=\"#修改-User-类\" class=\"headerlink\" title=\"修改 User 类\"></a>修改 User 类</h1><p><strong>DataModel Class: User.java</strong><br>Before:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class User &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String userName;</span><br><span class=\"line\">\tprivate int age;</span><br><span class=\"line\">\tprivate String nationality;</span><br><span class=\"line\"></span><br><span class=\"line\">\t...setters and getters...\t\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>After:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Entity</span><br><span class=\"line\">@Table(name=&quot;users&quot;)</span><br><span class=\"line\">public class User implements Serializable &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Id\t\t</span><br><span class=\"line\">\tprivate String userName;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@Column(name=&quot;age&quot;)</span><br><span class=\"line\">\tprivate int age;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@Column(name=&quot;nationality&quot;)</span><br><span class=\"line\">\tprivate String nationality;</span><br><span class=\"line\"></span><br><span class=\"line\">\t...setters and getters...\t\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>@Entity</code> 标明这是一个与数据库对接的类</li>\n<li><code>@Table(name=&quot;users&quot;)</code> 里面定义了信息所在的表格</li>\n<li><code>implements Serializable</code></li>\n<li><code>@Id</code> 关键</li>\n<li><code>@Column(name=&quot;age&quot;)</code></li>\n</ul>\n<h1 id=\"创建-UserRepository-接口\"><a href=\"#创建-UserRepository-接口\" class=\"headerlink\" title=\"创建 UserRepository 接口\"></a>创建 UserRepository 接口</h1><ol>\n<li>创建 package: io.ryanluoxu.springboot.demo.repository</li>\n<li>在下面创建接口类: UserRepository.java, 如下<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public interface UserRepository extends CrudRepository&lt;User, String&gt;&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>里面包括的方法：</p>\n<ul>\n<li>count()</li>\n<li>delete(T entity)</li>\n<li>deleteAll()</li>\n<li>deleteAll(Iterable&lt;? extends T&gt; entities)</li>\n<li>deleteById(ID id)</li>\n<li>existsById(ID id)</li>\n<li>findAll()</li>\n<li>findAllById(Iterable<id> ids)</id></li>\n<li>findById(ID id)</li>\n<li>save(S entity)</li>\n<li>saveAll(Iterable<s> entities)</s></li>\n</ul>\n<p>此处 Id 对应 User 类中的 @Id。<br>如果需要对 Id 以外的进行搜索，可以仅仅创建 Abstract Method:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public ArrayList&lt;User&gt; findByNationality(String nationality);</span><br></pre></td></tr></table></figure>\n\n<p>不需要 Implement 类。</p>\n<h1 id=\"修改-UserService-类\"><a href=\"#修改-UserService-类\" class=\"headerlink\" title=\"修改 UserService 类\"></a>修改 UserService 类</h1><h2 id=\"UserService-java\"><a href=\"#UserService-java\" class=\"headerlink\" title=\"UserService.java\"></a>UserService.java</h2><ol>\n<li>删去模拟数据的 Constructor</li>\n<li>将 ArrayList 换成 UserRepository</li>\n<li>修改调用方法<br>具体如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Service</span><br><span class=\"line\">public class UserService &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@Autowired</span><br><span class=\"line\">\tUserRepository userRepository;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic ArrayList&lt;User&gt; getUserList()&#123;</span><br><span class=\"line\">\t\treturn (ArrayList&lt;User&gt;) userRepository.findAll();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic User getUserByName(String name) &#123;</span><br><span class=\"line\">\t\treturn userRepository.findOne(name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic boolean addUser(User user) &#123;</span><br><span class=\"line\">\t\tUser u = userRepository.save(user);</span><br><span class=\"line\">\t\tif (u != null) &#123;</span><br><span class=\"line\">\t\t\treturn true;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tSystem.err.println(&quot;Fail to add - &quot; + user.getUserName());</span><br><span class=\"line\">\t\t\treturn false;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic boolean updateUserByName(User updatedUser, String name) &#123;</span><br><span class=\"line\">\t\t// Spring will take userName from updatedUser</span><br><span class=\"line\">\t\t// if userName exists, update; if not, add new user</span><br><span class=\"line\">\t\tUser u = userRepository.save(updatedUser);</span><br><span class=\"line\">\t\tif (u != null) &#123;</span><br><span class=\"line\">\t\t\treturn true;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tSystem.err.println(&quot;Fail to update - &quot; + updatedUser.getUserName());</span><br><span class=\"line\">\t\t\treturn false;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic boolean removeUserByName(String name) &#123;</span><br><span class=\"line\">\t\ttry &#123;</span><br><span class=\"line\">\t\t\tuserRepository.delete(name);</span><br><span class=\"line\">\t\t\treturn true;</span><br><span class=\"line\">\t\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\t\tSystem.err.println(&quot;Fail to remove user called &quot; + name);\t</span><br><span class=\"line\">\t\t\treturn false;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"Save-同时用于更新和添加\"><a href=\"#Save-同时用于更新和添加\" class=\"headerlink\" title=\"Save() 同时用于更新和添加\"></a>Save() 同时用于更新和添加</h2><ol>\n<li><p>测试1<br> PUT - localhost:8080/users/Melvin</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;userName&quot;: &quot;Grace&quot;,</span><br><span class=\"line\">    &quot;age&quot;: 26,</span><br><span class=\"line\">    &quot;nationality&quot;: &quot;Chinese&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p> 结果添加了新的用户，而没有更改 Melvin 的信息。</p>\n</li>\n<li><p>测试2<br> POST - localhost:8080/users/</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;userName&quot;: &quot;Michael&quot;,</span><br><span class=\"line\">    &quot;age&quot;: 27,</span><br><span class=\"line\">    &quot;nationality&quot;: &quot;Chinese&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p> 结果Michael的信息被更改，而并没有添加新的用户。</p>\n</li>\n</ol>\n<p>这里，添加新的用户和更新用户，用的同一个方法-save(User user)。<br>区别在于定义 User 时的 @id，以及 CrudRepository&lt;User, String&gt;，都指明了这组数据的 Primary Key。</p>\n<p>*<em>所以，Primary Key 不同，即为添加用户。相同，则为更新用户。 *</em></p>\n<p><strong>更新 UserService.java</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public boolean addUser(User user) &#123;</span><br><span class=\"line\">\t// name shouldn&apos;t be existed.</span><br><span class=\"line\">\tif (userRepository.findOne(user.getUserName()) == null) &#123;</span><br><span class=\"line\">\t\tuserRepository.save(user);</span><br><span class=\"line\">\t\treturn true;</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\tSystem.err.println(user.getUserName() + &quot; is existed..&quot;);</span><br><span class=\"line\">\t\treturn false;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public boolean updateUserByName(User updatedUser, String name) &#123;</span><br><span class=\"line\">\t// name must be the same</span><br><span class=\"line\">\tif (updatedUser.getUserName().equals(name)) &#123;</span><br><span class=\"line\">\t\tUser u = userRepository.save(updatedUser);</span><br><span class=\"line\">\t\tif (u != null) &#123;</span><br><span class=\"line\">\t\t\treturn true;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tSystem.err.println(&quot;Fail to update - &quot; + updatedUser.getUserName());</span><br><span class=\"line\">\t\t\treturn false;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\tSystem.err.println(&quot;Unable to change the userName for existed user - &quot;  + name);</span><br><span class=\"line\">\t\treturn false;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>** 继续学习 -&gt; <a href=\"/categories/SpringBoot\">学习 Spring Boot</a>**</p>\n<p>=====</p>\n<p>Maven to build it as jar<br>java -jar to run it</p>\n<p>actuator<br>-&gt; / health<br>managerment.port=</p>\n<p>application.properties<br><a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html\" target=\"_blank\" rel=\"noopener\">Common application properties</a></p>\n","site":{"data":{}},"excerpt":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>在《学习 Spring Boot - 1》里，用 Service 虚拟了用户的数据。 这篇博客接着上一篇往下，介绍如何接入 PostgreSQL 数据库。</p>\n<p>通常连接数据库，从 Service 层开始，要经过 DAO，DAO 里面需要调用已经完成 JDBC 连接设定的 DBUtil，创建了 connection 之后，通过执行 query 来传递数据。在 SpringBoot 里面，这一部分内容被预设在 Spring Data JPA 里面，通过调用 CrudRepository 即可。思路如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Rest Client --&gt; RestController | Service | Repository --&gt; PostgreSQL (DBName=Demo; Table=users)</span><br></pre></td></tr></table></figure>\n\n<p>根据这个思路，需要修改或者添加：</p>\n<ul>\n<li>SpringBoot 的设定</li>\n<li>创建 PostgreSQL 数据库 </li>\n<li>修改 User 类</li>\n<li>创建 UserRepository 接口</li>\n<li>修改 UserService 类</li>\n</ul>","more":"<h1 id=\"SpringBoot-的设定\"><a href=\"#SpringBoot-的设定\" class=\"headerlink\" title=\"SpringBoot 的设定\"></a>SpringBoot 的设定</h1><h2 id=\"pom-xml\"><a href=\"#pom-xml\" class=\"headerlink\" title=\"pom.xml\"></a>pom.xml</h2><p>添加 Dependency</p>\n<ul>\n<li>Spring Data JPA</li>\n<li>PostgreSQL</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;1.5.7.RELEASE&lt;/version&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.postgresql&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;postgresql&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;42.1.4&lt;/version&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"application-properties-in-src-main-resources\"><a href=\"#application-properties-in-src-main-resources\" class=\"headerlink\" title=\"application.properties (in src/main/resources)\"></a>application.properties (in src/main/resources)</h2><p>添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring.datasource.url=jdbc:postgresql://&lt;Host&gt;/&lt;DBName&gt;</span><br><span class=\"line\">spring.datasource.username=&lt;username&gt;</span><br><span class=\"line\">spring.datasource.password=&lt;password&gt;</span><br><span class=\"line\">spring.jpa.generate-ddl=true</span><br></pre></td></tr></table></figure>\n\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring.datasource.url=jdbc:postgresql://postgresql.cfqvncjculpj.ap-southeast-1.rds.amazonaws.com:5432/Demo</span><br><span class=\"line\">spring.datasource.username=admin123</span><br><span class=\"line\">spring.datasource.password=admin123</span><br><span class=\"line\">spring.jpa.generate-ddl=true</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"创建-PostgreSQL-数据库\"><a href=\"#创建-PostgreSQL-数据库\" class=\"headerlink\" title=\"创建 PostgreSQL 数据库\"></a>创建 PostgreSQL 数据库</h1><h2 id=\"安装连接-PostgreSQL-数据库\"><a href=\"#安装连接-PostgreSQL-数据库\" class=\"headerlink\" title=\"安装连接 PostgreSQL 数据库\"></a>安装连接 PostgreSQL 数据库</h2><p>具体参考-&gt; <a href=\"/2017/12/16/Database-PostgreSQL/\">Database - PostgreSQL on AWS</a></p>\n<h2 id=\"创建表格\"><a href=\"#创建表格\" class=\"headerlink\" title=\"创建表格\"></a>创建表格</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE users (</span><br><span class=\"line\">    userId SERIAL,</span><br><span class=\"line\">    userName varchar(20)  PRIMARY KEY,</span><br><span class=\"line\">    nationality varchar(30),</span><br><span class=\"line\">    age int</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"输入数据\"><a href=\"#输入数据\" class=\"headerlink\" title=\"输入数据\"></a>输入数据</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSERT INTO users (userName, nationality, age) VALUES</span><br><span class=\"line\">\t(&apos;Hazel&apos;,&apos;Chinese&apos;,26),</span><br><span class=\"line\">\t(&apos;Michael&apos;,&apos;Australian&apos;,32),</span><br><span class=\"line\">\t(&apos;Melvin&apos;,&apos;Singaporean&apos;,30)</span><br><span class=\"line\">\t;</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：<br><img src=\"/images/users-table.png\" alt=\"users-table\"></p>\n<h1 id=\"修改-User-类\"><a href=\"#修改-User-类\" class=\"headerlink\" title=\"修改 User 类\"></a>修改 User 类</h1><p><strong>DataModel Class: User.java</strong><br>Before:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class User &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String userName;</span><br><span class=\"line\">\tprivate int age;</span><br><span class=\"line\">\tprivate String nationality;</span><br><span class=\"line\"></span><br><span class=\"line\">\t...setters and getters...\t\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>After:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Entity</span><br><span class=\"line\">@Table(name=&quot;users&quot;)</span><br><span class=\"line\">public class User implements Serializable &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@Id\t\t</span><br><span class=\"line\">\tprivate String userName;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@Column(name=&quot;age&quot;)</span><br><span class=\"line\">\tprivate int age;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@Column(name=&quot;nationality&quot;)</span><br><span class=\"line\">\tprivate String nationality;</span><br><span class=\"line\"></span><br><span class=\"line\">\t...setters and getters...\t\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>@Entity</code> 标明这是一个与数据库对接的类</li>\n<li><code>@Table(name=&quot;users&quot;)</code> 里面定义了信息所在的表格</li>\n<li><code>implements Serializable</code></li>\n<li><code>@Id</code> 关键</li>\n<li><code>@Column(name=&quot;age&quot;)</code></li>\n</ul>\n<h1 id=\"创建-UserRepository-接口\"><a href=\"#创建-UserRepository-接口\" class=\"headerlink\" title=\"创建 UserRepository 接口\"></a>创建 UserRepository 接口</h1><ol>\n<li>创建 package: io.ryanluoxu.springboot.demo.repository</li>\n<li>在下面创建接口类: UserRepository.java, 如下<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public interface UserRepository extends CrudRepository&lt;User, String&gt;&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>里面包括的方法：</p>\n<ul>\n<li>count()</li>\n<li>delete(T entity)</li>\n<li>deleteAll()</li>\n<li>deleteAll(Iterable&lt;? extends T&gt; entities)</li>\n<li>deleteById(ID id)</li>\n<li>existsById(ID id)</li>\n<li>findAll()</li>\n<li>findAllById(Iterable<id> ids)</id></li>\n<li>findById(ID id)</li>\n<li>save(S entity)</li>\n<li>saveAll(Iterable<s> entities)</s></li>\n</ul>\n<p>此处 Id 对应 User 类中的 @Id。<br>如果需要对 Id 以外的进行搜索，可以仅仅创建 Abstract Method:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public ArrayList&lt;User&gt; findByNationality(String nationality);</span><br></pre></td></tr></table></figure>\n\n<p>不需要 Implement 类。</p>\n<h1 id=\"修改-UserService-类\"><a href=\"#修改-UserService-类\" class=\"headerlink\" title=\"修改 UserService 类\"></a>修改 UserService 类</h1><h2 id=\"UserService-java\"><a href=\"#UserService-java\" class=\"headerlink\" title=\"UserService.java\"></a>UserService.java</h2><ol>\n<li>删去模拟数据的 Constructor</li>\n<li>将 ArrayList 换成 UserRepository</li>\n<li>修改调用方法<br>具体如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Service</span><br><span class=\"line\">public class UserService &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@Autowired</span><br><span class=\"line\">\tUserRepository userRepository;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic ArrayList&lt;User&gt; getUserList()&#123;</span><br><span class=\"line\">\t\treturn (ArrayList&lt;User&gt;) userRepository.findAll();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic User getUserByName(String name) &#123;</span><br><span class=\"line\">\t\treturn userRepository.findOne(name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic boolean addUser(User user) &#123;</span><br><span class=\"line\">\t\tUser u = userRepository.save(user);</span><br><span class=\"line\">\t\tif (u != null) &#123;</span><br><span class=\"line\">\t\t\treturn true;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tSystem.err.println(&quot;Fail to add - &quot; + user.getUserName());</span><br><span class=\"line\">\t\t\treturn false;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic boolean updateUserByName(User updatedUser, String name) &#123;</span><br><span class=\"line\">\t\t// Spring will take userName from updatedUser</span><br><span class=\"line\">\t\t// if userName exists, update; if not, add new user</span><br><span class=\"line\">\t\tUser u = userRepository.save(updatedUser);</span><br><span class=\"line\">\t\tif (u != null) &#123;</span><br><span class=\"line\">\t\t\treturn true;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tSystem.err.println(&quot;Fail to update - &quot; + updatedUser.getUserName());</span><br><span class=\"line\">\t\t\treturn false;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic boolean removeUserByName(String name) &#123;</span><br><span class=\"line\">\t\ttry &#123;</span><br><span class=\"line\">\t\t\tuserRepository.delete(name);</span><br><span class=\"line\">\t\t\treturn true;</span><br><span class=\"line\">\t\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\t\tSystem.err.println(&quot;Fail to remove user called &quot; + name);\t</span><br><span class=\"line\">\t\t\treturn false;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"Save-同时用于更新和添加\"><a href=\"#Save-同时用于更新和添加\" class=\"headerlink\" title=\"Save() 同时用于更新和添加\"></a>Save() 同时用于更新和添加</h2><ol>\n<li><p>测试1<br> PUT - localhost:8080/users/Melvin</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;userName&quot;: &quot;Grace&quot;,</span><br><span class=\"line\">    &quot;age&quot;: 26,</span><br><span class=\"line\">    &quot;nationality&quot;: &quot;Chinese&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p> 结果添加了新的用户，而没有更改 Melvin 的信息。</p>\n</li>\n<li><p>测试2<br> POST - localhost:8080/users/</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;userName&quot;: &quot;Michael&quot;,</span><br><span class=\"line\">    &quot;age&quot;: 27,</span><br><span class=\"line\">    &quot;nationality&quot;: &quot;Chinese&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p> 结果Michael的信息被更改，而并没有添加新的用户。</p>\n</li>\n</ol>\n<p>这里，添加新的用户和更新用户，用的同一个方法-save(User user)。<br>区别在于定义 User 时的 @id，以及 CrudRepository&lt;User, String&gt;，都指明了这组数据的 Primary Key。</p>\n<p>*<em>所以，Primary Key 不同，即为添加用户。相同，则为更新用户。 *</em></p>\n<p><strong>更新 UserService.java</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public boolean addUser(User user) &#123;</span><br><span class=\"line\">\t// name shouldn&apos;t be existed.</span><br><span class=\"line\">\tif (userRepository.findOne(user.getUserName()) == null) &#123;</span><br><span class=\"line\">\t\tuserRepository.save(user);</span><br><span class=\"line\">\t\treturn true;</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\tSystem.err.println(user.getUserName() + &quot; is existed..&quot;);</span><br><span class=\"line\">\t\treturn false;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public boolean updateUserByName(User updatedUser, String name) &#123;</span><br><span class=\"line\">\t// name must be the same</span><br><span class=\"line\">\tif (updatedUser.getUserName().equals(name)) &#123;</span><br><span class=\"line\">\t\tUser u = userRepository.save(updatedUser);</span><br><span class=\"line\">\t\tif (u != null) &#123;</span><br><span class=\"line\">\t\t\treturn true;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tSystem.err.println(&quot;Fail to update - &quot; + updatedUser.getUserName());</span><br><span class=\"line\">\t\t\treturn false;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\tSystem.err.println(&quot;Unable to change the userName for existed user - &quot;  + name);</span><br><span class=\"line\">\t\treturn false;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>** 继续学习 -&gt; <a href=\"/categories/SpringBoot\">学习 Spring Boot</a>**</p>\n<p>=====</p>\n<p>Maven to build it as jar<br>java -jar to run it</p>\n<p>actuator<br>-&gt; / health<br>managerment.port=</p>\n<p>application.properties<br><a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html\" target=\"_blank\" rel=\"noopener\">Common application properties</a></p>"},{"title":"数据结构01","date":"2019-07-14T14:47:27.000Z","_content":"# 基本概念\n\n## 什么是数据结构？\n以某种特定的布局存储数据，以便高效操作。\n\n## 时间复杂度：\n对排序数据的总的操作次数。反映当n变化时，操作次数呈现什么规律。\n\n## 空间复杂度：\n是指算法在计算机内执行时所需存储空间的度量，它也是数据规模n的函数。\n\n<!--more-->\n\n## 常用的数据结构\n- 数组\n- 堆栈\n- 队列\n- 链表\n- 树\n- 图\n- 字典树（Tries，这是一种高效的树，有必要单独列出来）\n- 哈希表\n\n# 数组\n- 堆栈和队列都源自数组。\n- 一维数组\n- 多维数组\n\n## 数组的基本操作 \n- Insert——在给定索引位置插入一个元素\n- Get——返回给定索引位置的元素\n- Delete——删除给定索引位置的元素\n- Size——获取数组内所有元素的总数\n\n## 常问的数组面试问题：\n### 找到数组中第二小的元素\n- 一次遍历中找到最小的两个数，时间复杂度为O(n)\n```\n/**\n * 一次遍历中找到最小的两个数，时间复杂度为O(n) <br>\n * {1,1,2} will return 1.\n * @param array\n */\npublic static int get2ndMinNumber(int[] array) {\n\tint firstMin = Integer.MAX_VALUE;\n\tint secondMin = Integer.MAX_VALUE;\n\tfor (int i = 0; i < array.length; i++) {\n\t\tif (firstMin > array[i]) {\n\t\t\tsecondMin = firstMin;\n\t\t\tfirstMin = array[i];\n\t\t} else {\n\t\t\tif (secondMin > array[i]) {\n\t\t\t\tsecondMin = array[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn secondMin;\n}\n```\n\n### 找到数组中第一个没有重复的整数\n- 时间复杂度为O(n^2)\n```\n/**\n * 时间复杂度为O(n^2)\n */\npublic static int get1stNonDuplicateNumber(int[] array) {\n\tfor (int i = 0; i < array.length; i++) {\n\t\tint a =  array[i];\n\t\tfor (int j = 0; j < array.length; j++) {\n\t\t\tif (i!=j) {\n\t\t\t\tint b = array[j];\n\t\t\t\tif (a==b) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (j==array.length-1) {\n\t\t\t\treturn a;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n- 时间复杂度为O(n)，需要辅助的空间复杂度O(n)。\n- DONE: Space Complexity\n```\n\n/**\n * 放入Map中统计每个元素的重复次数 <br>\n * LinkedHashMap guarantee insert order<br>\n * 时间复杂度为O(n)，需要辅助的空间复杂度O(n)。\n */\npublic static int get1stNonDuplicateNumber2(int[] array) {\n\tMap<Integer, Integer> map = new LinkedHashMap<>();\n\tfor (int i = 0; i < array.length; i++) {\n\t\tif (map.containsKey(array[i])) {\n\t\t\tmap.put(array[i], map.get(array[i])+1);\n\t\t} else {\n\t\t\tmap.put(array[i], 1);\n\t\t}\n\t}\n\tfor (Entry<Integer, Integer> entry : map.entrySet()) {\n\t\tif (entry.getValue()==1) {\n\t\t\treturn entry.getKey();\n\t\t}\n\t}\n\treturn 0;\n}\n```\n### 合并两个有序数组\n```\n/**\n * 采用分治法（Divide and Conquer）<br>\n * 把长度为n的输入序列分成两个长度为n/2的子序列 <br>\n * 对这两个子序列分别采用归并排序；<br>\n * 将两个排序好的子序列合并成一个最终的排序序列。<br>\n */\npublic static int[] mergeSort(int[] array) {\n\tif (array.length<2) {\n\t\treturn array;\n\t}\n\tint middle = array.length%2==0? array.length/2 : (array.length-1)/2; \n\tint[] left =  Arrays.copyOfRange(array, 0, middle);\n\tint[] right =  Arrays.copyOfRange(array, middle, array.length);\n\treturn merge(mergeSort(left),mergeSort(right));\n}\n\n/**\n * 正序。合并两个有序数组。\n * @param left\n * @param right\n * @return\n */\npublic static int[] merge(int[] left, int[] right) {\n\tint[] result = new int[left.length+right.length];\n\tint resultIndex = 0;\n\tint leftIndex = 0;\n\tint rightIndex = 0;\n\twhile (left.length>leftIndex && right.length>rightIndex) {\n\t\tint smallerNumber;\n\t\tint leftNumber = left[leftIndex];\n\t\tint rightNumber = right[rightIndex];\n\t\tif (leftNumber < rightNumber) {\n\t\t\tsmallerNumber = leftNumber;\n\t\t\tleftIndex++;\n\t\t} else {\n\t\t\tsmallerNumber = rightNumber;\n\t\t\trightIndex++;\n\t\t}\n\t\tresult[resultIndex] = smallerNumber;\n\t\tresultIndex++;\n\t}\n\t\n\t// 当其中一个数组到头的时候，另一个数组全部加到尾部\n\tif (left.length==leftIndex) {\n\t\twhile (rightIndex<right.length) {\n\t\t\tresult[resultIndex] = right[rightIndex];\n\t\t\tresultIndex++;\n\t\t\trightIndex++;\n\t\t}\n\t} else {\n\t\twhile (leftIndex<left.length) {\n\t\t\tresult[resultIndex] = left[leftIndex];\n\t\t\tresultIndex++;\n\t\t\tleftIndex++;\n\t\t}\n\t}\n\t\n\treturn result;\n}\n```\n\n### 重新排列数组中的正值和负值\n- 冒泡算法，依次比较相邻的两位，满足条件就交换位置\n```\n/**\n * -3 4 2 -1 7 3 -5 ->\n * -3 -1 -5 4 2 7 3\n * @param array\n * @return\n */\npublic static int[] sort(int[] array) {\n\t/*\n\t * j i -3 4 2 -1 7 3 -5\n\t * 6 0 -3 4 2 -1 7 3 -5\n\t * 6 1 -3 4 2 -1 7 3 -5\n\t * 6 2 -3 4 -1 2 7 3 -5\n\t * 6 3 -3 4 -1 2 7 3 -5\n\t * 6 4 -3 4 -1 2 7 3 -5\n\t * 6 5 -3 4 -1 2 7 -5 3\n\t * \n\t * 5 0 -3 4 -1 2 7 -5 3\n\t * 5 1 -3 -1 4 2 7 -5 3\n\t * 5 2 -3 -1 4 2 7 -5 3\n\t * 5 3 -3 -1 4 2 7 -5 3\n\t * 5 4 -3 -1 4 2 -5 7 3\n\t * \n\t * 4 0 -3 -1 4 2 -5 7 3\n\t * 4 1 -3 -1 4 2 -5 7 3\n\t * 4 2 -3 -1 4 2 -5 7 3\n\t * 4 3 -3 -1 4 -5 2 7 3\n\t * \n\t * 3 0 -3 -1 4 -5 2 7 3\n\t * 3 1 -3 -1 4 -5 2 7 3\n\t * 3 2 -3 -1 -5 4 2 7 3\n\t */\n\tfor (int j = array.length-1; j > 0; j--) {\n\t\tfor (int i = 0; i < j; i++) {\n\t\t\tint a = array[i];\n\t\t\tint b = array[i+1];\n\t\t\tif (a>=0 && b<0) {\n\t\t\t\tarray[i] = b;\n\t\t\t\tarray[i+1] = a;\n\t\t\t}\n\t\t}\n\t}\n\treturn array;\n}\n```\n\n# 堆栈\n一堆垂直排列的书籍。为了获得位于中间位置的书，你需要拿掉放在它上面的所有书籍。这就是 LIFO（后进先出）方法的工作原理。\n堆栈的基本操作：\n- Push——在顶部插入元素\n- Pop—— 从堆栈中删除后返回顶部元素\n- isEmpty——如果堆栈为空，则返回 true\n- Top ——返回顶部元素，但不从堆栈中删除\n\n# 队列\nFirst in First Out。排队买票。\n队列的基本操作：\n- Enqueue() —— 向队列末尾插入元素\n- Dequeue() —— 从队列头部移除元素\n- isEmpty() —— 如果队列为空，则返回 true\n- Top() —— 返回队列的第一个元素\n\n# 链表\n- Head->[data|pointer]->[data|pointer]->null\n\n# 图\n一组节点，以网络的形式互相连接。\n\n\n# 树\n树是一种层级数据结构，包含了连接它们的节点和边。\n[树的基本术语](https://pic1.zhimg.com/v2-c989c9e4969d308abc422e2400f8aa90_r.jpg)\n- root\n- parent\n- child\n- leaf\n- sibling\n\n## 二叉树\n\n### 高度\n两种定义：\n- 从根节点到最深节点的最长路径的节点数。\n- 从根到最深节点的最长路径的边数。\t\t\n\n两种算法：\n- 层级遍历法\n- 递归法。\n\n### 层级遍历法 - 获取二叉树的高度\n主要步骤是：\n- 创建空队列保存二叉树的每一层节点\n- 初始化标识二叉树高度的变量height为0\n- 一层一层地遍历二叉树，每向下遍历一层，高度height加1\n- 计算每一层的节点数量，当下一层的节点为0时，结束遍历\n```\n/**\n * 使用迭代方式，时间复杂度O(n)\n * - add all the nodes of current level to the queue <br》\n * - if queue size > 0 , height++ <br>\n * - remove each nodes of queue, and add its children into queue <br>\n * - until queue size = 0\n * @param root\n * @return height\n */\npublic static int getHeight(TreeNode root) {\n\tint height = 0;\n\t\n\t// to store nodes for each level\n\tQueue<TreeNode> queue = new LinkedList<>();\n\tqueue.add(root);\n\t\n\twhile (queue.size()>0) {\n\t\t// get number of nodes for this level\n\t\tint nodeCount = queue.size();\n\t\tif (nodeCount == 0) {\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\theight++;\n\t\t\n\t\twhile (nodeCount>0) {\n\t\t\tTreeNode node = queue.remove();\n\t\t\tif (leftOf(node)!=null) {\n\t\t\t\tqueue.add(leftOf(node));\n\t\t\t}\n\t\t\tif (rightOf(node)!=null) {\n\t\t\t\tqueue.add(rightOf(node));\n\t\t\t}\n\t\t\tnodeCount--;\n\t\t}\n\t}\n\treturn height;\n}\n```\n\n### 递归法 - 获取二叉树的高度\n```\n/**\n * 使用递归，时间复杂度O(n)\n * @param root\n * @return\n */\npublic static int getHeight2(TreeNode node) {\n\tif (node!=null) {\n\t\treturn Math.max(getHeight2(leftOf(node)), getHeight2(rightOf(node)))+1;\n\t}\n\treturn 0;\n}\n```\n\n### 找到一个二叉树中给定节点的祖先（ancestors）\n```\n/**\n * 使用递归，找到一个二叉树中给定节点的祖先, 时间复杂度O(n)\n * @param node\n * @return\n */\npublic static List<TreeNode> getAncestors(TreeNode node){\n\tList<TreeNode> nodes = new ArrayList<>();\n\tTreeNode father = node.getParent(); \n\tif (father!=null) {\n\t\tnodes.add(father);\n\t\tnodes.addAll(getAncestors(father));\n\t}\n\treturn nodes;\n}\n```\n\n## 二叉搜索树\n\n* 若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值； \n* 若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值；\n\n### 寻找二叉搜索树中第k小的元素\n中序遍历\n```\n/**\n * 中序遍历 get Kth Smallest Element in a BST\n * @param root\n * @return\n */\npublic static IntBSTNode getKthSmallestNode(IntBSTNode root, int k) {\n\t\n\t// store all elements into a ordered list\n\tList<IntBSTNode> nodes = new ArrayList<>();\n\tinOrder(root, nodes);\n\treturn nodes.get(k-1);\n}\n\n/**\n * 中序遍历\n * @param node\n * @param nodes\n */\nprivate static void inOrder(IntBSTNode node, List<IntBSTNode> nodes) {\n\tif (node==null) {\n\t\treturn;\n\t}\n\tinOrder(node.getLeft(), nodes);\n\tnodes.add(node);\n\tinOrder(node.getRight(), nodes); \n}\n```\n递归（计算节点数量）：\n- 如果是当前节点，返回。\n- 如果左边总数+1（当前节点）小于k，答案是右边第（k-（左边总数+1））小的数。\n- 如果左边总数+1（当前节点）大于k，答案是左边第k小的数。\n```\n/**\n * 递归（计算节点数量）：\n */\npublic static IntBSTNode getKthSmallestNode2(IntBSTNode root, int k) {\n\tint leftCount = countNode(root.getLeft());\n\tif (leftCount==k-1) {\n\t\treturn root;\n\t} else if(leftCount<k-1) {\n\t\treturn getKthSmallestNode(root.getRight(), k-leftCount-1);\n\t} else {\n\t\treturn getKthSmallestNode2(root.getLeft(), k);\n\t}\n}\n\npublic static int countNode(IntBSTNode node) {\n\tif (node==null) {\n\t\treturn 0;\n\t}\n\treturn 1+countNode(node.getLeft())+countNode(node.getRight());\n}\n```\n\n# 字典树（Tries，这是一种高效的树）\n[top,thus,their](https://pic2.zhimg.com/80/v2-618ae28f32762aef4d23b0c2b18dbbf2_hd.jpg)\n\n\n\n\n","source":"_posts/数据结构01.md","raw":"---\ntitle: 数据结构01\ndate: 2019-07-14 22:47:27\ncategories: 数据结构\ntags: [数据结构,算法]\n---\n# 基本概念\n\n## 什么是数据结构？\n以某种特定的布局存储数据，以便高效操作。\n\n## 时间复杂度：\n对排序数据的总的操作次数。反映当n变化时，操作次数呈现什么规律。\n\n## 空间复杂度：\n是指算法在计算机内执行时所需存储空间的度量，它也是数据规模n的函数。\n\n<!--more-->\n\n## 常用的数据结构\n- 数组\n- 堆栈\n- 队列\n- 链表\n- 树\n- 图\n- 字典树（Tries，这是一种高效的树，有必要单独列出来）\n- 哈希表\n\n# 数组\n- 堆栈和队列都源自数组。\n- 一维数组\n- 多维数组\n\n## 数组的基本操作 \n- Insert——在给定索引位置插入一个元素\n- Get——返回给定索引位置的元素\n- Delete——删除给定索引位置的元素\n- Size——获取数组内所有元素的总数\n\n## 常问的数组面试问题：\n### 找到数组中第二小的元素\n- 一次遍历中找到最小的两个数，时间复杂度为O(n)\n```\n/**\n * 一次遍历中找到最小的两个数，时间复杂度为O(n) <br>\n * {1,1,2} will return 1.\n * @param array\n */\npublic static int get2ndMinNumber(int[] array) {\n\tint firstMin = Integer.MAX_VALUE;\n\tint secondMin = Integer.MAX_VALUE;\n\tfor (int i = 0; i < array.length; i++) {\n\t\tif (firstMin > array[i]) {\n\t\t\tsecondMin = firstMin;\n\t\t\tfirstMin = array[i];\n\t\t} else {\n\t\t\tif (secondMin > array[i]) {\n\t\t\t\tsecondMin = array[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn secondMin;\n}\n```\n\n### 找到数组中第一个没有重复的整数\n- 时间复杂度为O(n^2)\n```\n/**\n * 时间复杂度为O(n^2)\n */\npublic static int get1stNonDuplicateNumber(int[] array) {\n\tfor (int i = 0; i < array.length; i++) {\n\t\tint a =  array[i];\n\t\tfor (int j = 0; j < array.length; j++) {\n\t\t\tif (i!=j) {\n\t\t\t\tint b = array[j];\n\t\t\t\tif (a==b) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (j==array.length-1) {\n\t\t\t\treturn a;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n- 时间复杂度为O(n)，需要辅助的空间复杂度O(n)。\n- DONE: Space Complexity\n```\n\n/**\n * 放入Map中统计每个元素的重复次数 <br>\n * LinkedHashMap guarantee insert order<br>\n * 时间复杂度为O(n)，需要辅助的空间复杂度O(n)。\n */\npublic static int get1stNonDuplicateNumber2(int[] array) {\n\tMap<Integer, Integer> map = new LinkedHashMap<>();\n\tfor (int i = 0; i < array.length; i++) {\n\t\tif (map.containsKey(array[i])) {\n\t\t\tmap.put(array[i], map.get(array[i])+1);\n\t\t} else {\n\t\t\tmap.put(array[i], 1);\n\t\t}\n\t}\n\tfor (Entry<Integer, Integer> entry : map.entrySet()) {\n\t\tif (entry.getValue()==1) {\n\t\t\treturn entry.getKey();\n\t\t}\n\t}\n\treturn 0;\n}\n```\n### 合并两个有序数组\n```\n/**\n * 采用分治法（Divide and Conquer）<br>\n * 把长度为n的输入序列分成两个长度为n/2的子序列 <br>\n * 对这两个子序列分别采用归并排序；<br>\n * 将两个排序好的子序列合并成一个最终的排序序列。<br>\n */\npublic static int[] mergeSort(int[] array) {\n\tif (array.length<2) {\n\t\treturn array;\n\t}\n\tint middle = array.length%2==0? array.length/2 : (array.length-1)/2; \n\tint[] left =  Arrays.copyOfRange(array, 0, middle);\n\tint[] right =  Arrays.copyOfRange(array, middle, array.length);\n\treturn merge(mergeSort(left),mergeSort(right));\n}\n\n/**\n * 正序。合并两个有序数组。\n * @param left\n * @param right\n * @return\n */\npublic static int[] merge(int[] left, int[] right) {\n\tint[] result = new int[left.length+right.length];\n\tint resultIndex = 0;\n\tint leftIndex = 0;\n\tint rightIndex = 0;\n\twhile (left.length>leftIndex && right.length>rightIndex) {\n\t\tint smallerNumber;\n\t\tint leftNumber = left[leftIndex];\n\t\tint rightNumber = right[rightIndex];\n\t\tif (leftNumber < rightNumber) {\n\t\t\tsmallerNumber = leftNumber;\n\t\t\tleftIndex++;\n\t\t} else {\n\t\t\tsmallerNumber = rightNumber;\n\t\t\trightIndex++;\n\t\t}\n\t\tresult[resultIndex] = smallerNumber;\n\t\tresultIndex++;\n\t}\n\t\n\t// 当其中一个数组到头的时候，另一个数组全部加到尾部\n\tif (left.length==leftIndex) {\n\t\twhile (rightIndex<right.length) {\n\t\t\tresult[resultIndex] = right[rightIndex];\n\t\t\tresultIndex++;\n\t\t\trightIndex++;\n\t\t}\n\t} else {\n\t\twhile (leftIndex<left.length) {\n\t\t\tresult[resultIndex] = left[leftIndex];\n\t\t\tresultIndex++;\n\t\t\tleftIndex++;\n\t\t}\n\t}\n\t\n\treturn result;\n}\n```\n\n### 重新排列数组中的正值和负值\n- 冒泡算法，依次比较相邻的两位，满足条件就交换位置\n```\n/**\n * -3 4 2 -1 7 3 -5 ->\n * -3 -1 -5 4 2 7 3\n * @param array\n * @return\n */\npublic static int[] sort(int[] array) {\n\t/*\n\t * j i -3 4 2 -1 7 3 -5\n\t * 6 0 -3 4 2 -1 7 3 -5\n\t * 6 1 -3 4 2 -1 7 3 -5\n\t * 6 2 -3 4 -1 2 7 3 -5\n\t * 6 3 -3 4 -1 2 7 3 -5\n\t * 6 4 -3 4 -1 2 7 3 -5\n\t * 6 5 -3 4 -1 2 7 -5 3\n\t * \n\t * 5 0 -3 4 -1 2 7 -5 3\n\t * 5 1 -3 -1 4 2 7 -5 3\n\t * 5 2 -3 -1 4 2 7 -5 3\n\t * 5 3 -3 -1 4 2 7 -5 3\n\t * 5 4 -3 -1 4 2 -5 7 3\n\t * \n\t * 4 0 -3 -1 4 2 -5 7 3\n\t * 4 1 -3 -1 4 2 -5 7 3\n\t * 4 2 -3 -1 4 2 -5 7 3\n\t * 4 3 -3 -1 4 -5 2 7 3\n\t * \n\t * 3 0 -3 -1 4 -5 2 7 3\n\t * 3 1 -3 -1 4 -5 2 7 3\n\t * 3 2 -3 -1 -5 4 2 7 3\n\t */\n\tfor (int j = array.length-1; j > 0; j--) {\n\t\tfor (int i = 0; i < j; i++) {\n\t\t\tint a = array[i];\n\t\t\tint b = array[i+1];\n\t\t\tif (a>=0 && b<0) {\n\t\t\t\tarray[i] = b;\n\t\t\t\tarray[i+1] = a;\n\t\t\t}\n\t\t}\n\t}\n\treturn array;\n}\n```\n\n# 堆栈\n一堆垂直排列的书籍。为了获得位于中间位置的书，你需要拿掉放在它上面的所有书籍。这就是 LIFO（后进先出）方法的工作原理。\n堆栈的基本操作：\n- Push——在顶部插入元素\n- Pop—— 从堆栈中删除后返回顶部元素\n- isEmpty——如果堆栈为空，则返回 true\n- Top ——返回顶部元素，但不从堆栈中删除\n\n# 队列\nFirst in First Out。排队买票。\n队列的基本操作：\n- Enqueue() —— 向队列末尾插入元素\n- Dequeue() —— 从队列头部移除元素\n- isEmpty() —— 如果队列为空，则返回 true\n- Top() —— 返回队列的第一个元素\n\n# 链表\n- Head->[data|pointer]->[data|pointer]->null\n\n# 图\n一组节点，以网络的形式互相连接。\n\n\n# 树\n树是一种层级数据结构，包含了连接它们的节点和边。\n[树的基本术语](https://pic1.zhimg.com/v2-c989c9e4969d308abc422e2400f8aa90_r.jpg)\n- root\n- parent\n- child\n- leaf\n- sibling\n\n## 二叉树\n\n### 高度\n两种定义：\n- 从根节点到最深节点的最长路径的节点数。\n- 从根到最深节点的最长路径的边数。\t\t\n\n两种算法：\n- 层级遍历法\n- 递归法。\n\n### 层级遍历法 - 获取二叉树的高度\n主要步骤是：\n- 创建空队列保存二叉树的每一层节点\n- 初始化标识二叉树高度的变量height为0\n- 一层一层地遍历二叉树，每向下遍历一层，高度height加1\n- 计算每一层的节点数量，当下一层的节点为0时，结束遍历\n```\n/**\n * 使用迭代方式，时间复杂度O(n)\n * - add all the nodes of current level to the queue <br》\n * - if queue size > 0 , height++ <br>\n * - remove each nodes of queue, and add its children into queue <br>\n * - until queue size = 0\n * @param root\n * @return height\n */\npublic static int getHeight(TreeNode root) {\n\tint height = 0;\n\t\n\t// to store nodes for each level\n\tQueue<TreeNode> queue = new LinkedList<>();\n\tqueue.add(root);\n\t\n\twhile (queue.size()>0) {\n\t\t// get number of nodes for this level\n\t\tint nodeCount = queue.size();\n\t\tif (nodeCount == 0) {\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\theight++;\n\t\t\n\t\twhile (nodeCount>0) {\n\t\t\tTreeNode node = queue.remove();\n\t\t\tif (leftOf(node)!=null) {\n\t\t\t\tqueue.add(leftOf(node));\n\t\t\t}\n\t\t\tif (rightOf(node)!=null) {\n\t\t\t\tqueue.add(rightOf(node));\n\t\t\t}\n\t\t\tnodeCount--;\n\t\t}\n\t}\n\treturn height;\n}\n```\n\n### 递归法 - 获取二叉树的高度\n```\n/**\n * 使用递归，时间复杂度O(n)\n * @param root\n * @return\n */\npublic static int getHeight2(TreeNode node) {\n\tif (node!=null) {\n\t\treturn Math.max(getHeight2(leftOf(node)), getHeight2(rightOf(node)))+1;\n\t}\n\treturn 0;\n}\n```\n\n### 找到一个二叉树中给定节点的祖先（ancestors）\n```\n/**\n * 使用递归，找到一个二叉树中给定节点的祖先, 时间复杂度O(n)\n * @param node\n * @return\n */\npublic static List<TreeNode> getAncestors(TreeNode node){\n\tList<TreeNode> nodes = new ArrayList<>();\n\tTreeNode father = node.getParent(); \n\tif (father!=null) {\n\t\tnodes.add(father);\n\t\tnodes.addAll(getAncestors(father));\n\t}\n\treturn nodes;\n}\n```\n\n## 二叉搜索树\n\n* 若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值； \n* 若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值；\n\n### 寻找二叉搜索树中第k小的元素\n中序遍历\n```\n/**\n * 中序遍历 get Kth Smallest Element in a BST\n * @param root\n * @return\n */\npublic static IntBSTNode getKthSmallestNode(IntBSTNode root, int k) {\n\t\n\t// store all elements into a ordered list\n\tList<IntBSTNode> nodes = new ArrayList<>();\n\tinOrder(root, nodes);\n\treturn nodes.get(k-1);\n}\n\n/**\n * 中序遍历\n * @param node\n * @param nodes\n */\nprivate static void inOrder(IntBSTNode node, List<IntBSTNode> nodes) {\n\tif (node==null) {\n\t\treturn;\n\t}\n\tinOrder(node.getLeft(), nodes);\n\tnodes.add(node);\n\tinOrder(node.getRight(), nodes); \n}\n```\n递归（计算节点数量）：\n- 如果是当前节点，返回。\n- 如果左边总数+1（当前节点）小于k，答案是右边第（k-（左边总数+1））小的数。\n- 如果左边总数+1（当前节点）大于k，答案是左边第k小的数。\n```\n/**\n * 递归（计算节点数量）：\n */\npublic static IntBSTNode getKthSmallestNode2(IntBSTNode root, int k) {\n\tint leftCount = countNode(root.getLeft());\n\tif (leftCount==k-1) {\n\t\treturn root;\n\t} else if(leftCount<k-1) {\n\t\treturn getKthSmallestNode(root.getRight(), k-leftCount-1);\n\t} else {\n\t\treturn getKthSmallestNode2(root.getLeft(), k);\n\t}\n}\n\npublic static int countNode(IntBSTNode node) {\n\tif (node==null) {\n\t\treturn 0;\n\t}\n\treturn 1+countNode(node.getLeft())+countNode(node.getRight());\n}\n```\n\n# 字典树（Tries，这是一种高效的树）\n[top,thus,their](https://pic2.zhimg.com/80/v2-618ae28f32762aef4d23b0c2b18dbbf2_hd.jpg)\n\n\n\n\n","slug":"数据结构01","published":1,"updated":"2020-04-30T09:23:19.532Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedih0015sd5tpgqb0smk","content":"<h1 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h1><h2 id=\"什么是数据结构？\"><a href=\"#什么是数据结构？\" class=\"headerlink\" title=\"什么是数据结构？\"></a>什么是数据结构？</h2><p>以某种特定的布局存储数据，以便高效操作。</p>\n<h2 id=\"时间复杂度：\"><a href=\"#时间复杂度：\" class=\"headerlink\" title=\"时间复杂度：\"></a>时间复杂度：</h2><p>对排序数据的总的操作次数。反映当n变化时，操作次数呈现什么规律。</p>\n<h2 id=\"空间复杂度：\"><a href=\"#空间复杂度：\" class=\"headerlink\" title=\"空间复杂度：\"></a>空间复杂度：</h2><p>是指算法在计算机内执行时所需存储空间的度量，它也是数据规模n的函数。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"常用的数据结构\"><a href=\"#常用的数据结构\" class=\"headerlink\" title=\"常用的数据结构\"></a>常用的数据结构</h2><ul>\n<li>数组</li>\n<li>堆栈</li>\n<li>队列</li>\n<li>链表</li>\n<li>树</li>\n<li>图</li>\n<li>字典树（Tries，这是一种高效的树，有必要单独列出来）</li>\n<li>哈希表</li>\n</ul>\n<h1 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h1><ul>\n<li>堆栈和队列都源自数组。</li>\n<li>一维数组</li>\n<li>多维数组</li>\n</ul>\n<h2 id=\"数组的基本操作\"><a href=\"#数组的基本操作\" class=\"headerlink\" title=\"数组的基本操作\"></a>数组的基本操作</h2><ul>\n<li>Insert——在给定索引位置插入一个元素</li>\n<li>Get——返回给定索引位置的元素</li>\n<li>Delete——删除给定索引位置的元素</li>\n<li>Size——获取数组内所有元素的总数</li>\n</ul>\n<h2 id=\"常问的数组面试问题：\"><a href=\"#常问的数组面试问题：\" class=\"headerlink\" title=\"常问的数组面试问题：\"></a>常问的数组面试问题：</h2><h3 id=\"找到数组中第二小的元素\"><a href=\"#找到数组中第二小的元素\" class=\"headerlink\" title=\"找到数组中第二小的元素\"></a>找到数组中第二小的元素</h3><ul>\n<li>一次遍历中找到最小的两个数，时间复杂度为O(n)<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 一次遍历中找到最小的两个数，时间复杂度为O(n) &lt;br&gt;</span><br><span class=\"line\"> * &#123;1,1,2&#125; will return 1.</span><br><span class=\"line\"> * @param array</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static int get2ndMinNumber(int[] array) &#123;</span><br><span class=\"line\">\tint firstMin = Integer.MAX_VALUE;</span><br><span class=\"line\">\tint secondMin = Integer.MAX_VALUE;</span><br><span class=\"line\">\tfor (int i = 0; i &lt; array.length; i++) &#123;</span><br><span class=\"line\">\t\tif (firstMin &gt; array[i]) &#123;</span><br><span class=\"line\">\t\t\tsecondMin = firstMin;</span><br><span class=\"line\">\t\t\tfirstMin = array[i];</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tif (secondMin &gt; array[i]) &#123;</span><br><span class=\"line\">\t\t\t\tsecondMin = array[i];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn secondMin;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"找到数组中第一个没有重复的整数\"><a href=\"#找到数组中第一个没有重复的整数\" class=\"headerlink\" title=\"找到数组中第一个没有重复的整数\"></a>找到数组中第一个没有重复的整数</h3><ul>\n<li><p>时间复杂度为O(n^2)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 时间复杂度为O(n^2)</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static int get1stNonDuplicateNumber(int[] array) &#123;</span><br><span class=\"line\">\tfor (int i = 0; i &lt; array.length; i++) &#123;</span><br><span class=\"line\">\t\tint a =  array[i];</span><br><span class=\"line\">\t\tfor (int j = 0; j &lt; array.length; j++) &#123;</span><br><span class=\"line\">\t\t\tif (i!=j) &#123;</span><br><span class=\"line\">\t\t\t\tint b = array[j];</span><br><span class=\"line\">\t\t\t\tif (a==b) &#123;</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tif (j==array.length-1) &#123;</span><br><span class=\"line\">\t\t\t\treturn a;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>时间复杂度为O(n)，需要辅助的空间复杂度O(n)。</p>\n</li>\n<li><p>DONE: Space Complexity</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 放入Map中统计每个元素的重复次数 &lt;br&gt;</span><br><span class=\"line\"> * LinkedHashMap guarantee insert order&lt;br&gt;</span><br><span class=\"line\"> * 时间复杂度为O(n)，需要辅助的空间复杂度O(n)。</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static int get1stNonDuplicateNumber2(int[] array) &#123;</span><br><span class=\"line\">\tMap&lt;Integer, Integer&gt; map = new LinkedHashMap&lt;&gt;();</span><br><span class=\"line\">\tfor (int i = 0; i &lt; array.length; i++) &#123;</span><br><span class=\"line\">\t\tif (map.containsKey(array[i])) &#123;</span><br><span class=\"line\">\t\t\tmap.put(array[i], map.get(array[i])+1);</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tmap.put(array[i], 1);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfor (Entry&lt;Integer, Integer&gt; entry : map.entrySet()) &#123;</span><br><span class=\"line\">\t\tif (entry.getValue()==1) &#123;</span><br><span class=\"line\">\t\t\treturn entry.getKey();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"合并两个有序数组\"><a href=\"#合并两个有序数组\" class=\"headerlink\" title=\"合并两个有序数组\"></a>合并两个有序数组</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 采用分治法（Divide and Conquer）&lt;br&gt;</span><br><span class=\"line\"> * 把长度为n的输入序列分成两个长度为n/2的子序列 &lt;br&gt;</span><br><span class=\"line\"> * 对这两个子序列分别采用归并排序；&lt;br&gt;</span><br><span class=\"line\"> * 将两个排序好的子序列合并成一个最终的排序序列。&lt;br&gt;</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static int[] mergeSort(int[] array) &#123;</span><br><span class=\"line\">\tif (array.length&lt;2) &#123;</span><br><span class=\"line\">\t\treturn array;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tint middle = array.length%2==0? array.length/2 : (array.length-1)/2; </span><br><span class=\"line\">\tint[] left =  Arrays.copyOfRange(array, 0, middle);</span><br><span class=\"line\">\tint[] right =  Arrays.copyOfRange(array, middle, array.length);</span><br><span class=\"line\">\treturn merge(mergeSort(left),mergeSort(right));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 正序。合并两个有序数组。</span><br><span class=\"line\"> * @param left</span><br><span class=\"line\"> * @param right</span><br><span class=\"line\"> * @return</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static int[] merge(int[] left, int[] right) &#123;</span><br><span class=\"line\">\tint[] result = new int[left.length+right.length];</span><br><span class=\"line\">\tint resultIndex = 0;</span><br><span class=\"line\">\tint leftIndex = 0;</span><br><span class=\"line\">\tint rightIndex = 0;</span><br><span class=\"line\">\twhile (left.length&gt;leftIndex &amp;&amp; right.length&gt;rightIndex) &#123;</span><br><span class=\"line\">\t\tint smallerNumber;</span><br><span class=\"line\">\t\tint leftNumber = left[leftIndex];</span><br><span class=\"line\">\t\tint rightNumber = right[rightIndex];</span><br><span class=\"line\">\t\tif (leftNumber &lt; rightNumber) &#123;</span><br><span class=\"line\">\t\t\tsmallerNumber = leftNumber;</span><br><span class=\"line\">\t\t\tleftIndex++;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tsmallerNumber = rightNumber;</span><br><span class=\"line\">\t\t\trightIndex++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tresult[resultIndex] = smallerNumber;</span><br><span class=\"line\">\t\tresultIndex++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t// 当其中一个数组到头的时候，另一个数组全部加到尾部</span><br><span class=\"line\">\tif (left.length==leftIndex) &#123;</span><br><span class=\"line\">\t\twhile (rightIndex&lt;right.length) &#123;</span><br><span class=\"line\">\t\t\tresult[resultIndex] = right[rightIndex];</span><br><span class=\"line\">\t\t\tresultIndex++;</span><br><span class=\"line\">\t\t\trightIndex++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\twhile (leftIndex&lt;left.length) &#123;</span><br><span class=\"line\">\t\t\tresult[resultIndex] = left[leftIndex];</span><br><span class=\"line\">\t\t\tresultIndex++;</span><br><span class=\"line\">\t\t\tleftIndex++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\treturn result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"重新排列数组中的正值和负值\"><a href=\"#重新排列数组中的正值和负值\" class=\"headerlink\" title=\"重新排列数组中的正值和负值\"></a>重新排列数组中的正值和负值</h3><ul>\n<li>冒泡算法，依次比较相邻的两位，满足条件就交换位置<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * -3 4 2 -1 7 3 -5 -&gt;</span><br><span class=\"line\"> * -3 -1 -5 4 2 7 3</span><br><span class=\"line\"> * @param array</span><br><span class=\"line\"> * @return</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static int[] sort(int[] array) &#123;</span><br><span class=\"line\">\t/*</span><br><span class=\"line\">\t * j i -3 4 2 -1 7 3 -5</span><br><span class=\"line\">\t * 6 0 -3 4 2 -1 7 3 -5</span><br><span class=\"line\">\t * 6 1 -3 4 2 -1 7 3 -5</span><br><span class=\"line\">\t * 6 2 -3 4 -1 2 7 3 -5</span><br><span class=\"line\">\t * 6 3 -3 4 -1 2 7 3 -5</span><br><span class=\"line\">\t * 6 4 -3 4 -1 2 7 3 -5</span><br><span class=\"line\">\t * 6 5 -3 4 -1 2 7 -5 3</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t * 5 0 -3 4 -1 2 7 -5 3</span><br><span class=\"line\">\t * 5 1 -3 -1 4 2 7 -5 3</span><br><span class=\"line\">\t * 5 2 -3 -1 4 2 7 -5 3</span><br><span class=\"line\">\t * 5 3 -3 -1 4 2 7 -5 3</span><br><span class=\"line\">\t * 5 4 -3 -1 4 2 -5 7 3</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t * 4 0 -3 -1 4 2 -5 7 3</span><br><span class=\"line\">\t * 4 1 -3 -1 4 2 -5 7 3</span><br><span class=\"line\">\t * 4 2 -3 -1 4 2 -5 7 3</span><br><span class=\"line\">\t * 4 3 -3 -1 4 -5 2 7 3</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t * 3 0 -3 -1 4 -5 2 7 3</span><br><span class=\"line\">\t * 3 1 -3 -1 4 -5 2 7 3</span><br><span class=\"line\">\t * 3 2 -3 -1 -5 4 2 7 3</span><br><span class=\"line\">\t */</span><br><span class=\"line\">\tfor (int j = array.length-1; j &gt; 0; j--) &#123;</span><br><span class=\"line\">\t\tfor (int i = 0; i &lt; j; i++) &#123;</span><br><span class=\"line\">\t\t\tint a = array[i];</span><br><span class=\"line\">\t\t\tint b = array[i+1];</span><br><span class=\"line\">\t\t\tif (a&gt;=0 &amp;&amp; b&lt;0) &#123;</span><br><span class=\"line\">\t\t\t\tarray[i] = b;</span><br><span class=\"line\">\t\t\t\tarray[i+1] = a;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn array;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h1 id=\"堆栈\"><a href=\"#堆栈\" class=\"headerlink\" title=\"堆栈\"></a>堆栈</h1><p>一堆垂直排列的书籍。为了获得位于中间位置的书，你需要拿掉放在它上面的所有书籍。这就是 LIFO（后进先出）方法的工作原理。<br>堆栈的基本操作：</p>\n<ul>\n<li>Push——在顶部插入元素</li>\n<li>Pop—— 从堆栈中删除后返回顶部元素</li>\n<li>isEmpty——如果堆栈为空，则返回 true</li>\n<li>Top ——返回顶部元素，但不从堆栈中删除</li>\n</ul>\n<h1 id=\"队列\"><a href=\"#队列\" class=\"headerlink\" title=\"队列\"></a>队列</h1><p>First in First Out。排队买票。<br>队列的基本操作：</p>\n<ul>\n<li>Enqueue() —— 向队列末尾插入元素</li>\n<li>Dequeue() —— 从队列头部移除元素</li>\n<li>isEmpty() —— 如果队列为空，则返回 true</li>\n<li>Top() —— 返回队列的第一个元素</li>\n</ul>\n<h1 id=\"链表\"><a href=\"#链表\" class=\"headerlink\" title=\"链表\"></a>链表</h1><ul>\n<li>Head-&gt;[data|pointer]-&gt;[data|pointer]-&gt;null</li>\n</ul>\n<h1 id=\"图\"><a href=\"#图\" class=\"headerlink\" title=\"图\"></a>图</h1><p>一组节点，以网络的形式互相连接。</p>\n<h1 id=\"树\"><a href=\"#树\" class=\"headerlink\" title=\"树\"></a>树</h1><p>树是一种层级数据结构，包含了连接它们的节点和边。<br><a href=\"https://pic1.zhimg.com/v2-c989c9e4969d308abc422e2400f8aa90_r.jpg\" target=\"_blank\" rel=\"noopener\">树的基本术语</a></p>\n<ul>\n<li>root</li>\n<li>parent</li>\n<li>child</li>\n<li>leaf</li>\n<li>sibling</li>\n</ul>\n<h2 id=\"二叉树\"><a href=\"#二叉树\" class=\"headerlink\" title=\"二叉树\"></a>二叉树</h2><h3 id=\"高度\"><a href=\"#高度\" class=\"headerlink\" title=\"高度\"></a>高度</h3><p>两种定义：</p>\n<ul>\n<li>从根节点到最深节点的最长路径的节点数。</li>\n<li>从根到最深节点的最长路径的边数。        </li>\n</ul>\n<p>两种算法：</p>\n<ul>\n<li>层级遍历法</li>\n<li>递归法。</li>\n</ul>\n<h3 id=\"层级遍历法-获取二叉树的高度\"><a href=\"#层级遍历法-获取二叉树的高度\" class=\"headerlink\" title=\"层级遍历法 - 获取二叉树的高度\"></a>层级遍历法 - 获取二叉树的高度</h3><p>主要步骤是：</p>\n<ul>\n<li>创建空队列保存二叉树的每一层节点</li>\n<li>初始化标识二叉树高度的变量height为0</li>\n<li>一层一层地遍历二叉树，每向下遍历一层，高度height加1</li>\n<li>计算每一层的节点数量，当下一层的节点为0时，结束遍历<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 使用迭代方式，时间复杂度O(n)</span><br><span class=\"line\"> * - add all the nodes of current level to the queue &lt;br》</span><br><span class=\"line\"> * - if queue size &gt; 0 , height++ &lt;br&gt;</span><br><span class=\"line\"> * - remove each nodes of queue, and add its children into queue &lt;br&gt;</span><br><span class=\"line\"> * - until queue size = 0</span><br><span class=\"line\"> * @param root</span><br><span class=\"line\"> * @return height</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static int getHeight(TreeNode root) &#123;</span><br><span class=\"line\">\tint height = 0;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t// to store nodes for each level</span><br><span class=\"line\">\tQueue&lt;TreeNode&gt; queue = new LinkedList&lt;&gt;();</span><br><span class=\"line\">\tqueue.add(root);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\twhile (queue.size()&gt;0) &#123;</span><br><span class=\"line\">\t\t// get number of nodes for this level</span><br><span class=\"line\">\t\tint nodeCount = queue.size();</span><br><span class=\"line\">\t\tif (nodeCount == 0) &#123;</span><br><span class=\"line\">\t\t\tbreak;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\theight++;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\twhile (nodeCount&gt;0) &#123;</span><br><span class=\"line\">\t\t\tTreeNode node = queue.remove();</span><br><span class=\"line\">\t\t\tif (leftOf(node)!=null) &#123;</span><br><span class=\"line\">\t\t\t\tqueue.add(leftOf(node));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tif (rightOf(node)!=null) &#123;</span><br><span class=\"line\">\t\t\t\tqueue.add(rightOf(node));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tnodeCount--;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn height;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"递归法-获取二叉树的高度\"><a href=\"#递归法-获取二叉树的高度\" class=\"headerlink\" title=\"递归法 - 获取二叉树的高度\"></a>递归法 - 获取二叉树的高度</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 使用递归，时间复杂度O(n)</span><br><span class=\"line\"> * @param root</span><br><span class=\"line\"> * @return</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static int getHeight2(TreeNode node) &#123;</span><br><span class=\"line\">\tif (node!=null) &#123;</span><br><span class=\"line\">\t\treturn Math.max(getHeight2(leftOf(node)), getHeight2(rightOf(node)))+1;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"找到一个二叉树中给定节点的祖先（ancestors）\"><a href=\"#找到一个二叉树中给定节点的祖先（ancestors）\" class=\"headerlink\" title=\"找到一个二叉树中给定节点的祖先（ancestors）\"></a>找到一个二叉树中给定节点的祖先（ancestors）</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 使用递归，找到一个二叉树中给定节点的祖先, 时间复杂度O(n)</span><br><span class=\"line\"> * @param node</span><br><span class=\"line\"> * @return</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static List&lt;TreeNode&gt; getAncestors(TreeNode node)&#123;</span><br><span class=\"line\">\tList&lt;TreeNode&gt; nodes = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\tTreeNode father = node.getParent(); </span><br><span class=\"line\">\tif (father!=null) &#123;</span><br><span class=\"line\">\t\tnodes.add(father);</span><br><span class=\"line\">\t\tnodes.addAll(getAncestors(father));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn nodes;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"二叉搜索树\"><a href=\"#二叉搜索树\" class=\"headerlink\" title=\"二叉搜索树\"></a>二叉搜索树</h2><ul>\n<li>若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值； </li>\n<li>若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值；</li>\n</ul>\n<h3 id=\"寻找二叉搜索树中第k小的元素\"><a href=\"#寻找二叉搜索树中第k小的元素\" class=\"headerlink\" title=\"寻找二叉搜索树中第k小的元素\"></a>寻找二叉搜索树中第k小的元素</h3><p>中序遍历</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 中序遍历 get Kth Smallest Element in a BST</span><br><span class=\"line\"> * @param root</span><br><span class=\"line\"> * @return</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static IntBSTNode getKthSmallestNode(IntBSTNode root, int k) &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t// store all elements into a ordered list</span><br><span class=\"line\">\tList&lt;IntBSTNode&gt; nodes = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\tinOrder(root, nodes);</span><br><span class=\"line\">\treturn nodes.get(k-1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 中序遍历</span><br><span class=\"line\"> * @param node</span><br><span class=\"line\"> * @param nodes</span><br><span class=\"line\"> */</span><br><span class=\"line\">private static void inOrder(IntBSTNode node, List&lt;IntBSTNode&gt; nodes) &#123;</span><br><span class=\"line\">\tif (node==null) &#123;</span><br><span class=\"line\">\t\treturn;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tinOrder(node.getLeft(), nodes);</span><br><span class=\"line\">\tnodes.add(node);</span><br><span class=\"line\">\tinOrder(node.getRight(), nodes); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>递归（计算节点数量）：</p>\n<ul>\n<li>如果是当前节点，返回。</li>\n<li>如果左边总数+1（当前节点）小于k，答案是右边第（k-（左边总数+1））小的数。</li>\n<li>如果左边总数+1（当前节点）大于k，答案是左边第k小的数。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 递归（计算节点数量）：</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static IntBSTNode getKthSmallestNode2(IntBSTNode root, int k) &#123;</span><br><span class=\"line\">\tint leftCount = countNode(root.getLeft());</span><br><span class=\"line\">\tif (leftCount==k-1) &#123;</span><br><span class=\"line\">\t\treturn root;</span><br><span class=\"line\">\t&#125; else if(leftCount&lt;k-1) &#123;</span><br><span class=\"line\">\t\treturn getKthSmallestNode(root.getRight(), k-leftCount-1);</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\treturn getKthSmallestNode2(root.getLeft(), k);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public static int countNode(IntBSTNode node) &#123;</span><br><span class=\"line\">\tif (node==null) &#123;</span><br><span class=\"line\">\t\treturn 0;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 1+countNode(node.getLeft())+countNode(node.getRight());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h1 id=\"字典树（Tries，这是一种高效的树）\"><a href=\"#字典树（Tries，这是一种高效的树）\" class=\"headerlink\" title=\"字典树（Tries，这是一种高效的树）\"></a>字典树（Tries，这是一种高效的树）</h1><p><a href=\"https://pic2.zhimg.com/80/v2-618ae28f32762aef4d23b0c2b18dbbf2_hd.jpg\" target=\"_blank\" rel=\"noopener\">top,thus,their</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h1><h2 id=\"什么是数据结构？\"><a href=\"#什么是数据结构？\" class=\"headerlink\" title=\"什么是数据结构？\"></a>什么是数据结构？</h2><p>以某种特定的布局存储数据，以便高效操作。</p>\n<h2 id=\"时间复杂度：\"><a href=\"#时间复杂度：\" class=\"headerlink\" title=\"时间复杂度：\"></a>时间复杂度：</h2><p>对排序数据的总的操作次数。反映当n变化时，操作次数呈现什么规律。</p>\n<h2 id=\"空间复杂度：\"><a href=\"#空间复杂度：\" class=\"headerlink\" title=\"空间复杂度：\"></a>空间复杂度：</h2><p>是指算法在计算机内执行时所需存储空间的度量，它也是数据规模n的函数。</p>","more":"<h2 id=\"常用的数据结构\"><a href=\"#常用的数据结构\" class=\"headerlink\" title=\"常用的数据结构\"></a>常用的数据结构</h2><ul>\n<li>数组</li>\n<li>堆栈</li>\n<li>队列</li>\n<li>链表</li>\n<li>树</li>\n<li>图</li>\n<li>字典树（Tries，这是一种高效的树，有必要单独列出来）</li>\n<li>哈希表</li>\n</ul>\n<h1 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h1><ul>\n<li>堆栈和队列都源自数组。</li>\n<li>一维数组</li>\n<li>多维数组</li>\n</ul>\n<h2 id=\"数组的基本操作\"><a href=\"#数组的基本操作\" class=\"headerlink\" title=\"数组的基本操作\"></a>数组的基本操作</h2><ul>\n<li>Insert——在给定索引位置插入一个元素</li>\n<li>Get——返回给定索引位置的元素</li>\n<li>Delete——删除给定索引位置的元素</li>\n<li>Size——获取数组内所有元素的总数</li>\n</ul>\n<h2 id=\"常问的数组面试问题：\"><a href=\"#常问的数组面试问题：\" class=\"headerlink\" title=\"常问的数组面试问题：\"></a>常问的数组面试问题：</h2><h3 id=\"找到数组中第二小的元素\"><a href=\"#找到数组中第二小的元素\" class=\"headerlink\" title=\"找到数组中第二小的元素\"></a>找到数组中第二小的元素</h3><ul>\n<li>一次遍历中找到最小的两个数，时间复杂度为O(n)<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 一次遍历中找到最小的两个数，时间复杂度为O(n) &lt;br&gt;</span><br><span class=\"line\"> * &#123;1,1,2&#125; will return 1.</span><br><span class=\"line\"> * @param array</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static int get2ndMinNumber(int[] array) &#123;</span><br><span class=\"line\">\tint firstMin = Integer.MAX_VALUE;</span><br><span class=\"line\">\tint secondMin = Integer.MAX_VALUE;</span><br><span class=\"line\">\tfor (int i = 0; i &lt; array.length; i++) &#123;</span><br><span class=\"line\">\t\tif (firstMin &gt; array[i]) &#123;</span><br><span class=\"line\">\t\t\tsecondMin = firstMin;</span><br><span class=\"line\">\t\t\tfirstMin = array[i];</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tif (secondMin &gt; array[i]) &#123;</span><br><span class=\"line\">\t\t\t\tsecondMin = array[i];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn secondMin;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"找到数组中第一个没有重复的整数\"><a href=\"#找到数组中第一个没有重复的整数\" class=\"headerlink\" title=\"找到数组中第一个没有重复的整数\"></a>找到数组中第一个没有重复的整数</h3><ul>\n<li><p>时间复杂度为O(n^2)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 时间复杂度为O(n^2)</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static int get1stNonDuplicateNumber(int[] array) &#123;</span><br><span class=\"line\">\tfor (int i = 0; i &lt; array.length; i++) &#123;</span><br><span class=\"line\">\t\tint a =  array[i];</span><br><span class=\"line\">\t\tfor (int j = 0; j &lt; array.length; j++) &#123;</span><br><span class=\"line\">\t\t\tif (i!=j) &#123;</span><br><span class=\"line\">\t\t\t\tint b = array[j];</span><br><span class=\"line\">\t\t\t\tif (a==b) &#123;</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tif (j==array.length-1) &#123;</span><br><span class=\"line\">\t\t\t\treturn a;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>时间复杂度为O(n)，需要辅助的空间复杂度O(n)。</p>\n</li>\n<li><p>DONE: Space Complexity</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 放入Map中统计每个元素的重复次数 &lt;br&gt;</span><br><span class=\"line\"> * LinkedHashMap guarantee insert order&lt;br&gt;</span><br><span class=\"line\"> * 时间复杂度为O(n)，需要辅助的空间复杂度O(n)。</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static int get1stNonDuplicateNumber2(int[] array) &#123;</span><br><span class=\"line\">\tMap&lt;Integer, Integer&gt; map = new LinkedHashMap&lt;&gt;();</span><br><span class=\"line\">\tfor (int i = 0; i &lt; array.length; i++) &#123;</span><br><span class=\"line\">\t\tif (map.containsKey(array[i])) &#123;</span><br><span class=\"line\">\t\t\tmap.put(array[i], map.get(array[i])+1);</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tmap.put(array[i], 1);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfor (Entry&lt;Integer, Integer&gt; entry : map.entrySet()) &#123;</span><br><span class=\"line\">\t\tif (entry.getValue()==1) &#123;</span><br><span class=\"line\">\t\t\treturn entry.getKey();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"合并两个有序数组\"><a href=\"#合并两个有序数组\" class=\"headerlink\" title=\"合并两个有序数组\"></a>合并两个有序数组</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 采用分治法（Divide and Conquer）&lt;br&gt;</span><br><span class=\"line\"> * 把长度为n的输入序列分成两个长度为n/2的子序列 &lt;br&gt;</span><br><span class=\"line\"> * 对这两个子序列分别采用归并排序；&lt;br&gt;</span><br><span class=\"line\"> * 将两个排序好的子序列合并成一个最终的排序序列。&lt;br&gt;</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static int[] mergeSort(int[] array) &#123;</span><br><span class=\"line\">\tif (array.length&lt;2) &#123;</span><br><span class=\"line\">\t\treturn array;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tint middle = array.length%2==0? array.length/2 : (array.length-1)/2; </span><br><span class=\"line\">\tint[] left =  Arrays.copyOfRange(array, 0, middle);</span><br><span class=\"line\">\tint[] right =  Arrays.copyOfRange(array, middle, array.length);</span><br><span class=\"line\">\treturn merge(mergeSort(left),mergeSort(right));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 正序。合并两个有序数组。</span><br><span class=\"line\"> * @param left</span><br><span class=\"line\"> * @param right</span><br><span class=\"line\"> * @return</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static int[] merge(int[] left, int[] right) &#123;</span><br><span class=\"line\">\tint[] result = new int[left.length+right.length];</span><br><span class=\"line\">\tint resultIndex = 0;</span><br><span class=\"line\">\tint leftIndex = 0;</span><br><span class=\"line\">\tint rightIndex = 0;</span><br><span class=\"line\">\twhile (left.length&gt;leftIndex &amp;&amp; right.length&gt;rightIndex) &#123;</span><br><span class=\"line\">\t\tint smallerNumber;</span><br><span class=\"line\">\t\tint leftNumber = left[leftIndex];</span><br><span class=\"line\">\t\tint rightNumber = right[rightIndex];</span><br><span class=\"line\">\t\tif (leftNumber &lt; rightNumber) &#123;</span><br><span class=\"line\">\t\t\tsmallerNumber = leftNumber;</span><br><span class=\"line\">\t\t\tleftIndex++;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tsmallerNumber = rightNumber;</span><br><span class=\"line\">\t\t\trightIndex++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tresult[resultIndex] = smallerNumber;</span><br><span class=\"line\">\t\tresultIndex++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t// 当其中一个数组到头的时候，另一个数组全部加到尾部</span><br><span class=\"line\">\tif (left.length==leftIndex) &#123;</span><br><span class=\"line\">\t\twhile (rightIndex&lt;right.length) &#123;</span><br><span class=\"line\">\t\t\tresult[resultIndex] = right[rightIndex];</span><br><span class=\"line\">\t\t\tresultIndex++;</span><br><span class=\"line\">\t\t\trightIndex++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\twhile (leftIndex&lt;left.length) &#123;</span><br><span class=\"line\">\t\t\tresult[resultIndex] = left[leftIndex];</span><br><span class=\"line\">\t\t\tresultIndex++;</span><br><span class=\"line\">\t\t\tleftIndex++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\treturn result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"重新排列数组中的正值和负值\"><a href=\"#重新排列数组中的正值和负值\" class=\"headerlink\" title=\"重新排列数组中的正值和负值\"></a>重新排列数组中的正值和负值</h3><ul>\n<li>冒泡算法，依次比较相邻的两位，满足条件就交换位置<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * -3 4 2 -1 7 3 -5 -&gt;</span><br><span class=\"line\"> * -3 -1 -5 4 2 7 3</span><br><span class=\"line\"> * @param array</span><br><span class=\"line\"> * @return</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static int[] sort(int[] array) &#123;</span><br><span class=\"line\">\t/*</span><br><span class=\"line\">\t * j i -3 4 2 -1 7 3 -5</span><br><span class=\"line\">\t * 6 0 -3 4 2 -1 7 3 -5</span><br><span class=\"line\">\t * 6 1 -3 4 2 -1 7 3 -5</span><br><span class=\"line\">\t * 6 2 -3 4 -1 2 7 3 -5</span><br><span class=\"line\">\t * 6 3 -3 4 -1 2 7 3 -5</span><br><span class=\"line\">\t * 6 4 -3 4 -1 2 7 3 -5</span><br><span class=\"line\">\t * 6 5 -3 4 -1 2 7 -5 3</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t * 5 0 -3 4 -1 2 7 -5 3</span><br><span class=\"line\">\t * 5 1 -3 -1 4 2 7 -5 3</span><br><span class=\"line\">\t * 5 2 -3 -1 4 2 7 -5 3</span><br><span class=\"line\">\t * 5 3 -3 -1 4 2 7 -5 3</span><br><span class=\"line\">\t * 5 4 -3 -1 4 2 -5 7 3</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t * 4 0 -3 -1 4 2 -5 7 3</span><br><span class=\"line\">\t * 4 1 -3 -1 4 2 -5 7 3</span><br><span class=\"line\">\t * 4 2 -3 -1 4 2 -5 7 3</span><br><span class=\"line\">\t * 4 3 -3 -1 4 -5 2 7 3</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t * 3 0 -3 -1 4 -5 2 7 3</span><br><span class=\"line\">\t * 3 1 -3 -1 4 -5 2 7 3</span><br><span class=\"line\">\t * 3 2 -3 -1 -5 4 2 7 3</span><br><span class=\"line\">\t */</span><br><span class=\"line\">\tfor (int j = array.length-1; j &gt; 0; j--) &#123;</span><br><span class=\"line\">\t\tfor (int i = 0; i &lt; j; i++) &#123;</span><br><span class=\"line\">\t\t\tint a = array[i];</span><br><span class=\"line\">\t\t\tint b = array[i+1];</span><br><span class=\"line\">\t\t\tif (a&gt;=0 &amp;&amp; b&lt;0) &#123;</span><br><span class=\"line\">\t\t\t\tarray[i] = b;</span><br><span class=\"line\">\t\t\t\tarray[i+1] = a;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn array;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h1 id=\"堆栈\"><a href=\"#堆栈\" class=\"headerlink\" title=\"堆栈\"></a>堆栈</h1><p>一堆垂直排列的书籍。为了获得位于中间位置的书，你需要拿掉放在它上面的所有书籍。这就是 LIFO（后进先出）方法的工作原理。<br>堆栈的基本操作：</p>\n<ul>\n<li>Push——在顶部插入元素</li>\n<li>Pop—— 从堆栈中删除后返回顶部元素</li>\n<li>isEmpty——如果堆栈为空，则返回 true</li>\n<li>Top ——返回顶部元素，但不从堆栈中删除</li>\n</ul>\n<h1 id=\"队列\"><a href=\"#队列\" class=\"headerlink\" title=\"队列\"></a>队列</h1><p>First in First Out。排队买票。<br>队列的基本操作：</p>\n<ul>\n<li>Enqueue() —— 向队列末尾插入元素</li>\n<li>Dequeue() —— 从队列头部移除元素</li>\n<li>isEmpty() —— 如果队列为空，则返回 true</li>\n<li>Top() —— 返回队列的第一个元素</li>\n</ul>\n<h1 id=\"链表\"><a href=\"#链表\" class=\"headerlink\" title=\"链表\"></a>链表</h1><ul>\n<li>Head-&gt;[data|pointer]-&gt;[data|pointer]-&gt;null</li>\n</ul>\n<h1 id=\"图\"><a href=\"#图\" class=\"headerlink\" title=\"图\"></a>图</h1><p>一组节点，以网络的形式互相连接。</p>\n<h1 id=\"树\"><a href=\"#树\" class=\"headerlink\" title=\"树\"></a>树</h1><p>树是一种层级数据结构，包含了连接它们的节点和边。<br><a href=\"https://pic1.zhimg.com/v2-c989c9e4969d308abc422e2400f8aa90_r.jpg\" target=\"_blank\" rel=\"noopener\">树的基本术语</a></p>\n<ul>\n<li>root</li>\n<li>parent</li>\n<li>child</li>\n<li>leaf</li>\n<li>sibling</li>\n</ul>\n<h2 id=\"二叉树\"><a href=\"#二叉树\" class=\"headerlink\" title=\"二叉树\"></a>二叉树</h2><h3 id=\"高度\"><a href=\"#高度\" class=\"headerlink\" title=\"高度\"></a>高度</h3><p>两种定义：</p>\n<ul>\n<li>从根节点到最深节点的最长路径的节点数。</li>\n<li>从根到最深节点的最长路径的边数。        </li>\n</ul>\n<p>两种算法：</p>\n<ul>\n<li>层级遍历法</li>\n<li>递归法。</li>\n</ul>\n<h3 id=\"层级遍历法-获取二叉树的高度\"><a href=\"#层级遍历法-获取二叉树的高度\" class=\"headerlink\" title=\"层级遍历法 - 获取二叉树的高度\"></a>层级遍历法 - 获取二叉树的高度</h3><p>主要步骤是：</p>\n<ul>\n<li>创建空队列保存二叉树的每一层节点</li>\n<li>初始化标识二叉树高度的变量height为0</li>\n<li>一层一层地遍历二叉树，每向下遍历一层，高度height加1</li>\n<li>计算每一层的节点数量，当下一层的节点为0时，结束遍历<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 使用迭代方式，时间复杂度O(n)</span><br><span class=\"line\"> * - add all the nodes of current level to the queue &lt;br》</span><br><span class=\"line\"> * - if queue size &gt; 0 , height++ &lt;br&gt;</span><br><span class=\"line\"> * - remove each nodes of queue, and add its children into queue &lt;br&gt;</span><br><span class=\"line\"> * - until queue size = 0</span><br><span class=\"line\"> * @param root</span><br><span class=\"line\"> * @return height</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static int getHeight(TreeNode root) &#123;</span><br><span class=\"line\">\tint height = 0;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t// to store nodes for each level</span><br><span class=\"line\">\tQueue&lt;TreeNode&gt; queue = new LinkedList&lt;&gt;();</span><br><span class=\"line\">\tqueue.add(root);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\twhile (queue.size()&gt;0) &#123;</span><br><span class=\"line\">\t\t// get number of nodes for this level</span><br><span class=\"line\">\t\tint nodeCount = queue.size();</span><br><span class=\"line\">\t\tif (nodeCount == 0) &#123;</span><br><span class=\"line\">\t\t\tbreak;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\theight++;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\twhile (nodeCount&gt;0) &#123;</span><br><span class=\"line\">\t\t\tTreeNode node = queue.remove();</span><br><span class=\"line\">\t\t\tif (leftOf(node)!=null) &#123;</span><br><span class=\"line\">\t\t\t\tqueue.add(leftOf(node));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tif (rightOf(node)!=null) &#123;</span><br><span class=\"line\">\t\t\t\tqueue.add(rightOf(node));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tnodeCount--;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn height;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"递归法-获取二叉树的高度\"><a href=\"#递归法-获取二叉树的高度\" class=\"headerlink\" title=\"递归法 - 获取二叉树的高度\"></a>递归法 - 获取二叉树的高度</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 使用递归，时间复杂度O(n)</span><br><span class=\"line\"> * @param root</span><br><span class=\"line\"> * @return</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static int getHeight2(TreeNode node) &#123;</span><br><span class=\"line\">\tif (node!=null) &#123;</span><br><span class=\"line\">\t\treturn Math.max(getHeight2(leftOf(node)), getHeight2(rightOf(node)))+1;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"找到一个二叉树中给定节点的祖先（ancestors）\"><a href=\"#找到一个二叉树中给定节点的祖先（ancestors）\" class=\"headerlink\" title=\"找到一个二叉树中给定节点的祖先（ancestors）\"></a>找到一个二叉树中给定节点的祖先（ancestors）</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 使用递归，找到一个二叉树中给定节点的祖先, 时间复杂度O(n)</span><br><span class=\"line\"> * @param node</span><br><span class=\"line\"> * @return</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static List&lt;TreeNode&gt; getAncestors(TreeNode node)&#123;</span><br><span class=\"line\">\tList&lt;TreeNode&gt; nodes = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\tTreeNode father = node.getParent(); </span><br><span class=\"line\">\tif (father!=null) &#123;</span><br><span class=\"line\">\t\tnodes.add(father);</span><br><span class=\"line\">\t\tnodes.addAll(getAncestors(father));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn nodes;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"二叉搜索树\"><a href=\"#二叉搜索树\" class=\"headerlink\" title=\"二叉搜索树\"></a>二叉搜索树</h2><ul>\n<li>若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值； </li>\n<li>若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值；</li>\n</ul>\n<h3 id=\"寻找二叉搜索树中第k小的元素\"><a href=\"#寻找二叉搜索树中第k小的元素\" class=\"headerlink\" title=\"寻找二叉搜索树中第k小的元素\"></a>寻找二叉搜索树中第k小的元素</h3><p>中序遍历</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 中序遍历 get Kth Smallest Element in a BST</span><br><span class=\"line\"> * @param root</span><br><span class=\"line\"> * @return</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static IntBSTNode getKthSmallestNode(IntBSTNode root, int k) &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t// store all elements into a ordered list</span><br><span class=\"line\">\tList&lt;IntBSTNode&gt; nodes = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\tinOrder(root, nodes);</span><br><span class=\"line\">\treturn nodes.get(k-1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 中序遍历</span><br><span class=\"line\"> * @param node</span><br><span class=\"line\"> * @param nodes</span><br><span class=\"line\"> */</span><br><span class=\"line\">private static void inOrder(IntBSTNode node, List&lt;IntBSTNode&gt; nodes) &#123;</span><br><span class=\"line\">\tif (node==null) &#123;</span><br><span class=\"line\">\t\treturn;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tinOrder(node.getLeft(), nodes);</span><br><span class=\"line\">\tnodes.add(node);</span><br><span class=\"line\">\tinOrder(node.getRight(), nodes); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>递归（计算节点数量）：</p>\n<ul>\n<li>如果是当前节点，返回。</li>\n<li>如果左边总数+1（当前节点）小于k，答案是右边第（k-（左边总数+1））小的数。</li>\n<li>如果左边总数+1（当前节点）大于k，答案是左边第k小的数。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 递归（计算节点数量）：</span><br><span class=\"line\"> */</span><br><span class=\"line\">public static IntBSTNode getKthSmallestNode2(IntBSTNode root, int k) &#123;</span><br><span class=\"line\">\tint leftCount = countNode(root.getLeft());</span><br><span class=\"line\">\tif (leftCount==k-1) &#123;</span><br><span class=\"line\">\t\treturn root;</span><br><span class=\"line\">\t&#125; else if(leftCount&lt;k-1) &#123;</span><br><span class=\"line\">\t\treturn getKthSmallestNode(root.getRight(), k-leftCount-1);</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\treturn getKthSmallestNode2(root.getLeft(), k);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public static int countNode(IntBSTNode node) &#123;</span><br><span class=\"line\">\tif (node==null) &#123;</span><br><span class=\"line\">\t\treturn 0;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 1+countNode(node.getLeft())+countNode(node.getRight());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h1 id=\"字典树（Tries，这是一种高效的树）\"><a href=\"#字典树（Tries，这是一种高效的树）\" class=\"headerlink\" title=\"字典树（Tries，这是一种高效的树）\"></a>字典树（Tries，这是一种高效的树）</h1><p><a href=\"https://pic2.zhimg.com/80/v2-618ae28f32762aef4d23b0c2b18dbbf2_hd.jpg\" target=\"_blank\" rel=\"noopener\">top,thus,their</a></p>"},{"title":"简单的辅助程序","date":"2018-02-07T14:25:05.000Z","_content":"\n这篇博客记录平时一些可以重复使用的辅助程序。多了以后或许可以做成一个库。\n<!--more-->\n\n# PropertiesReader\n## 使用\n### 文件\nD:\\workspace\\RyanTool\\doc\\test.properties\n```\nage=30\ngender=male\n```\n### 显示所有内容\n```\nString filePath = \"D:\\\\workspace\\\\RyanTool\\\\doc\\\\test.properties\";\nPropertiesReader propertiesReader = new PropertiesReader();\npropertiesReader.printAll(filePath);\n```\n### 根据特定的key获取value:\n```\nString filePath = \"D:\\\\workspace\\\\RyanTool\\\\doc\\\\test.properties\";\nPropertiesReader propertiesReader = new PropertiesReader();\nSystem.out.println(propertiesReader.getByKey(\"age\", filePath));\n```\n\n## PropertiesReader.java\n```\npackage ryanluoxu.tool;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.util.Enumeration;\nimport java.util.Properties;\n\npublic class PropertiesReader {\n\t\n\t/**\n\t * Key must be unique.\n\t * @param key\n\t * @param filePath\n\t * @return value\n\t */\n\tpublic String getByKey(String key, String filePath) {\n\t\tString value = null;\n\t\tProperties properties = new Properties();\n\t\ttry {\n\t\t\tFile file = new File(filePath);\n\t\t\tFileInputStream fileInput = new FileInputStream(file);\n\t\t\tproperties.load(fileInput);\n\t\t\tfileInput.close();\n\t\t} catch (Exception e) {\n\t\t\tSystem.err.println(\">>> Error when loading properties file..\");\n\t\t}\n\t\tEnumeration<Object> enuKeys = properties.keys();\n\t\twhile (enuKeys.hasMoreElements()) {\n\t\t\tString k = (String) enuKeys.nextElement();\n\t\t\tif (k.equals(key)) {\n\t\t\t\tvalue = properties.getProperty(k);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * print all values\n\t * @param filePath\n\t */\n\tpublic void printAll(String filePath) {\n\t\tProperties properties = new Properties();\n\t\ttry {\n\t\t\tFile file = new File(filePath);\n\t\t\tFileInputStream fileInput = new FileInputStream(file);\n\t\t\tproperties.load(fileInput);\n\t\t\tfileInput.close();\n\t\t} catch (Exception e) {\n\t\t\tSystem.err.println(\">>> Error when loading properties file..\");\n\t\t}\n\t\tEnumeration<Object> enuKeys = properties.keys();\n\t\twhile (enuKeys.hasMoreElements()) {\n\t\t\tString k = (String) enuKeys.nextElement();\n\t\t\tString value = properties.getProperty(k);\n\t\t\tSystem.out.println(k + \": \" + value);\n\t\t}\n\t}\n}\n```","source":"_posts/简单的辅助程序.md","raw":"---\ntitle: 简单的辅助程序\ndate: 2018-02-07 22:25:05\ncategories: 小程序\ntags: [辅助, 小程序]\n---\n\n这篇博客记录平时一些可以重复使用的辅助程序。多了以后或许可以做成一个库。\n<!--more-->\n\n# PropertiesReader\n## 使用\n### 文件\nD:\\workspace\\RyanTool\\doc\\test.properties\n```\nage=30\ngender=male\n```\n### 显示所有内容\n```\nString filePath = \"D:\\\\workspace\\\\RyanTool\\\\doc\\\\test.properties\";\nPropertiesReader propertiesReader = new PropertiesReader();\npropertiesReader.printAll(filePath);\n```\n### 根据特定的key获取value:\n```\nString filePath = \"D:\\\\workspace\\\\RyanTool\\\\doc\\\\test.properties\";\nPropertiesReader propertiesReader = new PropertiesReader();\nSystem.out.println(propertiesReader.getByKey(\"age\", filePath));\n```\n\n## PropertiesReader.java\n```\npackage ryanluoxu.tool;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.util.Enumeration;\nimport java.util.Properties;\n\npublic class PropertiesReader {\n\t\n\t/**\n\t * Key must be unique.\n\t * @param key\n\t * @param filePath\n\t * @return value\n\t */\n\tpublic String getByKey(String key, String filePath) {\n\t\tString value = null;\n\t\tProperties properties = new Properties();\n\t\ttry {\n\t\t\tFile file = new File(filePath);\n\t\t\tFileInputStream fileInput = new FileInputStream(file);\n\t\t\tproperties.load(fileInput);\n\t\t\tfileInput.close();\n\t\t} catch (Exception e) {\n\t\t\tSystem.err.println(\">>> Error when loading properties file..\");\n\t\t}\n\t\tEnumeration<Object> enuKeys = properties.keys();\n\t\twhile (enuKeys.hasMoreElements()) {\n\t\t\tString k = (String) enuKeys.nextElement();\n\t\t\tif (k.equals(key)) {\n\t\t\t\tvalue = properties.getProperty(k);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * print all values\n\t * @param filePath\n\t */\n\tpublic void printAll(String filePath) {\n\t\tProperties properties = new Properties();\n\t\ttry {\n\t\t\tFile file = new File(filePath);\n\t\t\tFileInputStream fileInput = new FileInputStream(file);\n\t\t\tproperties.load(fileInput);\n\t\t\tfileInput.close();\n\t\t} catch (Exception e) {\n\t\t\tSystem.err.println(\">>> Error when loading properties file..\");\n\t\t}\n\t\tEnumeration<Object> enuKeys = properties.keys();\n\t\twhile (enuKeys.hasMoreElements()) {\n\t\t\tString k = (String) enuKeys.nextElement();\n\t\t\tString value = properties.getProperty(k);\n\t\t\tSystem.out.println(k + \": \" + value);\n\t\t}\n\t}\n}\n```","slug":"简单的辅助程序","published":1,"updated":"2020-04-30T09:23:19.532Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedii0016sd5tyw2j72vu","content":"<p>这篇博客记录平时一些可以重复使用的辅助程序。多了以后或许可以做成一个库。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"PropertiesReader\"><a href=\"#PropertiesReader\" class=\"headerlink\" title=\"PropertiesReader\"></a>PropertiesReader</h1><h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"文件\"><a href=\"#文件\" class=\"headerlink\" title=\"文件\"></a>文件</h3><p>D:\\workspace\\RyanTool\\doc\\test.properties</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">age=30</span><br><span class=\"line\">gender=male</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"显示所有内容\"><a href=\"#显示所有内容\" class=\"headerlink\" title=\"显示所有内容\"></a>显示所有内容</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String filePath = &quot;D:\\\\workspace\\\\RyanTool\\\\doc\\\\test.properties&quot;;</span><br><span class=\"line\">PropertiesReader propertiesReader = new PropertiesReader();</span><br><span class=\"line\">propertiesReader.printAll(filePath);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"根据特定的key获取value\"><a href=\"#根据特定的key获取value\" class=\"headerlink\" title=\"根据特定的key获取value:\"></a>根据特定的key获取value:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String filePath = &quot;D:\\\\workspace\\\\RyanTool\\\\doc\\\\test.properties&quot;;</span><br><span class=\"line\">PropertiesReader propertiesReader = new PropertiesReader();</span><br><span class=\"line\">System.out.println(propertiesReader.getByKey(&quot;age&quot;, filePath));</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"PropertiesReader-java\"><a href=\"#PropertiesReader-java\" class=\"headerlink\" title=\"PropertiesReader.java\"></a>PropertiesReader.java</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package ryanluoxu.tool;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.io.File;</span><br><span class=\"line\">import java.io.FileInputStream;</span><br><span class=\"line\">import java.util.Enumeration;</span><br><span class=\"line\">import java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\">public class PropertiesReader &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t/**</span><br><span class=\"line\">\t * Key must be unique.</span><br><span class=\"line\">\t * @param key</span><br><span class=\"line\">\t * @param filePath</span><br><span class=\"line\">\t * @return value</span><br><span class=\"line\">\t */</span><br><span class=\"line\">\tpublic String getByKey(String key, String filePath) &#123;</span><br><span class=\"line\">\t\tString value = null;</span><br><span class=\"line\">\t\tProperties properties = new Properties();</span><br><span class=\"line\">\t\ttry &#123;</span><br><span class=\"line\">\t\t\tFile file = new File(filePath);</span><br><span class=\"line\">\t\t\tFileInputStream fileInput = new FileInputStream(file);</span><br><span class=\"line\">\t\t\tproperties.load(fileInput);</span><br><span class=\"line\">\t\t\tfileInput.close();</span><br><span class=\"line\">\t\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\t\tSystem.err.println(&quot;&gt;&gt;&gt; Error when loading properties file..&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tEnumeration&lt;Object&gt; enuKeys = properties.keys();</span><br><span class=\"line\">\t\twhile (enuKeys.hasMoreElements()) &#123;</span><br><span class=\"line\">\t\t\tString k = (String) enuKeys.nextElement();</span><br><span class=\"line\">\t\t\tif (k.equals(key)) &#123;</span><br><span class=\"line\">\t\t\t\tvalue = properties.getProperty(k);</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\treturn value;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t/**</span><br><span class=\"line\">\t * print all values</span><br><span class=\"line\">\t * @param filePath</span><br><span class=\"line\">\t */</span><br><span class=\"line\">\tpublic void printAll(String filePath) &#123;</span><br><span class=\"line\">\t\tProperties properties = new Properties();</span><br><span class=\"line\">\t\ttry &#123;</span><br><span class=\"line\">\t\t\tFile file = new File(filePath);</span><br><span class=\"line\">\t\t\tFileInputStream fileInput = new FileInputStream(file);</span><br><span class=\"line\">\t\t\tproperties.load(fileInput);</span><br><span class=\"line\">\t\t\tfileInput.close();</span><br><span class=\"line\">\t\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\t\tSystem.err.println(&quot;&gt;&gt;&gt; Error when loading properties file..&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tEnumeration&lt;Object&gt; enuKeys = properties.keys();</span><br><span class=\"line\">\t\twhile (enuKeys.hasMoreElements()) &#123;</span><br><span class=\"line\">\t\t\tString k = (String) enuKeys.nextElement();</span><br><span class=\"line\">\t\t\tString value = properties.getProperty(k);</span><br><span class=\"line\">\t\t\tSystem.out.println(k + &quot;: &quot; + value);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>这篇博客记录平时一些可以重复使用的辅助程序。多了以后或许可以做成一个库。</p>","more":"<h1 id=\"PropertiesReader\"><a href=\"#PropertiesReader\" class=\"headerlink\" title=\"PropertiesReader\"></a>PropertiesReader</h1><h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"文件\"><a href=\"#文件\" class=\"headerlink\" title=\"文件\"></a>文件</h3><p>D:\\workspace\\RyanTool\\doc\\test.properties</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">age=30</span><br><span class=\"line\">gender=male</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"显示所有内容\"><a href=\"#显示所有内容\" class=\"headerlink\" title=\"显示所有内容\"></a>显示所有内容</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String filePath = &quot;D:\\\\workspace\\\\RyanTool\\\\doc\\\\test.properties&quot;;</span><br><span class=\"line\">PropertiesReader propertiesReader = new PropertiesReader();</span><br><span class=\"line\">propertiesReader.printAll(filePath);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"根据特定的key获取value\"><a href=\"#根据特定的key获取value\" class=\"headerlink\" title=\"根据特定的key获取value:\"></a>根据特定的key获取value:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String filePath = &quot;D:\\\\workspace\\\\RyanTool\\\\doc\\\\test.properties&quot;;</span><br><span class=\"line\">PropertiesReader propertiesReader = new PropertiesReader();</span><br><span class=\"line\">System.out.println(propertiesReader.getByKey(&quot;age&quot;, filePath));</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"PropertiesReader-java\"><a href=\"#PropertiesReader-java\" class=\"headerlink\" title=\"PropertiesReader.java\"></a>PropertiesReader.java</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package ryanluoxu.tool;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.io.File;</span><br><span class=\"line\">import java.io.FileInputStream;</span><br><span class=\"line\">import java.util.Enumeration;</span><br><span class=\"line\">import java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\">public class PropertiesReader &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t/**</span><br><span class=\"line\">\t * Key must be unique.</span><br><span class=\"line\">\t * @param key</span><br><span class=\"line\">\t * @param filePath</span><br><span class=\"line\">\t * @return value</span><br><span class=\"line\">\t */</span><br><span class=\"line\">\tpublic String getByKey(String key, String filePath) &#123;</span><br><span class=\"line\">\t\tString value = null;</span><br><span class=\"line\">\t\tProperties properties = new Properties();</span><br><span class=\"line\">\t\ttry &#123;</span><br><span class=\"line\">\t\t\tFile file = new File(filePath);</span><br><span class=\"line\">\t\t\tFileInputStream fileInput = new FileInputStream(file);</span><br><span class=\"line\">\t\t\tproperties.load(fileInput);</span><br><span class=\"line\">\t\t\tfileInput.close();</span><br><span class=\"line\">\t\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\t\tSystem.err.println(&quot;&gt;&gt;&gt; Error when loading properties file..&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tEnumeration&lt;Object&gt; enuKeys = properties.keys();</span><br><span class=\"line\">\t\twhile (enuKeys.hasMoreElements()) &#123;</span><br><span class=\"line\">\t\t\tString k = (String) enuKeys.nextElement();</span><br><span class=\"line\">\t\t\tif (k.equals(key)) &#123;</span><br><span class=\"line\">\t\t\t\tvalue = properties.getProperty(k);</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\treturn value;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t/**</span><br><span class=\"line\">\t * print all values</span><br><span class=\"line\">\t * @param filePath</span><br><span class=\"line\">\t */</span><br><span class=\"line\">\tpublic void printAll(String filePath) &#123;</span><br><span class=\"line\">\t\tProperties properties = new Properties();</span><br><span class=\"line\">\t\ttry &#123;</span><br><span class=\"line\">\t\t\tFile file = new File(filePath);</span><br><span class=\"line\">\t\t\tFileInputStream fileInput = new FileInputStream(file);</span><br><span class=\"line\">\t\t\tproperties.load(fileInput);</span><br><span class=\"line\">\t\t\tfileInput.close();</span><br><span class=\"line\">\t\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\t\tSystem.err.println(&quot;&gt;&gt;&gt; Error when loading properties file..&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tEnumeration&lt;Object&gt; enuKeys = properties.keys();</span><br><span class=\"line\">\t\twhile (enuKeys.hasMoreElements()) &#123;</span><br><span class=\"line\">\t\t\tString k = (String) enuKeys.nextElement();</span><br><span class=\"line\">\t\t\tString value = properties.getProperty(k);</span><br><span class=\"line\">\t\t\tSystem.out.println(k + &quot;: &quot; + value);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"用 Hexo 和 GitHub Pages 搭建博客","date":"2017-11-23T16:50:05.000Z","_content":"\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n搭建这个博客走了许多弯路。在这里分享总结之后的思路和简化步骤。\n\n- Github Pages\n- Hexo 博客框架\n- 部署\n- Next 主题\n\n## Github Pages ##\n\nGithub Pages 其实本身就是 Github 提供的博客服务。 我们在 Github 中创建一个特定格式的 Repository，Github Pages 就会将里面的信息生成一个网页，展示出来。\n\n**操作如下：**\n<!--more-->\n\n1. 注册 Github 账号，然后在 Github 中创建一个以 .github.io 结尾的 Repository。 \n\t1. Repository name: ryanluoxu.github.io\n\t2. 勾选 Initialize this repository with a README\n\t3. Create repository\n2.  简单地编辑一下 README.md 这个文档。 比如添加：I am trying to create my own blog.. 保存(Commit changes)。\n3.  打开网页：ryanluoxu.github.io 这里就可以看到 README.md 里的内容了。\n\n如果没有太多的要求，其实直接用 README.md 来写博客也是不错的。 \n\n这个生成好的 Repository 就是用来存放博客内容的地方，也只有这个仓库里的内容，才会被 ryanluoxu.github.io 这个网页显示出来。 \n\n## Hexo ##\n\nHexo 是一个博客框架。它把本地文件里的信息生成一个网页。如果不需要放在网上给别人看，就没 Github Pages 什么事了。\n\n使用 Hexo 之前，需要先安装 Node.js 和 Git。\n\n**操作如下：**\n\n1. 安装 Node.js\n\t- 前往 https://nodejs.org/en/\n\t- 点击 8.9.1 LTS 下载\n\t- 安装\n\t- 打开 Command Prompt， 输入 `node -v`\n\t- 得到：v8.9.1\n\n\t安装成功\t\n\t\n2. 安装 Git\n\t- 前往 https://git-scm.com/\n\t- 点击 Downloads\n\t- 点击 Windows\n\t- 一般情况，下载会自动开始。如果没有，就点击 click here to download manually\n\t- 安装\n\t- 打开 Command Prompt， 输入 `git --version`\n\t- 得到：git version 2.15.0.windows.1\n\t\n\t安装成功\n\t\n\t额外说明：如果 Git --version 指令不管用，可能需要到 Environment Variable 那里添加 Path。\n\t\t\n3. 安装 Hexo \n\t- 打开 Command Prompt\n\t- 输入 `npm install -g hexo-cli`\n\t- 回车开始安装\n\t- 输入 `hexo -v` \n\t- 得到 hexo-cli: 1.0.4 等一串数据\n\n\t安装成功\n\n4. 创建本地博客\n\t- 在D盘下创建文件夹 blog\n\t- 鼠标右键 blog，选择 Git Bash Here。 如果没有安装 Git，就不会有这个选项。\n\t- Git Bash 打开之后，所在的位置就是 blog 这个文件夹的位置。（/d/blog）\n\t- 输入 `hexo init` 将 blog 文件夹初始化成一个博客文件夹。\n\t- 输入 `npm install` 安装依赖包。\n\t- 输入 `hexo g` 生成（generate）网页。 由于我们还没创建任何博客，生成的网页会展示 Hexo 里面自带了一个 Hello World 的博客。\n\t- 输入 `hexo s` 将生成的网页放在了本地服务器（server）。  \n\t- 浏览器里输入 http://localhost:4000/ 。 就可以看到刚才的成果了。\n\t- 回到 Git Bash，按 Ctrl+C 结束。\n\n\t此时再看 http://localhost:4000/ 就是无法访问了。\n\n5. 发布一篇博客\n\t- 继续在 Git Bash 里，所在路径还是 /d/blog。输入 `hexo new \"My First Post\"`\n\t- 在 D:\\blog\\source\\_posts 路径下，会有一个 My-First-Post.md 的文件。 编辑这个文件，然后保存。\n\t- 回到 Git Bash，输入 `hexo g`\n\t- 输入 `hexo s`\n\t- 前往 http://localhost:4000/ 查看成果。\n\t- 回到 Git Bash，按 Ctrl+C 结束。\n\n## 将本地 Hexo 博客部署在 Github 上 ##\n\n前面两个部分，我们已经有了本地博客，和一个能托管这些资料的线上仓库。只要把本地博客部署（deploy）在我们的 Github 对应的 Repository 就可以了。 \n\n**操作如下：**\n\n1. 获取 Github 对应的 Repository 的链接。\n\t- 登陆 Github，进入到 ryanluoxu.github.io\n\t- 点击 Clone or download\n\t- 复制 URL 待用\n\n\t我的是 `https://github.com/Ryanluoxu/ryanluoxu.github.io.git`\n\n2. 修改博客的配置文件 \n\t- 打开配置文件 /d/blog/_config.yml （使用 bash 里的 vi 或者 notepad++）\n\t- 找到 `#Deployment`，填入以下内容：\n```\ndeploy:  \n\t  type: git  \n\t  repository: https://github.com/Ryanluoxu/ryanluoxu.github.io.git  \n\t  branch: master \n```\n3. 部署\n\t- 回到 Git Bash\n\t- 输入 `npm install hexo-deployer-git --save` 安装 hexo-deployer-git 此步骤只需要做一次。\n\t- 输入 `hexo d`\n\t- 得到 `INFO  Deploy done: git` 即为部署成功\n\n\t之前我们创建的 ReadMe.md 会被自动覆盖掉。\n\n4. 查看成果\n\t\n\t前往 ryanluoxu.github.io 即可。\n\n\n## 使用 Next 主题 ##\n\n[更多 Hexo 的主题看这里](https://hexo.io/themes/)  \n\n这里以 Next 为例。 大概思路就是把整个主题的文件克隆到我们的主题文件夹中。在配置文件中注明使用该主题。\n\n**操作如下：**\n\n1. 还是回到 Git Bash。 输入 `git clone https://github.com/iissnan/hexo-theme-next themes/next`\n\n\t这样，该主题的文件就全部克隆到 D:\\blog\\themes\\next 下面。\n\n2. 修改博客配置文件\n\t- 打开 D:\\blog\\_config.yml\n\t- 找到 `theme:` \n\t- 把 Hexo 默认的 lanscape 修改成 next。 即 `theme: next`\n\t- 找到 `# Site`，添加博客名称，作者名字等。\n\t- 在 `language` 后面填入 en 或者 zh-Hans，选择英文或者中文。\n\t- 找到 `# URL`, 填入 url。比如 `url: https://ryanluoxu.github.io`\n\t\n\t填入名字后会有很风骚的 © 2017  Ryan Luo Xu 的字样出现在博客底部。\n      \n3. 重新生成部署即可\n\t- 回到 Git Bash。输入 `hexo g -d`就可以了。\n\n\t先把修改的内容生成网页，再部署。\n\n4. 查看成果\n\t\n\t前往 ryanluoxu.github.io 即可。\n\n\n","source":"_posts/用-Hexo-和-GitHub-Pages-搭建博客.md","raw":"---\ntitle: 用 Hexo 和 GitHub Pages 搭建博客\ndate: 2017-11-24 00:50:05\ncategories: 搭建博客\ntags: [Hexo, GitHub Pages, 博客, next]\n---\n\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n搭建这个博客走了许多弯路。在这里分享总结之后的思路和简化步骤。\n\n- Github Pages\n- Hexo 博客框架\n- 部署\n- Next 主题\n\n## Github Pages ##\n\nGithub Pages 其实本身就是 Github 提供的博客服务。 我们在 Github 中创建一个特定格式的 Repository，Github Pages 就会将里面的信息生成一个网页，展示出来。\n\n**操作如下：**\n<!--more-->\n\n1. 注册 Github 账号，然后在 Github 中创建一个以 .github.io 结尾的 Repository。 \n\t1. Repository name: ryanluoxu.github.io\n\t2. 勾选 Initialize this repository with a README\n\t3. Create repository\n2.  简单地编辑一下 README.md 这个文档。 比如添加：I am trying to create my own blog.. 保存(Commit changes)。\n3.  打开网页：ryanluoxu.github.io 这里就可以看到 README.md 里的内容了。\n\n如果没有太多的要求，其实直接用 README.md 来写博客也是不错的。 \n\n这个生成好的 Repository 就是用来存放博客内容的地方，也只有这个仓库里的内容，才会被 ryanluoxu.github.io 这个网页显示出来。 \n\n## Hexo ##\n\nHexo 是一个博客框架。它把本地文件里的信息生成一个网页。如果不需要放在网上给别人看，就没 Github Pages 什么事了。\n\n使用 Hexo 之前，需要先安装 Node.js 和 Git。\n\n**操作如下：**\n\n1. 安装 Node.js\n\t- 前往 https://nodejs.org/en/\n\t- 点击 8.9.1 LTS 下载\n\t- 安装\n\t- 打开 Command Prompt， 输入 `node -v`\n\t- 得到：v8.9.1\n\n\t安装成功\t\n\t\n2. 安装 Git\n\t- 前往 https://git-scm.com/\n\t- 点击 Downloads\n\t- 点击 Windows\n\t- 一般情况，下载会自动开始。如果没有，就点击 click here to download manually\n\t- 安装\n\t- 打开 Command Prompt， 输入 `git --version`\n\t- 得到：git version 2.15.0.windows.1\n\t\n\t安装成功\n\t\n\t额外说明：如果 Git --version 指令不管用，可能需要到 Environment Variable 那里添加 Path。\n\t\t\n3. 安装 Hexo \n\t- 打开 Command Prompt\n\t- 输入 `npm install -g hexo-cli`\n\t- 回车开始安装\n\t- 输入 `hexo -v` \n\t- 得到 hexo-cli: 1.0.4 等一串数据\n\n\t安装成功\n\n4. 创建本地博客\n\t- 在D盘下创建文件夹 blog\n\t- 鼠标右键 blog，选择 Git Bash Here。 如果没有安装 Git，就不会有这个选项。\n\t- Git Bash 打开之后，所在的位置就是 blog 这个文件夹的位置。（/d/blog）\n\t- 输入 `hexo init` 将 blog 文件夹初始化成一个博客文件夹。\n\t- 输入 `npm install` 安装依赖包。\n\t- 输入 `hexo g` 生成（generate）网页。 由于我们还没创建任何博客，生成的网页会展示 Hexo 里面自带了一个 Hello World 的博客。\n\t- 输入 `hexo s` 将生成的网页放在了本地服务器（server）。  \n\t- 浏览器里输入 http://localhost:4000/ 。 就可以看到刚才的成果了。\n\t- 回到 Git Bash，按 Ctrl+C 结束。\n\n\t此时再看 http://localhost:4000/ 就是无法访问了。\n\n5. 发布一篇博客\n\t- 继续在 Git Bash 里，所在路径还是 /d/blog。输入 `hexo new \"My First Post\"`\n\t- 在 D:\\blog\\source\\_posts 路径下，会有一个 My-First-Post.md 的文件。 编辑这个文件，然后保存。\n\t- 回到 Git Bash，输入 `hexo g`\n\t- 输入 `hexo s`\n\t- 前往 http://localhost:4000/ 查看成果。\n\t- 回到 Git Bash，按 Ctrl+C 结束。\n\n## 将本地 Hexo 博客部署在 Github 上 ##\n\n前面两个部分，我们已经有了本地博客，和一个能托管这些资料的线上仓库。只要把本地博客部署（deploy）在我们的 Github 对应的 Repository 就可以了。 \n\n**操作如下：**\n\n1. 获取 Github 对应的 Repository 的链接。\n\t- 登陆 Github，进入到 ryanluoxu.github.io\n\t- 点击 Clone or download\n\t- 复制 URL 待用\n\n\t我的是 `https://github.com/Ryanluoxu/ryanluoxu.github.io.git`\n\n2. 修改博客的配置文件 \n\t- 打开配置文件 /d/blog/_config.yml （使用 bash 里的 vi 或者 notepad++）\n\t- 找到 `#Deployment`，填入以下内容：\n```\ndeploy:  \n\t  type: git  \n\t  repository: https://github.com/Ryanluoxu/ryanluoxu.github.io.git  \n\t  branch: master \n```\n3. 部署\n\t- 回到 Git Bash\n\t- 输入 `npm install hexo-deployer-git --save` 安装 hexo-deployer-git 此步骤只需要做一次。\n\t- 输入 `hexo d`\n\t- 得到 `INFO  Deploy done: git` 即为部署成功\n\n\t之前我们创建的 ReadMe.md 会被自动覆盖掉。\n\n4. 查看成果\n\t\n\t前往 ryanluoxu.github.io 即可。\n\n\n## 使用 Next 主题 ##\n\n[更多 Hexo 的主题看这里](https://hexo.io/themes/)  \n\n这里以 Next 为例。 大概思路就是把整个主题的文件克隆到我们的主题文件夹中。在配置文件中注明使用该主题。\n\n**操作如下：**\n\n1. 还是回到 Git Bash。 输入 `git clone https://github.com/iissnan/hexo-theme-next themes/next`\n\n\t这样，该主题的文件就全部克隆到 D:\\blog\\themes\\next 下面。\n\n2. 修改博客配置文件\n\t- 打开 D:\\blog\\_config.yml\n\t- 找到 `theme:` \n\t- 把 Hexo 默认的 lanscape 修改成 next。 即 `theme: next`\n\t- 找到 `# Site`，添加博客名称，作者名字等。\n\t- 在 `language` 后面填入 en 或者 zh-Hans，选择英文或者中文。\n\t- 找到 `# URL`, 填入 url。比如 `url: https://ryanluoxu.github.io`\n\t\n\t填入名字后会有很风骚的 © 2017  Ryan Luo Xu 的字样出现在博客底部。\n      \n3. 重新生成部署即可\n\t- 回到 Git Bash。输入 `hexo g -d`就可以了。\n\n\t先把修改的内容生成网页，再部署。\n\n4. 查看成果\n\t\n\t前往 ryanluoxu.github.io 即可。\n\n\n","slug":"用-Hexo-和-GitHub-Pages-搭建博客","published":1,"updated":"2020-04-30T09:23:19.532Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedii0017sd5trlgd74j4","content":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>搭建这个博客走了许多弯路。在这里分享总结之后的思路和简化步骤。</p>\n<ul>\n<li>Github Pages</li>\n<li>Hexo 博客框架</li>\n<li>部署</li>\n<li>Next 主题</li>\n</ul>\n<h2 id=\"Github-Pages\"><a href=\"#Github-Pages\" class=\"headerlink\" title=\"Github Pages\"></a>Github Pages</h2><p>Github Pages 其实本身就是 Github 提供的博客服务。 我们在 Github 中创建一个特定格式的 Repository，Github Pages 就会将里面的信息生成一个网页，展示出来。</p>\n<p><strong>操作如下：</strong></p>\n<a id=\"more\"></a>\n\n<ol>\n<li>注册 Github 账号，然后在 Github 中创建一个以 .github.io 结尾的 Repository。 <ol>\n<li>Repository name: ryanluoxu.github.io</li>\n<li>勾选 Initialize this repository with a README</li>\n<li>Create repository</li>\n</ol>\n</li>\n<li>简单地编辑一下 README.md 这个文档。 比如添加：I am trying to create my own blog.. 保存(Commit changes)。</li>\n<li>打开网页：ryanluoxu.github.io 这里就可以看到 README.md 里的内容了。</li>\n</ol>\n<p>如果没有太多的要求，其实直接用 README.md 来写博客也是不错的。 </p>\n<p>这个生成好的 Repository 就是用来存放博客内容的地方，也只有这个仓库里的内容，才会被 ryanluoxu.github.io 这个网页显示出来。 </p>\n<h2 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h2><p>Hexo 是一个博客框架。它把本地文件里的信息生成一个网页。如果不需要放在网上给别人看，就没 Github Pages 什么事了。</p>\n<p>使用 Hexo 之前，需要先安装 Node.js 和 Git。</p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li><p>安装 Node.js</p>\n<ul>\n<li><p>前往 <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">https://nodejs.org/en/</a></p>\n</li>\n<li><p>点击 8.9.1 LTS 下载</p>\n</li>\n<li><p>安装</p>\n</li>\n<li><p>打开 Command Prompt， 输入 <code>node -v</code></p>\n</li>\n<li><p>得到：v8.9.1</p>\n<p>安装成功    </p>\n</li>\n</ul>\n</li>\n<li><p>安装 Git</p>\n<ul>\n<li><p>前往 <a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">https://git-scm.com/</a></p>\n</li>\n<li><p>点击 Downloads</p>\n</li>\n<li><p>点击 Windows</p>\n</li>\n<li><p>一般情况，下载会自动开始。如果没有，就点击 click here to download manually</p>\n</li>\n<li><p>安装</p>\n</li>\n<li><p>打开 Command Prompt， 输入 <code>git --version</code></p>\n</li>\n<li><p>得到：git version 2.15.0.windows.1</p>\n<p>安装成功</p>\n<p>额外说明：如果 Git –version 指令不管用，可能需要到 Environment Variable 那里添加 Path。</p>\n</li>\n</ul>\n</li>\n<li><p>安装 Hexo </p>\n<ul>\n<li><p>打开 Command Prompt</p>\n</li>\n<li><p>输入 <code>npm install -g hexo-cli</code></p>\n</li>\n<li><p>回车开始安装</p>\n</li>\n<li><p>输入 <code>hexo -v</code> </p>\n</li>\n<li><p>得到 hexo-cli: 1.0.4 等一串数据</p>\n<p>安装成功</p>\n</li>\n</ul>\n</li>\n<li><p>创建本地博客</p>\n<ul>\n<li><p>在D盘下创建文件夹 blog</p>\n</li>\n<li><p>鼠标右键 blog，选择 Git Bash Here。 如果没有安装 Git，就不会有这个选项。</p>\n</li>\n<li><p>Git Bash 打开之后，所在的位置就是 blog 这个文件夹的位置。（/d/blog）</p>\n</li>\n<li><p>输入 <code>hexo init</code> 将 blog 文件夹初始化成一个博客文件夹。</p>\n</li>\n<li><p>输入 <code>npm install</code> 安装依赖包。</p>\n</li>\n<li><p>输入 <code>hexo g</code> 生成（generate）网页。 由于我们还没创建任何博客，生成的网页会展示 Hexo 里面自带了一个 Hello World 的博客。</p>\n</li>\n<li><p>输入 <code>hexo s</code> 将生成的网页放在了本地服务器（server）。  </p>\n</li>\n<li><p>浏览器里输入 <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a> 。 就可以看到刚才的成果了。</p>\n</li>\n<li><p>回到 Git Bash，按 Ctrl+C 结束。</p>\n<p>此时再看 <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a> 就是无法访问了。</p>\n</li>\n</ul>\n</li>\n<li><p>发布一篇博客</p>\n<ul>\n<li>继续在 Git Bash 里，所在路径还是 /d/blog。输入 <code>hexo new &quot;My First Post&quot;</code></li>\n<li>在 D:\\blog\\source_posts 路径下，会有一个 My-First-Post.md 的文件。 编辑这个文件，然后保存。</li>\n<li>回到 Git Bash，输入 <code>hexo g</code></li>\n<li>输入 <code>hexo s</code></li>\n<li>前往 <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a> 查看成果。</li>\n<li>回到 Git Bash，按 Ctrl+C 结束。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"将本地-Hexo-博客部署在-Github-上\"><a href=\"#将本地-Hexo-博客部署在-Github-上\" class=\"headerlink\" title=\"将本地 Hexo 博客部署在 Github 上\"></a>将本地 Hexo 博客部署在 Github 上</h2><p>前面两个部分，我们已经有了本地博客，和一个能托管这些资料的线上仓库。只要把本地博客部署（deploy）在我们的 Github 对应的 Repository 就可以了。 </p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li><p>获取 Github 对应的 Repository 的链接。</p>\n<ul>\n<li><p>登陆 Github，进入到 ryanluoxu.github.io</p>\n</li>\n<li><p>点击 Clone or download</p>\n</li>\n<li><p>复制 URL 待用</p>\n<p>我的是 <code>https://github.com/Ryanluoxu/ryanluoxu.github.io.git</code></p>\n</li>\n</ul>\n</li>\n<li><p>修改博客的配置文件 </p>\n<ul>\n<li>打开配置文件 /d/blog/_config.yml （使用 bash 里的 vi 或者 notepad++）</li>\n<li>找到 <code>#Deployment</code>，填入以下内容：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">\t  type: git  </span><br><span class=\"line\">\t  repository: https://github.com/Ryanluoxu/ryanluoxu.github.io.git  </span><br><span class=\"line\">\t  branch: master</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>部署</p>\n<ul>\n<li><p>回到 Git Bash</p>\n</li>\n<li><p>输入 <code>npm install hexo-deployer-git --save</code> 安装 hexo-deployer-git 此步骤只需要做一次。</p>\n</li>\n<li><p>输入 <code>hexo d</code></p>\n</li>\n<li><p>得到 <code>INFO  Deploy done: git</code> 即为部署成功</p>\n<p>之前我们创建的 ReadMe.md 会被自动覆盖掉。</p>\n</li>\n</ul>\n</li>\n<li><p>查看成果</p>\n<p> 前往 ryanluoxu.github.io 即可。</p>\n</li>\n</ol>\n<h2 id=\"使用-Next-主题\"><a href=\"#使用-Next-主题\" class=\"headerlink\" title=\"使用 Next 主题\"></a>使用 Next 主题</h2><p><a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">更多 Hexo 的主题看这里</a>  </p>\n<p>这里以 Next 为例。 大概思路就是把整个主题的文件克隆到我们的主题文件夹中。在配置文件中注明使用该主题。</p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li><p>还是回到 Git Bash。 输入 <code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></p>\n<p> 这样，该主题的文件就全部克隆到 D:\\blog\\themes\\next 下面。</p>\n</li>\n<li><p>修改博客配置文件</p>\n<ul>\n<li><p>打开 D:\\blog_config.yml</p>\n</li>\n<li><p>找到 <code>theme:</code> </p>\n</li>\n<li><p>把 Hexo 默认的 lanscape 修改成 next。 即 <code>theme: next</code></p>\n</li>\n<li><p>找到 <code># Site</code>，添加博客名称，作者名字等。</p>\n</li>\n<li><p>在 <code>language</code> 后面填入 en 或者 zh-Hans，选择英文或者中文。</p>\n</li>\n<li><p>找到 <code># URL</code>, 填入 url。比如 <code>url: https://ryanluoxu.github.io</code></p>\n<p>填入名字后会有很风骚的 © 2017  Ryan Luo Xu 的字样出现在博客底部。</p>\n</li>\n</ul>\n</li>\n<li><p>重新生成部署即可</p>\n<ul>\n<li><p>回到 Git Bash。输入 <code>hexo g -d</code>就可以了。</p>\n<p>先把修改的内容生成网页，再部署。</p>\n</li>\n</ul>\n</li>\n<li><p>查看成果</p>\n<p> 前往 ryanluoxu.github.io 即可。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>搭建这个博客走了许多弯路。在这里分享总结之后的思路和简化步骤。</p>\n<ul>\n<li>Github Pages</li>\n<li>Hexo 博客框架</li>\n<li>部署</li>\n<li>Next 主题</li>\n</ul>\n<h2 id=\"Github-Pages\"><a href=\"#Github-Pages\" class=\"headerlink\" title=\"Github Pages\"></a>Github Pages</h2><p>Github Pages 其实本身就是 Github 提供的博客服务。 我们在 Github 中创建一个特定格式的 Repository，Github Pages 就会将里面的信息生成一个网页，展示出来。</p>\n<p><strong>操作如下：</strong></p>","more":"<ol>\n<li>注册 Github 账号，然后在 Github 中创建一个以 .github.io 结尾的 Repository。 <ol>\n<li>Repository name: ryanluoxu.github.io</li>\n<li>勾选 Initialize this repository with a README</li>\n<li>Create repository</li>\n</ol>\n</li>\n<li>简单地编辑一下 README.md 这个文档。 比如添加：I am trying to create my own blog.. 保存(Commit changes)。</li>\n<li>打开网页：ryanluoxu.github.io 这里就可以看到 README.md 里的内容了。</li>\n</ol>\n<p>如果没有太多的要求，其实直接用 README.md 来写博客也是不错的。 </p>\n<p>这个生成好的 Repository 就是用来存放博客内容的地方，也只有这个仓库里的内容，才会被 ryanluoxu.github.io 这个网页显示出来。 </p>\n<h2 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h2><p>Hexo 是一个博客框架。它把本地文件里的信息生成一个网页。如果不需要放在网上给别人看，就没 Github Pages 什么事了。</p>\n<p>使用 Hexo 之前，需要先安装 Node.js 和 Git。</p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li><p>安装 Node.js</p>\n<ul>\n<li><p>前往 <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">https://nodejs.org/en/</a></p>\n</li>\n<li><p>点击 8.9.1 LTS 下载</p>\n</li>\n<li><p>安装</p>\n</li>\n<li><p>打开 Command Prompt， 输入 <code>node -v</code></p>\n</li>\n<li><p>得到：v8.9.1</p>\n<p>安装成功    </p>\n</li>\n</ul>\n</li>\n<li><p>安装 Git</p>\n<ul>\n<li><p>前往 <a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">https://git-scm.com/</a></p>\n</li>\n<li><p>点击 Downloads</p>\n</li>\n<li><p>点击 Windows</p>\n</li>\n<li><p>一般情况，下载会自动开始。如果没有，就点击 click here to download manually</p>\n</li>\n<li><p>安装</p>\n</li>\n<li><p>打开 Command Prompt， 输入 <code>git --version</code></p>\n</li>\n<li><p>得到：git version 2.15.0.windows.1</p>\n<p>安装成功</p>\n<p>额外说明：如果 Git –version 指令不管用，可能需要到 Environment Variable 那里添加 Path。</p>\n</li>\n</ul>\n</li>\n<li><p>安装 Hexo </p>\n<ul>\n<li><p>打开 Command Prompt</p>\n</li>\n<li><p>输入 <code>npm install -g hexo-cli</code></p>\n</li>\n<li><p>回车开始安装</p>\n</li>\n<li><p>输入 <code>hexo -v</code> </p>\n</li>\n<li><p>得到 hexo-cli: 1.0.4 等一串数据</p>\n<p>安装成功</p>\n</li>\n</ul>\n</li>\n<li><p>创建本地博客</p>\n<ul>\n<li><p>在D盘下创建文件夹 blog</p>\n</li>\n<li><p>鼠标右键 blog，选择 Git Bash Here。 如果没有安装 Git，就不会有这个选项。</p>\n</li>\n<li><p>Git Bash 打开之后，所在的位置就是 blog 这个文件夹的位置。（/d/blog）</p>\n</li>\n<li><p>输入 <code>hexo init</code> 将 blog 文件夹初始化成一个博客文件夹。</p>\n</li>\n<li><p>输入 <code>npm install</code> 安装依赖包。</p>\n</li>\n<li><p>输入 <code>hexo g</code> 生成（generate）网页。 由于我们还没创建任何博客，生成的网页会展示 Hexo 里面自带了一个 Hello World 的博客。</p>\n</li>\n<li><p>输入 <code>hexo s</code> 将生成的网页放在了本地服务器（server）。  </p>\n</li>\n<li><p>浏览器里输入 <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a> 。 就可以看到刚才的成果了。</p>\n</li>\n<li><p>回到 Git Bash，按 Ctrl+C 结束。</p>\n<p>此时再看 <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a> 就是无法访问了。</p>\n</li>\n</ul>\n</li>\n<li><p>发布一篇博客</p>\n<ul>\n<li>继续在 Git Bash 里，所在路径还是 /d/blog。输入 <code>hexo new &quot;My First Post&quot;</code></li>\n<li>在 D:\\blog\\source_posts 路径下，会有一个 My-First-Post.md 的文件。 编辑这个文件，然后保存。</li>\n<li>回到 Git Bash，输入 <code>hexo g</code></li>\n<li>输入 <code>hexo s</code></li>\n<li>前往 <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a> 查看成果。</li>\n<li>回到 Git Bash，按 Ctrl+C 结束。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"将本地-Hexo-博客部署在-Github-上\"><a href=\"#将本地-Hexo-博客部署在-Github-上\" class=\"headerlink\" title=\"将本地 Hexo 博客部署在 Github 上\"></a>将本地 Hexo 博客部署在 Github 上</h2><p>前面两个部分，我们已经有了本地博客，和一个能托管这些资料的线上仓库。只要把本地博客部署（deploy）在我们的 Github 对应的 Repository 就可以了。 </p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li><p>获取 Github 对应的 Repository 的链接。</p>\n<ul>\n<li><p>登陆 Github，进入到 ryanluoxu.github.io</p>\n</li>\n<li><p>点击 Clone or download</p>\n</li>\n<li><p>复制 URL 待用</p>\n<p>我的是 <code>https://github.com/Ryanluoxu/ryanluoxu.github.io.git</code></p>\n</li>\n</ul>\n</li>\n<li><p>修改博客的配置文件 </p>\n<ul>\n<li>打开配置文件 /d/blog/_config.yml （使用 bash 里的 vi 或者 notepad++）</li>\n<li>找到 <code>#Deployment</code>，填入以下内容：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">\t  type: git  </span><br><span class=\"line\">\t  repository: https://github.com/Ryanluoxu/ryanluoxu.github.io.git  </span><br><span class=\"line\">\t  branch: master</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>部署</p>\n<ul>\n<li><p>回到 Git Bash</p>\n</li>\n<li><p>输入 <code>npm install hexo-deployer-git --save</code> 安装 hexo-deployer-git 此步骤只需要做一次。</p>\n</li>\n<li><p>输入 <code>hexo d</code></p>\n</li>\n<li><p>得到 <code>INFO  Deploy done: git</code> 即为部署成功</p>\n<p>之前我们创建的 ReadMe.md 会被自动覆盖掉。</p>\n</li>\n</ul>\n</li>\n<li><p>查看成果</p>\n<p> 前往 ryanluoxu.github.io 即可。</p>\n</li>\n</ol>\n<h2 id=\"使用-Next-主题\"><a href=\"#使用-Next-主题\" class=\"headerlink\" title=\"使用 Next 主题\"></a>使用 Next 主题</h2><p><a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">更多 Hexo 的主题看这里</a>  </p>\n<p>这里以 Next 为例。 大概思路就是把整个主题的文件克隆到我们的主题文件夹中。在配置文件中注明使用该主题。</p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li><p>还是回到 Git Bash。 输入 <code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></p>\n<p> 这样，该主题的文件就全部克隆到 D:\\blog\\themes\\next 下面。</p>\n</li>\n<li><p>修改博客配置文件</p>\n<ul>\n<li><p>打开 D:\\blog_config.yml</p>\n</li>\n<li><p>找到 <code>theme:</code> </p>\n</li>\n<li><p>把 Hexo 默认的 lanscape 修改成 next。 即 <code>theme: next</code></p>\n</li>\n<li><p>找到 <code># Site</code>，添加博客名称，作者名字等。</p>\n</li>\n<li><p>在 <code>language</code> 后面填入 en 或者 zh-Hans，选择英文或者中文。</p>\n</li>\n<li><p>找到 <code># URL</code>, 填入 url。比如 <code>url: https://ryanluoxu.github.io</code></p>\n<p>填入名字后会有很风骚的 © 2017  Ryan Luo Xu 的字样出现在博客底部。</p>\n</li>\n</ul>\n</li>\n<li><p>重新生成部署即可</p>\n<ul>\n<li><p>回到 Git Bash。输入 <code>hexo g -d</code>就可以了。</p>\n<p>先把修改的内容生成网页，再部署。</p>\n</li>\n</ul>\n</li>\n<li><p>查看成果</p>\n<p> 前往 ryanluoxu.github.io 即可。</p>\n</li>\n</ol>"},{"title":"黑马教程-Java Web Basic","date":"2018-07-07T13:17:58.000Z","_content":"\n这篇博客是黑马JavaWeb教程的学习笔记。\n\n<!--more-->\n\n# Java 基础\n## Eclipse 的使用和断点调试\n### JRE & Compiler\nJRE version >= Java Compiler \n否则抛出`Bad version`异常\n\n### Debug 断点调试\n- 设置断点\n- F5: step into\n- F6: step over\n- F7: step return\n- drop to frame: 跳到当前方法第一行\n- F8: 跳到下一个断点。\n- 观察变量: 点击变量 - watch\n- Breakpoints：全部断点视图。调试之后清除。\n\n### Eclipse 快捷键\n- 内容提示： alt+/\n- 快速修复： ctrl+1\n- 导包：\tctrl+shift+o\n- 格式化代码块： ctrl+shift+f\n- 向前向后： alt+方向键\n- 查看方法说明： f2\n- 重置透视图： Windows - Reset Perspective\n- 更改大写： ctrl+shift+x\n- 更改小写： ctrl+shift+y\n- 复制一行： ctrl+alt+上下键\n- 移动一行： alt+上下键\n- 查看继承关系： ctrl+t\n- 查看源码： ctrl+shift+t\n- 查看快捷键： ctrl+shift+L\n\n## JUnit 测试\n1. 创建Person类\n2. 创建测试类-TestPerson\n3. 在 TestPerson 里，创建测试方法-testRun()\n4. 加注释-@Test\n5. 选择 testRun() - run as JUnit Test\n6. 选择测试类，测试所有测试方法\n\n### Before 和 After\n```\n@Before\npublic void before(){\n\t//初始化资源\n\t//所有测试方法前运行\n}\n\n@After\npublic void before(){\n\t//销毁资源\n\t//所有测试方法后运行\n}\n\n@BeforeClass\npublic static void beforeClass(){\n\t//每一个测试方法之前都运行\n}\n\n@AfterClass\npublic static void beforeClass(){\n\t//每一个测试方法之后都运行\n}\n```\n### Assert 断言\n```\npublic void testRun(){\n\t//通过：p.run() == \"2\"\n\tAssert.assertEquals(\"2\",p.run());\n\n\t//不通过返回信息\n}\n```\n\n## Java 部分特性\n### 静态导入（不常用）\n```\nimport static java.lang.System.out;\nout.print(\"\")\n```\n\n### 自动装箱、拆箱 \n```\n//装箱，自动将1变成一个object。\nInteger i = 1;  //Interger i = new Integer(\"1\")\n\n//拆箱，自动将i对象拆成数字1.\nint j = i; \n```\n\n### 增强 for\n只用于array，或者实现 Iterable 借口的集合上。\n\n读取Map的两种方式：\n1. 设置 keyset，通过iterator得到key，然后map.get(key)得到对应的值\n\t```\n\t// 传统方法\n\tSet set = map.keySet();\n\tIterator it = set.iterator();\n\twhile(it.hasNext()){\n\t\tString key = it.next();\n\t\tSystem.out.println(key + \"->\" +map.get(key));\n\t}\n\t\n\t// for each\n\tfor(Object key : map.keySet()){\n\t\tSystem.out.println(key + \"->\" +map.get(key));\n\t}\n\t```\n2. map的每一组key和value是一个entry。用entrySet()得到set。然后用iterator得到每一对entry。\n\t```\n\t// 传统方法\n\tSet set = map.entrySet();\n\tIterator it = set.iterator();\n\twhile(it.hasNext()){\n\t\tMap.Entry entry = it.next();\n\t\tSystem.out.println(entry.getKey() + \"->\" +entry.getValue());\n\t}\n\n\t// for each\n\tfor(Object entry : map.entrySet()){\n\t\tSystem.out.println(entry.getKey() + \"->\" +entry.getValue());\n\t}\n\t```\n\nHashMap 没有顺序，需要顺序用 LinkedHashMap();\n\nFor Each 需要注意的问题：\n1. 只是取数据，不用于赋值。需要修改数据，用传统for方式\n\n### 可变参数\n可变参数视为数组。\n\n```\npublic int sum(int ...nums){\n\tint sum = 0;\n\tfor(int i:nums){\n\t\tsum+=i;\t\n\t}\n}\n\npublic void testSum(){\n\tsum(1,2,3,4,5,6); // sum(array);\n}\n\nint nums[] = {1,2,3,4}  // nums 只是一个对象\nInteger nums[] = {1,2,3,4}  // 这时是多个对象\n\n// 在可变参数里，比如 “T...a”，要求参数为多个对象。\n```\n\n### 枚举类\n限定了方法的使用对象。\n```\n// 定义枚举的构造函数（私有），方法和字段。来封装信息。\nenum Grade(){\t// class\n\tA(\"90-100\"),B(\"80-89\"),C(\"70-79\");\t\t// Object\n\n\tprivate String value;  // 封装每个对象对应的分数\n\tprivate Grade(String value){\n\t\tthis.value = value;\t\n\t}\n\tpublic String getValue(){\n\t\treturn this.value;\n\t}\n}\n\npublic void print(Grade g){\n\t// 使用自己定义的枚举类\n\tSystem.out.println(g.getValue());\n}\n\n@Test\npublic void testPrint(){\n\tprint(Grade.B);\n}\n\n```\n\n带抽象方法的枚举\n\n```\n// 要求调用枚举对象时，需要定义优良中。\nenum Grade(){\n\tA(\"90-100\"){\n\t\tpublic String rank(){\n\t\t\treturn \"优\";\t\n\t\t}\n\t};\n\tB(\"80-89\"){\n\t\tpublic String rank(){\n\t\t\treturn \"良\";\t\n\t\t}\n\t};\n\tC(\"70-79\"){\n\t\tpublic String rank(){\n\t\t\treturn \"中\";\t\n\t\t}\n\t};\t\n\n\t// 抽象方法\n\tpublic abstract String rank();\n\n\t// 封装数值\n\tprivate String value;\n\tprivate Grade(String value){\n\t\tthis.value = value;\t\n\t}\n\tpublic String getValue(){\n\t\treturn this.value;\n\t}\n}\n\npublic void print(Grade g){\n\t// 使用自己定义的枚举类\n\tSystem.out.println(g.getValue());\n\tSystem.out.println(g.rank());\n}\n\n@Test\npublic void testPrint(){\n\tprint(Grade.B);\n}\n\n@Test\npublic void testEnum(){\n\tGrade.C.name();\t //得到C\n\tGrade.C.ordinal();  //得到位置3\n\t\n\tGrade.valueOf(“B”);\t// 返回一个枚举对象。可以用于检测得到的值是否是有效值。\n\t\n\tGrade.values();  // 返回枚举的所有值\n}\n```\n\n枚举只有一个枚举值时，可以当作单态设计模式。\n```\n// 用单态设计模式定义一个类\nenum Person{\n\tA;\n}\n```\n\n## 反射\n1. 加载类\n\t1. Class 代表某个类的字节码， Class.forName(String className)\n2. 解剖出类的各个部分\n3. 用得到的各个部门执行相应的任务\n\n```\n// 加载所需类的字节码到内存\nClass classt = Class.forName(\"io.ryan.demo.Person\");\n\n// 加载的另外两个方法\nClass classt = new Person().getClass();\nClass classt = Person.class;\n\n// 解剖每个部分\nclass.getConstructor\t// 用于创建对象\nclass.getMethod\t\t\t// 用于执行方法\nclass.getField\t\t\t// 用于封装数据\n\nclass.getDeclaredConstructor\nclass.getDeclaredMethod\nclass.getDeclaredField\n\n```\n### 反射类的构造函数\n例子1，无参构造\n```\nClass classt = Class.forName(\"io.ryan.demo.Person\");\nConstructor c = class.getConstructor();\t\t// 选择某个构造函数\nPerson p = c.newInstance(); \t// 利用反射得到对象\n```\n\n例子2，有参构造\n```\nClass classt = Class.forName(\"io.ryan.demo.Person\");\nConstructor c = class.getConstructor(String.class);\t\t// 接收 Class 类\nPerson p = c.newInstance(“A String”);\n```\n\n例子3，私有构造\n```\nClass classt = Class.forName(\"io.ryan.demo.Person\");\nConstructor c = class.getDeclaredConstructor(List.class);\t// private\nc.setAccessible(true); \t// 暴力反射，破解私有\nPerson p = c.newInstance(new ArrayList());\n```\n\n例子4，创建对象的另一个途径\n```\nClass classt = Class.forName(\"io.ryan.demo.Person\");\nPerson p = class.newInstance();  // 只限有无参的构造函数\n```\n\n### 反射类的方法\n\n- public\n- static: 无需传入对象，null\n- private： 需要暴力破解\n\n```\nClass classt = Class.forName(\"io.ryan.demo.Person\");\nMethod method = classt.getMethod(methodName, 参数.class);\t// 得到方法\nmethod.invoke(ojb,args)\t\t// 指定对象来执行这个方法\n\n```\n\n- main\n```\nClass classt = Class.forName(\"io.ryan.demo.Person\");\nMethod method = classt.getMethod(“main”, String[].class);\n// 看到数组，就要拆。\nmethod.invoke(null, (Object)new String[]{\"aa\",\"dd\"});\n\n```\n\n### 反射类的字段（属性）\n- public\n- private\n- static\n\n```\nClass classt = Class.forName(\"io.ryan.demo.Person\");\nField f = classt.getField(\"name\");\nf.getType(); \t// 得到该字段的类型\nf.get(p1);\t\t// 得到 p1 的名字。\n\nf.set(p1,\"xxx\")\t// 赋值\n```\n\n## 内省 introspector\n\n用于获取或设置JavaBean的属性。\n- Bean的属性由get/set方法决定。\n- getBeanInfo()，将bean的属性都省到BeanInfo里。\n- getPropertiesDescriptor()\n\n```\n// 得到bean的所有属性\nBeanInfo info = Introspector.getBeanInfo(Person.class, Object.class); // 不要Object属性\nPropertyDescriptor[] pds = info.getPropertyDescriptors()\nfor (PropertyDescriptor pd:pds){\n\tSystem.out.println(pd.getName());\n}\n\n// 操纵bean的指定属性\nPropertyDescriptor pd = new PropertyDescriptor(\"age\", Person.class);\nMethod method = pd.getWriteMethod();\t// 相当 setAge()\nmethod.invoke(p1, 30);\n\nMethod method2 = pd.getReadMethod();\nmethod2.invoke(p1, null);\t// 相当 getAge()\n\n// 获取当前操作的属性的类型\nPropertyDescriptor pd = new PropertyDescriptor(\"age\", Person.class);\npd.getPropertyType();\n\n```\n\n## beanUtils操纵bean属性\n- 导入beanUtils包.\n- 导入logging包.\n\n\n```\nPerson p1 = new Person();\nBeanUtils.setProperty(p1, \"name\", \"ryan\");\n\n// 数据(String)来了，放到对象里去。包括自动转：8种基本类型。\nString name = \"ryan\"\nBeanUtils.setProperty(p1, \"name\", name);\n\n// 以外的数据类型，会抛出异常\nString birthday = \"1988-09-09\";\nBeanUtils.setProperty(p1, \"birthday\", birthday);\t//Date类型，所以报错\n\n//需要注册Date转换器\nConverter converter = new Converter(){\n\tpublic Object convert(Class type, Object value){\n\t\tif(value==null){\n\t\t\treturn null;\n\t\t}\n\t\tif(!value instanceof String){\n\t\t\tthrow new ConversionException(\"参数不是String.\");\n\t\t}\n\t\tString str = (String) value;\n\t\tif(str.trim().equal(\"\")){\n\t\t\treturn null;\n\t\t}\n\t\tSimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd\");\n\t\ttry{\n\t\t\treturn df.parss(str);\t\n\t\t} catch(ParseException e){\n\t\t\tthrow new RuntimeException(e);\t//异常链不能掉\n\t\t}\n\t}\n}\nConvertUtils.register(converter, Date.class);\nBeanUtils.setProperty(p1, \"birthday\", birthday);\t//就不会有异常\n\n// 查看文档会发现，Converter已经有很多现成的实现类。\nConvertUtils.register(new DateLocaleConverter(), Date.class);\nBeanUtils.setProperty(p1, \"birthday\", birthday);\t//有bug\n\n// 用map的值填充bean属性\nMap map = new HashMap():\nmap.put(\"name\",\"ryan\");\n\nConvertUtils.register(new DateLocaleConverter(), Date.class);\nBeanUtils.populate(bean, map); \t//填充\n```\n\n## 泛型 Generic\n\n相当一个类型的变量。\n在编写集合时，限制了集合的处理类型，从而把运行问题，转为编译问题。\n```\n// 声明的变量是String的集合。\nList<String> list = new ArrayList<String>();\n```\n\n泛型的使用：\n- List<E> 泛型类，List<String>参数化的类\n- Iterator<E>\n- Map<K,V>\n```\nList<String> list = new ArrayList<String>();\n//...\n\nIterator<String> it = list.iterator();\nString value = it.next(); // 默认就是String，不需要强转。 \n\n// for each\nfor( String s : list){...}\n```\n\nMap\n```\nMap<int, String> map = new HashMap<int, Stirng>();\n//...\n\nSet<Map.Entry<Integer,String>> set = map.entrySet();\n\nfor(Entry<Integer,String> entry : set) {\n\tentry.getKey();\n\tentry.getValue();\n}\n```\n\n### 注意的问题：\n- 泛型的对象不能是基本类型。\n- new时，前后泛型要一致。\n- 泛型是给java编译器用的，编译后的binary不带泛型信息。\n\n\n### 自定义泛型方法：\n```\n// 调用之前先声明\npublic <T> void gMethod(T t){..}\npublic <T,K> void gMethod(T t, K k){..}\n\n// 类上声明泛型\npublic class gClass<T,K>{\n\tpublic void gMethod(T t, K k){...}\n\n\t// 静态是无效的\n\tpublic static void gMethod(T t, K k){...} \t// 错误\n\tpublic static <T,K> void gMethod(T t, K k){...}\n}\n```\n\n例子：泛型方法-实现指定位置上的数组元素的交换\n```\npublic <T> void swap(T arr[], int pos1, int pos2){\n\tT tmp = arr[pos1];\n\tarr[pos1] = arr[pos2]\n\tarr[pos2] = tmp;\n}\n```\n\n例子：泛型方法-接收任意数组，颠倒所有元素\n```\npublic <T> void reverse(T arr[]){\n\tint start = 0;\n\tint end = arr,length-1;\n\t\n\twhile(true){\n\t\tif(start>=end){ break; }\n\t\n\t\tT tmp = arr[start];\n\t\tarr[start] = arr[end]\n\t\tarr[end] = tmp;\n\t\t\n\t\tstart++;\n\t\tend--;\n\t}\t\n}\n```\n\n例子：泛型类\n```\npublic class gClass<T>{\n\tprivate T t;\n\tpublic void setT(T t){...}\n\tpublic T getT(){...}\n}\n```\n\n# XML 运用\n\n- 描述数据\n- 程序的配置文件\n\n## XML 语法\n\n### 文档声明\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n```\n\n### 元素：标签\n- 包含标签体：<a>hello</a>\n- 不包含标签体：<a></a> 或者 <a/>\n- 文档有且仅有一个根标签，其他都是子标签。\n- 标签体中的空格和换行都是有内容的。所以排版有时会影响到文档。\n```\n<a>hello</a>\n<a>\n\thello\n</a>\n```\n\n### 属性\n一个标签可以有多个属性，每个属性都有自己的名称和取值。\n```\n<input name=\"text\">\n```\n相当于\n```\n<input>\n\t<name>text</name>\n</input>\n```\n\n### 注释\n\n`<!-- 注释 -->`\n\n### 转义字符\n- <\t:\t&lt;\n- >\t:\t&gt;\n- &\t:\t&amp;\n- \"\t:\t&quot;\n- '\t:\t&apos;\n\n### 处理指令-PI\n指明该文档用哪个css来执行。\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<?xml-stylesheet type=\"text/css\" href=\"xxx.css\"?>\n```\n\n## XML 约束\n\n编写一个文档来约束另一个文档。用于框架的编写。\n\n### XML DTD （Doc Type Definition)\nbook.xml\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE shelf SYSTEM \"book.dtd\">\t// 指明被谁约束，声明所有shelf内标签都要遵循dtd文档\n<shelf>\n\t<book>\n\t\t<name>Java..</name>\n\t\t<price>100.00</price>\n\t</book>\n</shelf>\n```\nbook.dtd\n```\n<!ELEMENT shelf(book+)>\t\t// shelf 只可以有 book 标签\n\t<!ELEMENT book(name,price)>\t\t// book 里包含 name 和 price 标签\n\t<!ELEMENT name(#PCDATA)>\t// \tname 标签里包含字符串\n\t<!ELEMENT price(#PCDATA)>\n```\n\n引用公共文档\n```\n<!DOCTYPE web-app PUBLIC \"<URL>\"> // 本地文档 -> SYSTEM \n```\n\n元素定义\n```\n<!ELEMENT shelf(book+)>\t\t// （ ）里为元素内容\n<!ELEMENT price(#PCDATA)>\t// （ ）里为元素类型，EMPTY，ANY\n\n<!ELEMENT book(name,price)>\t//\tname 和 price 必须依次出现\n<!ELEMENT book(name|price)>\t//\tname 和 price 任选其一\n\n<!ELEMENT shelf(book+)>\t\t// 一次或多次\n<!ELEMENT shelf(book？)>\t\t// 零次或一次\n<!ELEMENT shelf(book*)>\t\t// 零次或多次\n```\n\n属性定义\n```\n<!ATTLIST 元素名/标签名\n\t属性名1 属性值类型 设置说明\n\t属性名2 属性值类型 设置说明\n>\n\n<!ATTLIST product\n\tname CDATA #REQUIRED\t// 必选\n\tcolor CDATA #IMPLIRED\t// 可选\n>\n```\n-  CDATA\n-  ENUMERATED\n-  ID\n-  ENTITY：为一段内容创建一个别名，用于引用\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE contacts[\n\t<!ELEMENT contacts ANY>\n\t<!ELEMENT contact(name, email)>\n\t<!ELEMENT name(#PCDATA)>\n\t<!ELEMENT email(#PCDATA)>\n\n\t<!ATTLIST contact serial_number ID #REQUIRED>\n]>\n\n<contacts>\n\t<contact serial_number=\"a1\">\t// ID 不能数字开头\n\t\t<name>ryan</name>\n\t\t<email>ryan@mail.com</email>\n\t</contact>\n\t<contact serial_number=\"a2\">\n\t\t<name>tim</name>\n\t\t<email>tim@mail.com</email>\n\t</contact>\n</contacts>\n```\n\n实体定义\n- 引用实体\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE book[\n\t<!ENTITY bookname \"Java Web Development\"\n\n\t<!ELEMENT book(name)>\n\t<!ELEMENT name(#PCDATA)>\n]>\n\n<book>\n\t<name>&bookname</name>\n</book>\n```\n- 参数实体: 代码重用 \n```\n<?xml version=\"1.0\" encod ing=\"UTF-8\" ?>\n<!DOCTYPE contact[\n\t<!ENTITY % tag \"name,email,address\"\n\n\t<!ELEMENT contact(%tag)>\n]>\n```\n\n### XML Schema\n\n## XML 编程（CRUD）\n\n解析方式：\n- dom: doc obj model\n- sax: simple Api for xml\n- 解析开发包：Jaxp, Jdom, dom4j\n\n### dom\n- xml文档解析成 element，attribute 和 text 节点(Node)对象。\n- 方便 crud\n- 占用内存大\n\n### sax\n- 读一行，处理一行\n- 只适合读取，不适合cud\n\n### 调整jvm内存\n```\n// jvm 默认占用 xxM\nbyte b[] = new byte[1024*1024*1024]\t// 占用1G\n```\n设定jvm占用100m内存： \n`Arguments - VM argument: -Xmx100m`\n\n### Jaxp对xml解析\n```\n// 1 创建factory\nDocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n\n// 2 得到 dom builder\nDocumentBuilder builder = factory.newDocumentInstance();\n\n// 3 解析xml文档，得到代表文档的document\nDocument doc = builder.parse(\"src/book.xml\");\n\n```\n\n### dom 读\nXML文档例子：\n```\n<shelf>\n\t<book name=\"xxx\">\n\t\t<price>???</price>\n\t</book>\n</shelf>\n```\n使用dom对xml文档r\n```\n// 读取一个\nNodeList nodeList = doc.getElementsByTagName(\"price\");\nNode node = nodeList.item(0);\nString content = node.getContent();\n\n// 遍历，递归，得到所有标签\nNode root = doc.getElementsByTagName(\"shelf\").item(0);\nprintAll(root);\n\npublic void printAll(Node node){\n\tif(node instanceof Element){\n\t\tSystem.out.println(node.getNodeName());\n\t}\n\tNodeList nodeList = node.getChildNodes();\n\tfor(Node tmpNode:nodeList){\n\t\tprintAll(tmpNode);\n\t}\t\n}\n\n// 得到xml文档中标签属性的值\nNode bookName = doc.getElementsByTagName(\"book\").item(0);\n// 强转\nElement bookName = doc.getElementsByTagName(\"book\").item(0);\nbookName.getAttribute(\"name\")\n```\n\n### dom 增\n```\n// 添加： <price>$$$</price>\n\n// 创建节点\nElement price = doc.createElement(\"price\")\nprice.setTextContent(\"$$$\");\n\n// 把节点挂到book下面\nElement book = (Element) doc.getElementsByTagName(\"book\").item(0);\nbook.appendChild(price);\n\n// 更新好内存中的 doc，需要再写回到文档中\nTransformerFactory tfFactory = TransformerFactory.newInstance();\nTransformer tf = tfFoctory.newTransformer();\ntf.transfrom(new DOMSource(doc), new StreamResult(new FileOutputStream(\"src/book.xml\")));\n\n// 加属性 <book name=\"xxx\" color=\"blue\">\nElement book = doc.getElementsByTagName(\"book\").item(0);\nbook.setAttribute(\"color\",\"blue\");\n```\n\n### dom 删\n```\n// 得到要删除的节点\nElement price = doc.getElementsByTagName(\"price\").item(1);\n\n// 得到要删除节点的上级节点\nprice.getParentNode().removeChild(price);\n```\n\n### dom 改\n```\n// 得到要更改的节点\nElement price = doc.getElementsByTagName(\"price\").item(1);\n\n// 更改\nprice.setTextContent(\"100\");\n```\n\n### XML 编程实例：考生成绩管理系统\n\n- 添加用户\n- 删除用户\n- 查询成绩\n\n```\n<student id=\"xxx\">\n\t<name>xxx</name>\n\t<location>xxx</location>\n\t<score>xxx</score>  \n</student>\n```\n\n模块设计：\n- Main.java (A,B,C) - io.demo.ui\n- StudentController.java (A,B,C) - io.demo.controller\n- StudentDao.java (A,B,C)  - io.demo.dao \n- 传输的数据都封装在student对象里 - io.demo.bean\n- XmlUtils (getDoc, writeToDoc) - io.demo.util\n- exam-system.xml (数据库）\n\n代码 --> [xml-exam-system](https://github.com/Ryanluoxu/heima-java-web-course/tree/master/xml-exam-system)","source":"_posts/黑马教程-Java-Web-Basic.md","raw":"---\ntitle: 黑马教程-Java Web Basic\ndate: 2018-07-07 21:17:58\ncategories: JavaWeb\ntags: [java, web, heima, basic, tutorial]\n---\n\n这篇博客是黑马JavaWeb教程的学习笔记。\n\n<!--more-->\n\n# Java 基础\n## Eclipse 的使用和断点调试\n### JRE & Compiler\nJRE version >= Java Compiler \n否则抛出`Bad version`异常\n\n### Debug 断点调试\n- 设置断点\n- F5: step into\n- F6: step over\n- F7: step return\n- drop to frame: 跳到当前方法第一行\n- F8: 跳到下一个断点。\n- 观察变量: 点击变量 - watch\n- Breakpoints：全部断点视图。调试之后清除。\n\n### Eclipse 快捷键\n- 内容提示： alt+/\n- 快速修复： ctrl+1\n- 导包：\tctrl+shift+o\n- 格式化代码块： ctrl+shift+f\n- 向前向后： alt+方向键\n- 查看方法说明： f2\n- 重置透视图： Windows - Reset Perspective\n- 更改大写： ctrl+shift+x\n- 更改小写： ctrl+shift+y\n- 复制一行： ctrl+alt+上下键\n- 移动一行： alt+上下键\n- 查看继承关系： ctrl+t\n- 查看源码： ctrl+shift+t\n- 查看快捷键： ctrl+shift+L\n\n## JUnit 测试\n1. 创建Person类\n2. 创建测试类-TestPerson\n3. 在 TestPerson 里，创建测试方法-testRun()\n4. 加注释-@Test\n5. 选择 testRun() - run as JUnit Test\n6. 选择测试类，测试所有测试方法\n\n### Before 和 After\n```\n@Before\npublic void before(){\n\t//初始化资源\n\t//所有测试方法前运行\n}\n\n@After\npublic void before(){\n\t//销毁资源\n\t//所有测试方法后运行\n}\n\n@BeforeClass\npublic static void beforeClass(){\n\t//每一个测试方法之前都运行\n}\n\n@AfterClass\npublic static void beforeClass(){\n\t//每一个测试方法之后都运行\n}\n```\n### Assert 断言\n```\npublic void testRun(){\n\t//通过：p.run() == \"2\"\n\tAssert.assertEquals(\"2\",p.run());\n\n\t//不通过返回信息\n}\n```\n\n## Java 部分特性\n### 静态导入（不常用）\n```\nimport static java.lang.System.out;\nout.print(\"\")\n```\n\n### 自动装箱、拆箱 \n```\n//装箱，自动将1变成一个object。\nInteger i = 1;  //Interger i = new Integer(\"1\")\n\n//拆箱，自动将i对象拆成数字1.\nint j = i; \n```\n\n### 增强 for\n只用于array，或者实现 Iterable 借口的集合上。\n\n读取Map的两种方式：\n1. 设置 keyset，通过iterator得到key，然后map.get(key)得到对应的值\n\t```\n\t// 传统方法\n\tSet set = map.keySet();\n\tIterator it = set.iterator();\n\twhile(it.hasNext()){\n\t\tString key = it.next();\n\t\tSystem.out.println(key + \"->\" +map.get(key));\n\t}\n\t\n\t// for each\n\tfor(Object key : map.keySet()){\n\t\tSystem.out.println(key + \"->\" +map.get(key));\n\t}\n\t```\n2. map的每一组key和value是一个entry。用entrySet()得到set。然后用iterator得到每一对entry。\n\t```\n\t// 传统方法\n\tSet set = map.entrySet();\n\tIterator it = set.iterator();\n\twhile(it.hasNext()){\n\t\tMap.Entry entry = it.next();\n\t\tSystem.out.println(entry.getKey() + \"->\" +entry.getValue());\n\t}\n\n\t// for each\n\tfor(Object entry : map.entrySet()){\n\t\tSystem.out.println(entry.getKey() + \"->\" +entry.getValue());\n\t}\n\t```\n\nHashMap 没有顺序，需要顺序用 LinkedHashMap();\n\nFor Each 需要注意的问题：\n1. 只是取数据，不用于赋值。需要修改数据，用传统for方式\n\n### 可变参数\n可变参数视为数组。\n\n```\npublic int sum(int ...nums){\n\tint sum = 0;\n\tfor(int i:nums){\n\t\tsum+=i;\t\n\t}\n}\n\npublic void testSum(){\n\tsum(1,2,3,4,5,6); // sum(array);\n}\n\nint nums[] = {1,2,3,4}  // nums 只是一个对象\nInteger nums[] = {1,2,3,4}  // 这时是多个对象\n\n// 在可变参数里，比如 “T...a”，要求参数为多个对象。\n```\n\n### 枚举类\n限定了方法的使用对象。\n```\n// 定义枚举的构造函数（私有），方法和字段。来封装信息。\nenum Grade(){\t// class\n\tA(\"90-100\"),B(\"80-89\"),C(\"70-79\");\t\t// Object\n\n\tprivate String value;  // 封装每个对象对应的分数\n\tprivate Grade(String value){\n\t\tthis.value = value;\t\n\t}\n\tpublic String getValue(){\n\t\treturn this.value;\n\t}\n}\n\npublic void print(Grade g){\n\t// 使用自己定义的枚举类\n\tSystem.out.println(g.getValue());\n}\n\n@Test\npublic void testPrint(){\n\tprint(Grade.B);\n}\n\n```\n\n带抽象方法的枚举\n\n```\n// 要求调用枚举对象时，需要定义优良中。\nenum Grade(){\n\tA(\"90-100\"){\n\t\tpublic String rank(){\n\t\t\treturn \"优\";\t\n\t\t}\n\t};\n\tB(\"80-89\"){\n\t\tpublic String rank(){\n\t\t\treturn \"良\";\t\n\t\t}\n\t};\n\tC(\"70-79\"){\n\t\tpublic String rank(){\n\t\t\treturn \"中\";\t\n\t\t}\n\t};\t\n\n\t// 抽象方法\n\tpublic abstract String rank();\n\n\t// 封装数值\n\tprivate String value;\n\tprivate Grade(String value){\n\t\tthis.value = value;\t\n\t}\n\tpublic String getValue(){\n\t\treturn this.value;\n\t}\n}\n\npublic void print(Grade g){\n\t// 使用自己定义的枚举类\n\tSystem.out.println(g.getValue());\n\tSystem.out.println(g.rank());\n}\n\n@Test\npublic void testPrint(){\n\tprint(Grade.B);\n}\n\n@Test\npublic void testEnum(){\n\tGrade.C.name();\t //得到C\n\tGrade.C.ordinal();  //得到位置3\n\t\n\tGrade.valueOf(“B”);\t// 返回一个枚举对象。可以用于检测得到的值是否是有效值。\n\t\n\tGrade.values();  // 返回枚举的所有值\n}\n```\n\n枚举只有一个枚举值时，可以当作单态设计模式。\n```\n// 用单态设计模式定义一个类\nenum Person{\n\tA;\n}\n```\n\n## 反射\n1. 加载类\n\t1. Class 代表某个类的字节码， Class.forName(String className)\n2. 解剖出类的各个部分\n3. 用得到的各个部门执行相应的任务\n\n```\n// 加载所需类的字节码到内存\nClass classt = Class.forName(\"io.ryan.demo.Person\");\n\n// 加载的另外两个方法\nClass classt = new Person().getClass();\nClass classt = Person.class;\n\n// 解剖每个部分\nclass.getConstructor\t// 用于创建对象\nclass.getMethod\t\t\t// 用于执行方法\nclass.getField\t\t\t// 用于封装数据\n\nclass.getDeclaredConstructor\nclass.getDeclaredMethod\nclass.getDeclaredField\n\n```\n### 反射类的构造函数\n例子1，无参构造\n```\nClass classt = Class.forName(\"io.ryan.demo.Person\");\nConstructor c = class.getConstructor();\t\t// 选择某个构造函数\nPerson p = c.newInstance(); \t// 利用反射得到对象\n```\n\n例子2，有参构造\n```\nClass classt = Class.forName(\"io.ryan.demo.Person\");\nConstructor c = class.getConstructor(String.class);\t\t// 接收 Class 类\nPerson p = c.newInstance(“A String”);\n```\n\n例子3，私有构造\n```\nClass classt = Class.forName(\"io.ryan.demo.Person\");\nConstructor c = class.getDeclaredConstructor(List.class);\t// private\nc.setAccessible(true); \t// 暴力反射，破解私有\nPerson p = c.newInstance(new ArrayList());\n```\n\n例子4，创建对象的另一个途径\n```\nClass classt = Class.forName(\"io.ryan.demo.Person\");\nPerson p = class.newInstance();  // 只限有无参的构造函数\n```\n\n### 反射类的方法\n\n- public\n- static: 无需传入对象，null\n- private： 需要暴力破解\n\n```\nClass classt = Class.forName(\"io.ryan.demo.Person\");\nMethod method = classt.getMethod(methodName, 参数.class);\t// 得到方法\nmethod.invoke(ojb,args)\t\t// 指定对象来执行这个方法\n\n```\n\n- main\n```\nClass classt = Class.forName(\"io.ryan.demo.Person\");\nMethod method = classt.getMethod(“main”, String[].class);\n// 看到数组，就要拆。\nmethod.invoke(null, (Object)new String[]{\"aa\",\"dd\"});\n\n```\n\n### 反射类的字段（属性）\n- public\n- private\n- static\n\n```\nClass classt = Class.forName(\"io.ryan.demo.Person\");\nField f = classt.getField(\"name\");\nf.getType(); \t// 得到该字段的类型\nf.get(p1);\t\t// 得到 p1 的名字。\n\nf.set(p1,\"xxx\")\t// 赋值\n```\n\n## 内省 introspector\n\n用于获取或设置JavaBean的属性。\n- Bean的属性由get/set方法决定。\n- getBeanInfo()，将bean的属性都省到BeanInfo里。\n- getPropertiesDescriptor()\n\n```\n// 得到bean的所有属性\nBeanInfo info = Introspector.getBeanInfo(Person.class, Object.class); // 不要Object属性\nPropertyDescriptor[] pds = info.getPropertyDescriptors()\nfor (PropertyDescriptor pd:pds){\n\tSystem.out.println(pd.getName());\n}\n\n// 操纵bean的指定属性\nPropertyDescriptor pd = new PropertyDescriptor(\"age\", Person.class);\nMethod method = pd.getWriteMethod();\t// 相当 setAge()\nmethod.invoke(p1, 30);\n\nMethod method2 = pd.getReadMethod();\nmethod2.invoke(p1, null);\t// 相当 getAge()\n\n// 获取当前操作的属性的类型\nPropertyDescriptor pd = new PropertyDescriptor(\"age\", Person.class);\npd.getPropertyType();\n\n```\n\n## beanUtils操纵bean属性\n- 导入beanUtils包.\n- 导入logging包.\n\n\n```\nPerson p1 = new Person();\nBeanUtils.setProperty(p1, \"name\", \"ryan\");\n\n// 数据(String)来了，放到对象里去。包括自动转：8种基本类型。\nString name = \"ryan\"\nBeanUtils.setProperty(p1, \"name\", name);\n\n// 以外的数据类型，会抛出异常\nString birthday = \"1988-09-09\";\nBeanUtils.setProperty(p1, \"birthday\", birthday);\t//Date类型，所以报错\n\n//需要注册Date转换器\nConverter converter = new Converter(){\n\tpublic Object convert(Class type, Object value){\n\t\tif(value==null){\n\t\t\treturn null;\n\t\t}\n\t\tif(!value instanceof String){\n\t\t\tthrow new ConversionException(\"参数不是String.\");\n\t\t}\n\t\tString str = (String) value;\n\t\tif(str.trim().equal(\"\")){\n\t\t\treturn null;\n\t\t}\n\t\tSimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd\");\n\t\ttry{\n\t\t\treturn df.parss(str);\t\n\t\t} catch(ParseException e){\n\t\t\tthrow new RuntimeException(e);\t//异常链不能掉\n\t\t}\n\t}\n}\nConvertUtils.register(converter, Date.class);\nBeanUtils.setProperty(p1, \"birthday\", birthday);\t//就不会有异常\n\n// 查看文档会发现，Converter已经有很多现成的实现类。\nConvertUtils.register(new DateLocaleConverter(), Date.class);\nBeanUtils.setProperty(p1, \"birthday\", birthday);\t//有bug\n\n// 用map的值填充bean属性\nMap map = new HashMap():\nmap.put(\"name\",\"ryan\");\n\nConvertUtils.register(new DateLocaleConverter(), Date.class);\nBeanUtils.populate(bean, map); \t//填充\n```\n\n## 泛型 Generic\n\n相当一个类型的变量。\n在编写集合时，限制了集合的处理类型，从而把运行问题，转为编译问题。\n```\n// 声明的变量是String的集合。\nList<String> list = new ArrayList<String>();\n```\n\n泛型的使用：\n- List<E> 泛型类，List<String>参数化的类\n- Iterator<E>\n- Map<K,V>\n```\nList<String> list = new ArrayList<String>();\n//...\n\nIterator<String> it = list.iterator();\nString value = it.next(); // 默认就是String，不需要强转。 \n\n// for each\nfor( String s : list){...}\n```\n\nMap\n```\nMap<int, String> map = new HashMap<int, Stirng>();\n//...\n\nSet<Map.Entry<Integer,String>> set = map.entrySet();\n\nfor(Entry<Integer,String> entry : set) {\n\tentry.getKey();\n\tentry.getValue();\n}\n```\n\n### 注意的问题：\n- 泛型的对象不能是基本类型。\n- new时，前后泛型要一致。\n- 泛型是给java编译器用的，编译后的binary不带泛型信息。\n\n\n### 自定义泛型方法：\n```\n// 调用之前先声明\npublic <T> void gMethod(T t){..}\npublic <T,K> void gMethod(T t, K k){..}\n\n// 类上声明泛型\npublic class gClass<T,K>{\n\tpublic void gMethod(T t, K k){...}\n\n\t// 静态是无效的\n\tpublic static void gMethod(T t, K k){...} \t// 错误\n\tpublic static <T,K> void gMethod(T t, K k){...}\n}\n```\n\n例子：泛型方法-实现指定位置上的数组元素的交换\n```\npublic <T> void swap(T arr[], int pos1, int pos2){\n\tT tmp = arr[pos1];\n\tarr[pos1] = arr[pos2]\n\tarr[pos2] = tmp;\n}\n```\n\n例子：泛型方法-接收任意数组，颠倒所有元素\n```\npublic <T> void reverse(T arr[]){\n\tint start = 0;\n\tint end = arr,length-1;\n\t\n\twhile(true){\n\t\tif(start>=end){ break; }\n\t\n\t\tT tmp = arr[start];\n\t\tarr[start] = arr[end]\n\t\tarr[end] = tmp;\n\t\t\n\t\tstart++;\n\t\tend--;\n\t}\t\n}\n```\n\n例子：泛型类\n```\npublic class gClass<T>{\n\tprivate T t;\n\tpublic void setT(T t){...}\n\tpublic T getT(){...}\n}\n```\n\n# XML 运用\n\n- 描述数据\n- 程序的配置文件\n\n## XML 语法\n\n### 文档声明\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n```\n\n### 元素：标签\n- 包含标签体：<a>hello</a>\n- 不包含标签体：<a></a> 或者 <a/>\n- 文档有且仅有一个根标签，其他都是子标签。\n- 标签体中的空格和换行都是有内容的。所以排版有时会影响到文档。\n```\n<a>hello</a>\n<a>\n\thello\n</a>\n```\n\n### 属性\n一个标签可以有多个属性，每个属性都有自己的名称和取值。\n```\n<input name=\"text\">\n```\n相当于\n```\n<input>\n\t<name>text</name>\n</input>\n```\n\n### 注释\n\n`<!-- 注释 -->`\n\n### 转义字符\n- <\t:\t&lt;\n- >\t:\t&gt;\n- &\t:\t&amp;\n- \"\t:\t&quot;\n- '\t:\t&apos;\n\n### 处理指令-PI\n指明该文档用哪个css来执行。\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<?xml-stylesheet type=\"text/css\" href=\"xxx.css\"?>\n```\n\n## XML 约束\n\n编写一个文档来约束另一个文档。用于框架的编写。\n\n### XML DTD （Doc Type Definition)\nbook.xml\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE shelf SYSTEM \"book.dtd\">\t// 指明被谁约束，声明所有shelf内标签都要遵循dtd文档\n<shelf>\n\t<book>\n\t\t<name>Java..</name>\n\t\t<price>100.00</price>\n\t</book>\n</shelf>\n```\nbook.dtd\n```\n<!ELEMENT shelf(book+)>\t\t// shelf 只可以有 book 标签\n\t<!ELEMENT book(name,price)>\t\t// book 里包含 name 和 price 标签\n\t<!ELEMENT name(#PCDATA)>\t// \tname 标签里包含字符串\n\t<!ELEMENT price(#PCDATA)>\n```\n\n引用公共文档\n```\n<!DOCTYPE web-app PUBLIC \"<URL>\"> // 本地文档 -> SYSTEM \n```\n\n元素定义\n```\n<!ELEMENT shelf(book+)>\t\t// （ ）里为元素内容\n<!ELEMENT price(#PCDATA)>\t// （ ）里为元素类型，EMPTY，ANY\n\n<!ELEMENT book(name,price)>\t//\tname 和 price 必须依次出现\n<!ELEMENT book(name|price)>\t//\tname 和 price 任选其一\n\n<!ELEMENT shelf(book+)>\t\t// 一次或多次\n<!ELEMENT shelf(book？)>\t\t// 零次或一次\n<!ELEMENT shelf(book*)>\t\t// 零次或多次\n```\n\n属性定义\n```\n<!ATTLIST 元素名/标签名\n\t属性名1 属性值类型 设置说明\n\t属性名2 属性值类型 设置说明\n>\n\n<!ATTLIST product\n\tname CDATA #REQUIRED\t// 必选\n\tcolor CDATA #IMPLIRED\t// 可选\n>\n```\n-  CDATA\n-  ENUMERATED\n-  ID\n-  ENTITY：为一段内容创建一个别名，用于引用\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE contacts[\n\t<!ELEMENT contacts ANY>\n\t<!ELEMENT contact(name, email)>\n\t<!ELEMENT name(#PCDATA)>\n\t<!ELEMENT email(#PCDATA)>\n\n\t<!ATTLIST contact serial_number ID #REQUIRED>\n]>\n\n<contacts>\n\t<contact serial_number=\"a1\">\t// ID 不能数字开头\n\t\t<name>ryan</name>\n\t\t<email>ryan@mail.com</email>\n\t</contact>\n\t<contact serial_number=\"a2\">\n\t\t<name>tim</name>\n\t\t<email>tim@mail.com</email>\n\t</contact>\n</contacts>\n```\n\n实体定义\n- 引用实体\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE book[\n\t<!ENTITY bookname \"Java Web Development\"\n\n\t<!ELEMENT book(name)>\n\t<!ELEMENT name(#PCDATA)>\n]>\n\n<book>\n\t<name>&bookname</name>\n</book>\n```\n- 参数实体: 代码重用 \n```\n<?xml version=\"1.0\" encod ing=\"UTF-8\" ?>\n<!DOCTYPE contact[\n\t<!ENTITY % tag \"name,email,address\"\n\n\t<!ELEMENT contact(%tag)>\n]>\n```\n\n### XML Schema\n\n## XML 编程（CRUD）\n\n解析方式：\n- dom: doc obj model\n- sax: simple Api for xml\n- 解析开发包：Jaxp, Jdom, dom4j\n\n### dom\n- xml文档解析成 element，attribute 和 text 节点(Node)对象。\n- 方便 crud\n- 占用内存大\n\n### sax\n- 读一行，处理一行\n- 只适合读取，不适合cud\n\n### 调整jvm内存\n```\n// jvm 默认占用 xxM\nbyte b[] = new byte[1024*1024*1024]\t// 占用1G\n```\n设定jvm占用100m内存： \n`Arguments - VM argument: -Xmx100m`\n\n### Jaxp对xml解析\n```\n// 1 创建factory\nDocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n\n// 2 得到 dom builder\nDocumentBuilder builder = factory.newDocumentInstance();\n\n// 3 解析xml文档，得到代表文档的document\nDocument doc = builder.parse(\"src/book.xml\");\n\n```\n\n### dom 读\nXML文档例子：\n```\n<shelf>\n\t<book name=\"xxx\">\n\t\t<price>???</price>\n\t</book>\n</shelf>\n```\n使用dom对xml文档r\n```\n// 读取一个\nNodeList nodeList = doc.getElementsByTagName(\"price\");\nNode node = nodeList.item(0);\nString content = node.getContent();\n\n// 遍历，递归，得到所有标签\nNode root = doc.getElementsByTagName(\"shelf\").item(0);\nprintAll(root);\n\npublic void printAll(Node node){\n\tif(node instanceof Element){\n\t\tSystem.out.println(node.getNodeName());\n\t}\n\tNodeList nodeList = node.getChildNodes();\n\tfor(Node tmpNode:nodeList){\n\t\tprintAll(tmpNode);\n\t}\t\n}\n\n// 得到xml文档中标签属性的值\nNode bookName = doc.getElementsByTagName(\"book\").item(0);\n// 强转\nElement bookName = doc.getElementsByTagName(\"book\").item(0);\nbookName.getAttribute(\"name\")\n```\n\n### dom 增\n```\n// 添加： <price>$$$</price>\n\n// 创建节点\nElement price = doc.createElement(\"price\")\nprice.setTextContent(\"$$$\");\n\n// 把节点挂到book下面\nElement book = (Element) doc.getElementsByTagName(\"book\").item(0);\nbook.appendChild(price);\n\n// 更新好内存中的 doc，需要再写回到文档中\nTransformerFactory tfFactory = TransformerFactory.newInstance();\nTransformer tf = tfFoctory.newTransformer();\ntf.transfrom(new DOMSource(doc), new StreamResult(new FileOutputStream(\"src/book.xml\")));\n\n// 加属性 <book name=\"xxx\" color=\"blue\">\nElement book = doc.getElementsByTagName(\"book\").item(0);\nbook.setAttribute(\"color\",\"blue\");\n```\n\n### dom 删\n```\n// 得到要删除的节点\nElement price = doc.getElementsByTagName(\"price\").item(1);\n\n// 得到要删除节点的上级节点\nprice.getParentNode().removeChild(price);\n```\n\n### dom 改\n```\n// 得到要更改的节点\nElement price = doc.getElementsByTagName(\"price\").item(1);\n\n// 更改\nprice.setTextContent(\"100\");\n```\n\n### XML 编程实例：考生成绩管理系统\n\n- 添加用户\n- 删除用户\n- 查询成绩\n\n```\n<student id=\"xxx\">\n\t<name>xxx</name>\n\t<location>xxx</location>\n\t<score>xxx</score>  \n</student>\n```\n\n模块设计：\n- Main.java (A,B,C) - io.demo.ui\n- StudentController.java (A,B,C) - io.demo.controller\n- StudentDao.java (A,B,C)  - io.demo.dao \n- 传输的数据都封装在student对象里 - io.demo.bean\n- XmlUtils (getDoc, writeToDoc) - io.demo.util\n- exam-system.xml (数据库）\n\n代码 --> [xml-exam-system](https://github.com/Ryanluoxu/heima-java-web-course/tree/master/xml-exam-system)","slug":"黑马教程-Java-Web-Basic","published":1,"updated":"2020-04-30T09:23:19.533Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb3dedij0018sd5tt6v7atno","content":"<p>这篇博客是黑马JavaWeb教程的学习笔记。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"Java-基础\"><a href=\"#Java-基础\" class=\"headerlink\" title=\"Java 基础\"></a>Java 基础</h1><h2 id=\"Eclipse-的使用和断点调试\"><a href=\"#Eclipse-的使用和断点调试\" class=\"headerlink\" title=\"Eclipse 的使用和断点调试\"></a>Eclipse 的使用和断点调试</h2><h3 id=\"JRE-amp-Compiler\"><a href=\"#JRE-amp-Compiler\" class=\"headerlink\" title=\"JRE &amp; Compiler\"></a>JRE &amp; Compiler</h3><p>JRE version &gt;= Java Compiler<br>否则抛出<code>Bad version</code>异常</p>\n<h3 id=\"Debug-断点调试\"><a href=\"#Debug-断点调试\" class=\"headerlink\" title=\"Debug 断点调试\"></a>Debug 断点调试</h3><ul>\n<li>设置断点</li>\n<li>F5: step into</li>\n<li>F6: step over</li>\n<li>F7: step return</li>\n<li>drop to frame: 跳到当前方法第一行</li>\n<li>F8: 跳到下一个断点。</li>\n<li>观察变量: 点击变量 - watch</li>\n<li>Breakpoints：全部断点视图。调试之后清除。</li>\n</ul>\n<h3 id=\"Eclipse-快捷键\"><a href=\"#Eclipse-快捷键\" class=\"headerlink\" title=\"Eclipse 快捷键\"></a>Eclipse 快捷键</h3><ul>\n<li>内容提示： alt+/</li>\n<li>快速修复： ctrl+1</li>\n<li>导包：    ctrl+shift+o</li>\n<li>格式化代码块： ctrl+shift+f</li>\n<li>向前向后： alt+方向键</li>\n<li>查看方法说明： f2</li>\n<li>重置透视图： Windows - Reset Perspective</li>\n<li>更改大写： ctrl+shift+x</li>\n<li>更改小写： ctrl+shift+y</li>\n<li>复制一行： ctrl+alt+上下键</li>\n<li>移动一行： alt+上下键</li>\n<li>查看继承关系： ctrl+t</li>\n<li>查看源码： ctrl+shift+t</li>\n<li>查看快捷键： ctrl+shift+L</li>\n</ul>\n<h2 id=\"JUnit-测试\"><a href=\"#JUnit-测试\" class=\"headerlink\" title=\"JUnit 测试\"></a>JUnit 测试</h2><ol>\n<li>创建Person类</li>\n<li>创建测试类-TestPerson</li>\n<li>在 TestPerson 里，创建测试方法-testRun()</li>\n<li>加注释-@Test</li>\n<li>选择 testRun() - run as JUnit Test</li>\n<li>选择测试类，测试所有测试方法</li>\n</ol>\n<h3 id=\"Before-和-After\"><a href=\"#Before-和-After\" class=\"headerlink\" title=\"Before 和 After\"></a>Before 和 After</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Before</span><br><span class=\"line\">public void before()&#123;</span><br><span class=\"line\">\t//初始化资源</span><br><span class=\"line\">\t//所有测试方法前运行</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@After</span><br><span class=\"line\">public void before()&#123;</span><br><span class=\"line\">\t//销毁资源</span><br><span class=\"line\">\t//所有测试方法后运行</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@BeforeClass</span><br><span class=\"line\">public static void beforeClass()&#123;</span><br><span class=\"line\">\t//每一个测试方法之前都运行</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@AfterClass</span><br><span class=\"line\">public static void beforeClass()&#123;</span><br><span class=\"line\">\t//每一个测试方法之后都运行</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Assert-断言\"><a href=\"#Assert-断言\" class=\"headerlink\" title=\"Assert 断言\"></a>Assert 断言</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void testRun()&#123;</span><br><span class=\"line\">\t//通过：p.run() == &quot;2&quot;</span><br><span class=\"line\">\tAssert.assertEquals(&quot;2&quot;,p.run());</span><br><span class=\"line\"></span><br><span class=\"line\">\t//不通过返回信息</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Java-部分特性\"><a href=\"#Java-部分特性\" class=\"headerlink\" title=\"Java 部分特性\"></a>Java 部分特性</h2><h3 id=\"静态导入（不常用）\"><a href=\"#静态导入（不常用）\" class=\"headerlink\" title=\"静态导入（不常用）\"></a>静态导入（不常用）</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import static java.lang.System.out;</span><br><span class=\"line\">out.print(&quot;&quot;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自动装箱、拆箱\"><a href=\"#自动装箱、拆箱\" class=\"headerlink\" title=\"自动装箱、拆箱\"></a>自动装箱、拆箱</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//装箱，自动将1变成一个object。</span><br><span class=\"line\">Integer i = 1;  //Interger i = new Integer(&quot;1&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">//拆箱，自动将i对象拆成数字1.</span><br><span class=\"line\">int j = i;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"增强-for\"><a href=\"#增强-for\" class=\"headerlink\" title=\"增强 for\"></a>增强 for</h3><p>只用于array，或者实现 Iterable 借口的集合上。</p>\n<p>读取Map的两种方式：</p>\n<ol>\n<li><p>设置 keyset，通过iterator得到key，然后map.get(key)得到对应的值</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 传统方法</span><br><span class=\"line\">Set set = map.keySet();</span><br><span class=\"line\">Iterator it = set.iterator();</span><br><span class=\"line\">while(it.hasNext())&#123;</span><br><span class=\"line\">\tString key = it.next();</span><br><span class=\"line\">\tSystem.out.println(key + &quot;-&gt;&quot; +map.get(key));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// for each</span><br><span class=\"line\">for(Object key : map.keySet())&#123;</span><br><span class=\"line\">\tSystem.out.println(key + &quot;-&gt;&quot; +map.get(key));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>map的每一组key和value是一个entry。用entrySet()得到set。然后用iterator得到每一对entry。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 传统方法</span><br><span class=\"line\">Set set = map.entrySet();</span><br><span class=\"line\">Iterator it = set.iterator();</span><br><span class=\"line\">while(it.hasNext())&#123;</span><br><span class=\"line\">\tMap.Entry entry = it.next();</span><br><span class=\"line\">\tSystem.out.println(entry.getKey() + &quot;-&gt;&quot; +entry.getValue());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// for each</span><br><span class=\"line\">for(Object entry : map.entrySet())&#123;</span><br><span class=\"line\">\tSystem.out.println(entry.getKey() + &quot;-&gt;&quot; +entry.getValue());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>HashMap 没有顺序，需要顺序用 LinkedHashMap();</p>\n<p>For Each 需要注意的问题：</p>\n<ol>\n<li>只是取数据，不用于赋值。需要修改数据，用传统for方式</li>\n</ol>\n<h3 id=\"可变参数\"><a href=\"#可变参数\" class=\"headerlink\" title=\"可变参数\"></a>可变参数</h3><p>可变参数视为数组。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int sum(int ...nums)&#123;</span><br><span class=\"line\">\tint sum = 0;</span><br><span class=\"line\">\tfor(int i:nums)&#123;</span><br><span class=\"line\">\t\tsum+=i;\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public void testSum()&#123;</span><br><span class=\"line\">\tsum(1,2,3,4,5,6); // sum(array);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int nums[] = &#123;1,2,3,4&#125;  // nums 只是一个对象</span><br><span class=\"line\">Integer nums[] = &#123;1,2,3,4&#125;  // 这时是多个对象</span><br><span class=\"line\"></span><br><span class=\"line\">// 在可变参数里，比如 “T...a”，要求参数为多个对象。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"枚举类\"><a href=\"#枚举类\" class=\"headerlink\" title=\"枚举类\"></a>枚举类</h3><p>限定了方法的使用对象。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 定义枚举的构造函数（私有），方法和字段。来封装信息。</span><br><span class=\"line\">enum Grade()&#123;\t// class</span><br><span class=\"line\">\tA(&quot;90-100&quot;),B(&quot;80-89&quot;),C(&quot;70-79&quot;);\t\t// Object</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String value;  // 封装每个对象对应的分数</span><br><span class=\"line\">\tprivate Grade(String value)&#123;</span><br><span class=\"line\">\t\tthis.value = value;\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic String getValue()&#123;</span><br><span class=\"line\">\t\treturn this.value;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public void print(Grade g)&#123;</span><br><span class=\"line\">\t// 使用自己定义的枚举类</span><br><span class=\"line\">\tSystem.out.println(g.getValue());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@Test</span><br><span class=\"line\">public void testPrint()&#123;</span><br><span class=\"line\">\tprint(Grade.B);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>带抽象方法的枚举</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 要求调用枚举对象时，需要定义优良中。</span><br><span class=\"line\">enum Grade()&#123;</span><br><span class=\"line\">\tA(&quot;90-100&quot;)&#123;</span><br><span class=\"line\">\t\tpublic String rank()&#123;</span><br><span class=\"line\">\t\t\treturn &quot;优&quot;;\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\tB(&quot;80-89&quot;)&#123;</span><br><span class=\"line\">\t\tpublic String rank()&#123;</span><br><span class=\"line\">\t\t\treturn &quot;良&quot;;\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\tC(&quot;70-79&quot;)&#123;</span><br><span class=\"line\">\t\tpublic String rank()&#123;</span><br><span class=\"line\">\t\t\treturn &quot;中&quot;;\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;;\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t// 抽象方法</span><br><span class=\"line\">\tpublic abstract String rank();</span><br><span class=\"line\"></span><br><span class=\"line\">\t// 封装数值</span><br><span class=\"line\">\tprivate String value;</span><br><span class=\"line\">\tprivate Grade(String value)&#123;</span><br><span class=\"line\">\t\tthis.value = value;\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic String getValue()&#123;</span><br><span class=\"line\">\t\treturn this.value;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public void print(Grade g)&#123;</span><br><span class=\"line\">\t// 使用自己定义的枚举类</span><br><span class=\"line\">\tSystem.out.println(g.getValue());</span><br><span class=\"line\">\tSystem.out.println(g.rank());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@Test</span><br><span class=\"line\">public void testPrint()&#123;</span><br><span class=\"line\">\tprint(Grade.B);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@Test</span><br><span class=\"line\">public void testEnum()&#123;</span><br><span class=\"line\">\tGrade.C.name();\t //得到C</span><br><span class=\"line\">\tGrade.C.ordinal();  //得到位置3</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tGrade.valueOf(“B”);\t// 返回一个枚举对象。可以用于检测得到的值是否是有效值。</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tGrade.values();  // 返回枚举的所有值</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>枚举只有一个枚举值时，可以当作单态设计模式。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 用单态设计模式定义一个类</span><br><span class=\"line\">enum Person&#123;</span><br><span class=\"line\">\tA;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"反射\"><a href=\"#反射\" class=\"headerlink\" title=\"反射\"></a>反射</h2><ol>\n<li>加载类<ol>\n<li>Class 代表某个类的字节码， Class.forName(String className)</li>\n</ol>\n</li>\n<li>解剖出类的各个部分</li>\n<li>用得到的各个部门执行相应的任务</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 加载所需类的字节码到内存</span><br><span class=\"line\">Class classt = Class.forName(&quot;io.ryan.demo.Person&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 加载的另外两个方法</span><br><span class=\"line\">Class classt = new Person().getClass();</span><br><span class=\"line\">Class classt = Person.class;</span><br><span class=\"line\"></span><br><span class=\"line\">// 解剖每个部分</span><br><span class=\"line\">class.getConstructor\t// 用于创建对象</span><br><span class=\"line\">class.getMethod\t\t\t// 用于执行方法</span><br><span class=\"line\">class.getField\t\t\t// 用于封装数据</span><br><span class=\"line\"></span><br><span class=\"line\">class.getDeclaredConstructor</span><br><span class=\"line\">class.getDeclaredMethod</span><br><span class=\"line\">class.getDeclaredField</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"反射类的构造函数\"><a href=\"#反射类的构造函数\" class=\"headerlink\" title=\"反射类的构造函数\"></a>反射类的构造函数</h3><p>例子1，无参构造</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class classt = Class.forName(&quot;io.ryan.demo.Person&quot;);</span><br><span class=\"line\">Constructor c = class.getConstructor();\t\t// 选择某个构造函数</span><br><span class=\"line\">Person p = c.newInstance(); \t// 利用反射得到对象</span><br></pre></td></tr></table></figure>\n\n<p>例子2，有参构造</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class classt = Class.forName(&quot;io.ryan.demo.Person&quot;);</span><br><span class=\"line\">Constructor c = class.getConstructor(String.class);\t\t// 接收 Class 类</span><br><span class=\"line\">Person p = c.newInstance(“A String”);</span><br></pre></td></tr></table></figure>\n\n<p>例子3，私有构造</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class classt = Class.forName(&quot;io.ryan.demo.Person&quot;);</span><br><span class=\"line\">Constructor c = class.getDeclaredConstructor(List.class);\t// private</span><br><span class=\"line\">c.setAccessible(true); \t// 暴力反射，破解私有</span><br><span class=\"line\">Person p = c.newInstance(new ArrayList());</span><br></pre></td></tr></table></figure>\n\n<p>例子4，创建对象的另一个途径</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class classt = Class.forName(&quot;io.ryan.demo.Person&quot;);</span><br><span class=\"line\">Person p = class.newInstance();  // 只限有无参的构造函数</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"反射类的方法\"><a href=\"#反射类的方法\" class=\"headerlink\" title=\"反射类的方法\"></a>反射类的方法</h3><ul>\n<li>public</li>\n<li>static: 无需传入对象，null</li>\n<li>private： 需要暴力破解</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class classt = Class.forName(&quot;io.ryan.demo.Person&quot;);</span><br><span class=\"line\">Method method = classt.getMethod(methodName, 参数.class);\t// 得到方法</span><br><span class=\"line\">method.invoke(ojb,args)\t\t// 指定对象来执行这个方法</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>main<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class classt = Class.forName(&quot;io.ryan.demo.Person&quot;);</span><br><span class=\"line\">Method method = classt.getMethod(“main”, String[].class);</span><br><span class=\"line\">// 看到数组，就要拆。</span><br><span class=\"line\">method.invoke(null, (Object)new String[]&#123;&quot;aa&quot;,&quot;dd&quot;&#125;);</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"反射类的字段（属性）\"><a href=\"#反射类的字段（属性）\" class=\"headerlink\" title=\"反射类的字段（属性）\"></a>反射类的字段（属性）</h3><ul>\n<li>public</li>\n<li>private</li>\n<li>static</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class classt = Class.forName(&quot;io.ryan.demo.Person&quot;);</span><br><span class=\"line\">Field f = classt.getField(&quot;name&quot;);</span><br><span class=\"line\">f.getType(); \t// 得到该字段的类型</span><br><span class=\"line\">f.get(p1);\t\t// 得到 p1 的名字。</span><br><span class=\"line\"></span><br><span class=\"line\">f.set(p1,&quot;xxx&quot;)\t// 赋值</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"内省-introspector\"><a href=\"#内省-introspector\" class=\"headerlink\" title=\"内省 introspector\"></a>内省 introspector</h2><p>用于获取或设置JavaBean的属性。</p>\n<ul>\n<li>Bean的属性由get/set方法决定。</li>\n<li>getBeanInfo()，将bean的属性都省到BeanInfo里。</li>\n<li>getPropertiesDescriptor()</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 得到bean的所有属性</span><br><span class=\"line\">BeanInfo info = Introspector.getBeanInfo(Person.class, Object.class); // 不要Object属性</span><br><span class=\"line\">PropertyDescriptor[] pds = info.getPropertyDescriptors()</span><br><span class=\"line\">for (PropertyDescriptor pd:pds)&#123;</span><br><span class=\"line\">\tSystem.out.println(pd.getName());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 操纵bean的指定属性</span><br><span class=\"line\">PropertyDescriptor pd = new PropertyDescriptor(&quot;age&quot;, Person.class);</span><br><span class=\"line\">Method method = pd.getWriteMethod();\t// 相当 setAge()</span><br><span class=\"line\">method.invoke(p1, 30);</span><br><span class=\"line\"></span><br><span class=\"line\">Method method2 = pd.getReadMethod();</span><br><span class=\"line\">method2.invoke(p1, null);\t// 相当 getAge()</span><br><span class=\"line\"></span><br><span class=\"line\">// 获取当前操作的属性的类型</span><br><span class=\"line\">PropertyDescriptor pd = new PropertyDescriptor(&quot;age&quot;, Person.class);</span><br><span class=\"line\">pd.getPropertyType();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"beanUtils操纵bean属性\"><a href=\"#beanUtils操纵bean属性\" class=\"headerlink\" title=\"beanUtils操纵bean属性\"></a>beanUtils操纵bean属性</h2><ul>\n<li>导入beanUtils包.</li>\n<li>导入logging包.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Person p1 = new Person();</span><br><span class=\"line\">BeanUtils.setProperty(p1, &quot;name&quot;, &quot;ryan&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 数据(String)来了，放到对象里去。包括自动转：8种基本类型。</span><br><span class=\"line\">String name = &quot;ryan&quot;</span><br><span class=\"line\">BeanUtils.setProperty(p1, &quot;name&quot;, name);</span><br><span class=\"line\"></span><br><span class=\"line\">// 以外的数据类型，会抛出异常</span><br><span class=\"line\">String birthday = &quot;1988-09-09&quot;;</span><br><span class=\"line\">BeanUtils.setProperty(p1, &quot;birthday&quot;, birthday);\t//Date类型，所以报错</span><br><span class=\"line\"></span><br><span class=\"line\">//需要注册Date转换器</span><br><span class=\"line\">Converter converter = new Converter()&#123;</span><br><span class=\"line\">\tpublic Object convert(Class type, Object value)&#123;</span><br><span class=\"line\">\t\tif(value==null)&#123;</span><br><span class=\"line\">\t\t\treturn null;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tif(!value instanceof String)&#123;</span><br><span class=\"line\">\t\t\tthrow new ConversionException(&quot;参数不是String.&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tString str = (String) value;</span><br><span class=\"line\">\t\tif(str.trim().equal(&quot;&quot;))&#123;</span><br><span class=\"line\">\t\t\treturn null;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSimpleDateFormat df = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);</span><br><span class=\"line\">\t\ttry&#123;</span><br><span class=\"line\">\t\t\treturn df.parss(str);\t</span><br><span class=\"line\">\t\t&#125; catch(ParseException e)&#123;</span><br><span class=\"line\">\t\t\tthrow new RuntimeException(e);\t//异常链不能掉</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ConvertUtils.register(converter, Date.class);</span><br><span class=\"line\">BeanUtils.setProperty(p1, &quot;birthday&quot;, birthday);\t//就不会有异常</span><br><span class=\"line\"></span><br><span class=\"line\">// 查看文档会发现，Converter已经有很多现成的实现类。</span><br><span class=\"line\">ConvertUtils.register(new DateLocaleConverter(), Date.class);</span><br><span class=\"line\">BeanUtils.setProperty(p1, &quot;birthday&quot;, birthday);\t//有bug</span><br><span class=\"line\"></span><br><span class=\"line\">// 用map的值填充bean属性</span><br><span class=\"line\">Map map = new HashMap():</span><br><span class=\"line\">map.put(&quot;name&quot;,&quot;ryan&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">ConvertUtils.register(new DateLocaleConverter(), Date.class);</span><br><span class=\"line\">BeanUtils.populate(bean, map); \t//填充</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"泛型-Generic\"><a href=\"#泛型-Generic\" class=\"headerlink\" title=\"泛型 Generic\"></a>泛型 Generic</h2><p>相当一个类型的变量。<br>在编写集合时，限制了集合的处理类型，从而把运行问题，转为编译问题。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 声明的变量是String的集合。</span><br><span class=\"line\">List&lt;String&gt; list = new ArrayList&lt;String&gt;();</span><br></pre></td></tr></table></figure>\n\n<p>泛型的使用：</p>\n<ul>\n<li>List<e> 泛型类，List<string>参数化的类</string></e></li>\n<li>Iterator<e></e></li>\n<li>Map&lt;K,V&gt;<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;String&gt; list = new ArrayList&lt;String&gt;();</span><br><span class=\"line\">//...</span><br><span class=\"line\"></span><br><span class=\"line\">Iterator&lt;String&gt; it = list.iterator();</span><br><span class=\"line\">String value = it.next(); // 默认就是String，不需要强转。 </span><br><span class=\"line\"></span><br><span class=\"line\">// for each</span><br><span class=\"line\">for( String s : list)&#123;...&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>Map</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Map&lt;int, String&gt; map = new HashMap&lt;int, Stirng&gt;();</span><br><span class=\"line\">//...</span><br><span class=\"line\"></span><br><span class=\"line\">Set&lt;Map.Entry&lt;Integer,String&gt;&gt; set = map.entrySet();</span><br><span class=\"line\"></span><br><span class=\"line\">for(Entry&lt;Integer,String&gt; entry : set) &#123;</span><br><span class=\"line\">\tentry.getKey();</span><br><span class=\"line\">\tentry.getValue();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注意的问题：\"><a href=\"#注意的问题：\" class=\"headerlink\" title=\"注意的问题：\"></a>注意的问题：</h3><ul>\n<li>泛型的对象不能是基本类型。</li>\n<li>new时，前后泛型要一致。</li>\n<li>泛型是给java编译器用的，编译后的binary不带泛型信息。</li>\n</ul>\n<h3 id=\"自定义泛型方法：\"><a href=\"#自定义泛型方法：\" class=\"headerlink\" title=\"自定义泛型方法：\"></a>自定义泛型方法：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 调用之前先声明</span><br><span class=\"line\">public &lt;T&gt; void gMethod(T t)&#123;..&#125;</span><br><span class=\"line\">public &lt;T,K&gt; void gMethod(T t, K k)&#123;..&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 类上声明泛型</span><br><span class=\"line\">public class gClass&lt;T,K&gt;&#123;</span><br><span class=\"line\">\tpublic void gMethod(T t, K k)&#123;...&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t// 静态是无效的</span><br><span class=\"line\">\tpublic static void gMethod(T t, K k)&#123;...&#125; \t// 错误</span><br><span class=\"line\">\tpublic static &lt;T,K&gt; void gMethod(T t, K k)&#123;...&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>例子：泛型方法-实现指定位置上的数组元素的交换</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public &lt;T&gt; void swap(T arr[], int pos1, int pos2)&#123;</span><br><span class=\"line\">\tT tmp = arr[pos1];</span><br><span class=\"line\">\tarr[pos1] = arr[pos2]</span><br><span class=\"line\">\tarr[pos2] = tmp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>例子：泛型方法-接收任意数组，颠倒所有元素</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public &lt;T&gt; void reverse(T arr[])&#123;</span><br><span class=\"line\">\tint start = 0;</span><br><span class=\"line\">\tint end = arr,length-1;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\twhile(true)&#123;</span><br><span class=\"line\">\t\tif(start&gt;=end)&#123; break; &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\tT tmp = arr[start];</span><br><span class=\"line\">\t\tarr[start] = arr[end]</span><br><span class=\"line\">\t\tarr[end] = tmp;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tstart++;</span><br><span class=\"line\">\t\tend--;</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>例子：泛型类</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class gClass&lt;T&gt;&#123;</span><br><span class=\"line\">\tprivate T t;</span><br><span class=\"line\">\tpublic void setT(T t)&#123;...&#125;</span><br><span class=\"line\">\tpublic T getT()&#123;...&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"XML-运用\"><a href=\"#XML-运用\" class=\"headerlink\" title=\"XML 运用\"></a>XML 运用</h1><ul>\n<li>描述数据</li>\n<li>程序的配置文件</li>\n</ul>\n<h2 id=\"XML-语法\"><a href=\"#XML-语法\" class=\"headerlink\" title=\"XML 语法\"></a>XML 语法</h2><h3 id=\"文档声明\"><a href=\"#文档声明\" class=\"headerlink\" title=\"文档声明\"></a>文档声明</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"元素：标签\"><a href=\"#元素：标签\" class=\"headerlink\" title=\"元素：标签\"></a>元素：标签</h3><ul>\n<li>包含标签体：<a>hello</a></li>\n<li>不包含标签体：<a></a> 或者 <a></a></li>\n<li>文档有且仅有一个根标签，其他都是子标签。</li>\n<li>标签体中的空格和换行都是有内容的。所以排版有时会影响到文档。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a&gt;hello&lt;/a&gt;</span><br><span class=\"line\">&lt;a&gt;</span><br><span class=\"line\">\thello</span><br><span class=\"line\">&lt;/a&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h3><p>一个标签可以有多个属性，每个属性都有自己的名称和取值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input name=&quot;text&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<p>相当于</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input&gt;</span><br><span class=\"line\">\t&lt;name&gt;text&lt;/name&gt;</span><br><span class=\"line\">&lt;/input&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><p><code>&lt;!-- 注释 --&gt;</code></p>\n<h3 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h3><ul>\n<li>&lt;    :    &lt;</li>\n<li><blockquote>\n<p>   :    &gt;</p>\n</blockquote>\n</li>\n<li>&amp;    :    &amp;</li>\n<li>“    :    &quot;</li>\n<li>‘    :    &apos;</li>\n</ul>\n<h3 id=\"处理指令-PI\"><a href=\"#处理指令-PI\" class=\"headerlink\" title=\"处理指令-PI\"></a>处理指令-PI</h3><p>指明该文档用哪个css来执行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class=\"line\">&lt;?xml-stylesheet type=&quot;text/css&quot; href=&quot;xxx.css&quot;?&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"XML-约束\"><a href=\"#XML-约束\" class=\"headerlink\" title=\"XML 约束\"></a>XML 约束</h2><p>编写一个文档来约束另一个文档。用于框架的编写。</p>\n<h3 id=\"XML-DTD-（Doc-Type-Definition\"><a href=\"#XML-DTD-（Doc-Type-Definition\" class=\"headerlink\" title=\"XML DTD （Doc Type Definition)\"></a>XML DTD （Doc Type Definition)</h3><p>book.xml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE shelf SYSTEM &quot;book.dtd&quot;&gt;\t// 指明被谁约束，声明所有shelf内标签都要遵循dtd文档</span><br><span class=\"line\">&lt;shelf&gt;</span><br><span class=\"line\">\t&lt;book&gt;</span><br><span class=\"line\">\t\t&lt;name&gt;Java..&lt;/name&gt;</span><br><span class=\"line\">\t\t&lt;price&gt;100.00&lt;/price&gt;</span><br><span class=\"line\">\t&lt;/book&gt;</span><br><span class=\"line\">&lt;/shelf&gt;</span><br></pre></td></tr></table></figure>\n\n<p>book.dtd</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!ELEMENT shelf(book+)&gt;\t\t// shelf 只可以有 book 标签</span><br><span class=\"line\">\t&lt;!ELEMENT book(name,price)&gt;\t\t// book 里包含 name 和 price 标签</span><br><span class=\"line\">\t&lt;!ELEMENT name(#PCDATA)&gt;\t// \tname 标签里包含字符串</span><br><span class=\"line\">\t&lt;!ELEMENT price(#PCDATA)&gt;</span><br></pre></td></tr></table></figure>\n\n<p>引用公共文档</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE web-app PUBLIC &quot;&lt;URL&gt;&quot;&gt; // 本地文档 -&gt; SYSTEM</span><br></pre></td></tr></table></figure>\n\n<p>元素定义</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!ELEMENT shelf(book+)&gt;\t\t// （ ）里为元素内容</span><br><span class=\"line\">&lt;!ELEMENT price(#PCDATA)&gt;\t// （ ）里为元素类型，EMPTY，ANY</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!ELEMENT book(name,price)&gt;\t//\tname 和 price 必须依次出现</span><br><span class=\"line\">&lt;!ELEMENT book(name|price)&gt;\t//\tname 和 price 任选其一</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!ELEMENT shelf(book+)&gt;\t\t// 一次或多次</span><br><span class=\"line\">&lt;!ELEMENT shelf(book？)&gt;\t\t// 零次或一次</span><br><span class=\"line\">&lt;!ELEMENT shelf(book*)&gt;\t\t// 零次或多次</span><br></pre></td></tr></table></figure>\n\n<p>属性定义</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!ATTLIST 元素名/标签名</span><br><span class=\"line\">\t属性名1 属性值类型 设置说明</span><br><span class=\"line\">\t属性名2 属性值类型 设置说明</span><br><span class=\"line\">&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!ATTLIST product</span><br><span class=\"line\">\tname CDATA #REQUIRED\t// 必选</span><br><span class=\"line\">\tcolor CDATA #IMPLIRED\t// 可选</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>CDATA</li>\n<li>ENUMERATED</li>\n<li>ID</li>\n<li>ENTITY：为一段内容创建一个别名，用于引用</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE contacts[</span><br><span class=\"line\">\t&lt;!ELEMENT contacts ANY&gt;</span><br><span class=\"line\">\t&lt;!ELEMENT contact(name, email)&gt;</span><br><span class=\"line\">\t&lt;!ELEMENT name(#PCDATA)&gt;</span><br><span class=\"line\">\t&lt;!ELEMENT email(#PCDATA)&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;!ATTLIST contact serial_number ID #REQUIRED&gt;</span><br><span class=\"line\">]&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;contacts&gt;</span><br><span class=\"line\">\t&lt;contact serial_number=&quot;a1&quot;&gt;\t// ID 不能数字开头</span><br><span class=\"line\">\t\t&lt;name&gt;ryan&lt;/name&gt;</span><br><span class=\"line\">\t\t&lt;email&gt;ryan@mail.com&lt;/email&gt;</span><br><span class=\"line\">\t&lt;/contact&gt;</span><br><span class=\"line\">\t&lt;contact serial_number=&quot;a2&quot;&gt;</span><br><span class=\"line\">\t\t&lt;name&gt;tim&lt;/name&gt;</span><br><span class=\"line\">\t\t&lt;email&gt;tim@mail.com&lt;/email&gt;</span><br><span class=\"line\">\t&lt;/contact&gt;</span><br><span class=\"line\">&lt;/contacts&gt;</span><br></pre></td></tr></table></figure>\n\n<p>实体定义</p>\n<ul>\n<li><p>引用实体</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE book[</span><br><span class=\"line\">\t&lt;!ENTITY bookname &quot;Java Web Development&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;!ELEMENT book(name)&gt;</span><br><span class=\"line\">\t&lt;!ELEMENT name(#PCDATA)&gt;</span><br><span class=\"line\">]&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;book&gt;</span><br><span class=\"line\">\t&lt;name&gt;&amp;bookname&lt;/name&gt;</span><br><span class=\"line\">&lt;/book&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>参数实体: 代码重用 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encod ing=&quot;UTF-8&quot; ?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE contact[</span><br><span class=\"line\">\t&lt;!ENTITY % tag &quot;name,email,address&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;!ELEMENT contact(%tag)&gt;</span><br><span class=\"line\">]&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"XML-Schema\"><a href=\"#XML-Schema\" class=\"headerlink\" title=\"XML Schema\"></a>XML Schema</h3><h2 id=\"XML-编程（CRUD）\"><a href=\"#XML-编程（CRUD）\" class=\"headerlink\" title=\"XML 编程（CRUD）\"></a>XML 编程（CRUD）</h2><p>解析方式：</p>\n<ul>\n<li>dom: doc obj model</li>\n<li>sax: simple Api for xml</li>\n<li>解析开发包：Jaxp, Jdom, dom4j</li>\n</ul>\n<h3 id=\"dom\"><a href=\"#dom\" class=\"headerlink\" title=\"dom\"></a>dom</h3><ul>\n<li>xml文档解析成 element，attribute 和 text 节点(Node)对象。</li>\n<li>方便 crud</li>\n<li>占用内存大</li>\n</ul>\n<h3 id=\"sax\"><a href=\"#sax\" class=\"headerlink\" title=\"sax\"></a>sax</h3><ul>\n<li>读一行，处理一行</li>\n<li>只适合读取，不适合cud</li>\n</ul>\n<h3 id=\"调整jvm内存\"><a href=\"#调整jvm内存\" class=\"headerlink\" title=\"调整jvm内存\"></a>调整jvm内存</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// jvm 默认占用 xxM</span><br><span class=\"line\">byte b[] = new byte[1024*1024*1024]\t// 占用1G</span><br></pre></td></tr></table></figure>\n\n<p>设定jvm占用100m内存：<br><code>Arguments - VM argument: -Xmx100m</code></p>\n<h3 id=\"Jaxp对xml解析\"><a href=\"#Jaxp对xml解析\" class=\"headerlink\" title=\"Jaxp对xml解析\"></a>Jaxp对xml解析</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 1 创建factory</span><br><span class=\"line\">DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();</span><br><span class=\"line\"></span><br><span class=\"line\">// 2 得到 dom builder</span><br><span class=\"line\">DocumentBuilder builder = factory.newDocumentInstance();</span><br><span class=\"line\"></span><br><span class=\"line\">// 3 解析xml文档，得到代表文档的document</span><br><span class=\"line\">Document doc = builder.parse(&quot;src/book.xml&quot;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"dom-读\"><a href=\"#dom-读\" class=\"headerlink\" title=\"dom 读\"></a>dom 读</h3><p>XML文档例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;shelf&gt;</span><br><span class=\"line\">\t&lt;book name=&quot;xxx&quot;&gt;</span><br><span class=\"line\">\t\t&lt;price&gt;???&lt;/price&gt;</span><br><span class=\"line\">\t&lt;/book&gt;</span><br><span class=\"line\">&lt;/shelf&gt;</span><br></pre></td></tr></table></figure>\n\n<p>使用dom对xml文档r</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 读取一个</span><br><span class=\"line\">NodeList nodeList = doc.getElementsByTagName(&quot;price&quot;);</span><br><span class=\"line\">Node node = nodeList.item(0);</span><br><span class=\"line\">String content = node.getContent();</span><br><span class=\"line\"></span><br><span class=\"line\">// 遍历，递归，得到所有标签</span><br><span class=\"line\">Node root = doc.getElementsByTagName(&quot;shelf&quot;).item(0);</span><br><span class=\"line\">printAll(root);</span><br><span class=\"line\"></span><br><span class=\"line\">public void printAll(Node node)&#123;</span><br><span class=\"line\">\tif(node instanceof Element)&#123;</span><br><span class=\"line\">\t\tSystem.out.println(node.getNodeName());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tNodeList nodeList = node.getChildNodes();</span><br><span class=\"line\">\tfor(Node tmpNode:nodeList)&#123;</span><br><span class=\"line\">\t\tprintAll(tmpNode);</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 得到xml文档中标签属性的值</span><br><span class=\"line\">Node bookName = doc.getElementsByTagName(&quot;book&quot;).item(0);</span><br><span class=\"line\">// 强转</span><br><span class=\"line\">Element bookName = doc.getElementsByTagName(&quot;book&quot;).item(0);</span><br><span class=\"line\">bookName.getAttribute(&quot;name&quot;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"dom-增\"><a href=\"#dom-增\" class=\"headerlink\" title=\"dom 增\"></a>dom 增</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 添加： &lt;price&gt;$$$&lt;/price&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">// 创建节点</span><br><span class=\"line\">Element price = doc.createElement(&quot;price&quot;)</span><br><span class=\"line\">price.setTextContent(&quot;$$$&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 把节点挂到book下面</span><br><span class=\"line\">Element book = (Element) doc.getElementsByTagName(&quot;book&quot;).item(0);</span><br><span class=\"line\">book.appendChild(price);</span><br><span class=\"line\"></span><br><span class=\"line\">// 更新好内存中的 doc，需要再写回到文档中</span><br><span class=\"line\">TransformerFactory tfFactory = TransformerFactory.newInstance();</span><br><span class=\"line\">Transformer tf = tfFoctory.newTransformer();</span><br><span class=\"line\">tf.transfrom(new DOMSource(doc), new StreamResult(new FileOutputStream(&quot;src/book.xml&quot;)));</span><br><span class=\"line\"></span><br><span class=\"line\">// 加属性 &lt;book name=&quot;xxx&quot; color=&quot;blue&quot;&gt;</span><br><span class=\"line\">Element book = doc.getElementsByTagName(&quot;book&quot;).item(0);</span><br><span class=\"line\">book.setAttribute(&quot;color&quot;,&quot;blue&quot;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"dom-删\"><a href=\"#dom-删\" class=\"headerlink\" title=\"dom 删\"></a>dom 删</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 得到要删除的节点</span><br><span class=\"line\">Element price = doc.getElementsByTagName(&quot;price&quot;).item(1);</span><br><span class=\"line\"></span><br><span class=\"line\">// 得到要删除节点的上级节点</span><br><span class=\"line\">price.getParentNode().removeChild(price);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"dom-改\"><a href=\"#dom-改\" class=\"headerlink\" title=\"dom 改\"></a>dom 改</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 得到要更改的节点</span><br><span class=\"line\">Element price = doc.getElementsByTagName(&quot;price&quot;).item(1);</span><br><span class=\"line\"></span><br><span class=\"line\">// 更改</span><br><span class=\"line\">price.setTextContent(&quot;100&quot;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"XML-编程实例：考生成绩管理系统\"><a href=\"#XML-编程实例：考生成绩管理系统\" class=\"headerlink\" title=\"XML 编程实例：考生成绩管理系统\"></a>XML 编程实例：考生成绩管理系统</h3><ul>\n<li>添加用户</li>\n<li>删除用户</li>\n<li>查询成绩</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;student id=&quot;xxx&quot;&gt;</span><br><span class=\"line\">\t&lt;name&gt;xxx&lt;/name&gt;</span><br><span class=\"line\">\t&lt;location&gt;xxx&lt;/location&gt;</span><br><span class=\"line\">\t&lt;score&gt;xxx&lt;/score&gt;  </span><br><span class=\"line\">&lt;/student&gt;</span><br></pre></td></tr></table></figure>\n\n<p>模块设计：</p>\n<ul>\n<li>Main.java (A,B,C) - io.demo.ui</li>\n<li>StudentController.java (A,B,C) - io.demo.controller</li>\n<li>StudentDao.java (A,B,C)  - io.demo.dao </li>\n<li>传输的数据都封装在student对象里 - io.demo.bean</li>\n<li>XmlUtils (getDoc, writeToDoc) - io.demo.util</li>\n<li>exam-system.xml (数据库）</li>\n</ul>\n<p>代码 –&gt; <a href=\"https://github.com/Ryanluoxu/heima-java-web-course/tree/master/xml-exam-system\" target=\"_blank\" rel=\"noopener\">xml-exam-system</a></p>\n","site":{"data":{}},"excerpt":"<p>这篇博客是黑马JavaWeb教程的学习笔记。</p>","more":"<h1 id=\"Java-基础\"><a href=\"#Java-基础\" class=\"headerlink\" title=\"Java 基础\"></a>Java 基础</h1><h2 id=\"Eclipse-的使用和断点调试\"><a href=\"#Eclipse-的使用和断点调试\" class=\"headerlink\" title=\"Eclipse 的使用和断点调试\"></a>Eclipse 的使用和断点调试</h2><h3 id=\"JRE-amp-Compiler\"><a href=\"#JRE-amp-Compiler\" class=\"headerlink\" title=\"JRE &amp; Compiler\"></a>JRE &amp; Compiler</h3><p>JRE version &gt;= Java Compiler<br>否则抛出<code>Bad version</code>异常</p>\n<h3 id=\"Debug-断点调试\"><a href=\"#Debug-断点调试\" class=\"headerlink\" title=\"Debug 断点调试\"></a>Debug 断点调试</h3><ul>\n<li>设置断点</li>\n<li>F5: step into</li>\n<li>F6: step over</li>\n<li>F7: step return</li>\n<li>drop to frame: 跳到当前方法第一行</li>\n<li>F8: 跳到下一个断点。</li>\n<li>观察变量: 点击变量 - watch</li>\n<li>Breakpoints：全部断点视图。调试之后清除。</li>\n</ul>\n<h3 id=\"Eclipse-快捷键\"><a href=\"#Eclipse-快捷键\" class=\"headerlink\" title=\"Eclipse 快捷键\"></a>Eclipse 快捷键</h3><ul>\n<li>内容提示： alt+/</li>\n<li>快速修复： ctrl+1</li>\n<li>导包：    ctrl+shift+o</li>\n<li>格式化代码块： ctrl+shift+f</li>\n<li>向前向后： alt+方向键</li>\n<li>查看方法说明： f2</li>\n<li>重置透视图： Windows - Reset Perspective</li>\n<li>更改大写： ctrl+shift+x</li>\n<li>更改小写： ctrl+shift+y</li>\n<li>复制一行： ctrl+alt+上下键</li>\n<li>移动一行： alt+上下键</li>\n<li>查看继承关系： ctrl+t</li>\n<li>查看源码： ctrl+shift+t</li>\n<li>查看快捷键： ctrl+shift+L</li>\n</ul>\n<h2 id=\"JUnit-测试\"><a href=\"#JUnit-测试\" class=\"headerlink\" title=\"JUnit 测试\"></a>JUnit 测试</h2><ol>\n<li>创建Person类</li>\n<li>创建测试类-TestPerson</li>\n<li>在 TestPerson 里，创建测试方法-testRun()</li>\n<li>加注释-@Test</li>\n<li>选择 testRun() - run as JUnit Test</li>\n<li>选择测试类，测试所有测试方法</li>\n</ol>\n<h3 id=\"Before-和-After\"><a href=\"#Before-和-After\" class=\"headerlink\" title=\"Before 和 After\"></a>Before 和 After</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Before</span><br><span class=\"line\">public void before()&#123;</span><br><span class=\"line\">\t//初始化资源</span><br><span class=\"line\">\t//所有测试方法前运行</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@After</span><br><span class=\"line\">public void before()&#123;</span><br><span class=\"line\">\t//销毁资源</span><br><span class=\"line\">\t//所有测试方法后运行</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@BeforeClass</span><br><span class=\"line\">public static void beforeClass()&#123;</span><br><span class=\"line\">\t//每一个测试方法之前都运行</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@AfterClass</span><br><span class=\"line\">public static void beforeClass()&#123;</span><br><span class=\"line\">\t//每一个测试方法之后都运行</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Assert-断言\"><a href=\"#Assert-断言\" class=\"headerlink\" title=\"Assert 断言\"></a>Assert 断言</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void testRun()&#123;</span><br><span class=\"line\">\t//通过：p.run() == &quot;2&quot;</span><br><span class=\"line\">\tAssert.assertEquals(&quot;2&quot;,p.run());</span><br><span class=\"line\"></span><br><span class=\"line\">\t//不通过返回信息</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Java-部分特性\"><a href=\"#Java-部分特性\" class=\"headerlink\" title=\"Java 部分特性\"></a>Java 部分特性</h2><h3 id=\"静态导入（不常用）\"><a href=\"#静态导入（不常用）\" class=\"headerlink\" title=\"静态导入（不常用）\"></a>静态导入（不常用）</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import static java.lang.System.out;</span><br><span class=\"line\">out.print(&quot;&quot;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自动装箱、拆箱\"><a href=\"#自动装箱、拆箱\" class=\"headerlink\" title=\"自动装箱、拆箱\"></a>自动装箱、拆箱</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//装箱，自动将1变成一个object。</span><br><span class=\"line\">Integer i = 1;  //Interger i = new Integer(&quot;1&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">//拆箱，自动将i对象拆成数字1.</span><br><span class=\"line\">int j = i;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"增强-for\"><a href=\"#增强-for\" class=\"headerlink\" title=\"增强 for\"></a>增强 for</h3><p>只用于array，或者实现 Iterable 借口的集合上。</p>\n<p>读取Map的两种方式：</p>\n<ol>\n<li><p>设置 keyset，通过iterator得到key，然后map.get(key)得到对应的值</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 传统方法</span><br><span class=\"line\">Set set = map.keySet();</span><br><span class=\"line\">Iterator it = set.iterator();</span><br><span class=\"line\">while(it.hasNext())&#123;</span><br><span class=\"line\">\tString key = it.next();</span><br><span class=\"line\">\tSystem.out.println(key + &quot;-&gt;&quot; +map.get(key));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// for each</span><br><span class=\"line\">for(Object key : map.keySet())&#123;</span><br><span class=\"line\">\tSystem.out.println(key + &quot;-&gt;&quot; +map.get(key));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>map的每一组key和value是一个entry。用entrySet()得到set。然后用iterator得到每一对entry。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 传统方法</span><br><span class=\"line\">Set set = map.entrySet();</span><br><span class=\"line\">Iterator it = set.iterator();</span><br><span class=\"line\">while(it.hasNext())&#123;</span><br><span class=\"line\">\tMap.Entry entry = it.next();</span><br><span class=\"line\">\tSystem.out.println(entry.getKey() + &quot;-&gt;&quot; +entry.getValue());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// for each</span><br><span class=\"line\">for(Object entry : map.entrySet())&#123;</span><br><span class=\"line\">\tSystem.out.println(entry.getKey() + &quot;-&gt;&quot; +entry.getValue());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>HashMap 没有顺序，需要顺序用 LinkedHashMap();</p>\n<p>For Each 需要注意的问题：</p>\n<ol>\n<li>只是取数据，不用于赋值。需要修改数据，用传统for方式</li>\n</ol>\n<h3 id=\"可变参数\"><a href=\"#可变参数\" class=\"headerlink\" title=\"可变参数\"></a>可变参数</h3><p>可变参数视为数组。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int sum(int ...nums)&#123;</span><br><span class=\"line\">\tint sum = 0;</span><br><span class=\"line\">\tfor(int i:nums)&#123;</span><br><span class=\"line\">\t\tsum+=i;\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public void testSum()&#123;</span><br><span class=\"line\">\tsum(1,2,3,4,5,6); // sum(array);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int nums[] = &#123;1,2,3,4&#125;  // nums 只是一个对象</span><br><span class=\"line\">Integer nums[] = &#123;1,2,3,4&#125;  // 这时是多个对象</span><br><span class=\"line\"></span><br><span class=\"line\">// 在可变参数里，比如 “T...a”，要求参数为多个对象。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"枚举类\"><a href=\"#枚举类\" class=\"headerlink\" title=\"枚举类\"></a>枚举类</h3><p>限定了方法的使用对象。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 定义枚举的构造函数（私有），方法和字段。来封装信息。</span><br><span class=\"line\">enum Grade()&#123;\t// class</span><br><span class=\"line\">\tA(&quot;90-100&quot;),B(&quot;80-89&quot;),C(&quot;70-79&quot;);\t\t// Object</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String value;  // 封装每个对象对应的分数</span><br><span class=\"line\">\tprivate Grade(String value)&#123;</span><br><span class=\"line\">\t\tthis.value = value;\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic String getValue()&#123;</span><br><span class=\"line\">\t\treturn this.value;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public void print(Grade g)&#123;</span><br><span class=\"line\">\t// 使用自己定义的枚举类</span><br><span class=\"line\">\tSystem.out.println(g.getValue());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@Test</span><br><span class=\"line\">public void testPrint()&#123;</span><br><span class=\"line\">\tprint(Grade.B);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>带抽象方法的枚举</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 要求调用枚举对象时，需要定义优良中。</span><br><span class=\"line\">enum Grade()&#123;</span><br><span class=\"line\">\tA(&quot;90-100&quot;)&#123;</span><br><span class=\"line\">\t\tpublic String rank()&#123;</span><br><span class=\"line\">\t\t\treturn &quot;优&quot;;\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\tB(&quot;80-89&quot;)&#123;</span><br><span class=\"line\">\t\tpublic String rank()&#123;</span><br><span class=\"line\">\t\t\treturn &quot;良&quot;;\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\tC(&quot;70-79&quot;)&#123;</span><br><span class=\"line\">\t\tpublic String rank()&#123;</span><br><span class=\"line\">\t\t\treturn &quot;中&quot;;\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;;\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t// 抽象方法</span><br><span class=\"line\">\tpublic abstract String rank();</span><br><span class=\"line\"></span><br><span class=\"line\">\t// 封装数值</span><br><span class=\"line\">\tprivate String value;</span><br><span class=\"line\">\tprivate Grade(String value)&#123;</span><br><span class=\"line\">\t\tthis.value = value;\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic String getValue()&#123;</span><br><span class=\"line\">\t\treturn this.value;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public void print(Grade g)&#123;</span><br><span class=\"line\">\t// 使用自己定义的枚举类</span><br><span class=\"line\">\tSystem.out.println(g.getValue());</span><br><span class=\"line\">\tSystem.out.println(g.rank());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@Test</span><br><span class=\"line\">public void testPrint()&#123;</span><br><span class=\"line\">\tprint(Grade.B);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@Test</span><br><span class=\"line\">public void testEnum()&#123;</span><br><span class=\"line\">\tGrade.C.name();\t //得到C</span><br><span class=\"line\">\tGrade.C.ordinal();  //得到位置3</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tGrade.valueOf(“B”);\t// 返回一个枚举对象。可以用于检测得到的值是否是有效值。</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tGrade.values();  // 返回枚举的所有值</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>枚举只有一个枚举值时，可以当作单态设计模式。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 用单态设计模式定义一个类</span><br><span class=\"line\">enum Person&#123;</span><br><span class=\"line\">\tA;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"反射\"><a href=\"#反射\" class=\"headerlink\" title=\"反射\"></a>反射</h2><ol>\n<li>加载类<ol>\n<li>Class 代表某个类的字节码， Class.forName(String className)</li>\n</ol>\n</li>\n<li>解剖出类的各个部分</li>\n<li>用得到的各个部门执行相应的任务</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 加载所需类的字节码到内存</span><br><span class=\"line\">Class classt = Class.forName(&quot;io.ryan.demo.Person&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 加载的另外两个方法</span><br><span class=\"line\">Class classt = new Person().getClass();</span><br><span class=\"line\">Class classt = Person.class;</span><br><span class=\"line\"></span><br><span class=\"line\">// 解剖每个部分</span><br><span class=\"line\">class.getConstructor\t// 用于创建对象</span><br><span class=\"line\">class.getMethod\t\t\t// 用于执行方法</span><br><span class=\"line\">class.getField\t\t\t// 用于封装数据</span><br><span class=\"line\"></span><br><span class=\"line\">class.getDeclaredConstructor</span><br><span class=\"line\">class.getDeclaredMethod</span><br><span class=\"line\">class.getDeclaredField</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"反射类的构造函数\"><a href=\"#反射类的构造函数\" class=\"headerlink\" title=\"反射类的构造函数\"></a>反射类的构造函数</h3><p>例子1，无参构造</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class classt = Class.forName(&quot;io.ryan.demo.Person&quot;);</span><br><span class=\"line\">Constructor c = class.getConstructor();\t\t// 选择某个构造函数</span><br><span class=\"line\">Person p = c.newInstance(); \t// 利用反射得到对象</span><br></pre></td></tr></table></figure>\n\n<p>例子2，有参构造</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class classt = Class.forName(&quot;io.ryan.demo.Person&quot;);</span><br><span class=\"line\">Constructor c = class.getConstructor(String.class);\t\t// 接收 Class 类</span><br><span class=\"line\">Person p = c.newInstance(“A String”);</span><br></pre></td></tr></table></figure>\n\n<p>例子3，私有构造</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class classt = Class.forName(&quot;io.ryan.demo.Person&quot;);</span><br><span class=\"line\">Constructor c = class.getDeclaredConstructor(List.class);\t// private</span><br><span class=\"line\">c.setAccessible(true); \t// 暴力反射，破解私有</span><br><span class=\"line\">Person p = c.newInstance(new ArrayList());</span><br></pre></td></tr></table></figure>\n\n<p>例子4，创建对象的另一个途径</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class classt = Class.forName(&quot;io.ryan.demo.Person&quot;);</span><br><span class=\"line\">Person p = class.newInstance();  // 只限有无参的构造函数</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"反射类的方法\"><a href=\"#反射类的方法\" class=\"headerlink\" title=\"反射类的方法\"></a>反射类的方法</h3><ul>\n<li>public</li>\n<li>static: 无需传入对象，null</li>\n<li>private： 需要暴力破解</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class classt = Class.forName(&quot;io.ryan.demo.Person&quot;);</span><br><span class=\"line\">Method method = classt.getMethod(methodName, 参数.class);\t// 得到方法</span><br><span class=\"line\">method.invoke(ojb,args)\t\t// 指定对象来执行这个方法</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>main<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class classt = Class.forName(&quot;io.ryan.demo.Person&quot;);</span><br><span class=\"line\">Method method = classt.getMethod(“main”, String[].class);</span><br><span class=\"line\">// 看到数组，就要拆。</span><br><span class=\"line\">method.invoke(null, (Object)new String[]&#123;&quot;aa&quot;,&quot;dd&quot;&#125;);</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"反射类的字段（属性）\"><a href=\"#反射类的字段（属性）\" class=\"headerlink\" title=\"反射类的字段（属性）\"></a>反射类的字段（属性）</h3><ul>\n<li>public</li>\n<li>private</li>\n<li>static</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class classt = Class.forName(&quot;io.ryan.demo.Person&quot;);</span><br><span class=\"line\">Field f = classt.getField(&quot;name&quot;);</span><br><span class=\"line\">f.getType(); \t// 得到该字段的类型</span><br><span class=\"line\">f.get(p1);\t\t// 得到 p1 的名字。</span><br><span class=\"line\"></span><br><span class=\"line\">f.set(p1,&quot;xxx&quot;)\t// 赋值</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"内省-introspector\"><a href=\"#内省-introspector\" class=\"headerlink\" title=\"内省 introspector\"></a>内省 introspector</h2><p>用于获取或设置JavaBean的属性。</p>\n<ul>\n<li>Bean的属性由get/set方法决定。</li>\n<li>getBeanInfo()，将bean的属性都省到BeanInfo里。</li>\n<li>getPropertiesDescriptor()</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 得到bean的所有属性</span><br><span class=\"line\">BeanInfo info = Introspector.getBeanInfo(Person.class, Object.class); // 不要Object属性</span><br><span class=\"line\">PropertyDescriptor[] pds = info.getPropertyDescriptors()</span><br><span class=\"line\">for (PropertyDescriptor pd:pds)&#123;</span><br><span class=\"line\">\tSystem.out.println(pd.getName());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 操纵bean的指定属性</span><br><span class=\"line\">PropertyDescriptor pd = new PropertyDescriptor(&quot;age&quot;, Person.class);</span><br><span class=\"line\">Method method = pd.getWriteMethod();\t// 相当 setAge()</span><br><span class=\"line\">method.invoke(p1, 30);</span><br><span class=\"line\"></span><br><span class=\"line\">Method method2 = pd.getReadMethod();</span><br><span class=\"line\">method2.invoke(p1, null);\t// 相当 getAge()</span><br><span class=\"line\"></span><br><span class=\"line\">// 获取当前操作的属性的类型</span><br><span class=\"line\">PropertyDescriptor pd = new PropertyDescriptor(&quot;age&quot;, Person.class);</span><br><span class=\"line\">pd.getPropertyType();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"beanUtils操纵bean属性\"><a href=\"#beanUtils操纵bean属性\" class=\"headerlink\" title=\"beanUtils操纵bean属性\"></a>beanUtils操纵bean属性</h2><ul>\n<li>导入beanUtils包.</li>\n<li>导入logging包.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Person p1 = new Person();</span><br><span class=\"line\">BeanUtils.setProperty(p1, &quot;name&quot;, &quot;ryan&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 数据(String)来了，放到对象里去。包括自动转：8种基本类型。</span><br><span class=\"line\">String name = &quot;ryan&quot;</span><br><span class=\"line\">BeanUtils.setProperty(p1, &quot;name&quot;, name);</span><br><span class=\"line\"></span><br><span class=\"line\">// 以外的数据类型，会抛出异常</span><br><span class=\"line\">String birthday = &quot;1988-09-09&quot;;</span><br><span class=\"line\">BeanUtils.setProperty(p1, &quot;birthday&quot;, birthday);\t//Date类型，所以报错</span><br><span class=\"line\"></span><br><span class=\"line\">//需要注册Date转换器</span><br><span class=\"line\">Converter converter = new Converter()&#123;</span><br><span class=\"line\">\tpublic Object convert(Class type, Object value)&#123;</span><br><span class=\"line\">\t\tif(value==null)&#123;</span><br><span class=\"line\">\t\t\treturn null;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tif(!value instanceof String)&#123;</span><br><span class=\"line\">\t\t\tthrow new ConversionException(&quot;参数不是String.&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tString str = (String) value;</span><br><span class=\"line\">\t\tif(str.trim().equal(&quot;&quot;))&#123;</span><br><span class=\"line\">\t\t\treturn null;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSimpleDateFormat df = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);</span><br><span class=\"line\">\t\ttry&#123;</span><br><span class=\"line\">\t\t\treturn df.parss(str);\t</span><br><span class=\"line\">\t\t&#125; catch(ParseException e)&#123;</span><br><span class=\"line\">\t\t\tthrow new RuntimeException(e);\t//异常链不能掉</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ConvertUtils.register(converter, Date.class);</span><br><span class=\"line\">BeanUtils.setProperty(p1, &quot;birthday&quot;, birthday);\t//就不会有异常</span><br><span class=\"line\"></span><br><span class=\"line\">// 查看文档会发现，Converter已经有很多现成的实现类。</span><br><span class=\"line\">ConvertUtils.register(new DateLocaleConverter(), Date.class);</span><br><span class=\"line\">BeanUtils.setProperty(p1, &quot;birthday&quot;, birthday);\t//有bug</span><br><span class=\"line\"></span><br><span class=\"line\">// 用map的值填充bean属性</span><br><span class=\"line\">Map map = new HashMap():</span><br><span class=\"line\">map.put(&quot;name&quot;,&quot;ryan&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">ConvertUtils.register(new DateLocaleConverter(), Date.class);</span><br><span class=\"line\">BeanUtils.populate(bean, map); \t//填充</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"泛型-Generic\"><a href=\"#泛型-Generic\" class=\"headerlink\" title=\"泛型 Generic\"></a>泛型 Generic</h2><p>相当一个类型的变量。<br>在编写集合时，限制了集合的处理类型，从而把运行问题，转为编译问题。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 声明的变量是String的集合。</span><br><span class=\"line\">List&lt;String&gt; list = new ArrayList&lt;String&gt;();</span><br></pre></td></tr></table></figure>\n\n<p>泛型的使用：</p>\n<ul>\n<li>List<e> 泛型类，List<string>参数化的类</string></e></li>\n<li>Iterator<e></e></li>\n<li>Map&lt;K,V&gt;<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;String&gt; list = new ArrayList&lt;String&gt;();</span><br><span class=\"line\">//...</span><br><span class=\"line\"></span><br><span class=\"line\">Iterator&lt;String&gt; it = list.iterator();</span><br><span class=\"line\">String value = it.next(); // 默认就是String，不需要强转。 </span><br><span class=\"line\"></span><br><span class=\"line\">// for each</span><br><span class=\"line\">for( String s : list)&#123;...&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>Map</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Map&lt;int, String&gt; map = new HashMap&lt;int, Stirng&gt;();</span><br><span class=\"line\">//...</span><br><span class=\"line\"></span><br><span class=\"line\">Set&lt;Map.Entry&lt;Integer,String&gt;&gt; set = map.entrySet();</span><br><span class=\"line\"></span><br><span class=\"line\">for(Entry&lt;Integer,String&gt; entry : set) &#123;</span><br><span class=\"line\">\tentry.getKey();</span><br><span class=\"line\">\tentry.getValue();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注意的问题：\"><a href=\"#注意的问题：\" class=\"headerlink\" title=\"注意的问题：\"></a>注意的问题：</h3><ul>\n<li>泛型的对象不能是基本类型。</li>\n<li>new时，前后泛型要一致。</li>\n<li>泛型是给java编译器用的，编译后的binary不带泛型信息。</li>\n</ul>\n<h3 id=\"自定义泛型方法：\"><a href=\"#自定义泛型方法：\" class=\"headerlink\" title=\"自定义泛型方法：\"></a>自定义泛型方法：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 调用之前先声明</span><br><span class=\"line\">public &lt;T&gt; void gMethod(T t)&#123;..&#125;</span><br><span class=\"line\">public &lt;T,K&gt; void gMethod(T t, K k)&#123;..&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 类上声明泛型</span><br><span class=\"line\">public class gClass&lt;T,K&gt;&#123;</span><br><span class=\"line\">\tpublic void gMethod(T t, K k)&#123;...&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t// 静态是无效的</span><br><span class=\"line\">\tpublic static void gMethod(T t, K k)&#123;...&#125; \t// 错误</span><br><span class=\"line\">\tpublic static &lt;T,K&gt; void gMethod(T t, K k)&#123;...&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>例子：泛型方法-实现指定位置上的数组元素的交换</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public &lt;T&gt; void swap(T arr[], int pos1, int pos2)&#123;</span><br><span class=\"line\">\tT tmp = arr[pos1];</span><br><span class=\"line\">\tarr[pos1] = arr[pos2]</span><br><span class=\"line\">\tarr[pos2] = tmp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>例子：泛型方法-接收任意数组，颠倒所有元素</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public &lt;T&gt; void reverse(T arr[])&#123;</span><br><span class=\"line\">\tint start = 0;</span><br><span class=\"line\">\tint end = arr,length-1;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\twhile(true)&#123;</span><br><span class=\"line\">\t\tif(start&gt;=end)&#123; break; &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\tT tmp = arr[start];</span><br><span class=\"line\">\t\tarr[start] = arr[end]</span><br><span class=\"line\">\t\tarr[end] = tmp;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tstart++;</span><br><span class=\"line\">\t\tend--;</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>例子：泛型类</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class gClass&lt;T&gt;&#123;</span><br><span class=\"line\">\tprivate T t;</span><br><span class=\"line\">\tpublic void setT(T t)&#123;...&#125;</span><br><span class=\"line\">\tpublic T getT()&#123;...&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"XML-运用\"><a href=\"#XML-运用\" class=\"headerlink\" title=\"XML 运用\"></a>XML 运用</h1><ul>\n<li>描述数据</li>\n<li>程序的配置文件</li>\n</ul>\n<h2 id=\"XML-语法\"><a href=\"#XML-语法\" class=\"headerlink\" title=\"XML 语法\"></a>XML 语法</h2><h3 id=\"文档声明\"><a href=\"#文档声明\" class=\"headerlink\" title=\"文档声明\"></a>文档声明</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"元素：标签\"><a href=\"#元素：标签\" class=\"headerlink\" title=\"元素：标签\"></a>元素：标签</h3><ul>\n<li>包含标签体：<a>hello</a></li>\n<li>不包含标签体：<a></a> 或者 <a></a></li>\n<li>文档有且仅有一个根标签，其他都是子标签。</li>\n<li>标签体中的空格和换行都是有内容的。所以排版有时会影响到文档。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a&gt;hello&lt;/a&gt;</span><br><span class=\"line\">&lt;a&gt;</span><br><span class=\"line\">\thello</span><br><span class=\"line\">&lt;/a&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h3><p>一个标签可以有多个属性，每个属性都有自己的名称和取值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input name=&quot;text&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<p>相当于</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input&gt;</span><br><span class=\"line\">\t&lt;name&gt;text&lt;/name&gt;</span><br><span class=\"line\">&lt;/input&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><p><code>&lt;!-- 注释 --&gt;</code></p>\n<h3 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h3><ul>\n<li>&lt;    :    &lt;</li>\n<li><blockquote>\n<p>   :    &gt;</p>\n</blockquote>\n</li>\n<li>&amp;    :    &amp;</li>\n<li>“    :    &quot;</li>\n<li>‘    :    &apos;</li>\n</ul>\n<h3 id=\"处理指令-PI\"><a href=\"#处理指令-PI\" class=\"headerlink\" title=\"处理指令-PI\"></a>处理指令-PI</h3><p>指明该文档用哪个css来执行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class=\"line\">&lt;?xml-stylesheet type=&quot;text/css&quot; href=&quot;xxx.css&quot;?&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"XML-约束\"><a href=\"#XML-约束\" class=\"headerlink\" title=\"XML 约束\"></a>XML 约束</h2><p>编写一个文档来约束另一个文档。用于框架的编写。</p>\n<h3 id=\"XML-DTD-（Doc-Type-Definition\"><a href=\"#XML-DTD-（Doc-Type-Definition\" class=\"headerlink\" title=\"XML DTD （Doc Type Definition)\"></a>XML DTD （Doc Type Definition)</h3><p>book.xml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE shelf SYSTEM &quot;book.dtd&quot;&gt;\t// 指明被谁约束，声明所有shelf内标签都要遵循dtd文档</span><br><span class=\"line\">&lt;shelf&gt;</span><br><span class=\"line\">\t&lt;book&gt;</span><br><span class=\"line\">\t\t&lt;name&gt;Java..&lt;/name&gt;</span><br><span class=\"line\">\t\t&lt;price&gt;100.00&lt;/price&gt;</span><br><span class=\"line\">\t&lt;/book&gt;</span><br><span class=\"line\">&lt;/shelf&gt;</span><br></pre></td></tr></table></figure>\n\n<p>book.dtd</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!ELEMENT shelf(book+)&gt;\t\t// shelf 只可以有 book 标签</span><br><span class=\"line\">\t&lt;!ELEMENT book(name,price)&gt;\t\t// book 里包含 name 和 price 标签</span><br><span class=\"line\">\t&lt;!ELEMENT name(#PCDATA)&gt;\t// \tname 标签里包含字符串</span><br><span class=\"line\">\t&lt;!ELEMENT price(#PCDATA)&gt;</span><br></pre></td></tr></table></figure>\n\n<p>引用公共文档</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE web-app PUBLIC &quot;&lt;URL&gt;&quot;&gt; // 本地文档 -&gt; SYSTEM</span><br></pre></td></tr></table></figure>\n\n<p>元素定义</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!ELEMENT shelf(book+)&gt;\t\t// （ ）里为元素内容</span><br><span class=\"line\">&lt;!ELEMENT price(#PCDATA)&gt;\t// （ ）里为元素类型，EMPTY，ANY</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!ELEMENT book(name,price)&gt;\t//\tname 和 price 必须依次出现</span><br><span class=\"line\">&lt;!ELEMENT book(name|price)&gt;\t//\tname 和 price 任选其一</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!ELEMENT shelf(book+)&gt;\t\t// 一次或多次</span><br><span class=\"line\">&lt;!ELEMENT shelf(book？)&gt;\t\t// 零次或一次</span><br><span class=\"line\">&lt;!ELEMENT shelf(book*)&gt;\t\t// 零次或多次</span><br></pre></td></tr></table></figure>\n\n<p>属性定义</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!ATTLIST 元素名/标签名</span><br><span class=\"line\">\t属性名1 属性值类型 设置说明</span><br><span class=\"line\">\t属性名2 属性值类型 设置说明</span><br><span class=\"line\">&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!ATTLIST product</span><br><span class=\"line\">\tname CDATA #REQUIRED\t// 必选</span><br><span class=\"line\">\tcolor CDATA #IMPLIRED\t// 可选</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>CDATA</li>\n<li>ENUMERATED</li>\n<li>ID</li>\n<li>ENTITY：为一段内容创建一个别名，用于引用</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE contacts[</span><br><span class=\"line\">\t&lt;!ELEMENT contacts ANY&gt;</span><br><span class=\"line\">\t&lt;!ELEMENT contact(name, email)&gt;</span><br><span class=\"line\">\t&lt;!ELEMENT name(#PCDATA)&gt;</span><br><span class=\"line\">\t&lt;!ELEMENT email(#PCDATA)&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;!ATTLIST contact serial_number ID #REQUIRED&gt;</span><br><span class=\"line\">]&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;contacts&gt;</span><br><span class=\"line\">\t&lt;contact serial_number=&quot;a1&quot;&gt;\t// ID 不能数字开头</span><br><span class=\"line\">\t\t&lt;name&gt;ryan&lt;/name&gt;</span><br><span class=\"line\">\t\t&lt;email&gt;ryan@mail.com&lt;/email&gt;</span><br><span class=\"line\">\t&lt;/contact&gt;</span><br><span class=\"line\">\t&lt;contact serial_number=&quot;a2&quot;&gt;</span><br><span class=\"line\">\t\t&lt;name&gt;tim&lt;/name&gt;</span><br><span class=\"line\">\t\t&lt;email&gt;tim@mail.com&lt;/email&gt;</span><br><span class=\"line\">\t&lt;/contact&gt;</span><br><span class=\"line\">&lt;/contacts&gt;</span><br></pre></td></tr></table></figure>\n\n<p>实体定义</p>\n<ul>\n<li><p>引用实体</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE book[</span><br><span class=\"line\">\t&lt;!ENTITY bookname &quot;Java Web Development&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;!ELEMENT book(name)&gt;</span><br><span class=\"line\">\t&lt;!ELEMENT name(#PCDATA)&gt;</span><br><span class=\"line\">]&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;book&gt;</span><br><span class=\"line\">\t&lt;name&gt;&amp;bookname&lt;/name&gt;</span><br><span class=\"line\">&lt;/book&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>参数实体: 代码重用 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encod ing=&quot;UTF-8&quot; ?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE contact[</span><br><span class=\"line\">\t&lt;!ENTITY % tag &quot;name,email,address&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;!ELEMENT contact(%tag)&gt;</span><br><span class=\"line\">]&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"XML-Schema\"><a href=\"#XML-Schema\" class=\"headerlink\" title=\"XML Schema\"></a>XML Schema</h3><h2 id=\"XML-编程（CRUD）\"><a href=\"#XML-编程（CRUD）\" class=\"headerlink\" title=\"XML 编程（CRUD）\"></a>XML 编程（CRUD）</h2><p>解析方式：</p>\n<ul>\n<li>dom: doc obj model</li>\n<li>sax: simple Api for xml</li>\n<li>解析开发包：Jaxp, Jdom, dom4j</li>\n</ul>\n<h3 id=\"dom\"><a href=\"#dom\" class=\"headerlink\" title=\"dom\"></a>dom</h3><ul>\n<li>xml文档解析成 element，attribute 和 text 节点(Node)对象。</li>\n<li>方便 crud</li>\n<li>占用内存大</li>\n</ul>\n<h3 id=\"sax\"><a href=\"#sax\" class=\"headerlink\" title=\"sax\"></a>sax</h3><ul>\n<li>读一行，处理一行</li>\n<li>只适合读取，不适合cud</li>\n</ul>\n<h3 id=\"调整jvm内存\"><a href=\"#调整jvm内存\" class=\"headerlink\" title=\"调整jvm内存\"></a>调整jvm内存</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// jvm 默认占用 xxM</span><br><span class=\"line\">byte b[] = new byte[1024*1024*1024]\t// 占用1G</span><br></pre></td></tr></table></figure>\n\n<p>设定jvm占用100m内存：<br><code>Arguments - VM argument: -Xmx100m</code></p>\n<h3 id=\"Jaxp对xml解析\"><a href=\"#Jaxp对xml解析\" class=\"headerlink\" title=\"Jaxp对xml解析\"></a>Jaxp对xml解析</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 1 创建factory</span><br><span class=\"line\">DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();</span><br><span class=\"line\"></span><br><span class=\"line\">// 2 得到 dom builder</span><br><span class=\"line\">DocumentBuilder builder = factory.newDocumentInstance();</span><br><span class=\"line\"></span><br><span class=\"line\">// 3 解析xml文档，得到代表文档的document</span><br><span class=\"line\">Document doc = builder.parse(&quot;src/book.xml&quot;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"dom-读\"><a href=\"#dom-读\" class=\"headerlink\" title=\"dom 读\"></a>dom 读</h3><p>XML文档例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;shelf&gt;</span><br><span class=\"line\">\t&lt;book name=&quot;xxx&quot;&gt;</span><br><span class=\"line\">\t\t&lt;price&gt;???&lt;/price&gt;</span><br><span class=\"line\">\t&lt;/book&gt;</span><br><span class=\"line\">&lt;/shelf&gt;</span><br></pre></td></tr></table></figure>\n\n<p>使用dom对xml文档r</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 读取一个</span><br><span class=\"line\">NodeList nodeList = doc.getElementsByTagName(&quot;price&quot;);</span><br><span class=\"line\">Node node = nodeList.item(0);</span><br><span class=\"line\">String content = node.getContent();</span><br><span class=\"line\"></span><br><span class=\"line\">// 遍历，递归，得到所有标签</span><br><span class=\"line\">Node root = doc.getElementsByTagName(&quot;shelf&quot;).item(0);</span><br><span class=\"line\">printAll(root);</span><br><span class=\"line\"></span><br><span class=\"line\">public void printAll(Node node)&#123;</span><br><span class=\"line\">\tif(node instanceof Element)&#123;</span><br><span class=\"line\">\t\tSystem.out.println(node.getNodeName());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tNodeList nodeList = node.getChildNodes();</span><br><span class=\"line\">\tfor(Node tmpNode:nodeList)&#123;</span><br><span class=\"line\">\t\tprintAll(tmpNode);</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 得到xml文档中标签属性的值</span><br><span class=\"line\">Node bookName = doc.getElementsByTagName(&quot;book&quot;).item(0);</span><br><span class=\"line\">// 强转</span><br><span class=\"line\">Element bookName = doc.getElementsByTagName(&quot;book&quot;).item(0);</span><br><span class=\"line\">bookName.getAttribute(&quot;name&quot;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"dom-增\"><a href=\"#dom-增\" class=\"headerlink\" title=\"dom 增\"></a>dom 增</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 添加： &lt;price&gt;$$$&lt;/price&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">// 创建节点</span><br><span class=\"line\">Element price = doc.createElement(&quot;price&quot;)</span><br><span class=\"line\">price.setTextContent(&quot;$$$&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 把节点挂到book下面</span><br><span class=\"line\">Element book = (Element) doc.getElementsByTagName(&quot;book&quot;).item(0);</span><br><span class=\"line\">book.appendChild(price);</span><br><span class=\"line\"></span><br><span class=\"line\">// 更新好内存中的 doc，需要再写回到文档中</span><br><span class=\"line\">TransformerFactory tfFactory = TransformerFactory.newInstance();</span><br><span class=\"line\">Transformer tf = tfFoctory.newTransformer();</span><br><span class=\"line\">tf.transfrom(new DOMSource(doc), new StreamResult(new FileOutputStream(&quot;src/book.xml&quot;)));</span><br><span class=\"line\"></span><br><span class=\"line\">// 加属性 &lt;book name=&quot;xxx&quot; color=&quot;blue&quot;&gt;</span><br><span class=\"line\">Element book = doc.getElementsByTagName(&quot;book&quot;).item(0);</span><br><span class=\"line\">book.setAttribute(&quot;color&quot;,&quot;blue&quot;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"dom-删\"><a href=\"#dom-删\" class=\"headerlink\" title=\"dom 删\"></a>dom 删</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 得到要删除的节点</span><br><span class=\"line\">Element price = doc.getElementsByTagName(&quot;price&quot;).item(1);</span><br><span class=\"line\"></span><br><span class=\"line\">// 得到要删除节点的上级节点</span><br><span class=\"line\">price.getParentNode().removeChild(price);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"dom-改\"><a href=\"#dom-改\" class=\"headerlink\" title=\"dom 改\"></a>dom 改</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 得到要更改的节点</span><br><span class=\"line\">Element price = doc.getElementsByTagName(&quot;price&quot;).item(1);</span><br><span class=\"line\"></span><br><span class=\"line\">// 更改</span><br><span class=\"line\">price.setTextContent(&quot;100&quot;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"XML-编程实例：考生成绩管理系统\"><a href=\"#XML-编程实例：考生成绩管理系统\" class=\"headerlink\" title=\"XML 编程实例：考生成绩管理系统\"></a>XML 编程实例：考生成绩管理系统</h3><ul>\n<li>添加用户</li>\n<li>删除用户</li>\n<li>查询成绩</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;student id=&quot;xxx&quot;&gt;</span><br><span class=\"line\">\t&lt;name&gt;xxx&lt;/name&gt;</span><br><span class=\"line\">\t&lt;location&gt;xxx&lt;/location&gt;</span><br><span class=\"line\">\t&lt;score&gt;xxx&lt;/score&gt;  </span><br><span class=\"line\">&lt;/student&gt;</span><br></pre></td></tr></table></figure>\n\n<p>模块设计：</p>\n<ul>\n<li>Main.java (A,B,C) - io.demo.ui</li>\n<li>StudentController.java (A,B,C) - io.demo.controller</li>\n<li>StudentDao.java (A,B,C)  - io.demo.dao </li>\n<li>传输的数据都封装在student对象里 - io.demo.bean</li>\n<li>XmlUtils (getDoc, writeToDoc) - io.demo.util</li>\n<li>exam-system.xml (数据库）</li>\n</ul>\n<p>代码 –&gt; <a href=\"https://github.com/Ryanluoxu/heima-java-web-course/tree/master/xml-exam-system\" target=\"_blank\" rel=\"noopener\">xml-exam-system</a></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"ckb3dedhl0001sd5t9azb49ny","category_id":"ckb3dedjn0019sd5tpr9rfu0u","_id":"ckb3dedmy006usd5t6noil7b1"},{"post_id":"ckb3dedhp0003sd5ta4bx5w94","category_id":"ckb3dedjx001bsd5to647b3g7","_id":"ckb3dedmy006wsd5tj8pf7f3k"},{"post_id":"ckb3dedhr0005sd5tm4l3q7gf","category_id":"ckb3dedjy001dsd5t1brkj0xl","_id":"ckb3dedmy006ysd5tgi3ra63y"},{"post_id":"ckb3dedhs0006sd5tc0m66oim","category_id":"ckb3dedjy001fsd5ty9jymgln","_id":"ckb3dedmy0070sd5tdv5hpiwj"},{"post_id":"ckb3dedhu0007sd5ta469xcad","category_id":"ckb3dedjz001hsd5tpx53zrqq","_id":"ckb3dedmz0072sd5t7oasec8n"},{"post_id":"ckb3dedhv0008sd5txww3fqwu","category_id":"ckb3dedjx001bsd5to647b3g7","_id":"ckb3dedmz0074sd5tb3t52cyu"},{"post_id":"ckb3dedhw0009sd5troup5ztf","category_id":"ckb3dedk1001lsd5tfuhrjb98","_id":"ckb3dedmz0076sd5tifqvptfv"},{"post_id":"ckb3dedhx000asd5t5fwsfrfa","category_id":"ckb3dedk2001nsd5tazbxnd0q","_id":"ckb3dedn10078sd5tfxr2fllc"},{"post_id":"ckb3dedhy000bsd5tv2wyljgn","category_id":"ckb3dedk2001psd5to2pl02s1","_id":"ckb3dedn1007asd5td1myy8ba"},{"post_id":"ckb3dedhz000csd5t5jd0e550","category_id":"ckb3dedk3001rsd5tmtdz7vt4","_id":"ckb3dedn1007csd5t27t2usu2"},{"post_id":"ckb3dedhz000dsd5t3eyd1ip4","category_id":"ckb3dedk3001rsd5tmtdz7vt4","_id":"ckb3dedn1007esd5te8jug98q"},{"post_id":"ckb3dedi0000esd5tcswo60un","category_id":"ckb3dedk4001vsd5ty41tcocw","_id":"ckb3dedn1007gsd5te7qwa7ec"},{"post_id":"ckb3dedi1000fsd5tygabt8dm","category_id":"ckb3dedk4001vsd5ty41tcocw","_id":"ckb3dedn1007isd5t6dubncgc"},{"post_id":"ckb3dedi2000gsd5tfq3n692s","category_id":"ckb3dedjz001hsd5tpx53zrqq","_id":"ckb3dedn2007ksd5trq1gksjm"},{"post_id":"ckb3dedi3000hsd5txgvylkkh","category_id":"ckb3dedk3001rsd5tmtdz7vt4","_id":"ckb3dedn2007msd5t0sdv6a7h"},{"post_id":"ckb3dedi4000isd5tcxcxlep3","category_id":"ckb3dedk3001rsd5tmtdz7vt4","_id":"ckb3dedn2007osd5tizylujz9"},{"post_id":"ckb3dedi5000jsd5t20gzvvwr","category_id":"ckb3dedk80025sd5tk7dmpy0p","_id":"ckb3dedn2007qsd5tzmwipj02"},{"post_id":"ckb3dedi5000ksd5tieb2h68r","category_id":"ckb3dedjz001hsd5tpx53zrqq","_id":"ckb3dedn2007ssd5tkaqecv5o"},{"post_id":"ckb3dedi6000lsd5t28xu3y89","category_id":"ckb3dedk90029sd5tea3s6mvi","_id":"ckb3dedn2007usd5t5zhvwg3y"},{"post_id":"ckb3dedi6000msd5t4rkqej5i","category_id":"ckb3dedk90029sd5tea3s6mvi","_id":"ckb3dedn2007wsd5tumxi9578"},{"post_id":"ckb3dedi7000nsd5tg6behjez","category_id":"ckb3dedka002dsd5ty01pfvgc","_id":"ckb3dedn2007ysd5thuz3lxk5"},{"post_id":"ckb3dedi8000osd5t77w3xz95","category_id":"ckb3dedk90029sd5tea3s6mvi","_id":"ckb3dedn30080sd5tyyswl8on"},{"post_id":"ckb3dedi8000psd5tbugvyxm6","category_id":"ckb3dedk90029sd5tea3s6mvi","_id":"ckb3dedn30082sd5ts1jdp939"},{"post_id":"ckb3dedi9000qsd5tnuq71sjk","category_id":"ckb3dedkd002jsd5t27mm9mo3","_id":"ckb3dedn40084sd5ta8ezv34u"},{"post_id":"ckb3dedi9000rsd5tsimcx0l4","category_id":"ckb3dedkd002jsd5t27mm9mo3","_id":"ckb3dedn40086sd5t2iplwyf1"},{"post_id":"ckb3dedia000ssd5tcjfrfoqs","category_id":"ckb3dedkd002jsd5t27mm9mo3","_id":"ckb3dedn40088sd5tbilvadmc"},{"post_id":"ckb3dedia000tsd5t9xxartxf","category_id":"ckb3dedkd002jsd5t27mm9mo3","_id":"ckb3dedn4008asd5tixxc9j2m"},{"post_id":"ckb3dedib000usd5tmjqmzmte","category_id":"ckb3dedkf002qsd5thpyhcky9","_id":"ckb3dedn4008csd5tgpfnc7yd"},{"post_id":"ckb3dedib000vsd5tausi9rj7","category_id":"ckb3dedkf002ssd5tmfoyi2aq","_id":"ckb3dedn4008esd5ti2v42qua"},{"post_id":"ckb3dedic000wsd5tstki3hsq","category_id":"ckb3dedkd002jsd5t27mm9mo3","_id":"ckb3dedn4008gsd5t1h21uzii"},{"post_id":"ckb3dedid000xsd5tk21hyu6p","category_id":"ckb3dedkg002wsd5tik80jb87","_id":"ckb3dedn5008isd5ta1yc5b40"},{"post_id":"ckb3dedid000ysd5tvpt07yew","category_id":"ckb3dedkh002ysd5t7a981mkn","_id":"ckb3dedn5008ksd5tz9v9bed3"},{"post_id":"ckb3dedie000zsd5t5kie283n","category_id":"ckb3dedkf002ssd5tmfoyi2aq","_id":"ckb3dedn5008msd5tm0enkcah"},{"post_id":"ckb3dedie0010sd5tb6u9rn1e","category_id":"ckb3dedki0032sd5tyhu3i4mu","_id":"ckb3dedn5008osd5tkabeiapp"},{"post_id":"ckb3dedif0011sd5t219lpify","category_id":"ckb3dedkj0034sd5t292ff4xv","_id":"ckb3dedn5008qsd5ttp7nodqf"},{"post_id":"ckb3dedif0012sd5trtt6687b","category_id":"ckb3dedkk0036sd5ttmodbc05","_id":"ckb3dedn6008ssd5tzi9jg8gv"},{"post_id":"ckb3dedig0013sd5t7ua1gjnk","category_id":"ckb3dedkk0038sd5tkuhz441j","_id":"ckb3dedn6008usd5tgbza25rc"},{"post_id":"ckb3dedih0014sd5tq46z8igc","category_id":"ckb3dedkk0038sd5tkuhz441j","_id":"ckb3dedn7008wsd5tsjhk0g9y"},{"post_id":"ckb3dedih0015sd5tpgqb0smk","category_id":"ckb3dedkn003csd5tnp58ip06","_id":"ckb3dedn7008ysd5thdt2hwn3"},{"post_id":"ckb3dedii0016sd5tyw2j72vu","category_id":"ckb3dedko003esd5tdyyvouur","_id":"ckb3dedn70090sd5tuvz4y47b"},{"post_id":"ckb3dedii0017sd5trlgd74j4","category_id":"ckb3dedjz001hsd5tpx53zrqq","_id":"ckb3dedn70092sd5ttjvoq0s3"},{"post_id":"ckb3dedij0018sd5tt6v7atno","category_id":"ckb3dedkf002ssd5tmfoyi2aq","_id":"ckb3dedn70094sd5t3y6bdwtc"}],"PostTag":[{"post_id":"ckb3dedhl0001sd5t9azb49ny","tag_id":"ckb3dedjw001asd5te48b4nib","_id":"ckb3dedmy006tsd5tqimysp4k"},{"post_id":"ckb3dedhl0001sd5t9azb49ny","tag_id":"ckb3dedjx001csd5tooc1ak5d","_id":"ckb3dedmy006vsd5tobo49j4t"},{"post_id":"ckb3dedhp0003sd5ta4bx5w94","tag_id":"ckb3dedjy001esd5tcvtv447m","_id":"ckb3dedmy006xsd5t6ar2ged7"},{"post_id":"ckb3dedhp0003sd5ta4bx5w94","tag_id":"ckb3dedjz001gsd5tia94dr7t","_id":"ckb3dedmy006zsd5tzvyfr1bf"},{"post_id":"ckb3dedhp0003sd5ta4bx5w94","tag_id":"ckb3dedjz001isd5tjolntnr5","_id":"ckb3dedmz0071sd5tigdc9jrp"},{"post_id":"ckb3dedhr0005sd5tm4l3q7gf","tag_id":"ckb3dedk0001ksd5tizwpcyte","_id":"ckb3dedmz0073sd5tk9o0hyek"},{"post_id":"ckb3dedhr0005sd5tm4l3q7gf","tag_id":"ckb3dedk1001msd5tirottemd","_id":"ckb3dedmz0075sd5t5z751rjq"},{"post_id":"ckb3dedhr0005sd5tm4l3q7gf","tag_id":"ckb3dedk2001osd5trfbiusy3","_id":"ckb3dedn10077sd5tmtj15m8l"},{"post_id":"ckb3dedhr0005sd5tm4l3q7gf","tag_id":"ckb3dedk2001qsd5teeboh59x","_id":"ckb3dedn10079sd5tpk7j02ew"},{"post_id":"ckb3dedhr0005sd5tm4l3q7gf","tag_id":"ckb3dedk3001ssd5tjdl5nk0b","_id":"ckb3dedn1007bsd5tri5elyo9"},{"post_id":"ckb3dedhr0005sd5tm4l3q7gf","tag_id":"ckb3dedk4001usd5tfn84t9uk","_id":"ckb3dedn1007dsd5tm2etguib"},{"post_id":"ckb3dedhs0006sd5tc0m66oim","tag_id":"ckb3dedk4001wsd5t4iafotad","_id":"ckb3dedn1007fsd5tn53rfslh"},{"post_id":"ckb3dedhs0006sd5tc0m66oim","tag_id":"ckb3dedk5001ysd5ttjmodink","_id":"ckb3dedn1007hsd5t44uycbua"},{"post_id":"ckb3dedhs0006sd5tc0m66oim","tag_id":"ckb3dedk60020sd5timwdoh4g","_id":"ckb3dedn2007jsd5trag9i6uo"},{"post_id":"ckb3dedhs0006sd5tc0m66oim","tag_id":"ckb3dedk70022sd5t5lm7w75n","_id":"ckb3dedn2007lsd5t1u75qmbb"},{"post_id":"ckb3dedhu0007sd5ta469xcad","tag_id":"ckb3dedk70024sd5t32rzngcw","_id":"ckb3dedn2007nsd5t3g3bq9cd"},{"post_id":"ckb3dedhu0007sd5ta469xcad","tag_id":"ckb3dedk80026sd5t2yrjwz64","_id":"ckb3dedn2007psd5t4hpemavf"},{"post_id":"ckb3dedhu0007sd5ta469xcad","tag_id":"ckb3dedk90028sd5thyvewirj","_id":"ckb3dedn2007rsd5tmhllumyx"},{"post_id":"ckb3dedhu0007sd5ta469xcad","tag_id":"ckb3dedk9002asd5tj03qbegv","_id":"ckb3dedn2007tsd5t4ytkrzok"},{"post_id":"ckb3dedhv0008sd5txww3fqwu","tag_id":"ckb3dedjy001esd5tcvtv447m","_id":"ckb3dedn2007vsd5ts4h31yqq"},{"post_id":"ckb3dedhv0008sd5txww3fqwu","tag_id":"ckb3dedk0001ksd5tizwpcyte","_id":"ckb3dedn2007xsd5tg2pdu9mj"},{"post_id":"ckb3dedhv0008sd5txww3fqwu","tag_id":"ckb3dedkc002gsd5tc9scfvvo","_id":"ckb3dedn3007zsd5tbx6d7sj8"},{"post_id":"ckb3dedhw0009sd5troup5ztf","tag_id":"ckb3dedkd002isd5t4q6igvi9","_id":"ckb3dedn30081sd5tj8sekbjk"},{"post_id":"ckb3dedhw0009sd5troup5ztf","tag_id":"ckb3dedkd002ksd5tgeilir90","_id":"ckb3dedn30083sd5td3ie2r6q"},{"post_id":"ckb3dedhw0009sd5troup5ztf","tag_id":"ckb3dedke002nsd5t2o7pmztq","_id":"ckb3dedn40085sd5ty2r5n90w"},{"post_id":"ckb3dedhx000asd5t5fwsfrfa","tag_id":"ckb3dedkf002psd5tg2jrbl75","_id":"ckb3dedn40087sd5tbtii6tb0"},{"post_id":"ckb3dedhx000asd5t5fwsfrfa","tag_id":"ckb3dedkf002rsd5tqe6bqcl4","_id":"ckb3dedn40089sd5tswkfhs52"},{"post_id":"ckb3dedhx000asd5t5fwsfrfa","tag_id":"ckb3dedkg002tsd5tets7zy31","_id":"ckb3dedn4008bsd5tcl0ajhk2"},{"post_id":"ckb3dedhx000asd5t5fwsfrfa","tag_id":"ckb3dedkg002vsd5trm4692ik","_id":"ckb3dedn4008dsd5t9ei2yfnd"},{"post_id":"ckb3dedhx000asd5t5fwsfrfa","tag_id":"ckb3dedk4001wsd5t4iafotad","_id":"ckb3dedn4008fsd5toyo62ftl"},{"post_id":"ckb3dedhy000bsd5tv2wyljgn","tag_id":"ckb3dedkh002zsd5ts8hr1q3h","_id":"ckb3dedn5008hsd5t5g35ybph"},{"post_id":"ckb3dedhy000bsd5tv2wyljgn","tag_id":"ckb3dedjx001csd5tooc1ak5d","_id":"ckb3dedn5008jsd5t806zgpzw"},{"post_id":"ckb3dedhy000bsd5tv2wyljgn","tag_id":"ckb3dedkj0033sd5tccso8n5u","_id":"ckb3dedn5008lsd5tkmfz18so"},{"post_id":"ckb3dedhz000csd5t5jd0e550","tag_id":"ckb3dedkj0035sd5t2phpu0v9","_id":"ckb3dedn5008nsd5tpvc31ext"},{"post_id":"ckb3dedhz000csd5t5jd0e550","tag_id":"ckb3dedkk0037sd5tz9jkzw7j","_id":"ckb3dedn5008psd5t06hrdrup"},{"post_id":"ckb3dedhz000csd5t5jd0e550","tag_id":"ckb3dedkl0039sd5t8mzvsyi9","_id":"ckb3dedn6008rsd5t85aivtnk"},{"post_id":"ckb3dedhz000csd5t5jd0e550","tag_id":"ckb3dedkn003bsd5t0ao2x44k","_id":"ckb3dedn6008tsd5t7uou0x3p"},{"post_id":"ckb3dedhz000dsd5t3eyd1ip4","tag_id":"ckb3dedkj0035sd5t2phpu0v9","_id":"ckb3dedn7008vsd5t73vor4e2"},{"post_id":"ckb3dedhz000dsd5t3eyd1ip4","tag_id":"ckb3dedkp003fsd5tv6da2v18","_id":"ckb3dedn7008xsd5twovqaqhz"},{"post_id":"ckb3dedi0000esd5tcswo60un","tag_id":"ckb3dedkp003hsd5ttuzz5a9e","_id":"ckb3dedn7008zsd5t4akgpyf4"},{"post_id":"ckb3dedi0000esd5tcswo60un","tag_id":"ckb3dedkq003jsd5tq6120x0k","_id":"ckb3dedn70091sd5t9s30syzp"},{"post_id":"ckb3dedi1000fsd5tygabt8dm","tag_id":"ckb3dedkq003ksd5tnkgwyxu0","_id":"ckb3dedn70093sd5telwnsm4t"},{"post_id":"ckb3dedi1000fsd5tygabt8dm","tag_id":"ckb3dedkr003lsd5t4itr3m3u","_id":"ckb3dedn70095sd5toqo3vm3r"},{"post_id":"ckb3dedi1000fsd5tygabt8dm","tag_id":"ckb3dedjx001csd5tooc1ak5d","_id":"ckb3dedn70096sd5tv06ht4wj"},{"post_id":"ckb3dedi2000gsd5tfq3n692s","tag_id":"ckb3dedkr003nsd5thoku4ctc","_id":"ckb3dedn70097sd5t2sfvtmhn"},{"post_id":"ckb3dedi2000gsd5tfq3n692s","tag_id":"ckb3dedkr003osd5tx9zqymos","_id":"ckb3dedn70098sd5ty46ek45w"},{"post_id":"ckb3dedi2000gsd5tfq3n692s","tag_id":"ckb3dedks003psd5tyynm36z9","_id":"ckb3dedn80099sd5t12n4ixko"},{"post_id":"ckb3dedi2000gsd5tfq3n692s","tag_id":"ckb3dedks003qsd5txawsiqqs","_id":"ckb3dedn8009asd5te4eufld5"},{"post_id":"ckb3dedi2000gsd5tfq3n692s","tag_id":"ckb3dedks003rsd5t90bswxbb","_id":"ckb3dedn8009bsd5ts2c1nc2e"},{"post_id":"ckb3dedi2000gsd5tfq3n692s","tag_id":"ckb3dedkt003ssd5t29zriblc","_id":"ckb3dedn8009csd5twkeucy3x"},{"post_id":"ckb3dedi3000hsd5txgvylkkh","tag_id":"ckb3dedkj0035sd5t2phpu0v9","_id":"ckb3dedn8009dsd5ttl3z24vl"},{"post_id":"ckb3dedi3000hsd5txgvylkkh","tag_id":"ckb3dedkt003usd5tji2b4y50","_id":"ckb3dedn8009esd5t6t721jsf"},{"post_id":"ckb3dedi3000hsd5txgvylkkh","tag_id":"ckb3dedku003vsd5tr0v3vx45","_id":"ckb3dedn8009fsd5tishojnpq"},{"post_id":"ckb3dedi3000hsd5txgvylkkh","tag_id":"ckb3dedku003wsd5t6grukueg","_id":"ckb3dedn8009gsd5t2njplkdg"},{"post_id":"ckb3dedi3000hsd5txgvylkkh","tag_id":"ckb3dedku003xsd5tphhmwqzl","_id":"ckb3dedn8009hsd5ts42mz4ty"},{"post_id":"ckb3dedi4000isd5tcxcxlep3","tag_id":"ckb3dedkj0035sd5t2phpu0v9","_id":"ckb3dedn8009isd5tulfb3fic"},{"post_id":"ckb3dedi4000isd5tcxcxlep3","tag_id":"ckb3dedkv003zsd5to253ahjt","_id":"ckb3dedn8009jsd5tz1nom1e6"},{"post_id":"ckb3dedi4000isd5tcxcxlep3","tag_id":"ckb3dedkv0040sd5tssa5a5wi","_id":"ckb3dedn8009ksd5tjzo10ibr"},{"post_id":"ckb3dedi4000isd5tcxcxlep3","tag_id":"ckb3dedkv0041sd5tit2gda1b","_id":"ckb3dedn8009lsd5tjsna3v5d"},{"post_id":"ckb3dedi4000isd5tcxcxlep3","tag_id":"ckb3dedkv0042sd5tnorf44z0","_id":"ckb3dedn8009msd5tpe6cy6z2"},{"post_id":"ckb3dedi5000jsd5t20gzvvwr","tag_id":"ckb3dedkw0043sd5t42i8rsz6","_id":"ckb3dedn8009nsd5t46t6ox74"},{"post_id":"ckb3dedi5000jsd5t20gzvvwr","tag_id":"ckb3dedkw0044sd5tykgocswa","_id":"ckb3dedn8009osd5tsudux7sc"},{"post_id":"ckb3dedi5000jsd5t20gzvvwr","tag_id":"ckb3dedkw0045sd5t4pythovx","_id":"ckb3dedn8009psd5tpatfnq97"},{"post_id":"ckb3dedi5000jsd5t20gzvvwr","tag_id":"ckb3dedkw0046sd5t8op5wp09","_id":"ckb3dedn8009qsd5tfz9mwxtw"},{"post_id":"ckb3dedi5000jsd5t20gzvvwr","tag_id":"ckb3dedkx0047sd5th5xxn8tx","_id":"ckb3dedn8009rsd5tceb8o83q"},{"post_id":"ckb3dedi5000ksd5tieb2h68r","tag_id":"ckb3dedkr003nsd5thoku4ctc","_id":"ckb3dedn8009ssd5tk1kdd4r3"},{"post_id":"ckb3dedi5000ksd5tieb2h68r","tag_id":"ckb3dedkr003osd5tx9zqymos","_id":"ckb3dedn8009tsd5trv9g4mrs"},{"post_id":"ckb3dedi5000ksd5tieb2h68r","tag_id":"ckb3dedks003psd5tyynm36z9","_id":"ckb3dedn8009usd5tbkmban3o"},{"post_id":"ckb3dedi5000ksd5tieb2h68r","tag_id":"ckb3dedks003qsd5txawsiqqs","_id":"ckb3dedn8009vsd5tgmaa541t"},{"post_id":"ckb3dedi6000lsd5t28xu3y89","tag_id":"ckb3dedk0001ksd5tizwpcyte","_id":"ckb3dedn8009wsd5tcheog77s"},{"post_id":"ckb3dedi6000lsd5t28xu3y89","tag_id":"ckb3dedkz004dsd5tg90xggpn","_id":"ckb3dedn8009xsd5to74wccqt"},{"post_id":"ckb3dedi6000lsd5t28xu3y89","tag_id":"ckb3dedkz004esd5t37gzxvi4","_id":"ckb3dedn8009ysd5tafq5spna"},{"post_id":"ckb3dedi6000lsd5t28xu3y89","tag_id":"ckb3dedkz004fsd5t7lrg6o40","_id":"ckb3dedn8009zsd5tz69t9vg7"},{"post_id":"ckb3dedi6000msd5t4rkqej5i","tag_id":"ckb3dedk0001ksd5tizwpcyte","_id":"ckb3dedn800a0sd5tx91ub1wn"},{"post_id":"ckb3dedi6000msd5t4rkqej5i","tag_id":"ckb3dedkz004dsd5tg90xggpn","_id":"ckb3dedn800a1sd5tru1ybksz"},{"post_id":"ckb3dedi6000msd5t4rkqej5i","tag_id":"ckb3dedkz004esd5t37gzxvi4","_id":"ckb3dedn800a2sd5t8ipzpgc5"},{"post_id":"ckb3dedi6000msd5t4rkqej5i","tag_id":"ckb3dedl1004jsd5tjtvgw7rt","_id":"ckb3dedn900a3sd5tbbp8h0y3"},{"post_id":"ckb3dedi7000nsd5tg6behjez","tag_id":"ckb3dedl2004ksd5tr2szd3a1","_id":"ckb3dedn900a4sd5tsxcd9u4h"},{"post_id":"ckb3dedi7000nsd5tg6behjez","tag_id":"ckb3dedl2004lsd5tiwk042jg","_id":"ckb3dedn900a5sd5t0k70b9h4"},{"post_id":"ckb3dedi7000nsd5tg6behjez","tag_id":"ckb3dedl2004msd5txgsu958o","_id":"ckb3dedn900a6sd5txadu5dza"},{"post_id":"ckb3dedi8000osd5t77w3xz95","tag_id":"ckb3dedk0001ksd5tizwpcyte","_id":"ckb3dedn900a7sd5t0n0jw7pq"},{"post_id":"ckb3dedi8000osd5t77w3xz95","tag_id":"ckb3dedkz004dsd5tg90xggpn","_id":"ckb3dedn900a8sd5trvz4a0fj"},{"post_id":"ckb3dedi8000osd5t77w3xz95","tag_id":"ckb3dedkz004esd5t37gzxvi4","_id":"ckb3dedn900a9sd5tzsf19ykl"},{"post_id":"ckb3dedi8000osd5t77w3xz95","tag_id":"ckb3dedl4004qsd5tn9qw1dl2","_id":"ckb3dedn900aasd5t81rlvx6s"},{"post_id":"ckb3dedi8000psd5tbugvyxm6","tag_id":"ckb3dedk0001ksd5tizwpcyte","_id":"ckb3dedn900absd5tyhing41o"},{"post_id":"ckb3dedi8000psd5tbugvyxm6","tag_id":"ckb3dedkz004dsd5tg90xggpn","_id":"ckb3dedn900acsd5tjy8fsshq"},{"post_id":"ckb3dedi8000psd5tbugvyxm6","tag_id":"ckb3dedkz004esd5t37gzxvi4","_id":"ckb3dedn900adsd5tsc0zdlsy"},{"post_id":"ckb3dedi8000psd5tbugvyxm6","tag_id":"ckb3dedl6004usd5t1hr1xqyh","_id":"ckb3dedn900aesd5troh7amsn"},{"post_id":"ckb3dedi9000qsd5tnuq71sjk","tag_id":"ckb3dedl6004vsd5tuwd9xbr8","_id":"ckb3dedn900afsd5t41si1wfv"},{"post_id":"ckb3dedi9000qsd5tnuq71sjk","tag_id":"ckb3dedl6004wsd5tvqigocqg","_id":"ckb3dedn900agsd5tx5v1u2z6"},{"post_id":"ckb3dedi9000qsd5tnuq71sjk","tag_id":"ckb3dedl6004xsd5tb1xwg1al","_id":"ckb3dedn900ahsd5tc3sbatlq"},{"post_id":"ckb3dedi9000rsd5tsimcx0l4","tag_id":"ckb3dedl6004vsd5tuwd9xbr8","_id":"ckb3dedn900aisd5t2zill6nm"},{"post_id":"ckb3dedi9000rsd5tsimcx0l4","tag_id":"ckb3dedl7004zsd5tldwe6197","_id":"ckb3dedn900ajsd5t9tgi8vjp"},{"post_id":"ckb3dedi9000rsd5tsimcx0l4","tag_id":"ckb3dedl70050sd5tccs1qdvx","_id":"ckb3dedn900aksd5t8x5vqprc"},{"post_id":"ckb3dedi9000rsd5tsimcx0l4","tag_id":"ckb3dedl70051sd5t8i9g5ya3","_id":"ckb3dedn900alsd5tmm7zdfi3"},{"post_id":"ckb3dedi9000rsd5tsimcx0l4","tag_id":"ckb3dedl70052sd5t3p5g014g","_id":"ckb3dedn900amsd5tb82uhksi"},{"post_id":"ckb3dedia000ssd5tcjfrfoqs","tag_id":"ckb3dedl6004vsd5tuwd9xbr8","_id":"ckb3dedn900ansd5t4bthvkdc"},{"post_id":"ckb3dedia000ssd5tcjfrfoqs","tag_id":"ckb3dedl90054sd5ttn1rjq76","_id":"ckb3dedna00aosd5t256jk51j"},{"post_id":"ckb3dedia000ssd5tcjfrfoqs","tag_id":"ckb3dedl6004wsd5tvqigocqg","_id":"ckb3dedna00apsd5t6x0y9q8s"},{"post_id":"ckb3dedia000tsd5t9xxartxf","tag_id":"ckb3dedl6004vsd5tuwd9xbr8","_id":"ckb3dednb00aqsd5t9lbyvpso"},{"post_id":"ckb3dedia000tsd5t9xxartxf","tag_id":"ckb3dedla0057sd5tieysfo2w","_id":"ckb3dednb00arsd5trbd4a474"},{"post_id":"ckb3dedia000tsd5t9xxartxf","tag_id":"ckb3dedla0058sd5tkg069lt0","_id":"ckb3dednb00assd5tadcih5py"},{"post_id":"ckb3dedia000tsd5t9xxartxf","tag_id":"ckb3dedlb0059sd5tciorrroq","_id":"ckb3dednb00atsd5tkmzotp5c"},{"post_id":"ckb3dedia000tsd5t9xxartxf","tag_id":"ckb3dedlb005asd5ts15rnu6a","_id":"ckb3dednb00ausd5tabncil24"},{"post_id":"ckb3dedia000tsd5t9xxartxf","tag_id":"ckb3dedlb005bsd5tnc7qxqac","_id":"ckb3dednb00avsd5tz99ayxwe"},{"post_id":"ckb3dedib000usd5tmjqmzmte","tag_id":"ckb3dedlb005csd5twkm61bvp","_id":"ckb3dednb00awsd5tt9usu7jf"},{"post_id":"ckb3dedib000usd5tmjqmzmte","tag_id":"ckb3dedlb005dsd5t42e2evxi","_id":"ckb3dednb00axsd5t6lje882o"},{"post_id":"ckb3dedib000usd5tmjqmzmte","tag_id":"ckb3dedlb005esd5tdy94hte0","_id":"ckb3dednb00aysd5tntq1x6h7"},{"post_id":"ckb3dedib000vsd5tausi9rj7","tag_id":"ckb3dedlc005fsd5tsdthlxpa","_id":"ckb3dednb00azsd5t8159ulzw"},{"post_id":"ckb3dedib000vsd5tausi9rj7","tag_id":"ckb3dedlc005gsd5ti285xr68","_id":"ckb3dednb00b0sd5topjs5x70"},{"post_id":"ckb3dedib000vsd5tausi9rj7","tag_id":"ckb3dedkc002gsd5tc9scfvvo","_id":"ckb3dednb00b1sd5tdt81umlp"},{"post_id":"ckb3dedic000wsd5tstki3hsq","tag_id":"ckb3dedl6004vsd5tuwd9xbr8","_id":"ckb3dednb00b2sd5t5bvxnt49"},{"post_id":"ckb3dedic000wsd5tstki3hsq","tag_id":"ckb3dedjx001csd5tooc1ak5d","_id":"ckb3dednb00b3sd5tin5dt7wr"},{"post_id":"ckb3dedic000wsd5tstki3hsq","tag_id":"ckb3dedl6004xsd5tb1xwg1al","_id":"ckb3dednb00b4sd5tw90ybdgj"},{"post_id":"ckb3dedic000wsd5tstki3hsq","tag_id":"ckb3dedla0058sd5tkg069lt0","_id":"ckb3dednb00b5sd5t1xu319kw"},{"post_id":"ckb3dedid000xsd5tk21hyu6p","tag_id":"ckb3dedle005msd5tk5rximf4","_id":"ckb3dednb00b6sd5t9fyvaef4"},{"post_id":"ckb3dedid000xsd5tk21hyu6p","tag_id":"ckb3dedle005nsd5t56nng4yp","_id":"ckb3dednb00b7sd5tuh0gn2lp"},{"post_id":"ckb3dedid000xsd5tk21hyu6p","tag_id":"ckb3dedlf005osd5t3ges6kkf","_id":"ckb3dednb00b8sd5tazxx155o"},{"post_id":"ckb3dedid000xsd5tk21hyu6p","tag_id":"ckb3dedli005psd5tz8cuq1ka","_id":"ckb3dednb00b9sd5tjz368nks"},{"post_id":"ckb3dedid000ysd5tvpt07yew","tag_id":"ckb3dedli005qsd5t99k4wct8","_id":"ckb3dednb00basd5tbbuox8c2"},{"post_id":"ckb3dedid000ysd5tvpt07yew","tag_id":"ckb3dedli005rsd5t8dvqtht3","_id":"ckb3dednb00bbsd5t6yx11ejp"},{"post_id":"ckb3dedid000ysd5tvpt07yew","tag_id":"ckb3dedlj005ssd5toyko3cip","_id":"ckb3dednb00bcsd5tmdmjp28b"},{"post_id":"ckb3dedid000ysd5tvpt07yew","tag_id":"ckb3dedlj005tsd5thxh4bmae","_id":"ckb3dednb00bdsd5trspg1t43"},{"post_id":"ckb3dedie000zsd5t5kie283n","tag_id":"ckb3dedlj005usd5t497d0d42","_id":"ckb3dednc00besd5tgoletznv"},{"post_id":"ckb3dedie000zsd5t5kie283n","tag_id":"ckb3dedlj005vsd5tvjnuihub","_id":"ckb3dednc00bfsd5ttsq62bfe"},{"post_id":"ckb3dedie000zsd5t5kie283n","tag_id":"ckb3dedlk005wsd5tpldqjgqy","_id":"ckb3dednc00bgsd5tv04713fq"},{"post_id":"ckb3dedif0011sd5t219lpify","tag_id":"ckb3dedlk005xsd5tkwlsnt6z","_id":"ckb3dednc00bhsd5tpdp5u3ny"},{"post_id":"ckb3dedif0011sd5t219lpify","tag_id":"ckb3dedlk005ysd5tq2wpg3v3","_id":"ckb3dednc00bisd5tu8trs3ew"},{"post_id":"ckb3dedif0011sd5t219lpify","tag_id":"ckb3dedlk005zsd5t3xnz3spl","_id":"ckb3dednc00bjsd5t4cufxnda"},{"post_id":"ckb3dedif0012sd5trtt6687b","tag_id":"ckb3dedlk0060sd5tvw4rdjx0","_id":"ckb3dednc00bksd5tn61q3hvj"},{"post_id":"ckb3dedif0012sd5trtt6687b","tag_id":"ckb3dedl2004lsd5tiwk042jg","_id":"ckb3dednc00blsd5tkf25g8qa"},{"post_id":"ckb3dedif0012sd5trtt6687b","tag_id":"ckb3dedk60020sd5timwdoh4g","_id":"ckb3dednc00bmsd5tfimui1eu"},{"post_id":"ckb3dedif0012sd5trtt6687b","tag_id":"ckb3dedll0063sd5t5i74qmww","_id":"ckb3dednc00bnsd5tp2mx35oi"},{"post_id":"ckb3dedig0013sd5t7ua1gjnk","tag_id":"ckb3dedll0064sd5tbgadt3rj","_id":"ckb3dednc00bosd5tb6fppmpd"},{"post_id":"ckb3dedig0013sd5t7ua1gjnk","tag_id":"ckb3dedll0065sd5tgns4v0ke","_id":"ckb3dednc00bpsd5tswg1ztd0"},{"post_id":"ckb3dedig0013sd5t7ua1gjnk","tag_id":"ckb3dedkw0046sd5t8op5wp09","_id":"ckb3dednc00bqsd5toiulp30q"},{"post_id":"ckb3dedig0013sd5t7ua1gjnk","tag_id":"ckb3dedlm0067sd5ter3viofv","_id":"ckb3dednc00brsd5ta2ntiu8w"},{"post_id":"ckb3dedig0013sd5t7ua1gjnk","tag_id":"ckb3dedlm0068sd5tqr6gfcj4","_id":"ckb3dednc00bssd5te8y9wtaf"},{"post_id":"ckb3dedih0014sd5tq46z8igc","tag_id":"ckb3dedll0064sd5tbgadt3rj","_id":"ckb3dednc00btsd5tlap7o6a8"},{"post_id":"ckb3dedih0014sd5tq46z8igc","tag_id":"ckb3dedll0065sd5tgns4v0ke","_id":"ckb3dednc00busd5t6dzk98z8"},{"post_id":"ckb3dedih0014sd5tq46z8igc","tag_id":"ckb3dedkw0046sd5t8op5wp09","_id":"ckb3dednc00bvsd5t15ia0bbm"},{"post_id":"ckb3dedih0014sd5tq46z8igc","tag_id":"ckb3dedle005msd5tk5rximf4","_id":"ckb3dednc00bwsd5tj63l5khd"},{"post_id":"ckb3dedih0014sd5tq46z8igc","tag_id":"ckb3dedlm0068sd5tqr6gfcj4","_id":"ckb3dednc00bxsd5tv870sh4u"},{"post_id":"ckb3dedih0014sd5tq46z8igc","tag_id":"ckb3dedlo006esd5tq6qk154u","_id":"ckb3dednc00bysd5tuh4d7ofx"},{"post_id":"ckb3dedih0014sd5tq46z8igc","tag_id":"ckb3dedlo006fsd5taz6vjkl5","_id":"ckb3dednc00bzsd5tr2ns3s4e"},{"post_id":"ckb3dedih0015sd5tpgqb0smk","tag_id":"ckb3dedlp006gsd5t4a4151wz","_id":"ckb3dednd00c0sd5t3586csom"},{"post_id":"ckb3dedih0015sd5tpgqb0smk","tag_id":"ckb3dedlp006hsd5t5k1xc6tm","_id":"ckb3dednd00c1sd5t8g2sjnpx"},{"post_id":"ckb3dedii0016sd5tyw2j72vu","tag_id":"ckb3dedlp006isd5ta3u5rxcg","_id":"ckb3dednf00c2sd5twha0dwd5"},{"post_id":"ckb3dedii0016sd5tyw2j72vu","tag_id":"ckb3dedlp006jsd5tl69wnxb1","_id":"ckb3dednf00c3sd5tooayk5uh"},{"post_id":"ckb3dedii0017sd5trlgd74j4","tag_id":"ckb3dedkr003nsd5thoku4ctc","_id":"ckb3dednf00c4sd5ty164omv2"},{"post_id":"ckb3dedii0017sd5trlgd74j4","tag_id":"ckb3dedlq006lsd5tzmea5qxe","_id":"ckb3dednf00c5sd5t37o89egz"},{"post_id":"ckb3dedii0017sd5trlgd74j4","tag_id":"ckb3dedks003psd5tyynm36z9","_id":"ckb3dedng00c6sd5t2cu144jz"},{"post_id":"ckb3dedii0017sd5trlgd74j4","tag_id":"ckb3dedlr006nsd5tia5i8t9l","_id":"ckb3dedng00c7sd5tgck0db62"},{"post_id":"ckb3dedij0018sd5tt6v7atno","tag_id":"ckb3dedlr006osd5tif3q3ih7","_id":"ckb3dedng00c8sd5t1n7xfs93"},{"post_id":"ckb3dedij0018sd5tt6v7atno","tag_id":"ckb3dedlr006psd5tcr7sncvg","_id":"ckb3dedng00c9sd5tqt7lbixm"},{"post_id":"ckb3dedij0018sd5tt6v7atno","tag_id":"ckb3dedls006qsd5thxfdab1i","_id":"ckb3dedng00casd5txe2j6i2n"},{"post_id":"ckb3dedij0018sd5tt6v7atno","tag_id":"ckb3dedk1001msd5tirottemd","_id":"ckb3dedng00cbsd5tckugston"},{"post_id":"ckb3dedij0018sd5tt6v7atno","tag_id":"ckb3dedls006ssd5t0ck3lggn","_id":"ckb3dedng00ccsd5tmncegai8"}],"Tag":[{"name":"AngularJS","_id":"ckb3dedjw001asd5te48b4nib"},{"name":"notes","_id":"ckb3dedjx001csd5tooc1ak5d"},{"name":"BlockChain","_id":"ckb3dedjy001esd5tcvtv447m"},{"name":"Smart Contract","_id":"ckb3dedjz001gsd5tia94dr7t"},{"name":"ETH","_id":"ckb3dedjz001isd5tjolntnr5"},{"name":"Java","_id":"ckb3dedk0001ksd5tizwpcyte"},{"name":"basic","_id":"ckb3dedk1001msd5tirottemd"},{"name":"Array","_id":"ckb3dedk2001osd5trfbiusy3"},{"name":"Vector","_id":"ckb3dedk2001qsd5teeboh59x"},{"name":"Set","_id":"ckb3dedk3001ssd5tjdl5nk0b"},{"name":"Map","_id":"ckb3dedk4001usd5tfn84t9uk"},{"name":"AWS","_id":"ckb3dedk4001wsd5t4iafotad"},{"name":"lambda","_id":"ckb3dedk5001ysd5ttjmodink"},{"name":"python","_id":"ckb3dedk60020sd5timwdoh4g"},{"name":"gmail API","_id":"ckb3dedk70022sd5t5lm7w75n"},{"name":"blog","_id":"ckb3dedk70024sd5t32rzngcw"},{"name":"hexo","_id":"ckb3dedk80026sd5t2yrjwz64"},{"name":"ubuntu","_id":"ckb3dedk90028sd5thyvewirj"},{"name":"migrate","_id":"ckb3dedk9002asd5tj03qbegv"},{"name":"demo","_id":"ckb3dedkc002gsd5tc9scfvvo"},{"name":"Bootstrap","_id":"ckb3dedkd002isd5t4q6igvi9"},{"name":"CheatSheet","_id":"ckb3dedkd002ksd5tgeilir90"},{"name":"FrontEnd","_id":"ckb3dedke002nsd5t2o7pmztq"},{"name":"database","_id":"ckb3dedkf002psd5tg2jrbl75"},{"name":"Postgres","_id":"ckb3dedkf002rsd5tqe6bqcl4"},{"name":"install","_id":"ckb3dedkg002tsd5tets7zy31"},{"name":"setup","_id":"ckb3dedkg002vsd5trm4692ik"},{"name":"docker","_id":"ckb3dedkh002zsd5ts8hr1q3h"},{"name":"CICD","_id":"ckb3dedkj0033sd5tccso8n5u"},{"name":"Java 300集","_id":"ckb3dedkj0035sd5t2phpu0v9"},{"name":"DateFormat","_id":"ckb3dedkk0037sd5tz9jkzw7j"},{"name":"Date","_id":"ckb3dedkl0039sd5t8mzvsyi9"},{"name":"Calendar","_id":"ckb3dedkn003bsd5t0ao2x44k"},{"name":"GC","_id":"ckb3dedkp003fsd5tv6da2v18"},{"name":"Git","_id":"ckb3dedkp003hsd5ttuzz5a9e"},{"name":"学习笔记","_id":"ckb3dedkq003jsd5tq6120x0k"},{"name":"github","_id":"ckb3dedkq003ksd5tnkgwyxu0"},{"name":"git","_id":"ckb3dedkr003lsd5t4itr3m3u"},{"name":"Hexo","_id":"ckb3dedkr003nsd5thoku4ctc"},{"name":"Next","_id":"ckb3dedkr003osd5tx9zqymos"},{"name":"博客","_id":"ckb3dedks003psd5tyynm36z9"},{"name":"主题优化","_id":"ckb3dedks003qsd5txawsiqqs"},{"name":"评论","_id":"ckb3dedks003rsd5t90bswxbb"},{"name":"Gitment","_id":"ckb3dedkt003ssd5t29zriblc"},{"name":"IO","_id":"ckb3dedkt003usd5tji2b4y50"},{"name":"copy","_id":"ckb3dedku003vsd5tr0v3vx45"},{"name":"序列化","_id":"ckb3dedku003wsd5t6grukueg"},{"name":"装饰设计模式","_id":"ckb3dedku003xsd5tphhmwqzl"},{"name":"JVM","_id":"ckb3dedkv003zsd5to253ahjt"},{"name":"stack","_id":"ckb3dedkv0040sd5tssa5a5wi"},{"name":"head","_id":"ckb3dedkv0041sd5tit2gda1b"},{"name":"内存分析","_id":"ckb3dedkv0042sd5tnorf44z0"},{"name":"JUnit","_id":"ckb3dedkw0043sd5t42i8rsz6"},{"name":"test","_id":"ckb3dedkw0044sd5tykgocswa"},{"name":"unit","_id":"ckb3dedkw0045sd5t4pythovx"},{"name":"beginner","_id":"ckb3dedkw0046sd5t8op5wp09"},{"name":"automation","_id":"ckb3dedkx0047sd5th5xxn8tx"},{"name":"course","_id":"ckb3dedkz004dsd5tg90xggpn"},{"name":"note","_id":"ckb3dedkz004esd5t37gzxvi4"},{"name":"Abstract，Abstract Class","_id":"ckb3dedkz004fsd5t7lrg6o40"},{"name":"Interface","_id":"ckb3dedl1004jsd5tjtvgw7rt"},{"name":"Python","_id":"ckb3dedl2004ksd5tr2szd3a1"},{"name":"algorithm","_id":"ckb3dedl2004lsd5tiwk042jg"},{"name":"hanoi","_id":"ckb3dedl2004msd5txgsu958o"},{"name":"generics","_id":"ckb3dedl4004qsd5tn9qw1dl2"},{"name":"LinkedList","_id":"ckb3dedl6004usd5t1hr1xqyh"},{"name":"Linux","_id":"ckb3dedl6004vsd5tuwd9xbr8"},{"name":"command","_id":"ckb3dedl6004wsd5tvqigocqg"},{"name":"shell","_id":"ckb3dedl6004xsd5tb1xwg1al"},{"name":"SSH","_id":"ckb3dedl7004zsd5tldwe6197"},{"name":"SCP","_id":"ckb3dedl70050sd5tccs1qdvx"},{"name":"password","_id":"ckb3dedl70051sd5t8i9g5ya3"},{"name":"server","_id":"ckb3dedl70052sd5t3p5g014g"},{"name":"vi","_id":"ckb3dedl90054sd5ttn1rjq76"},{"name":"sh","_id":"ckb3dedla0057sd5tieysfo2w"},{"name":"script","_id":"ckb3dedla0058sd5tkg069lt0"},{"name":"template","_id":"ckb3dedlb0059sd5tciorrroq"},{"name":"menu","_id":"ckb3dedlb005asd5ts15rnu6a"},{"name":"center","_id":"ckb3dedlb005bsd5tnc7qxqac"},{"name":"ohm","_id":"ckb3dedlb005csd5twkm61bvp"},{"name":"promote","_id":"ckb3dedlb005dsd5t42e2evxi"},{"name":"code","_id":"ckb3dedlb005esd5tdy94hte0"},{"name":"XML","_id":"ckb3dedlc005fsd5tsdthlxpa"},{"name":"dom4j","_id":"ckb3dedlc005gsd5ti285xr68"},{"name":"PostgreSQL","_id":"ckb3dedle005msd5tk5rximf4"},{"name":"10","_id":"ckb3dedle005nsd5t56nng4yp"},{"name":"Windows","_id":"ckb3dedlf005osd5t3ges6kkf"},{"name":"使用记录","_id":"ckb3dedli005psd5tz8cuq1ka"},{"name":"Selenium","_id":"ckb3dedli005qsd5t99k4wct8"},{"name":"Ping","_id":"ckb3dedli005rsd5t8dvqtht3"},{"name":"URL","_id":"ckb3dedlj005ssd5toyko3cip"},{"name":"Login","_id":"ckb3dedlj005tsd5thxh4bmae"},{"name":"Servlet","_id":"ckb3dedlj005usd5t497d0d42"},{"name":"image","_id":"ckb3dedlj005vsd5tvjnuihub"},{"name":"random","_id":"ckb3dedlk005wsd5tpldqjgqy"},{"name":"程序员","_id":"ckb3dedlk005xsd5tkwlsnt6z"},{"name":"指南","_id":"ckb3dedlk005ysd5tq2wpg3v3"},{"name":"入门","_id":"ckb3dedlk005zsd5t3xnz3spl"},{"name":"TSP","_id":"ckb3dedlk0060sd5tvw4rdjx0"},{"name":"贪心","_id":"ckb3dedll0063sd5t5i74qmww"},{"name":"Spring","_id":"ckb3dedll0064sd5tbgadt3rj"},{"name":"Spring Boot","_id":"ckb3dedll0065sd5tgns4v0ke"},{"name":"Maven","_id":"ckb3dedlm0067sd5ter3viofv"},{"name":"Rest","_id":"ckb3dedlm0068sd5tqr6gfcj4"},{"name":"JPA","_id":"ckb3dedlo006esd5tq6qk154u"},{"name":"Spring Data JPA","_id":"ckb3dedlo006fsd5taz6vjkl5"},{"name":"数据结构","_id":"ckb3dedlp006gsd5t4a4151wz"},{"name":"算法","_id":"ckb3dedlp006hsd5t5k1xc6tm"},{"name":"辅助","_id":"ckb3dedlp006isd5ta3u5rxcg"},{"name":"小程序","_id":"ckb3dedlp006jsd5tl69wnxb1"},{"name":"GitHub Pages","_id":"ckb3dedlq006lsd5tzmea5qxe"},{"name":"next","_id":"ckb3dedlr006nsd5tia5i8t9l"},{"name":"java","_id":"ckb3dedlr006osd5tif3q3ih7"},{"name":"web","_id":"ckb3dedlr006psd5tcr7sncvg"},{"name":"heima","_id":"ckb3dedls006qsd5thxfdab1i"},{"name":"tutorial","_id":"ckb3dedls006ssd5t0ck3lggn"}]}}