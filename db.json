{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/Git 周期.png","path":"images/Git 周期.png","modified":0,"renderable":0},{"_id":"source/images/ng-model.png","path":"images/ng-model.png","modified":0,"renderable":0},{"_id":"source/images/ngspringboot-structure.png","path":"images/ngspringboot-structure.png","modified":0,"renderable":0},{"_id":"source/images/spring-init.png","path":"images/spring-init.png","modified":1,"renderable":0},{"_id":"source/images/博客主页下方访问量.png","path":"images/博客主页下方访问量.png","modified":0,"renderable":0},{"_id":"source/images/文章页面访问量.png","path":"images/文章页面访问量.png","modified":0,"renderable":0},{"_id":"source/images/添加页面之前.png","path":"images/添加页面之前.png","modified":0,"renderable":0},{"_id":"source/images/本地修改-github的流程图.jpg","path":"images/本地修改-github的流程图.jpg","modified":0,"renderable":0},{"_id":"source/images/添加页面之后.png","path":"images/添加页面之后.png","modified":0,"renderable":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"source/images/SQuirreL-SQL-Client.png","path":"images/SQuirreL-SQL-Client.png","modified":0,"renderable":0},{"_id":"source/images/微信打赏.png","path":"images/微信打赏.png","modified":0,"renderable":0},{"_id":"source/images/Git introduction for CVS_SVN_TFS users.png","path":"images/Git introduction for CVS_SVN_TFS users.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar1.JPG","path":"images/avatar1.JPG","modified":0,"renderable":1},{"_id":"source/images/get-uses.png","path":"images/get-uses.png","modified":1,"renderable":0},{"_id":"source/images/post-add-user.png","path":"images/post-add-user.png","modified":1,"renderable":0},{"_id":"source/images/post-result.png","path":"images/post-result.png","modified":1,"renderable":0},{"_id":"source/images/put-result.png","path":"images/put-result.png","modified":1,"renderable":0},{"_id":"source/images/put-update-user.png","path":"images/put-update-user.png","modified":1,"renderable":0},{"_id":"source/images/springboot-structure.png","path":"images/springboot-structure.png","modified":1,"renderable":0}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1511573984201},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1511573984201},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1511573984203},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1511573984203},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1511573984203},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1511573984203},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1511573984203},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1511573984203},{"_id":"themes/next/README.cn.md","hash":"419b60d064a4ac66565ddeec1be55802acf68c8b","modified":1511573984204},{"_id":"themes/next/_config.yml","hash":"ac46b4fce830737c73a88ca68e6981066acc41bf","modified":1512055682677},{"_id":"themes/next/README.md","hash":"631d68e9cbced2f11cd976bf883b7d8b08b9b365","modified":1511573984204},{"_id":"themes/next/bower.json","hash":"47471a8f13528dc4052b746db5b4be2375682173","modified":1511573984205},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1511573984205},{"_id":"themes/next/package.json","hash":"39370e2aadf1f9a7c105edff064c6e47682b3932","modified":1511573984228},{"_id":"source/_posts/AngularJS-Learning.md","hash":"190ebeb3b05be9bc39ab8f9f72022505bf44f49f","modified":1513093046000},{"_id":"source/_posts/Clone-Blog-to-Ubuntu.md","hash":"b200f1f734d1b69e06760857ab8868db0a438022","modified":1512766385462},{"_id":"source/_posts/Database-PostgreSQL.md","hash":"00e9afaa4092cd3f0470ee778a5ae336485339f6","modified":1513934017426},{"_id":"source/_posts/Git-学习笔记.md","hash":"d24799f54732459a4cb69ad1c24dd7140f287bc4","modified":1512823192000},{"_id":"source/_posts/Github-Learning.md","hash":"5fca60cf541e812c7850a277f39cfa8e99bd4bd9","modified":1512811176000},{"_id":"source/_posts/Hexo-Next-添加-Gitment-评论系统.md","hash":"b18dce76b253df9f2d9d59ac81ae5870fbfeda7f","modified":1512910522000},{"_id":"source/_posts/Hexo-的-Next-主题优化.md","hash":"6585c6f694a60d0fee942e7cf61c2110ffcf5730","modified":1512910513000},{"_id":"source/_posts/Linux-Command.md","hash":"3e6eaab1f793601bb4e83d6f1459145c17bf11ef","modified":1512817463000},{"_id":"source/_posts/Linux-SSH-or-SCP-without-password.md","hash":"17a66ea0c0d25ad0dbcd07312fdb126d02b3107a","modified":1512054496777},{"_id":"source/_posts/Linux-Script-Menu-Template.md","hash":"b69eb21518533b30588d1619e2ab5490ab588803","modified":1512818362000},{"_id":"source/_posts/Linux-vi-basic.md","hash":"1043be3244fc45d89f58c6a56a0f81a4ff1e5784","modified":1512161862411},{"_id":"source/_posts/hello-world.md","hash":"57ae3836fa45cc8413cab6e75a17533181e1c497","modified":1513933455606},{"_id":"source/_posts/用-Hexo-和-GitHub-Pages-搭建博客.md","hash":"a31b8360f1b6e16fee4bf361984fb16c4b656c2b","modified":1511683426108},{"_id":"source/_posts/学习-Spring-Boot-1.md","hash":"1287693a26ec764a2f3ea2f1c2b081cd2f41791b","modified":1514012133530},{"_id":"source/about/index.md","hash":"1be7fe7749ff3e784746f6f3102695b1c7d200ed","modified":1511683727028},{"_id":"source/categories/index.md","hash":"869d3686dfdb5b31ebbcfb276bfc86dbceabfe47","modified":1511877175037},{"_id":"source/tags/index.md","hash":"2fdeb21af6d2c93eb0d44c5b89203f7fdb693201","modified":1511877177892},{"_id":"source/images/Git 周期.png","hash":"555d38cbe559ca7c25fa3aa7632b4ae7aaa803d8","modified":1512315561506},{"_id":"source/images/ng-model.png","hash":"2bdc1bcc83eb9bda7595ea62d29419d862140275","modified":1513092860000},{"_id":"source/images/ngspringboot-structure.png","hash":"379743cb36b99804da67b5270db444cbb28cf220","modified":1513609383000},{"_id":"source/images/spring-init.png","hash":"59c50b73eb650c4ae6f69ed34046f1d737c6e469","modified":1514004513340},{"_id":"source/images/博客主页下方访问量.png","hash":"3bf48207e8bb2d9d06c9419c6e2fd4286d39654b","modified":1511676905371},{"_id":"source/images/文章页面访问量.png","hash":"8048fe8990b0f8d2986ea12c773afa3ad2730bf1","modified":1511676999993},{"_id":"source/images/添加页面之前.png","hash":"20770002c8cb58c7d13f5a2dba421a86eafac261","modified":1511681961984},{"_id":"source/images/本地修改-github的流程图.jpg","hash":"31b712b04e9d9fce49a9410ffa3af9f4c438968b","modified":1511537671767},{"_id":"source/images/添加页面之后.png","hash":"476878b18ed681edad287402ebf5e914a8b58d04","modified":1511683218736},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1511573984205},{"_id":"themes/next/languages/en.yml","hash":"ef2087ea9763d59a8df80aff38b81c1690ca59c4","modified":1511708969905},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1511573984205},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1511573984206},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1511573984206},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1511573984206},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1511573984207},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1511573984207},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1511573984207},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1511573984207},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1511573984207},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1511573984208},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1511573984208},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1511573984208},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1511573984208},{"_id":"themes/next/layout/_layout.swig","hash":"fda8e25908c39d4654615cb3f1c67c2357e5927b","modified":1511628961301},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1511573984227},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1511573984227},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1511573984227},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1511573984227},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1511573984227},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1511573984227},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1511573984228},{"_id":"themes/next/scripts/merge-configs.js","hash":"5758f8f3f12d17bc80da65bb808a20b3a8aae186","modified":1511573984228},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1511573984229},{"_id":"themes/next/source/404.html","hash":"9eb955271b03c72a4bb23a06b60e4ecb4070a880","modified":1511881190204},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1511573984305},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1511573984305},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1511573984306},{"_id":"source/images/SQuirreL-SQL-Client.png","hash":"057f16503ac74ef7796c8904d393a048985539c5","modified":1513933998162},{"_id":"source/images/微信打赏.png","hash":"c5654874f5ac216552605ca02bdbbe206d16ae4a","modified":1511877892000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511573984256},{"_id":"source/images/Git introduction for CVS_SVN_TFS users.png","hash":"d037a3f66532f01e087d870d0e6196027b1e4f8e","modified":1511583211652},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1511573984209},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1511573984209},{"_id":"themes/next/layout/_macro/my-copyright.swig","hash":"8fdea44ab659ec20227c002e5d3f1cc17197cc99","modified":1511707949051},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1511573984209},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1511573984209},{"_id":"themes/next/layout/_macro/post.swig","hash":"5eb134d1142d37cfe1ec41aab2efb900ae75a9f7","modified":1511708208307},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1511573984210},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"549060bb8d506271ddbe2ab050ed9dbb00d409ff","modified":1511695713445},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1511573984211},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1511573984211},{"_id":"themes/next/layout/_partials/footer.swig","hash":"26e93336dc57a39590ba8dc80564a1d2ad5ff93b","modified":1511573984211},{"_id":"themes/next/layout/_partials/head.swig","hash":"f14a39dad1ddd98e6d3ceb25dda092ba80d391b5","modified":1511573984211},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1511573984212},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1511573984212},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1511573984213},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1511573984213},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1511573984214},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1511573984215},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1511573984216},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1511573984223},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1511573984223},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1511573984224},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1511573984224},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1511573984224},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1511573984224},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1511573984224},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1511573984229},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1511573984229},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1511573984229},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1511573984230},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1511573984229},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1511573984230},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1511573984230},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1511573984231},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1511573984231},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1511573984255},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1511573984256},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1511573984256},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1511573984256},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1511573984256},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1511573984257},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1511573984257},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1511573984257},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1511573984258},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1511573984258},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1511573984258},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1511573984258},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1511573984258},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1511573984259},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1511573984259},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1511573984259},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1511573984259},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1511573984259},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1511573984259},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511573984215},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511573984215},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511573984248},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511573984248},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511573984249},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511573984255},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511573984255},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1511573984212},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1511573984212},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1511573984213},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1511573984213},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1511573984213},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1511573984214},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1511573984214},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1511573984214},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1511573984214},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1511573984215},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1511573984215},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1511573984216},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1511573984216},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1511573984216},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1511573984216},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1511573984217},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1511573984217},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1511573984218},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1511573984218},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1511573984218},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1511573984218},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1511573984219},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1511573984219},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1511573984219},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1511573984221},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1511573984221},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1511573984221},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1511573984221},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1511573984221},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1511573984222},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1511573984222},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1511573984223},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1511573984223},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1511573984223},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1511573984225},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1511573984225},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1511573984225},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1511573984226},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1511573984248},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1511573984248},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1511573984248},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1511573984248},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1511573984254},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1511573984254},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1511573984255},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1511573984255},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1511573984260},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1511573984260},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1511573984260},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1511573984260},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1511573984261},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1511573984262},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1511573984261},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1511573984262},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1511573984262},{"_id":"themes/next/source/js/src/utils.js","hash":"b7ddc240208d57596a67c78a04a11b0f0bdecc97","modified":1511573984263},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1511573984263},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1511573984267},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1511573984269},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1511573984270},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1511573984270},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1511573984270},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1511573984276},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1511573984276},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1511573984276},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1511573984276},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1511573984278},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1511573984278},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1511573984278},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1511573984278},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1511573984278},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1511573984290},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1511573984291},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1511573984291},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1511573984292},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1511573984292},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1511573984292},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1511573984292},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1511573984294},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1511573984294},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1511573984294},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1511573984294},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1511573984295},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1511573984295},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1511573984295},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1511573984295},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1511573984295},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1511573984296},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1511573984296},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1511573984296},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1511573984296},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1511573984297},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1511573984293},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1511573984293},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1511573984293},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1511573984297},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1511573984297},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1511573984298},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1511573984301},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1511573984303},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1511573984304},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1511573984305},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1511573984305},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1511573984291},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1511573984225},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1511573984225},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1511573984231},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1511573984232},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"769a10b7ba0c832aa374cb9a96052d8894274be9","modified":1511794431386},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1511573984232},{"_id":"themes/next/source/css/_common/components/gitment.styl","hash":"854c4002af8a1fab99754ba9f552acc7cd7c4772","modified":1511794404350},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1511573984232},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1511573984235},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1511573984241},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1511573984246},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1511573984246},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1511573984247},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1511573984247},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1511573984247},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1511573984247},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1511573984247},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1511573984249},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1511573984250},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1511573984250},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1511573984250},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1511573984250},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1511573984250},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1511573984251},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1511573984249},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1511573984253},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1511573984253},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1511573984253},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"30561ed60fc64f3e4ce85143bdb55faa814743a6","modified":1511573984254},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1511573984254},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1511573984254},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1511573984252},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1511573984252},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"a98ad885ee4f48d85b2578a0b9c2bbf166e96733","modified":1511573984252},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1511573984252},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1511573984253},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1511573984262},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1511573984265},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1511573984266},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1511573984267},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1511573984270},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1511573984271},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1511573984271},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1511573984271},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1511573984271},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1511573984273},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1511573984274},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1511573984275},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1511573984275},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1511573984277},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1511573984277},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1511573984279},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1511573984279},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1511573984279},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1511573984301},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1511573984301},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1511573984266},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1511573984289},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1511573984290},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1511573984304},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1511573984233},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1511573984233},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1511573984233},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1511573984233},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1511573984233},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1511573984234},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1511573984234},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1511573984234},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1511573984234},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1511573984235},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1511573984235},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1511573984235},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1511573984235},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1511573984235},{"_id":"themes/next/source/css/_common/components/post/my-post-copyright.styl","hash":"2d3682e711f6d625507af8b209ec3a913a955443","modified":1511708139030},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1511573984236},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1511573984236},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1511573984236},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1511573984236},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1511573984236},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1511573984237},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1511573984237},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1511573984237},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1511573984237},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1511573984238},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1511573984238},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1511573984238},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1511573984238},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1511573984238},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"d031dfc1bb56bfaab6fd0f6e1b25da6036d0e693","modified":1511708240601},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1511573984239},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1511573984239},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1511573984239},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1511573984239},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1511573984239},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1511573984240},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1511573984240},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"28a8737c090fbffd188d73a00b42e90b9ee57df2","modified":1511573984240},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1511573984240},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1511573984240},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1511573984241},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1511573984241},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1511573984241},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1511573984241},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1511573984241},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1511573984243},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1511573984243},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1511573984243},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1511573984243},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1511573984243},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1511573984244},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1511573984244},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1511573984244},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1511573984244},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1511573984245},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1511573984245},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1511573984245},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1511573984245},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1511573984245},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1511573984251},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1511573984252},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1511573984253},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1511573984264},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1511573984264},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1511573984264},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1511573984265},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1511573984265},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1511573984273},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1511573984273},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1511573984273},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1511573984274},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1511573984274},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1511573984274},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1511573984282},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1511573984283},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1511573984288},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1511573984269},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1511573984300},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1511573984286},{"_id":"themes/next/source/images/avatar1.JPG","hash":"3943789667803530d4deab7f5be86c7bb63ee0a2","modified":1502638804000},{"_id":"public/categories/index.html","hash":"a7cdaef137b6a9aca3a4a3d7270912f97adb88ce","modified":1514003253178},{"_id":"public/about/index.html","hash":"acddd0f3527e083ecf6d743b43e8a6396ccd5a97","modified":1514003253186},{"_id":"public/tags/index.html","hash":"7be06bd48bbfa9c0b95fbf357ab5d93131447193","modified":1514003253187},{"_id":"public/2017/12/16/Database-PostgreSQL/index.html","hash":"44996b7eccd75924239760788e7232cb99375dd2","modified":1514003253187},{"_id":"public/2017/12/07/Clone-Blog-to-Ubuntu/index.html","hash":"192b77d5656a1334214b017ef549754024473665","modified":1514003253187},{"_id":"public/2017/12/05/Linux-Command/index.html","hash":"116353ebddd8a8d9e7682303f5e0c5be0403f7a1","modified":1514003253187},{"_id":"public/tags/blog/index.html","hash":"77584537572368d86265063d156d2bfd0568dae9","modified":1514003253320},{"_id":"public/tags/ubuntu/index.html","hash":"445ccb3225634520029b1f82692915ed32d12dcd","modified":1514003253321},{"_id":"public/tags/database/index.html","hash":"bb33e833aba3089017c99fc65717a959f9516f29","modified":1514003253321},{"_id":"public/tags/Postgres/index.html","hash":"f160e3b07ab3fd5662a2df96368af8b35b4306e8","modified":1514003253321},{"_id":"public/tags/install/index.html","hash":"a54d925e3e460ae3004ceb05c6eee9aa027e8805","modified":1514003253321},{"_id":"public/tags/setup/index.html","hash":"8900db96abce05f22e8b0a93f08f668f16216a78","modified":1514003253321},{"_id":"public/tags/AWS/index.html","hash":"a296b678ba582aa614125392ee432dc4a21896a0","modified":1514003253321},{"_id":"public/tags/Git/index.html","hash":"ff79113e52b30af2f9df0ff39c2c646080be462d","modified":1514003253321},{"_id":"public/tags/hexo/index.html","hash":"7a9d52f3418590c21b9b38a9cc30654b7a1d080b","modified":1514003253321},{"_id":"public/tags/AngularJS/index.html","hash":"c481be976aad2a24df9c4d0b389c6d5431888258","modified":1514003253321},{"_id":"public/tags/migrate/index.html","hash":"c34c0ec5d4ef7ff19dc401ebd31501a6b72c689c","modified":1514003253321},{"_id":"public/tags/Hexo/index.html","hash":"c5e06a92ce08aa14704f366ad0b068b4f27f70cf","modified":1514003253321},{"_id":"public/tags/Next/index.html","hash":"5536c44c18a8587f7a07fa924978708b43784eae","modified":1514003253321},{"_id":"public/tags/学习笔记/index.html","hash":"f9ac6b3f77ff64debd5f94d3067816d73ac362b2","modified":1514003253321},{"_id":"public/tags/博客/index.html","hash":"60a96aa4aad0d6ad5a824470295908608c919213","modified":1514003253321},{"_id":"public/tags/notes/index.html","hash":"3091086a9378ecd98f1921301b40f67d8e62a74b","modified":1514003253322},{"_id":"public/tags/主题优化/index.html","hash":"cf7794b837b73c1968b48b66010a81c5a3c3cc65","modified":1514003253322},{"_id":"public/tags/评论/index.html","hash":"574989e304ed10cf0821bcd55daae90b4f42263e","modified":1514003253322},{"_id":"public/tags/git/index.html","hash":"5f23ea25861175be1440f1205ff6edf9bbe0436d","modified":1514003253322},{"_id":"public/tags/Gitment/index.html","hash":"4c6894b1ea9b45d3ec3e3608836f71361a80d2a9","modified":1514003253322},{"_id":"public/tags/Linux/index.html","hash":"c7f5de8539aefcfbfa988e0a926e8b39ca2b38ea","modified":1514003253322},{"_id":"public/tags/SSH/index.html","hash":"65b68124c7163cca62e21ca82a972b516cbf3d41","modified":1514003253322},{"_id":"public/tags/SCP/index.html","hash":"82990313b69d8a69df0be09957192c78be38f33a","modified":1514003253322},{"_id":"public/tags/password/index.html","hash":"da823d54da65c1fc2fac8937944ba0b1980bbd2b","modified":1514003253322},{"_id":"public/tags/sh/index.html","hash":"24cb8b77cd962c676b77dfee3bd65979c93d34c0","modified":1514003253322},{"_id":"public/tags/github/index.html","hash":"6206a885a7a41dff64211c9c328e61a48839b78e","modified":1514003253322},{"_id":"public/tags/script/index.html","hash":"0186194934dc12f276044552d64ac06e7aa3ac97","modified":1514003253322},{"_id":"public/tags/server/index.html","hash":"4b5109de6492db29497b70c92c813fc737ac39ec","modified":1514003253322},{"_id":"public/tags/template/index.html","hash":"2559235d8927345f0f022ec542386049508384f7","modified":1514003253322},{"_id":"public/tags/menu/index.html","hash":"9a2190a29369f21893b236f4b9c7ed7d624d6fa1","modified":1514003253322},{"_id":"public/tags/vi/index.html","hash":"6c09ca948259e44dcae5a4dde3909f8d3bb5a3c2","modified":1514003253322},{"_id":"public/tags/center/index.html","hash":"1a2678eac011004b25f62bae2583b822f924ee05","modified":1514003253322},{"_id":"public/tags/command/index.html","hash":"36551dc568e02bcc8df310f59af1c718ade53f81","modified":1514003253322},{"_id":"public/tags/next/index.html","hash":"31ff2b227bddde639b250728aad40d962e6f2fa7","modified":1514003253322},{"_id":"public/tags/shell/index.html","hash":"cb0bb3314714e157fd2e54cfb9f45842eae6ee3a","modified":1514003253323},{"_id":"public/tags/Spring/index.html","hash":"da0856d1f0d70e31f15f031c6a694ad2e25d80ee","modified":1514003253323},{"_id":"public/tags/GitHub-Pages/index.html","hash":"f37e5abdb5221b9630477c201b5e5ae2fd72e4ac","modified":1514003253323},{"_id":"public/tags/Rest/index.html","hash":"3438eb458c500b7aa99cf56634e78d1b0425be63","modified":1514003253323},{"_id":"public/categories/Database/index.html","hash":"d6583b4b5b26c7ed28efa426ef3059dfc263e525","modified":1514003253323},{"_id":"public/categories/Git/index.html","hash":"f785ed8e6377be0c540a8b1b0f19a4bfbea52a53","modified":1514003253323},{"_id":"public/categories/Linux/index.html","hash":"0b2c61f53a0258816add983d49e85a5c1b12f45c","modified":1514003253323},{"_id":"public/categories/Note/index.html","hash":"c1e781b735c8dd985d8b6577eb7a41af9ad5be91","modified":1514003253323},{"_id":"public/archives/page/2/index.html","hash":"47ba7925a10b0ac79c8a6773a1476ef88edfcc6a","modified":1514003253323},{"_id":"public/archives/2017/page/2/index.html","hash":"d46cd3b8a4290113f60af7d8e68f443664580968","modified":1514003253323},{"_id":"public/categories/AngularJS/index.html","hash":"ad8a2c48faa17587ecffa17ed6b6ccaac7498182","modified":1514003253323},{"_id":"public/categories/搭建博客/index.html","hash":"5767e77a653c37ee783fec5481cd91e9582a1c84","modified":1514003253323},{"_id":"public/2017/12/23/学习-Spring-Boot-1/index.html","hash":"a3f40110c301b3246e7dbe0bd755797b04dd7e22","modified":1514012170951},{"_id":"public/2017/12/09/Linux-Script-Menu-Template/index.html","hash":"b4878d6f3d7563533e6fb06e4ad4eed088cc413f","modified":1514003253323},{"_id":"public/2017/11/28/Linux-SSH-or-SCP-without-password/index.html","hash":"fb1672a83c71c66cc9387de82113b1eef80638cb","modified":1514003253323},{"_id":"public/2017/11/27/Hexo-Next-添加-Gitment-评论系统/index.html","hash":"87d6e752212cd486ac40d9ecbb198c5a344453a6","modified":1514003253323},{"_id":"public/2017/12/07/Github-Learning/index.html","hash":"313eee25f648b18be991f468841a744a6e26586f","modified":1514003253323},{"_id":"public/2017/12/10/AngularJS-Learning/index.html","hash":"88b5f5cbb65dc542afcd9c3b620927cb0e1bc9aa","modified":1514003253324},{"_id":"public/2017/11/24/用-Hexo-和-GitHub-Pages-搭建博客/index.html","hash":"65d6228c3629293e33511e15c5711adb28aa52e8","modified":1514003253324},{"_id":"public/2017/11/24/hello-world/index.html","hash":"ea6e5b4d7558314310a5333f09add085087017d4","modified":1514003253324},{"_id":"public/2017/12/02/Linux-vi-basic/index.html","hash":"bb4d302eca794c9ad5fd9a0bf3a9b68d428cbe40","modified":1514003253324},{"_id":"public/2017/11/24/Git-学习笔记/index.html","hash":"5696c17020bbbd8658e3ec0084c424a69b13969c","modified":1514003253324},{"_id":"public/page/2/index.html","hash":"c943b915276087ee72e42f5ee77261bcee5ca21a","modified":1514003253324},{"_id":"public/index.html","hash":"9e7ce3fca47ac7c002df16993f2b2d3ea69fbbdf","modified":1514012170951},{"_id":"public/archives/index.html","hash":"a318e17640badf8eeaa2c385fe23a0740426b1cb","modified":1514003253324},{"_id":"public/archives/2017/index.html","hash":"148d177ed747e84cc2a4c7ebaff409ee1c06a1ae","modified":1514003253324},{"_id":"public/2017/11/26/Hexo-的-Next-主题优化/index.html","hash":"dd6bf0789b5534917abd0f36d1cded378741c80e","modified":1514003253324},{"_id":"public/archives/2017/12/index.html","hash":"4964986021b06cbd5664ba1591408f849c10e5a6","modified":1514003253324},{"_id":"public/archives/2017/11/index.html","hash":"58d479e1878878d1a6d74c1aca9418a2ceaf67d7","modified":1514003253324},{"_id":"public/tags/Spring-Boot/index.html","hash":"d507a7f0facb96ec1ec6d2ef362fc5d6fdcf0f90","modified":1514003253330},{"_id":"public/tags/beginner/index.html","hash":"d257a648e9051b47205ab9231d9279efd6fe69cf","modified":1514003253330},{"_id":"public/tags/Maven/index.html","hash":"55326349c04e4329f9985482853e8ecd1dfe2dec","modified":1514003253330},{"_id":"public/categories/SpringBoot/index.html","hash":"ec1d4a3571e949199e2e8367fa76a987d6d5074d","modified":1514003253330},{"_id":"public/images/ngspringboot-structure.png","hash":"379743cb36b99804da67b5270db444cbb28cf220","modified":1514003253330},{"_id":"public/images/博客主页下方访问量.png","hash":"3bf48207e8bb2d9d06c9419c6e2fd4286d39654b","modified":1514003253330},{"_id":"public/images/ng-model.png","hash":"2bdc1bcc83eb9bda7595ea62d29419d862140275","modified":1514003253330},{"_id":"public/images/Git 周期.png","hash":"555d38cbe559ca7c25fa3aa7632b4ae7aaa803d8","modified":1514003253330},{"_id":"public/images/文章页面访问量.png","hash":"8048fe8990b0f8d2986ea12c773afa3ad2730bf1","modified":1514003253330},{"_id":"public/images/本地修改-github的流程图.jpg","hash":"31b712b04e9d9fce49a9410ffa3af9f4c438968b","modified":1514003253330},{"_id":"public/images/添加页面之前.png","hash":"20770002c8cb58c7d13f5a2dba421a86eafac261","modified":1514003253330},{"_id":"public/images/添加页面之后.png","hash":"476878b18ed681edad287402ebf5e914a8b58d04","modified":1514003253330},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1514003253330},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1514003253330},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1514003253330},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1514003253331},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1514003253331},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1514003253331},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1514003253331},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1514003253331},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1514003253331},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1514003253331},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1514003253331},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514003253331},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1514003253331},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514003253331},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1514003253331},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1514003253331},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1514003253331},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1514003253331},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1514003253331},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1514003253331},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1514003253331},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1514003253332},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1514003253332},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1514003253332},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1514003253332},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1514003253332},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1514003253332},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1514003253332},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1514003253332},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1514003253332},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1514003253332},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1514003253332},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1514003253332},{"_id":"public/images/spring-init.png","hash":"59c50b73eb650c4ae6f69ed34046f1d737c6e469","modified":1514012170953},{"_id":"public/images/SQuirreL-SQL-Client.png","hash":"057f16503ac74ef7796c8904d393a048985539c5","modified":1514003253899},{"_id":"public/images/微信打赏.png","hash":"c5654874f5ac216552605ca02bdbbe206d16ae4a","modified":1514003253900},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1514003253907},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1514003253907},{"_id":"public/404.html","hash":"d6cd47ba4ab178269d9e7be773e521a3f74a738b","modified":1514003253912},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1514003253912},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1514003253912},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1514003253912},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1514003253912},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1514003253912},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1514003253912},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1514003253912},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1514003253913},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1514003253913},{"_id":"public/js/src/utils.js","hash":"dbdc3d1300eec7da9632608ebc0e5b697779dad7","modified":1514003253913},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1514003253913},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1514003253913},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1514003253913},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1514003253913},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1514003253913},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1514003253913},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1514003253913},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1514003253913},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1514003253913},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1514003253913},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1514003253913},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1514003253913},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1514003253913},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1514003253913},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1514003253913},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1514003253913},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1514003253914},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1514003253914},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1514003253914},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1514003253914},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1514003253914},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1514003253914},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1514003253914},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1514003253914},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1514003253914},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1514003253914},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1514003253914},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1514003253914},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1514003253914},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1514003253914},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1514003253914},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1514003253914},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1514003253914},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1514003253914},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1514003253914},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1514003253914},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1514003253914},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1514003253914},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1514003253914},{"_id":"public/css/main.css","hash":"4aced35bd663aa0d9172ff05c9051c025b071a0e","modified":1514003253915},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1514003253915},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1514003253915},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1514003253915},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1514003253915},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1514003253915},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1514003253915},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1514003253915},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1514003253915},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1514003253915},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1514003253915},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1514003253915},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1514003253915},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1514003253915},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1514003253915},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1514003253915},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1514003253915},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1514003253915},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1514003253915},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1514003253915},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1514003253915},{"_id":"public/images/Git introduction for CVS_SVN_TFS users.png","hash":"d037a3f66532f01e087d870d0e6196027b1e4f8e","modified":1514003253916},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1514003253916},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1514003253916},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1514003253916},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1514003253925},{"_id":"public/images/avatar1.JPG","hash":"3943789667803530d4deab7f5be86c7bb63ee0a2","modified":1514003253932},{"_id":"source/images/get-uses.png","hash":"8d2d33bf3803ed830ec7c5d962e4f25125d4b5a5","modified":1514009320620},{"_id":"source/images/post-add-user.png","hash":"edf886a4569ca4401cd67d0b8e3800e8e2e8a011","modified":1514011028682},{"_id":"source/images/post-result.png","hash":"e74415cfbf74598d08f84298e151ec15f8d958fe","modified":1514011182446},{"_id":"source/images/put-result.png","hash":"c36dd22715e4944e5dbb622b4da78f2316394dad","modified":1514011691139},{"_id":"source/images/put-update-user.png","hash":"6e896fb54a9a522c3b0ddb8c7ab4bbb9c981ddc3","modified":1514011637779},{"_id":"source/images/springboot-structure.png","hash":"5c53c21b0935da8956197af16f3e6d1c1a3c83d3","modified":1514004653643},{"_id":"public/images/post-result.png","hash":"e74415cfbf74598d08f84298e151ec15f8d958fe","modified":1514012170953},{"_id":"public/images/get-uses.png","hash":"8d2d33bf3803ed830ec7c5d962e4f25125d4b5a5","modified":1514012170953},{"_id":"public/images/put-result.png","hash":"c36dd22715e4944e5dbb622b4da78f2316394dad","modified":1514012170953},{"_id":"public/images/post-add-user.png","hash":"edf886a4569ca4401cd67d0b8e3800e8e2e8a011","modified":1514012170953},{"_id":"public/images/put-update-user.png","hash":"6e896fb54a9a522c3b0ddb8c7ab4bbb9c981ddc3","modified":1514012170953},{"_id":"public/images/springboot-structure.png","hash":"5c53c21b0935da8956197af16f3e6d1c1a3c83d3","modified":1514012170953}],"Category":[{"name":"搭建博客","_id":"cjbiug0i30004vwv4rzkqz3wf"},{"name":"Database","_id":"cjbiug0i7000avwv46p2v4usf"},{"name":"Git","_id":"cjbiug0ic000fvwv4oo6kf3bt"},{"name":"AngularJS","_id":"cjbiug0if000lvwv4b8znm3sh"},{"name":"Linux","_id":"cjbiug0ik000xvwv46ru05nwp"},{"name":"Note","_id":"cjbiug0ip001dvwv4l0f0jgtt"},{"name":"SpringBoot","_id":"cjbiug0iq001ivwv4thrnx74z"}],"Data":[],"Page":[{"title":"categories","date":"2017-11-26T10:38:13.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-11-26 18:38:13\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-11-28T13:52:55.037Z","path":"categories/index.html","layout":"page","_id":"cjbiug0hz0001vwv4qxmp7ord","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2017-11-26T07:52:49.000Z","_content":"\nComing Soon..","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-11-26 15:52:49\n---\n\nComing Soon..","updated":"2017-11-26T08:08:47.028Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjbiug0i10003vwv49q222k5k","content":"<p>Coming Soon..</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Coming Soon..</p>\n"},{"title":"tags","date":"2017-11-26T10:38:23.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-11-26 18:38:23\ntype: \"tags\"\ncomments: false\n---\n","updated":"2017-11-28T13:52:57.892Z","path":"tags/index.html","layout":"page","_id":"cjbiug0i50007vwv4wdrksos8","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Clone Blog to Ubuntu","date":"2017-12-07T04:21:12.000Z","_content":"\nMy current working space for this hexo blog is in windows 10.\n\nThis is how I migrate to Ubuntu.\n\n# upload project to github\n1. create new repo in github called : hexoBlog\n2. If any folders inside are cloned from github. Need to remove git related files:\n\t- .git\n\t- .gitignore\n\t- .github/\n\t- ...<!--more-->\n3. open git bash on blog folder, and run:\n```bash\n$ git init\n$ git add --all\n$ git commit\n$ git remote add origin https://github.com/Ryanluoxu/hexoBlog.git\n$ git push\n```\n4. `git push` may face \"fatal: The current branch master has no upstream branch\". Run:\n```\n$ git push -u origin master\n```\n\nNow project is on the github.\n\n# clone project to Ubuntu\n\n```bash\n$ sudo apt-get install git-core\t#1 install git\n$ mkdir ~/git\t\t\t#2 create folder git under home\n$ cd ~/git\n$ git clone https://github.com/Ryanluoxu/hexoBlog.git\t#3 clone project from github\n```\n\nNow local working space is : ~/git/hexoblog/\n \n\n# installation\n\n```bash\n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash\t#1 install Node Version Manager\n$ nvm install stable\t#2 install Node.js\n$ npm install -g hexo-cli\t#3 install hexo\n```\n\nDone.\n\n","source":"_posts/Clone-Blog-to-Ubuntu.md","raw":"---\ntitle: Clone Blog to Ubuntu\ndate: 2017-12-07 12:21:12\ncategories: 搭建博客\ntags: [blog, hexo, ubuntu, migrate]\n---\n\nMy current working space for this hexo blog is in windows 10.\n\nThis is how I migrate to Ubuntu.\n\n# upload project to github\n1. create new repo in github called : hexoBlog\n2. If any folders inside are cloned from github. Need to remove git related files:\n\t- .git\n\t- .gitignore\n\t- .github/\n\t- ...<!--more-->\n3. open git bash on blog folder, and run:\n```bash\n$ git init\n$ git add --all\n$ git commit\n$ git remote add origin https://github.com/Ryanluoxu/hexoBlog.git\n$ git push\n```\n4. `git push` may face \"fatal: The current branch master has no upstream branch\". Run:\n```\n$ git push -u origin master\n```\n\nNow project is on the github.\n\n# clone project to Ubuntu\n\n```bash\n$ sudo apt-get install git-core\t#1 install git\n$ mkdir ~/git\t\t\t#2 create folder git under home\n$ cd ~/git\n$ git clone https://github.com/Ryanluoxu/hexoBlog.git\t#3 clone project from github\n```\n\nNow local working space is : ~/git/hexoblog/\n \n\n# installation\n\n```bash\n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash\t#1 install Node Version Manager\n$ nvm install stable\t#2 install Node.js\n$ npm install -g hexo-cli\t#3 install hexo\n```\n\nDone.\n\n","slug":"Clone-Blog-to-Ubuntu","published":1,"updated":"2017-12-08T20:53:05.462Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbiug0hw0000vwv40uh76uye","content":"<p>My current working space for this hexo blog is in windows 10.</p>\n<p>This is how I migrate to Ubuntu.</p>\n<h1 id=\"upload-project-to-github\"><a href=\"#upload-project-to-github\" class=\"headerlink\" title=\"upload project to github\"></a>upload project to github</h1><ol>\n<li>create new repo in github called : hexoBlog</li>\n<li>If any folders inside are cloned from github. Need to remove git related files:<ul>\n<li>.git</li>\n<li>.gitignore</li>\n<li>.github/</li>\n<li>…<a id=\"more\"></a></li>\n</ul>\n</li>\n<li><p>open git bash on blog folder, and run:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git init</span><br><span class=\"line\">$ git add --all</span><br><span class=\"line\">$ git commit</span><br><span class=\"line\">$ git remote add origin https://github.com/Ryanluoxu/hexoBlog.git</span><br><span class=\"line\">$ git push</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>git push</code> may face “fatal: The current branch master has no upstream branch”. Run:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push -u origin master</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>Now project is on the github.</p>\n<h1 id=\"clone-project-to-Ubuntu\"><a href=\"#clone-project-to-Ubuntu\" class=\"headerlink\" title=\"clone project to Ubuntu\"></a>clone project to Ubuntu</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install git-core\t<span class=\"comment\">#1 install git</span></span><br><span class=\"line\">$ mkdir ~/git\t\t\t<span class=\"comment\">#2 create folder git under home</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/git</span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/Ryanluoxu/hexoBlog.git\t<span class=\"comment\">#3 clone project from github</span></span><br></pre></td></tr></table></figure>\n<p>Now local working space is : ~/git/hexoblog/</p>\n<h1 id=\"installation\"><a href=\"#installation\" class=\"headerlink\" title=\"installation\"></a>installation</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash\t<span class=\"comment\">#1 install Node Version Manager</span></span><br><span class=\"line\">$ nvm install stable\t<span class=\"comment\">#2 install Node.js</span></span><br><span class=\"line\">$ npm install -g hexo-cli\t<span class=\"comment\">#3 install hexo</span></span><br></pre></td></tr></table></figure>\n<p>Done.</p>\n","site":{"data":{}},"excerpt":"<p>My current working space for this hexo blog is in windows 10.</p>\n<p>This is how I migrate to Ubuntu.</p>\n<h1 id=\"upload-project-to-github\"><a href=\"#upload-project-to-github\" class=\"headerlink\" title=\"upload project to github\"></a>upload project to github</h1><ol>\n<li>create new repo in github called : hexoBlog</li>\n<li>If any folders inside are cloned from github. Need to remove git related files:<ul>\n<li>.git</li>\n<li>.gitignore</li>\n<li>.github/</li>\n<li>…","more":"</li>\n</ul>\n</li>\n<li><p>open git bash on blog folder, and run:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git init</span><br><span class=\"line\">$ git add --all</span><br><span class=\"line\">$ git commit</span><br><span class=\"line\">$ git remote add origin https://github.com/Ryanluoxu/hexoBlog.git</span><br><span class=\"line\">$ git push</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>git push</code> may face “fatal: The current branch master has no upstream branch”. Run:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push -u origin master</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>Now project is on the github.</p>\n<h1 id=\"clone-project-to-Ubuntu\"><a href=\"#clone-project-to-Ubuntu\" class=\"headerlink\" title=\"clone project to Ubuntu\"></a>clone project to Ubuntu</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install git-core\t<span class=\"comment\">#1 install git</span></span><br><span class=\"line\">$ mkdir ~/git\t\t\t<span class=\"comment\">#2 create folder git under home</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/git</span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/Ryanluoxu/hexoBlog.git\t<span class=\"comment\">#3 clone project from github</span></span><br></pre></td></tr></table></figure>\n<p>Now local working space is : ~/git/hexoblog/</p>\n<h1 id=\"installation\"><a href=\"#installation\" class=\"headerlink\" title=\"installation\"></a>installation</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash\t<span class=\"comment\">#1 install Node Version Manager</span></span><br><span class=\"line\">$ nvm install stable\t<span class=\"comment\">#2 install Node.js</span></span><br><span class=\"line\">$ npm install -g hexo-cli\t<span class=\"comment\">#3 install hexo</span></span><br></pre></td></tr></table></figure>\n<p>Done.</p>"},{"title":"Database - PostgreSQL on AWS","date":"2017-12-16T03:00:28.000Z","_content":"![SQuirreL SQL Client](/images/SQuirreL-SQL-Client.png)\n- Create Postgres database on Amazon Web Service. \n- Install pgAdmin as client application to connect to database.\n- Install SQuirreL SQL Client to connect to database.\n\nI personally prefer to use SQuirreL SQL Client than pgAdmin.\n\n<!--more-->\n\n# Create Postgres Database on AWS\n\nReference: [Create and Connect to a PostgreSQL Database](https://aws.amazon.com/getting-started/tutorials/create-connect-postgresql-db/)\n\n1. create an AWS account before creating database.\n2. go to this page: [AWS services](https://ap-southeast-1.console.aws.amazon.com/console/home?region=ap-southeast-1)\n3. search for `RDS` and click\n4. search for `Create instance` and click `Launch a DB instance`\n\nBelow steps made under `Free Usage Tier`\n1. Engine: `PostgreSQL`\n2. Use case: `Dev/Test`\n3. DB details: \n\t- tick `Only enable options eligible for RDS Free Usage Tier`\n\t- DB instance identifier: `myPostgresDB`\n\t- Master username: `xxxxxx`\n\t- Master password: `xxxxxx`\n4. Configure advanced settings\n\t- tick `Yes` for Public accessibility\n\t- Database name: `Demo`\n\nClick `Launch DB instance` to create.\n\n# Use pgAdmin as Client Application\n\nReference: [Connecting to a DB Instance Running the PostgreSQL Database Engine](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ConnectToPostgreSQLInstance.html)\n\nTo connect to database, go to `RDS`>`Instances`>`postgresql` and collect below info:\n- Endpoint\n- Port\n- Username\n- Password\n\n1. Go to [Download - pgAdmin](https://www.pgadmin.org/download/) to download `pgAdmin 4 v2.0`\n2. Install and Open pgAdmin\n3. Right click `Servers` - `Create` - `Server...`\n4. General:\n\t- Name: `Demo`\n\t- Comments: `Demo`\n5. Connection: \n\t- Host: `<Endpoint>`\n\t- Port:\t`<Port>`\n\t- Username: `<Username>`\n\t- Password: `<Password>`\n\t- Role: Empty\n\nClick `Save`\n\n\nDone..\n\n\n# Use Squirrel SQL Client as Client Application\n\n1. Install Squirrel SQL Client Application\n\t- Go to [SQuirreL SQL Client Download](http://squirrel-sql.sourceforge.net/#installation)\n\t- Download and install\n2. Download PostgreSQL JDBC Driver\n\t- Go to [PostgreSQL JDBC Download](https://jdbc.postgresql.org/download.html)\n\t- Choose `PostgreSQL JDBC 4.2 Driver, 42.1.4`\n\t- Get `postgresql-42.1.4 driver`\n3. Add PostgreSQL driver for Squirrel SQL Client\n\t- Open `Squirrel SQL Client`\n\t- Choose `Driver` on the left\n\t- Choose `+` to add driver\n\t- Choose `Extra Class Path` and `Add`\n\t- Choose `postgresql-42.1.4 driver` just downloaded.\n\t- Fill up:\n\t\t- PostgreSQL\n\t\t- jdbc:postgresql://<host>:<5432>/<database>\n\t\t- http://jdbc.postgresql.org\n\t\t- org.postgresql.Driver\n\t- OK\n4. Add Alias\n\t- Choose `Aliases` on the left\n\t- Choose `+` to add\n\t- Choose blue tick `PostgreSQL` as Driver\n\t- Fill up:\n\t\t- Demo\n\t\t- jdbc:postgresql://postgresql.cfqvncjculpj.ap-southeast-1.rds.amazonaws.com:5432/Demo\n\t\t- userName\n\t\t- password\n\t- `Test`\n\t- `Connect`\n\t- `OK`\n\n\nDone..","source":"_posts/Database-PostgreSQL.md","raw":"---\ntitle: Database - PostgreSQL on AWS\ndate: 2017-12-16 11:00:28\ncategories: Database\ntags: [database, Postgres, install, setup, AWS]\n---\n![SQuirreL SQL Client](/images/SQuirreL-SQL-Client.png)\n- Create Postgres database on Amazon Web Service. \n- Install pgAdmin as client application to connect to database.\n- Install SQuirreL SQL Client to connect to database.\n\nI personally prefer to use SQuirreL SQL Client than pgAdmin.\n\n<!--more-->\n\n# Create Postgres Database on AWS\n\nReference: [Create and Connect to a PostgreSQL Database](https://aws.amazon.com/getting-started/tutorials/create-connect-postgresql-db/)\n\n1. create an AWS account before creating database.\n2. go to this page: [AWS services](https://ap-southeast-1.console.aws.amazon.com/console/home?region=ap-southeast-1)\n3. search for `RDS` and click\n4. search for `Create instance` and click `Launch a DB instance`\n\nBelow steps made under `Free Usage Tier`\n1. Engine: `PostgreSQL`\n2. Use case: `Dev/Test`\n3. DB details: \n\t- tick `Only enable options eligible for RDS Free Usage Tier`\n\t- DB instance identifier: `myPostgresDB`\n\t- Master username: `xxxxxx`\n\t- Master password: `xxxxxx`\n4. Configure advanced settings\n\t- tick `Yes` for Public accessibility\n\t- Database name: `Demo`\n\nClick `Launch DB instance` to create.\n\n# Use pgAdmin as Client Application\n\nReference: [Connecting to a DB Instance Running the PostgreSQL Database Engine](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ConnectToPostgreSQLInstance.html)\n\nTo connect to database, go to `RDS`>`Instances`>`postgresql` and collect below info:\n- Endpoint\n- Port\n- Username\n- Password\n\n1. Go to [Download - pgAdmin](https://www.pgadmin.org/download/) to download `pgAdmin 4 v2.0`\n2. Install and Open pgAdmin\n3. Right click `Servers` - `Create` - `Server...`\n4. General:\n\t- Name: `Demo`\n\t- Comments: `Demo`\n5. Connection: \n\t- Host: `<Endpoint>`\n\t- Port:\t`<Port>`\n\t- Username: `<Username>`\n\t- Password: `<Password>`\n\t- Role: Empty\n\nClick `Save`\n\n\nDone..\n\n\n# Use Squirrel SQL Client as Client Application\n\n1. Install Squirrel SQL Client Application\n\t- Go to [SQuirreL SQL Client Download](http://squirrel-sql.sourceforge.net/#installation)\n\t- Download and install\n2. Download PostgreSQL JDBC Driver\n\t- Go to [PostgreSQL JDBC Download](https://jdbc.postgresql.org/download.html)\n\t- Choose `PostgreSQL JDBC 4.2 Driver, 42.1.4`\n\t- Get `postgresql-42.1.4 driver`\n3. Add PostgreSQL driver for Squirrel SQL Client\n\t- Open `Squirrel SQL Client`\n\t- Choose `Driver` on the left\n\t- Choose `+` to add driver\n\t- Choose `Extra Class Path` and `Add`\n\t- Choose `postgresql-42.1.4 driver` just downloaded.\n\t- Fill up:\n\t\t- PostgreSQL\n\t\t- jdbc:postgresql://<host>:<5432>/<database>\n\t\t- http://jdbc.postgresql.org\n\t\t- org.postgresql.Driver\n\t- OK\n4. Add Alias\n\t- Choose `Aliases` on the left\n\t- Choose `+` to add\n\t- Choose blue tick `PostgreSQL` as Driver\n\t- Fill up:\n\t\t- Demo\n\t\t- jdbc:postgresql://postgresql.cfqvncjculpj.ap-southeast-1.rds.amazonaws.com:5432/Demo\n\t\t- userName\n\t\t- password\n\t- `Test`\n\t- `Connect`\n\t- `OK`\n\n\nDone..","slug":"Database-PostgreSQL","published":1,"updated":"2017-12-22T09:13:37.426Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbiug0i00002vwv4xszesd7n","content":"<p><img src=\"/images/SQuirreL-SQL-Client.png\" alt=\"SQuirreL SQL Client\"></p>\n<ul>\n<li>Create Postgres database on Amazon Web Service. </li>\n<li>Install pgAdmin as client application to connect to database.</li>\n<li>Install SQuirreL SQL Client to connect to database.</li>\n</ul>\n<p>I personally prefer to use SQuirreL SQL Client than pgAdmin.</p>\n<a id=\"more\"></a>\n<h1 id=\"Create-Postgres-Database-on-AWS\"><a href=\"#Create-Postgres-Database-on-AWS\" class=\"headerlink\" title=\"Create Postgres Database on AWS\"></a>Create Postgres Database on AWS</h1><p>Reference: <a href=\"https://aws.amazon.com/getting-started/tutorials/create-connect-postgresql-db/\" target=\"_blank\" rel=\"noopener\">Create and Connect to a PostgreSQL Database</a></p>\n<ol>\n<li>create an AWS account before creating database.</li>\n<li>go to this page: <a href=\"https://ap-southeast-1.console.aws.amazon.com/console/home?region=ap-southeast-1\" target=\"_blank\" rel=\"noopener\">AWS services</a></li>\n<li>search for <code>RDS</code> and click</li>\n<li>search for <code>Create instance</code> and click <code>Launch a DB instance</code></li>\n</ol>\n<p>Below steps made under <code>Free Usage Tier</code></p>\n<ol>\n<li>Engine: <code>PostgreSQL</code></li>\n<li>Use case: <code>Dev/Test</code></li>\n<li>DB details: <ul>\n<li>tick <code>Only enable options eligible for RDS Free Usage Tier</code></li>\n<li>DB instance identifier: <code>myPostgresDB</code></li>\n<li>Master username: <code>xxxxxx</code></li>\n<li>Master password: <code>xxxxxx</code></li>\n</ul>\n</li>\n<li>Configure advanced settings<ul>\n<li>tick <code>Yes</code> for Public accessibility</li>\n<li>Database name: <code>Demo</code></li>\n</ul>\n</li>\n</ol>\n<p>Click <code>Launch DB instance</code> to create.</p>\n<h1 id=\"Use-pgAdmin-as-Client-Application\"><a href=\"#Use-pgAdmin-as-Client-Application\" class=\"headerlink\" title=\"Use pgAdmin as Client Application\"></a>Use pgAdmin as Client Application</h1><p>Reference: <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ConnectToPostgreSQLInstance.html\" target=\"_blank\" rel=\"noopener\">Connecting to a DB Instance Running the PostgreSQL Database Engine</a></p>\n<p>To connect to database, go to <code>RDS</code>&gt;<code>Instances</code>&gt;<code>postgresql</code> and collect below info:</p>\n<ul>\n<li>Endpoint</li>\n<li>Port</li>\n<li>Username</li>\n<li>Password</li>\n</ul>\n<ol>\n<li>Go to <a href=\"https://www.pgadmin.org/download/\" target=\"_blank\" rel=\"noopener\">Download - pgAdmin</a> to download <code>pgAdmin 4 v2.0</code></li>\n<li>Install and Open pgAdmin</li>\n<li>Right click <code>Servers</code> - <code>Create</code> - <code>Server...</code></li>\n<li>General:<ul>\n<li>Name: <code>Demo</code></li>\n<li>Comments: <code>Demo</code></li>\n</ul>\n</li>\n<li>Connection: <ul>\n<li>Host: <code>&lt;Endpoint&gt;</code></li>\n<li>Port:    <code>&lt;Port&gt;</code></li>\n<li>Username: <code>&lt;Username&gt;</code></li>\n<li>Password: <code>&lt;Password&gt;</code></li>\n<li>Role: Empty</li>\n</ul>\n</li>\n</ol>\n<p>Click <code>Save</code></p>\n<p>Done..</p>\n<h1 id=\"Use-Squirrel-SQL-Client-as-Client-Application\"><a href=\"#Use-Squirrel-SQL-Client-as-Client-Application\" class=\"headerlink\" title=\"Use Squirrel SQL Client as Client Application\"></a>Use Squirrel SQL Client as Client Application</h1><ol>\n<li>Install Squirrel SQL Client Application<ul>\n<li>Go to <a href=\"http://squirrel-sql.sourceforge.net/#installation\" target=\"_blank\" rel=\"noopener\">SQuirreL SQL Client Download</a></li>\n<li>Download and install</li>\n</ul>\n</li>\n<li>Download PostgreSQL JDBC Driver<ul>\n<li>Go to <a href=\"https://jdbc.postgresql.org/download.html\" target=\"_blank\" rel=\"noopener\">PostgreSQL JDBC Download</a></li>\n<li>Choose <code>PostgreSQL JDBC 4.2 Driver, 42.1.4</code></li>\n<li>Get <code>postgresql-42.1.4 driver</code></li>\n</ul>\n</li>\n<li>Add PostgreSQL driver for Squirrel SQL Client<ul>\n<li>Open <code>Squirrel SQL Client</code></li>\n<li>Choose <code>Driver</code> on the left</li>\n<li>Choose <code>+</code> to add driver</li>\n<li>Choose <code>Extra Class Path</code> and <code>Add</code></li>\n<li>Choose <code>postgresql-42.1.4 driver</code> just downloaded.</li>\n<li>Fill up:<ul>\n<li>PostgreSQL</li>\n<li>jdbc:postgresql://<host>:<5432>/<database></database></5432></host></li>\n<li><a href=\"http://jdbc.postgresql.org\" target=\"_blank\" rel=\"noopener\">http://jdbc.postgresql.org</a></li>\n<li>org.postgresql.Driver</li>\n</ul>\n</li>\n<li>OK</li>\n</ul>\n</li>\n<li>Add Alias<ul>\n<li>Choose <code>Aliases</code> on the left</li>\n<li>Choose <code>+</code> to add</li>\n<li>Choose blue tick <code>PostgreSQL</code> as Driver</li>\n<li>Fill up:<ul>\n<li>Demo</li>\n<li>jdbc:postgresql://postgresql.cfqvncjculpj.ap-southeast-1.rds.amazonaws.com:5432/Demo</li>\n<li>userName</li>\n<li>password</li>\n</ul>\n</li>\n<li><code>Test</code></li>\n<li><code>Connect</code></li>\n<li><code>OK</code></li>\n</ul>\n</li>\n</ol>\n<p>Done..</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/SQuirreL-SQL-Client.png\" alt=\"SQuirreL SQL Client\"></p>\n<ul>\n<li>Create Postgres database on Amazon Web Service. </li>\n<li>Install pgAdmin as client application to connect to database.</li>\n<li>Install SQuirreL SQL Client to connect to database.</li>\n</ul>\n<p>I personally prefer to use SQuirreL SQL Client than pgAdmin.</p>","more":"<h1 id=\"Create-Postgres-Database-on-AWS\"><a href=\"#Create-Postgres-Database-on-AWS\" class=\"headerlink\" title=\"Create Postgres Database on AWS\"></a>Create Postgres Database on AWS</h1><p>Reference: <a href=\"https://aws.amazon.com/getting-started/tutorials/create-connect-postgresql-db/\" target=\"_blank\" rel=\"noopener\">Create and Connect to a PostgreSQL Database</a></p>\n<ol>\n<li>create an AWS account before creating database.</li>\n<li>go to this page: <a href=\"https://ap-southeast-1.console.aws.amazon.com/console/home?region=ap-southeast-1\" target=\"_blank\" rel=\"noopener\">AWS services</a></li>\n<li>search for <code>RDS</code> and click</li>\n<li>search for <code>Create instance</code> and click <code>Launch a DB instance</code></li>\n</ol>\n<p>Below steps made under <code>Free Usage Tier</code></p>\n<ol>\n<li>Engine: <code>PostgreSQL</code></li>\n<li>Use case: <code>Dev/Test</code></li>\n<li>DB details: <ul>\n<li>tick <code>Only enable options eligible for RDS Free Usage Tier</code></li>\n<li>DB instance identifier: <code>myPostgresDB</code></li>\n<li>Master username: <code>xxxxxx</code></li>\n<li>Master password: <code>xxxxxx</code></li>\n</ul>\n</li>\n<li>Configure advanced settings<ul>\n<li>tick <code>Yes</code> for Public accessibility</li>\n<li>Database name: <code>Demo</code></li>\n</ul>\n</li>\n</ol>\n<p>Click <code>Launch DB instance</code> to create.</p>\n<h1 id=\"Use-pgAdmin-as-Client-Application\"><a href=\"#Use-pgAdmin-as-Client-Application\" class=\"headerlink\" title=\"Use pgAdmin as Client Application\"></a>Use pgAdmin as Client Application</h1><p>Reference: <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ConnectToPostgreSQLInstance.html\" target=\"_blank\" rel=\"noopener\">Connecting to a DB Instance Running the PostgreSQL Database Engine</a></p>\n<p>To connect to database, go to <code>RDS</code>&gt;<code>Instances</code>&gt;<code>postgresql</code> and collect below info:</p>\n<ul>\n<li>Endpoint</li>\n<li>Port</li>\n<li>Username</li>\n<li>Password</li>\n</ul>\n<ol>\n<li>Go to <a href=\"https://www.pgadmin.org/download/\" target=\"_blank\" rel=\"noopener\">Download - pgAdmin</a> to download <code>pgAdmin 4 v2.0</code></li>\n<li>Install and Open pgAdmin</li>\n<li>Right click <code>Servers</code> - <code>Create</code> - <code>Server...</code></li>\n<li>General:<ul>\n<li>Name: <code>Demo</code></li>\n<li>Comments: <code>Demo</code></li>\n</ul>\n</li>\n<li>Connection: <ul>\n<li>Host: <code>&lt;Endpoint&gt;</code></li>\n<li>Port:    <code>&lt;Port&gt;</code></li>\n<li>Username: <code>&lt;Username&gt;</code></li>\n<li>Password: <code>&lt;Password&gt;</code></li>\n<li>Role: Empty</li>\n</ul>\n</li>\n</ol>\n<p>Click <code>Save</code></p>\n<p>Done..</p>\n<h1 id=\"Use-Squirrel-SQL-Client-as-Client-Application\"><a href=\"#Use-Squirrel-SQL-Client-as-Client-Application\" class=\"headerlink\" title=\"Use Squirrel SQL Client as Client Application\"></a>Use Squirrel SQL Client as Client Application</h1><ol>\n<li>Install Squirrel SQL Client Application<ul>\n<li>Go to <a href=\"http://squirrel-sql.sourceforge.net/#installation\" target=\"_blank\" rel=\"noopener\">SQuirreL SQL Client Download</a></li>\n<li>Download and install</li>\n</ul>\n</li>\n<li>Download PostgreSQL JDBC Driver<ul>\n<li>Go to <a href=\"https://jdbc.postgresql.org/download.html\" target=\"_blank\" rel=\"noopener\">PostgreSQL JDBC Download</a></li>\n<li>Choose <code>PostgreSQL JDBC 4.2 Driver, 42.1.4</code></li>\n<li>Get <code>postgresql-42.1.4 driver</code></li>\n</ul>\n</li>\n<li>Add PostgreSQL driver for Squirrel SQL Client<ul>\n<li>Open <code>Squirrel SQL Client</code></li>\n<li>Choose <code>Driver</code> on the left</li>\n<li>Choose <code>+</code> to add driver</li>\n<li>Choose <code>Extra Class Path</code> and <code>Add</code></li>\n<li>Choose <code>postgresql-42.1.4 driver</code> just downloaded.</li>\n<li>Fill up:<ul>\n<li>PostgreSQL</li>\n<li>jdbc:postgresql://<host>:<5432>/<database></database></5432></host></li>\n<li><a href=\"http://jdbc.postgresql.org\" target=\"_blank\" rel=\"noopener\">http://jdbc.postgresql.org</a></li>\n<li>org.postgresql.Driver</li>\n</ul>\n</li>\n<li>OK</li>\n</ul>\n</li>\n<li>Add Alias<ul>\n<li>Choose <code>Aliases</code> on the left</li>\n<li>Choose <code>+</code> to add</li>\n<li>Choose blue tick <code>PostgreSQL</code> as Driver</li>\n<li>Fill up:<ul>\n<li>Demo</li>\n<li>jdbc:postgresql://postgresql.cfqvncjculpj.ap-southeast-1.rds.amazonaws.com:5432/Demo</li>\n<li>userName</li>\n<li>password</li>\n</ul>\n</li>\n<li><code>Test</code></li>\n<li><code>Connect</code></li>\n<li><code>OK</code></li>\n</ul>\n</li>\n</ol>\n<p>Done..</p>"},{"title":"Git - 学习笔记","date":"2017-11-24T14:46:23.000Z","_content":"\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n学习素材：[Pro Git](https://bingohuang.gitbooks.io/progit2/content/02-git-basics/sections/getting-a-repository.html)\n\n# 常用指令 #\n\n```bash\ngit add\t\t#添加到下一次的提交中。\ngit status -s\t#状态简览\ngit diff --staged\t##暂存区域 - 本地 Repo\ngit commit -a -m 'comment'\t#跳过git add\n```\n\nGit 周期\n![Git 周期](/images/Git 周期.png)\n\n<!--more-->\n\n# Git 基础 #\n\n## 获取 Git 仓库 ##\n\n两种方法：\n\n1. 初始现有文件夹    \n```\ngit init\n```\n\t初始后的文件夹里多了一个 .git 的文件夹，这就是本地 repository。\n2. 克隆已有的 Remote Repository\n```\ngit clone https://github.com/Ryanluoxu/learn_linux.git\n```\n\t会在当前文件夹里生成 `learn_linux` 文件夹。里面也有 .git 文件夹作为本地 repository。 Remote repository 里的内容先进入到本地 repository，然后才到 `learn_linux` 文件夹。\n\n## 提交文件 ##\n### 文件的三种状态 ###\n- 已修改 modified ： 对某个文件进行修改，保存完成。\n- 已暂存 staged ： 执行 `git add` 之后\n- 已提交 committed ： 执行 `git commit` 之后\n\n这里的提交目的地，是本地 repository。  \n常用的 github 为 remote repository。   \n如果需要将本地 repository 同步到 github 上，需要执行 `git push`。    \n\n所以对本地文件进行修改，到同步到 github，基本流程如下：   \n  \n![本地修改-github的流程图](/images/本地修改-github的流程图.jpg)\n\n\n### git status ###\n```\ngit status\ngit status -s\t#状态简览\n```\n举例：\n```bash\n M README\t\t\t#文件被修改了但是还没放入暂存区\nMM Rakefile\t\t\t#文件被修改，放入了暂存区之后。该文件又被修改。\nA  lib\t\t\t\t#新添加到暂存区中的文件\nM  simple.txt\t\t#文件被修改了并放入了暂存区\n?? LICENSE.txt\t\t#新添加的未跟踪文件\n```\n\n\n### git ignore ###\n创建一个名为 `.gitignore` 的文件，列出要忽略的文件模式。\n```bash\n# no .a files\n*.a\n\n# but do track lib.a, even though you're ignoring .a files above\n!lib.a\n\n# only ignore the TODO file in the current directory, not subdir/TODO\n/TODO\n\n# ignore all files in the build/ directory\nbuild/\n\n# ignore doc/notes.txt, but not doc/server/arch.txt\ndoc/*.txt\n\n# ignore all .pdf files in the doc/ directory\ndoc/**/*.pdf\n```\n\n### git diff ###\n\n```bash\ngit diff\t\t\t#本地文件 - 暂存区域\ngit diff --staged\t#暂存区域 - 本地 Repo\n```\n\n### git commit ###\n```bash\ngit commit -m \"Story 182: Fix benchmarks for speed\"\n```\n\n跳过 `git add`， 把所有跟踪下的文件暂存，然后提交。\n```bash\ngit commit -a -m 'added new benchmarks'\n```\n\n\n# 远程仓库 #\n\n查看已经配置的远程仓库服务器:\n```\ngit remote -v\n```\n\n添加远程 Git 仓库:\n```\ngit remote add <shortname> <url>\n```\n\n抓取：从远程仓库中获得数据,放到本地仓库：\n```\ngit fetch [remote-name]\n```\n\n拉取：从远程仓库中获得数据，然后合并到当前分支：\n```\ngit pull\n```\n\n## Push existing project to github ##\n\n1. Create new repo in github called : hexoBlog\n2. git bash\n```bash\n$ git init\n$ git add --all\n$ git commit\n$ git remote add origin https://github.com/Ryanluoxu/hexoBlog.git\n$ git push\n$ git status\n```\n4. there is one folder always in `untracked` mode. \n```\nmodified:   next (modified content, untracked content)\n```\n5. realised `next` is cloned from github. Itself contains a .git folder.\n6. remove `next` local git repo.\n```bash\n$ cd theme/next/\n$ rm -rf .git\n$ cd ../..\n$ git status\n\nnothing to commit, working tree clean\n\n$ git push\n\nfatal: The current branch master has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin master\n\n\n$ git push -u origin master\t\t#org\n\n```\n\n\n## existing project -> remote repo & eclipse ##\n1. create empty remote repo: `myProject`\n2. git bash on `~/workspace`\n3. clone repo\n\t```\n\tgit clone <**/myProject.git>\t# create `~/workspace/myProject`\n\t```\n4. copy existing project files into `~/workspace/myProject`\n5. git push to remote repo\n\t```bash\n\tcd ~/workspace/myProject\n\tgit add --all\n\tgit commit -m \"initial commit\"\n\tgit push\n\t```\t\n6. Add local repo to Eclipse. \n\t- open git repo window\n\t- add local git repo and choose `~/workspace/myProject`\n7. Go to working directory and import existing project\n8. Once code change. \n\t- Right click project\n\t- team - commit - give commit message - commit and push\n\n\n\n","source":"_posts/Git-学习笔记.md","raw":"---\ntitle: 'Git - 学习笔记'\ndate: 2017-11-24 22:46:23\ncategories: Git\ntags: [Git, 学习笔记]\n---\n\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n学习素材：[Pro Git](https://bingohuang.gitbooks.io/progit2/content/02-git-basics/sections/getting-a-repository.html)\n\n# 常用指令 #\n\n```bash\ngit add\t\t#添加到下一次的提交中。\ngit status -s\t#状态简览\ngit diff --staged\t##暂存区域 - 本地 Repo\ngit commit -a -m 'comment'\t#跳过git add\n```\n\nGit 周期\n![Git 周期](/images/Git 周期.png)\n\n<!--more-->\n\n# Git 基础 #\n\n## 获取 Git 仓库 ##\n\n两种方法：\n\n1. 初始现有文件夹    \n```\ngit init\n```\n\t初始后的文件夹里多了一个 .git 的文件夹，这就是本地 repository。\n2. 克隆已有的 Remote Repository\n```\ngit clone https://github.com/Ryanluoxu/learn_linux.git\n```\n\t会在当前文件夹里生成 `learn_linux` 文件夹。里面也有 .git 文件夹作为本地 repository。 Remote repository 里的内容先进入到本地 repository，然后才到 `learn_linux` 文件夹。\n\n## 提交文件 ##\n### 文件的三种状态 ###\n- 已修改 modified ： 对某个文件进行修改，保存完成。\n- 已暂存 staged ： 执行 `git add` 之后\n- 已提交 committed ： 执行 `git commit` 之后\n\n这里的提交目的地，是本地 repository。  \n常用的 github 为 remote repository。   \n如果需要将本地 repository 同步到 github 上，需要执行 `git push`。    \n\n所以对本地文件进行修改，到同步到 github，基本流程如下：   \n  \n![本地修改-github的流程图](/images/本地修改-github的流程图.jpg)\n\n\n### git status ###\n```\ngit status\ngit status -s\t#状态简览\n```\n举例：\n```bash\n M README\t\t\t#文件被修改了但是还没放入暂存区\nMM Rakefile\t\t\t#文件被修改，放入了暂存区之后。该文件又被修改。\nA  lib\t\t\t\t#新添加到暂存区中的文件\nM  simple.txt\t\t#文件被修改了并放入了暂存区\n?? LICENSE.txt\t\t#新添加的未跟踪文件\n```\n\n\n### git ignore ###\n创建一个名为 `.gitignore` 的文件，列出要忽略的文件模式。\n```bash\n# no .a files\n*.a\n\n# but do track lib.a, even though you're ignoring .a files above\n!lib.a\n\n# only ignore the TODO file in the current directory, not subdir/TODO\n/TODO\n\n# ignore all files in the build/ directory\nbuild/\n\n# ignore doc/notes.txt, but not doc/server/arch.txt\ndoc/*.txt\n\n# ignore all .pdf files in the doc/ directory\ndoc/**/*.pdf\n```\n\n### git diff ###\n\n```bash\ngit diff\t\t\t#本地文件 - 暂存区域\ngit diff --staged\t#暂存区域 - 本地 Repo\n```\n\n### git commit ###\n```bash\ngit commit -m \"Story 182: Fix benchmarks for speed\"\n```\n\n跳过 `git add`， 把所有跟踪下的文件暂存，然后提交。\n```bash\ngit commit -a -m 'added new benchmarks'\n```\n\n\n# 远程仓库 #\n\n查看已经配置的远程仓库服务器:\n```\ngit remote -v\n```\n\n添加远程 Git 仓库:\n```\ngit remote add <shortname> <url>\n```\n\n抓取：从远程仓库中获得数据,放到本地仓库：\n```\ngit fetch [remote-name]\n```\n\n拉取：从远程仓库中获得数据，然后合并到当前分支：\n```\ngit pull\n```\n\n## Push existing project to github ##\n\n1. Create new repo in github called : hexoBlog\n2. git bash\n```bash\n$ git init\n$ git add --all\n$ git commit\n$ git remote add origin https://github.com/Ryanluoxu/hexoBlog.git\n$ git push\n$ git status\n```\n4. there is one folder always in `untracked` mode. \n```\nmodified:   next (modified content, untracked content)\n```\n5. realised `next` is cloned from github. Itself contains a .git folder.\n6. remove `next` local git repo.\n```bash\n$ cd theme/next/\n$ rm -rf .git\n$ cd ../..\n$ git status\n\nnothing to commit, working tree clean\n\n$ git push\n\nfatal: The current branch master has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin master\n\n\n$ git push -u origin master\t\t#org\n\n```\n\n\n## existing project -> remote repo & eclipse ##\n1. create empty remote repo: `myProject`\n2. git bash on `~/workspace`\n3. clone repo\n\t```\n\tgit clone <**/myProject.git>\t# create `~/workspace/myProject`\n\t```\n4. copy existing project files into `~/workspace/myProject`\n5. git push to remote repo\n\t```bash\n\tcd ~/workspace/myProject\n\tgit add --all\n\tgit commit -m \"initial commit\"\n\tgit push\n\t```\t\n6. Add local repo to Eclipse. \n\t- open git repo window\n\t- add local git repo and choose `~/workspace/myProject`\n7. Go to working directory and import existing project\n8. Once code change. \n\t- Right click project\n\t- team - commit - give commit message - commit and push\n\n\n\n","slug":"Git-学习笔记","published":1,"updated":"2017-12-09T12:39:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbiug0i40006vwv4bh4rm6s5","content":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>学习素材：<a href=\"https://bingohuang.gitbooks.io/progit2/content/02-git-basics/sections/getting-a-repository.html\" target=\"_blank\" rel=\"noopener\">Pro Git</a></p>\n<h1 id=\"常用指令\"><a href=\"#常用指令\" class=\"headerlink\" title=\"常用指令\"></a>常用指令</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add\t\t<span class=\"comment\">#添加到下一次的提交中。</span></span><br><span class=\"line\">git status -s\t<span class=\"comment\">#状态简览</span></span><br><span class=\"line\">git diff --staged\t<span class=\"comment\">##暂存区域 - 本地 Repo</span></span><br><span class=\"line\">git commit -a -m <span class=\"string\">'comment'</span>\t<span class=\"comment\">#跳过git add</span></span><br></pre></td></tr></table></figure>\n<p>Git 周期<br><img src=\"/images/Git 周期.png\" alt=\"Git 周期\"></p>\n<a id=\"more\"></a>\n<h1 id=\"Git-基础\"><a href=\"#Git-基础\" class=\"headerlink\" title=\"Git 基础\"></a>Git 基础</h1><h2 id=\"获取-Git-仓库\"><a href=\"#获取-Git-仓库\" class=\"headerlink\" title=\"获取 Git 仓库\"></a>获取 Git 仓库</h2><p>两种方法：</p>\n<ol>\n<li><p>初始现有文件夹    </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<p> 初始后的文件夹里多了一个 .git 的文件夹，这就是本地 repository。</p>\n</li>\n<li><p>克隆已有的 Remote Repository</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/Ryanluoxu/learn_linux.git</span><br></pre></td></tr></table></figure>\n<p> 会在当前文件夹里生成 <code>learn_linux</code> 文件夹。里面也有 .git 文件夹作为本地 repository。 Remote repository 里的内容先进入到本地 repository，然后才到 <code>learn_linux</code> 文件夹。</p>\n</li>\n</ol>\n<h2 id=\"提交文件\"><a href=\"#提交文件\" class=\"headerlink\" title=\"提交文件\"></a>提交文件</h2><h3 id=\"文件的三种状态\"><a href=\"#文件的三种状态\" class=\"headerlink\" title=\"文件的三种状态\"></a>文件的三种状态</h3><ul>\n<li>已修改 modified ： 对某个文件进行修改，保存完成。</li>\n<li>已暂存 staged ： 执行 <code>git add</code> 之后</li>\n<li>已提交 committed ： 执行 <code>git commit</code> 之后</li>\n</ul>\n<p>这里的提交目的地，是本地 repository。<br>常用的 github 为 remote repository。<br>如果需要将本地 repository 同步到 github 上，需要执行 <code>git push</code>。    </p>\n<p>所以对本地文件进行修改，到同步到 github，基本流程如下：   </p>\n<p><img src=\"/images/本地修改-github的流程图.jpg\" alt=\"本地修改-github的流程图\"></p>\n<h3 id=\"git-status\"><a href=\"#git-status\" class=\"headerlink\" title=\"git status\"></a>git status</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br><span class=\"line\">git status -s\t#状态简览</span><br></pre></td></tr></table></figure>\n<p>举例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> M README\t\t\t<span class=\"comment\">#文件被修改了但是还没放入暂存区</span></span><br><span class=\"line\">MM Rakefile\t\t\t<span class=\"comment\">#文件被修改，放入了暂存区之后。该文件又被修改。</span></span><br><span class=\"line\">A  lib\t\t\t\t<span class=\"comment\">#新添加到暂存区中的文件</span></span><br><span class=\"line\">M  simple.txt\t\t<span class=\"comment\">#文件被修改了并放入了暂存区</span></span><br><span class=\"line\">?? LICENSE.txt\t\t<span class=\"comment\">#新添加的未跟踪文件</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"git-ignore\"><a href=\"#git-ignore\" class=\"headerlink\" title=\"git ignore\"></a>git ignore</h3><p>创建一个名为 <code>.gitignore</code> 的文件，列出要忽略的文件模式。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># no .a files</span></span><br><span class=\"line\">*.a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># but do track lib.a, even though you're ignoring .a files above</span></span><br><span class=\"line\">!lib.a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># only ignore the TODO file in the current directory, not subdir/TODO</span></span><br><span class=\"line\">/TODO</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ignore all files in the build/ directory</span></span><br><span class=\"line\">build/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ignore doc/notes.txt, but not doc/server/arch.txt</span></span><br><span class=\"line\">doc/*.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ignore all .pdf files in the doc/ directory</span></span><br><span class=\"line\">doc/**/*.pdf</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"git-diff\"><a href=\"#git-diff\" class=\"headerlink\" title=\"git diff\"></a>git diff</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff\t\t\t<span class=\"comment\">#本地文件 - 暂存区域</span></span><br><span class=\"line\">git diff --staged\t<span class=\"comment\">#暂存区域 - 本地 Repo</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"git-commit\"><a href=\"#git-commit\" class=\"headerlink\" title=\"git commit\"></a>git commit</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">\"Story 182: Fix benchmarks for speed\"</span></span><br></pre></td></tr></table></figure>\n<p>跳过 <code>git add</code>， 把所有跟踪下的文件暂存，然后提交。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -a -m <span class=\"string\">'added new benchmarks'</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h1><p>查看已经配置的远程仓库服务器:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure></p>\n<p>添加远程 Git 仓库:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add &lt;shortname&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure></p>\n<p>抓取：从远程仓库中获得数据,放到本地仓库：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch [remote-name]</span><br></pre></td></tr></table></figure></p>\n<p>拉取：从远程仓库中获得数据，然后合并到当前分支：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Push-existing-project-to-github\"><a href=\"#Push-existing-project-to-github\" class=\"headerlink\" title=\"Push existing project to github\"></a>Push existing project to github</h2><ol>\n<li>Create new repo in github called : hexoBlog</li>\n<li><p>git bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git init</span><br><span class=\"line\">$ git add --all</span><br><span class=\"line\">$ git commit</span><br><span class=\"line\">$ git remote add origin https://github.com/Ryanluoxu/hexoBlog.git</span><br><span class=\"line\">$ git push</span><br><span class=\"line\">$ git status</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>there is one folder always in <code>untracked</code> mode. </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">modified:   next (modified content, untracked content)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>realised <code>next</code> is cloned from github. Itself contains a .git folder.</p>\n</li>\n<li>remove <code>next</code> local git repo.<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> theme/next/</span><br><span class=\"line\">$ rm -rf .git</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> ../..</span><br><span class=\"line\">$ git status</span><br><span class=\"line\"></span><br><span class=\"line\">nothing to commit, working tree clean</span><br><span class=\"line\"></span><br><span class=\"line\">$ git push</span><br><span class=\"line\"></span><br><span class=\"line\">fatal: The current branch master has no upstream branch.</span><br><span class=\"line\">To push the current branch and <span class=\"built_in\">set</span> the remote as upstream, use</span><br><span class=\"line\"></span><br><span class=\"line\">    git push --<span class=\"built_in\">set</span>-upstream origin master</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">$ git push -u origin master\t\t<span class=\"comment\">#org</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"existing-project-gt-remote-repo-amp-eclipse\"><a href=\"#existing-project-gt-remote-repo-amp-eclipse\" class=\"headerlink\" title=\"existing project -&gt; remote repo &amp; eclipse\"></a>existing project -&gt; remote repo &amp; eclipse</h2><ol>\n<li>create empty remote repo: <code>myProject</code></li>\n<li>git bash on <code>~/workspace</code></li>\n<li><p>clone repo</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone &lt;**/myProject.git&gt;\t# create `~/workspace/myProject`</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>copy existing project files into <code>~/workspace/myProject</code></p>\n</li>\n<li>git push to remote repo<pre><code class=\"bash\"><span class=\"built_in\">cd</span> ~/workspace/myProject\ngit add --all\ngit commit -m <span class=\"string\">\"initial commit\"</span>\ngit push\n</code></pre>\n</li>\n<li>Add local repo to Eclipse. <ul>\n<li>open git repo window</li>\n<li>add local git repo and choose <code>~/workspace/myProject</code></li>\n</ul>\n</li>\n<li>Go to working directory and import existing project</li>\n<li>Once code change. <ul>\n<li>Right click project</li>\n<li>team - commit - give commit message - commit and push</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>学习素材：<a href=\"https://bingohuang.gitbooks.io/progit2/content/02-git-basics/sections/getting-a-repository.html\" target=\"_blank\" rel=\"noopener\">Pro Git</a></p>\n<h1 id=\"常用指令\"><a href=\"#常用指令\" class=\"headerlink\" title=\"常用指令\"></a>常用指令</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add\t\t<span class=\"comment\">#添加到下一次的提交中。</span></span><br><span class=\"line\">git status -s\t<span class=\"comment\">#状态简览</span></span><br><span class=\"line\">git diff --staged\t<span class=\"comment\">##暂存区域 - 本地 Repo</span></span><br><span class=\"line\">git commit -a -m <span class=\"string\">'comment'</span>\t<span class=\"comment\">#跳过git add</span></span><br></pre></td></tr></table></figure>\n<p>Git 周期<br><img src=\"/images/Git 周期.png\" alt=\"Git 周期\"></p>","more":"<h1 id=\"Git-基础\"><a href=\"#Git-基础\" class=\"headerlink\" title=\"Git 基础\"></a>Git 基础</h1><h2 id=\"获取-Git-仓库\"><a href=\"#获取-Git-仓库\" class=\"headerlink\" title=\"获取 Git 仓库\"></a>获取 Git 仓库</h2><p>两种方法：</p>\n<ol>\n<li><p>初始现有文件夹    </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<p> 初始后的文件夹里多了一个 .git 的文件夹，这就是本地 repository。</p>\n</li>\n<li><p>克隆已有的 Remote Repository</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/Ryanluoxu/learn_linux.git</span><br></pre></td></tr></table></figure>\n<p> 会在当前文件夹里生成 <code>learn_linux</code> 文件夹。里面也有 .git 文件夹作为本地 repository。 Remote repository 里的内容先进入到本地 repository，然后才到 <code>learn_linux</code> 文件夹。</p>\n</li>\n</ol>\n<h2 id=\"提交文件\"><a href=\"#提交文件\" class=\"headerlink\" title=\"提交文件\"></a>提交文件</h2><h3 id=\"文件的三种状态\"><a href=\"#文件的三种状态\" class=\"headerlink\" title=\"文件的三种状态\"></a>文件的三种状态</h3><ul>\n<li>已修改 modified ： 对某个文件进行修改，保存完成。</li>\n<li>已暂存 staged ： 执行 <code>git add</code> 之后</li>\n<li>已提交 committed ： 执行 <code>git commit</code> 之后</li>\n</ul>\n<p>这里的提交目的地，是本地 repository。<br>常用的 github 为 remote repository。<br>如果需要将本地 repository 同步到 github 上，需要执行 <code>git push</code>。    </p>\n<p>所以对本地文件进行修改，到同步到 github，基本流程如下：   </p>\n<p><img src=\"/images/本地修改-github的流程图.jpg\" alt=\"本地修改-github的流程图\"></p>\n<h3 id=\"git-status\"><a href=\"#git-status\" class=\"headerlink\" title=\"git status\"></a>git status</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br><span class=\"line\">git status -s\t#状态简览</span><br></pre></td></tr></table></figure>\n<p>举例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> M README\t\t\t<span class=\"comment\">#文件被修改了但是还没放入暂存区</span></span><br><span class=\"line\">MM Rakefile\t\t\t<span class=\"comment\">#文件被修改，放入了暂存区之后。该文件又被修改。</span></span><br><span class=\"line\">A  lib\t\t\t\t<span class=\"comment\">#新添加到暂存区中的文件</span></span><br><span class=\"line\">M  simple.txt\t\t<span class=\"comment\">#文件被修改了并放入了暂存区</span></span><br><span class=\"line\">?? LICENSE.txt\t\t<span class=\"comment\">#新添加的未跟踪文件</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"git-ignore\"><a href=\"#git-ignore\" class=\"headerlink\" title=\"git ignore\"></a>git ignore</h3><p>创建一个名为 <code>.gitignore</code> 的文件，列出要忽略的文件模式。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># no .a files</span></span><br><span class=\"line\">*.a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># but do track lib.a, even though you're ignoring .a files above</span></span><br><span class=\"line\">!lib.a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># only ignore the TODO file in the current directory, not subdir/TODO</span></span><br><span class=\"line\">/TODO</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ignore all files in the build/ directory</span></span><br><span class=\"line\">build/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ignore doc/notes.txt, but not doc/server/arch.txt</span></span><br><span class=\"line\">doc/*.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ignore all .pdf files in the doc/ directory</span></span><br><span class=\"line\">doc/**/*.pdf</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"git-diff\"><a href=\"#git-diff\" class=\"headerlink\" title=\"git diff\"></a>git diff</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff\t\t\t<span class=\"comment\">#本地文件 - 暂存区域</span></span><br><span class=\"line\">git diff --staged\t<span class=\"comment\">#暂存区域 - 本地 Repo</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"git-commit\"><a href=\"#git-commit\" class=\"headerlink\" title=\"git commit\"></a>git commit</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">\"Story 182: Fix benchmarks for speed\"</span></span><br></pre></td></tr></table></figure>\n<p>跳过 <code>git add</code>， 把所有跟踪下的文件暂存，然后提交。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -a -m <span class=\"string\">'added new benchmarks'</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h1><p>查看已经配置的远程仓库服务器:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure></p>\n<p>添加远程 Git 仓库:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add &lt;shortname&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure></p>\n<p>抓取：从远程仓库中获得数据,放到本地仓库：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch [remote-name]</span><br></pre></td></tr></table></figure></p>\n<p>拉取：从远程仓库中获得数据，然后合并到当前分支：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Push-existing-project-to-github\"><a href=\"#Push-existing-project-to-github\" class=\"headerlink\" title=\"Push existing project to github\"></a>Push existing project to github</h2><ol>\n<li>Create new repo in github called : hexoBlog</li>\n<li><p>git bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git init</span><br><span class=\"line\">$ git add --all</span><br><span class=\"line\">$ git commit</span><br><span class=\"line\">$ git remote add origin https://github.com/Ryanluoxu/hexoBlog.git</span><br><span class=\"line\">$ git push</span><br><span class=\"line\">$ git status</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>there is one folder always in <code>untracked</code> mode. </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">modified:   next (modified content, untracked content)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>realised <code>next</code> is cloned from github. Itself contains a .git folder.</p>\n</li>\n<li>remove <code>next</code> local git repo.<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> theme/next/</span><br><span class=\"line\">$ rm -rf .git</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> ../..</span><br><span class=\"line\">$ git status</span><br><span class=\"line\"></span><br><span class=\"line\">nothing to commit, working tree clean</span><br><span class=\"line\"></span><br><span class=\"line\">$ git push</span><br><span class=\"line\"></span><br><span class=\"line\">fatal: The current branch master has no upstream branch.</span><br><span class=\"line\">To push the current branch and <span class=\"built_in\">set</span> the remote as upstream, use</span><br><span class=\"line\"></span><br><span class=\"line\">    git push --<span class=\"built_in\">set</span>-upstream origin master</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">$ git push -u origin master\t\t<span class=\"comment\">#org</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"existing-project-gt-remote-repo-amp-eclipse\"><a href=\"#existing-project-gt-remote-repo-amp-eclipse\" class=\"headerlink\" title=\"existing project -&gt; remote repo &amp; eclipse\"></a>existing project -&gt; remote repo &amp; eclipse</h2><ol>\n<li>create empty remote repo: <code>myProject</code></li>\n<li>git bash on <code>~/workspace</code></li>\n<li><p>clone repo</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone &lt;**/myProject.git&gt;\t# create `~/workspace/myProject`</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>copy existing project files into <code>~/workspace/myProject</code></p>\n</li>\n<li>git push to remote repo<pre><code class=\"bash\"><span class=\"built_in\">cd</span> ~/workspace/myProject\ngit add --all\ngit commit -m <span class=\"string\">\"initial commit\"</span>\ngit push\n</code></pre>\n</li>\n<li>Add local repo to Eclipse. <ul>\n<li>open git repo window</li>\n<li>add local git repo and choose <code>~/workspace/myProject</code></li>\n</ul>\n</li>\n<li>Go to working directory and import existing project</li>\n<li>Once code change. <ul>\n<li>Right click project</li>\n<li>team - commit - give commit message - commit and push</li>\n</ul>\n</li>\n</ol>"},{"title":"AngularJS Learning","date":"2017-12-10T12:52:45.000Z","_content":"\nLearning Material: [AngularJS tutorial for beginners](https://www.youtube.com/watch?v=zKkUN-mJtPQ&list=PL6n9fhu94yhWKHkcL7RJmmXyxkuFB3KSl)\n\n## 1. What is AngularJS\n\n- JavaScript framework\n- Help to build web application\n- MVC\n\n<!--more-->\n\n### Two requirements to start using AngularJS\n1. Copy `angular.min.js` in and insert to html\n```\n<head>\n\t<script src=\"scripts/angular.min.js\"></script>\t<!-- 1st requirement -->\n</head>\n```\n2. insert `ng-app` to activate angular\n```\n<body ng-app>\t<!-- 2nd requirement: activate angular -->\n\t<div>\n\t\t10+20={{10+20}}\n\t</div>\n</body>\n```\n\n### Demo\n```\n10+20={{10+20}}\n{{1==2}}\n{{ {name: 'Ryan', age: '30'}.name }}\n{{ ['David','Lucy','Shell'][2] }}\t#Shell\n\n```\n\n## 2. Modules and Controllers\n\n### Intro\n1. Module\n\t- a container: controller, service, directive, filter..\n\t- as a main() method\n2. Create a module\n\t```\n\tvar myApp = angular.module(\"myModule\",[]);\t# ModuleName & its dependency\n\t```\n3. Controller\n\t- a JS function\n\t- to build a model for the view to display\n\t- model is data\n4. Create a controller\n\t```\n\tvar myController = function ($scope) {\n\t\t$scope.message = \"Hello world..\";\n\t}\n\t```\n\n!! $scope is NOT model. The data attached is the model.\n\n### Demo\n\n- script.js\n\t```\n\tvar myApp = angular.module(\"myModule\",[]);\t// 1. create module\n\n\tmyApp.controller(\"myController\", function ($scope) {\t// 2. create controller\n\t\t$scope.message = \"Hello world..\";\n\t}); \n\n\t```\n- index.html\n\t```\n\t<head>\n\t\t<script src=\"scripts/script.js\"></script>\n\t</head>\n\n\t<body ng-app=\"myModule\">\n\t\t<div ng-controller=\"myController\">\n\t\t\t{{ message }}\n\t\t</div>\n\t</body>\n\t```\n\n## 3. Controllers - cont\n\n### Attach a complex object to the scope\n```\nmyApp.controller(\"myController\", function ($scope) {\n\t\n\tvar customer = {\n\t\tfirstName: \"ryan\",\n\t\tlastName: \"luo\",\n\t\tgender: \"male\"\n\t};\t\t\t\t// create object\n\t\n\t$scope.customer = customer;\t// attach object to scope\n\n}); \n```\n\n### In the view:\n```\n<body ng-app=\"myModule\">\n\t<div ng-controller=\"myController\">\n\t\t\n\t\t<div>first name: {{ customer.firstName }}</div>\n\t\t<div>last name: {{ customer.lastName }}</div>\n\t\t<div>gender: {{ customer.gender }}</div>\n\t\t\n\t</div>\n</body>\n```\n\n- misspell controller -> Error\n- misspell object property -> Null\n\n### Method chaining to combine controller into module:\n- Module:\n\t```\n\tvar myApp = angular.module(\"myModule\",[]);\n\t```\n- Controller:\n\t```\n\tmyApp.controller(\"myController\", function ($scope) {\n\t\n\t\tvar customer = {\n\t\t\tfirstName: \"ryan\",\n\t\t\tlastName: \"luo\",\n\t\t\tgender: \"male\"\n\t\t};\n\t\t$scope.customer = customer;\n\n\t}); \n\t```\n- Combine:\n\t```\n\tvar myApp = angular\n\t\t\t.module(\"myModule\",[])\n\t\t\t.controller(\"myController\", function ($scope) {\n\t\t\t\tvar customer = {\t\t\n\t\t\t\t\tfirstName: \"ryan\",\n\t\t\t\t\tlastName: \"luo\",\n\t\t\t\t\tgender: \"male\"\n\t\t\t\t};\n\t\t\t\t$scope.customer = customer;\n\t\t\t}); \n\t```\n\n## 4. Directive: ng-src\n\n- add `image` folder to project with an image\n- use `ng-scr` to ensure a request is issued only after NG has evaluated.\n- no 404 error\n\n### JS\n```\nvar myApp = angular\n\t\t.module(\"myModule\",[])\n\t\t.controller(\"myController\", function ($scope) {\n\t\t\tvar topic = {\t\t\n\t\t\t\tname: \"Git\",\t\t\t\t\n\t\t\t\tpicture: \"image/Git-Cycle1.png\"\t\t#source-path\n\t\t\t};\n\t\t\t$scope.topic = topic;\n\t\t}); \n```\n\n### HTML\n```\n<div ng-controller=\"myController\">\n\t\n\t<div>\n\t\tTopic : {{ topic.name }}\n\t</div>\n\t\n\t<img ng-src=\"{{ topic.picture }}\" \t\t#dynamic\n\t\talt=\"{{ topic.name + ' picture' }}\"\t\t\t\n\t\tstyle=\"height:300px; width:400px\"/>\n\t\n</div>\n```\n\n\n## 5. Two-way DataBinding & ng-model\n\n### Two-way data binding\n- keep model and view in sync at all time\n- `$scope.message` won't change\n- `ng-model=\"message\"` and `{{ message }}` will keep the same\n- model takes value from js initially. Once change, model value changes. \n\n```\nvar myApp = angular\n\t\t.module(\"myModule\",[])\n\t\t.controller(\"myController\", function ($scope) {\n\t\t\n\t\t\t$scope.message = \"Hello World..\"\n\t\t\n\t\t}); \n\n<div ng-controller=\"myController\">\n\t\n\t<input type=\"text\" ng-model=\"message\"/>\n\t<br/><br/>\t\n\t{{ message }}\n\t\n</div>\n\n```\n\n### ng-model\nused for\n- input\n- select\n- textarea\n\n### Demo\n\n```\n# JS\nvar myApp = angular\n\t\t.module(\"myModule\",[])\n\t\t.controller(\"myController\", function ($scope) {\n\t\t\t\n\t\t\tvar customer = {\n\t\t\t\t\tname: \"ryan\",\n\t\t\t\t\tage: \"29\"\n\t\t\t};\n\t\t\t\n\t\t\t$scope.customer = customer;\n\t\t}); \n\n\n# HTML\n<div ng-controller=\"myController\">\n\t<table>\n\t\t<tr>\n\t\t\t<td>Name</td>\n\t\t\t<td><input type=\"text\" ng-model=\"customer.name\"/></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Age</td>\n\t\t\t<td><input type=\"text\" ng-model=\"customer.age\"/></td>\n\t\t</tr>\n\t</table>\n\t<br/>\n\t<table>\n\t\t<tr>\n\t\t\t<td>Name</td>\n\t\t\t<td>{{ customer.name }}</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Age</td>\n\t\t\t<td>{{ customer.age }}</td>\n\t\t</tr>\n\t</table>\n</div>\n```\n\nResult:\n![ng-model](/images/ng-model.png)\n\n\n\n\n\n","source":"_posts/AngularJS-Learning.md","raw":"---\ntitle: AngularJS Learning\ndate: 2017-12-10 20:52:45\ncategories: AngularJS\ntags: [AngularJS, notes]\n---\n\nLearning Material: [AngularJS tutorial for beginners](https://www.youtube.com/watch?v=zKkUN-mJtPQ&list=PL6n9fhu94yhWKHkcL7RJmmXyxkuFB3KSl)\n\n## 1. What is AngularJS\n\n- JavaScript framework\n- Help to build web application\n- MVC\n\n<!--more-->\n\n### Two requirements to start using AngularJS\n1. Copy `angular.min.js` in and insert to html\n```\n<head>\n\t<script src=\"scripts/angular.min.js\"></script>\t<!-- 1st requirement -->\n</head>\n```\n2. insert `ng-app` to activate angular\n```\n<body ng-app>\t<!-- 2nd requirement: activate angular -->\n\t<div>\n\t\t10+20={{10+20}}\n\t</div>\n</body>\n```\n\n### Demo\n```\n10+20={{10+20}}\n{{1==2}}\n{{ {name: 'Ryan', age: '30'}.name }}\n{{ ['David','Lucy','Shell'][2] }}\t#Shell\n\n```\n\n## 2. Modules and Controllers\n\n### Intro\n1. Module\n\t- a container: controller, service, directive, filter..\n\t- as a main() method\n2. Create a module\n\t```\n\tvar myApp = angular.module(\"myModule\",[]);\t# ModuleName & its dependency\n\t```\n3. Controller\n\t- a JS function\n\t- to build a model for the view to display\n\t- model is data\n4. Create a controller\n\t```\n\tvar myController = function ($scope) {\n\t\t$scope.message = \"Hello world..\";\n\t}\n\t```\n\n!! $scope is NOT model. The data attached is the model.\n\n### Demo\n\n- script.js\n\t```\n\tvar myApp = angular.module(\"myModule\",[]);\t// 1. create module\n\n\tmyApp.controller(\"myController\", function ($scope) {\t// 2. create controller\n\t\t$scope.message = \"Hello world..\";\n\t}); \n\n\t```\n- index.html\n\t```\n\t<head>\n\t\t<script src=\"scripts/script.js\"></script>\n\t</head>\n\n\t<body ng-app=\"myModule\">\n\t\t<div ng-controller=\"myController\">\n\t\t\t{{ message }}\n\t\t</div>\n\t</body>\n\t```\n\n## 3. Controllers - cont\n\n### Attach a complex object to the scope\n```\nmyApp.controller(\"myController\", function ($scope) {\n\t\n\tvar customer = {\n\t\tfirstName: \"ryan\",\n\t\tlastName: \"luo\",\n\t\tgender: \"male\"\n\t};\t\t\t\t// create object\n\t\n\t$scope.customer = customer;\t// attach object to scope\n\n}); \n```\n\n### In the view:\n```\n<body ng-app=\"myModule\">\n\t<div ng-controller=\"myController\">\n\t\t\n\t\t<div>first name: {{ customer.firstName }}</div>\n\t\t<div>last name: {{ customer.lastName }}</div>\n\t\t<div>gender: {{ customer.gender }}</div>\n\t\t\n\t</div>\n</body>\n```\n\n- misspell controller -> Error\n- misspell object property -> Null\n\n### Method chaining to combine controller into module:\n- Module:\n\t```\n\tvar myApp = angular.module(\"myModule\",[]);\n\t```\n- Controller:\n\t```\n\tmyApp.controller(\"myController\", function ($scope) {\n\t\n\t\tvar customer = {\n\t\t\tfirstName: \"ryan\",\n\t\t\tlastName: \"luo\",\n\t\t\tgender: \"male\"\n\t\t};\n\t\t$scope.customer = customer;\n\n\t}); \n\t```\n- Combine:\n\t```\n\tvar myApp = angular\n\t\t\t.module(\"myModule\",[])\n\t\t\t.controller(\"myController\", function ($scope) {\n\t\t\t\tvar customer = {\t\t\n\t\t\t\t\tfirstName: \"ryan\",\n\t\t\t\t\tlastName: \"luo\",\n\t\t\t\t\tgender: \"male\"\n\t\t\t\t};\n\t\t\t\t$scope.customer = customer;\n\t\t\t}); \n\t```\n\n## 4. Directive: ng-src\n\n- add `image` folder to project with an image\n- use `ng-scr` to ensure a request is issued only after NG has evaluated.\n- no 404 error\n\n### JS\n```\nvar myApp = angular\n\t\t.module(\"myModule\",[])\n\t\t.controller(\"myController\", function ($scope) {\n\t\t\tvar topic = {\t\t\n\t\t\t\tname: \"Git\",\t\t\t\t\n\t\t\t\tpicture: \"image/Git-Cycle1.png\"\t\t#source-path\n\t\t\t};\n\t\t\t$scope.topic = topic;\n\t\t}); \n```\n\n### HTML\n```\n<div ng-controller=\"myController\">\n\t\n\t<div>\n\t\tTopic : {{ topic.name }}\n\t</div>\n\t\n\t<img ng-src=\"{{ topic.picture }}\" \t\t#dynamic\n\t\talt=\"{{ topic.name + ' picture' }}\"\t\t\t\n\t\tstyle=\"height:300px; width:400px\"/>\n\t\n</div>\n```\n\n\n## 5. Two-way DataBinding & ng-model\n\n### Two-way data binding\n- keep model and view in sync at all time\n- `$scope.message` won't change\n- `ng-model=\"message\"` and `{{ message }}` will keep the same\n- model takes value from js initially. Once change, model value changes. \n\n```\nvar myApp = angular\n\t\t.module(\"myModule\",[])\n\t\t.controller(\"myController\", function ($scope) {\n\t\t\n\t\t\t$scope.message = \"Hello World..\"\n\t\t\n\t\t}); \n\n<div ng-controller=\"myController\">\n\t\n\t<input type=\"text\" ng-model=\"message\"/>\n\t<br/><br/>\t\n\t{{ message }}\n\t\n</div>\n\n```\n\n### ng-model\nused for\n- input\n- select\n- textarea\n\n### Demo\n\n```\n# JS\nvar myApp = angular\n\t\t.module(\"myModule\",[])\n\t\t.controller(\"myController\", function ($scope) {\n\t\t\t\n\t\t\tvar customer = {\n\t\t\t\t\tname: \"ryan\",\n\t\t\t\t\tage: \"29\"\n\t\t\t};\n\t\t\t\n\t\t\t$scope.customer = customer;\n\t\t}); \n\n\n# HTML\n<div ng-controller=\"myController\">\n\t<table>\n\t\t<tr>\n\t\t\t<td>Name</td>\n\t\t\t<td><input type=\"text\" ng-model=\"customer.name\"/></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Age</td>\n\t\t\t<td><input type=\"text\" ng-model=\"customer.age\"/></td>\n\t\t</tr>\n\t</table>\n\t<br/>\n\t<table>\n\t\t<tr>\n\t\t\t<td>Name</td>\n\t\t\t<td>{{ customer.name }}</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Age</td>\n\t\t\t<td>{{ customer.age }}</td>\n\t\t</tr>\n\t</table>\n</div>\n```\n\nResult:\n![ng-model](/images/ng-model.png)\n\n\n\n\n\n","slug":"AngularJS-Learning","published":1,"updated":"2017-12-12T15:37:26.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbiug0i60008vwv4iy276k48","content":"<p>Learning Material: <a href=\"https://www.youtube.com/watch?v=zKkUN-mJtPQ&amp;list=PL6n9fhu94yhWKHkcL7RJmmXyxkuFB3KSl\" target=\"_blank\" rel=\"noopener\">AngularJS tutorial for beginners</a></p>\n<h2 id=\"1-What-is-AngularJS\"><a href=\"#1-What-is-AngularJS\" class=\"headerlink\" title=\"1. What is AngularJS\"></a>1. What is AngularJS</h2><ul>\n<li>JavaScript framework</li>\n<li>Help to build web application</li>\n<li>MVC</li>\n</ul>\n<a id=\"more\"></a>\n<h3 id=\"Two-requirements-to-start-using-AngularJS\"><a href=\"#Two-requirements-to-start-using-AngularJS\" class=\"headerlink\" title=\"Two requirements to start using AngularJS\"></a>Two requirements to start using AngularJS</h3><ol>\n<li><p>Copy <code>angular.min.js</code> in and insert to html</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">\t&lt;script src=&quot;scripts/angular.min.js&quot;&gt;&lt;/script&gt;\t&lt;!-- 1st requirement --&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>insert <code>ng-app</code> to activate angular</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body ng-app&gt;\t&lt;!-- 2nd requirement: activate angular --&gt;</span><br><span class=\"line\">\t&lt;div&gt;</span><br><span class=\"line\">\t\t10+20=&#123;&#123;10+20&#125;&#125;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10+20=&#123;&#123;10+20&#125;&#125;</span><br><span class=\"line\">&#123;&#123;1==2&#125;&#125;</span><br><span class=\"line\">&#123;&#123; &#123;name: &apos;Ryan&apos;, age: &apos;30&apos;&#125;.name &#125;&#125;</span><br><span class=\"line\">&#123;&#123; [&apos;David&apos;,&apos;Lucy&apos;,&apos;Shell&apos;][2] &#125;&#125;\t#Shell</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-Modules-and-Controllers\"><a href=\"#2-Modules-and-Controllers\" class=\"headerlink\" title=\"2. Modules and Controllers\"></a>2. Modules and Controllers</h2><h3 id=\"Intro\"><a href=\"#Intro\" class=\"headerlink\" title=\"Intro\"></a>Intro</h3><ol>\n<li>Module<ul>\n<li>a container: controller, service, directive, filter..</li>\n<li>as a main() method</li>\n</ul>\n</li>\n<li><p>Create a module</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular.module(&quot;myModule&quot;,[]);\t# ModuleName &amp; its dependency</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Controller</p>\n<ul>\n<li>a JS function</li>\n<li>to build a model for the view to display</li>\n<li>model is data</li>\n</ul>\n</li>\n<li>Create a controller <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myController = function ($scope) &#123;</span><br><span class=\"line\">\t$scope.message = &quot;Hello world..&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>!! $scope is NOT model. The data attached is the model.</p>\n<h3 id=\"Demo-1\"><a href=\"#Demo-1\" class=\"headerlink\" title=\"Demo\"></a>Demo</h3><ul>\n<li><p>script.js</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular.module(&quot;myModule&quot;,[]);\t// 1. create module</span><br><span class=\"line\"></span><br><span class=\"line\">myApp.controller(&quot;myController&quot;, function ($scope) &#123;\t// 2. create controller</span><br><span class=\"line\">\t$scope.message = &quot;Hello world..&quot;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>index.html</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">\t&lt;script src=&quot;scripts/script.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body ng-app=&quot;myModule&quot;&gt;</span><br><span class=\"line\">\t&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t\t&#123;&#123; message &#125;&#125;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"3-Controllers-cont\"><a href=\"#3-Controllers-cont\" class=\"headerlink\" title=\"3. Controllers - cont\"></a>3. Controllers - cont</h2><h3 id=\"Attach-a-complex-object-to-the-scope\"><a href=\"#Attach-a-complex-object-to-the-scope\" class=\"headerlink\" title=\"Attach a complex object to the scope\"></a>Attach a complex object to the scope</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myApp.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tvar customer = &#123;</span><br><span class=\"line\">\t\tfirstName: &quot;ryan&quot;,</span><br><span class=\"line\">\t\tlastName: &quot;luo&quot;,</span><br><span class=\"line\">\t\tgender: &quot;male&quot;</span><br><span class=\"line\">\t&#125;;\t\t\t\t// create object</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t$scope.customer = customer;\t// attach object to scope</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"In-the-view\"><a href=\"#In-the-view\" class=\"headerlink\" title=\"In the view:\"></a>In the view:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body ng-app=&quot;myModule&quot;&gt;</span><br><span class=\"line\">\t&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;div&gt;first name: &#123;&#123; customer.firstName &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div&gt;last name: &#123;&#123; customer.lastName &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div&gt;gender: &#123;&#123; customer.gender &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>misspell controller -&gt; Error</li>\n<li>misspell object property -&gt; Null</li>\n</ul>\n<h3 id=\"Method-chaining-to-combine-controller-into-module\"><a href=\"#Method-chaining-to-combine-controller-into-module\" class=\"headerlink\" title=\"Method chaining to combine controller into module:\"></a>Method chaining to combine controller into module:</h3><ul>\n<li><p>Module:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular.module(&quot;myModule&quot;,[]);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Controller:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myApp.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvar customer = &#123;</span><br><span class=\"line\">\t\tfirstName: &quot;ryan&quot;,</span><br><span class=\"line\">\t\tlastName: &quot;luo&quot;,</span><br><span class=\"line\">\t\tgender: &quot;male&quot;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\t$scope.customer = customer;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Combine:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular</span><br><span class=\"line\">\t\t.module(&quot;myModule&quot;,[])</span><br><span class=\"line\">\t\t.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t\t\tvar customer = &#123;\t\t</span><br><span class=\"line\">\t\t\t\tfirstName: &quot;ryan&quot;,</span><br><span class=\"line\">\t\t\t\tlastName: &quot;luo&quot;,</span><br><span class=\"line\">\t\t\t\tgender: &quot;male&quot;</span><br><span class=\"line\">\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t$scope.customer = customer;</span><br><span class=\"line\">\t\t&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"4-Directive-ng-src\"><a href=\"#4-Directive-ng-src\" class=\"headerlink\" title=\"4. Directive: ng-src\"></a>4. Directive: ng-src</h2><ul>\n<li>add <code>image</code> folder to project with an image</li>\n<li>use <code>ng-scr</code> to ensure a request is issued only after NG has evaluated.</li>\n<li>no 404 error</li>\n</ul>\n<h3 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular</span><br><span class=\"line\">\t\t.module(&quot;myModule&quot;,[])</span><br><span class=\"line\">\t\t.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t\t\tvar topic = &#123;\t\t</span><br><span class=\"line\">\t\t\t\tname: &quot;Git&quot;,\t\t\t\t</span><br><span class=\"line\">\t\t\t\tpicture: &quot;image/Git-Cycle1.png&quot;\t\t#source-path</span><br><span class=\"line\">\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t$scope.topic = topic;</span><br><span class=\"line\">\t\t&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;div&gt;</span><br><span class=\"line\">\t\tTopic : &#123;&#123; topic.name &#125;&#125;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;img ng-src=&quot;&#123;&#123; topic.picture &#125;&#125;&quot; \t\t#dynamic</span><br><span class=\"line\">\t\talt=&quot;&#123;&#123; topic.name + &apos; picture&apos; &#125;&#125;&quot;\t\t\t</span><br><span class=\"line\">\t\tstyle=&quot;height:300px; width:400px&quot;/&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-Two-way-DataBinding-amp-ng-model\"><a href=\"#5-Two-way-DataBinding-amp-ng-model\" class=\"headerlink\" title=\"5. Two-way DataBinding &amp; ng-model\"></a>5. Two-way DataBinding &amp; ng-model</h2><h3 id=\"Two-way-data-binding\"><a href=\"#Two-way-data-binding\" class=\"headerlink\" title=\"Two-way data binding\"></a>Two-way data binding</h3><ul>\n<li>keep model and view in sync at all time</li>\n<li><code>$scope.message</code> won’t change</li>\n<li><code>ng-model=&quot;message&quot;</code> and <code></code> will keep the same</li>\n<li>model takes value from js initially. Once change, model value changes. </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular</span><br><span class=\"line\">\t\t.module(&quot;myModule&quot;,[])</span><br><span class=\"line\">\t\t.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t\t$scope.message = &quot;Hello World..&quot;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&#125;); </span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;input type=&quot;text&quot; ng-model=&quot;message&quot;/&gt;</span><br><span class=\"line\">\t&lt;br/&gt;&lt;br/&gt;\t</span><br><span class=\"line\">\t&#123;&#123; message &#125;&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"ng-model\"><a href=\"#ng-model\" class=\"headerlink\" title=\"ng-model\"></a>ng-model</h3><p>used for</p>\n<ul>\n<li>input</li>\n<li>select</li>\n<li>textarea</li>\n</ul>\n<h3 id=\"Demo-2\"><a href=\"#Demo-2\" class=\"headerlink\" title=\"Demo\"></a>Demo</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># JS</span><br><span class=\"line\">var myApp = angular</span><br><span class=\"line\">\t\t.module(&quot;myModule&quot;,[])</span><br><span class=\"line\">\t\t.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\tvar customer = &#123;</span><br><span class=\"line\">\t\t\t\t\tname: &quot;ryan&quot;,</span><br><span class=\"line\">\t\t\t\t\tage: &quot;29&quot;</span><br><span class=\"line\">\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t$scope.customer = customer;</span><br><span class=\"line\">\t\t&#125;); </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># HTML</span><br><span class=\"line\">&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t&lt;table&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;Name&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;&lt;input type=&quot;text&quot; ng-model=&quot;customer.name&quot;/&gt;&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;Age&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;&lt;input type=&quot;text&quot; ng-model=&quot;customer.age&quot;/&gt;&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;/table&gt;</span><br><span class=\"line\">\t&lt;br/&gt;</span><br><span class=\"line\">\t&lt;table&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;Name&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;&#123;&#123; customer.name &#125;&#125;&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;Age&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;&#123;&#123; customer.age &#125;&#125;&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;/table&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>Result:<br><img src=\"/images/ng-model.png\" alt=\"ng-model\"></p>\n","site":{"data":{}},"excerpt":"<p>Learning Material: <a href=\"https://www.youtube.com/watch?v=zKkUN-mJtPQ&amp;list=PL6n9fhu94yhWKHkcL7RJmmXyxkuFB3KSl\" target=\"_blank\" rel=\"noopener\">AngularJS tutorial for beginners</a></p>\n<h2 id=\"1-What-is-AngularJS\"><a href=\"#1-What-is-AngularJS\" class=\"headerlink\" title=\"1. What is AngularJS\"></a>1. What is AngularJS</h2><ul>\n<li>JavaScript framework</li>\n<li>Help to build web application</li>\n<li>MVC</li>\n</ul>","more":"<h3 id=\"Two-requirements-to-start-using-AngularJS\"><a href=\"#Two-requirements-to-start-using-AngularJS\" class=\"headerlink\" title=\"Two requirements to start using AngularJS\"></a>Two requirements to start using AngularJS</h3><ol>\n<li><p>Copy <code>angular.min.js</code> in and insert to html</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">\t&lt;script src=&quot;scripts/angular.min.js&quot;&gt;&lt;/script&gt;\t&lt;!-- 1st requirement --&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>insert <code>ng-app</code> to activate angular</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body ng-app&gt;\t&lt;!-- 2nd requirement: activate angular --&gt;</span><br><span class=\"line\">\t&lt;div&gt;</span><br><span class=\"line\">\t\t10+20=&#123;&#123;10+20&#125;&#125;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10+20=&#123;&#123;10+20&#125;&#125;</span><br><span class=\"line\">&#123;&#123;1==2&#125;&#125;</span><br><span class=\"line\">&#123;&#123; &#123;name: &apos;Ryan&apos;, age: &apos;30&apos;&#125;.name &#125;&#125;</span><br><span class=\"line\">&#123;&#123; [&apos;David&apos;,&apos;Lucy&apos;,&apos;Shell&apos;][2] &#125;&#125;\t#Shell</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-Modules-and-Controllers\"><a href=\"#2-Modules-and-Controllers\" class=\"headerlink\" title=\"2. Modules and Controllers\"></a>2. Modules and Controllers</h2><h3 id=\"Intro\"><a href=\"#Intro\" class=\"headerlink\" title=\"Intro\"></a>Intro</h3><ol>\n<li>Module<ul>\n<li>a container: controller, service, directive, filter..</li>\n<li>as a main() method</li>\n</ul>\n</li>\n<li><p>Create a module</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular.module(&quot;myModule&quot;,[]);\t# ModuleName &amp; its dependency</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Controller</p>\n<ul>\n<li>a JS function</li>\n<li>to build a model for the view to display</li>\n<li>model is data</li>\n</ul>\n</li>\n<li>Create a controller <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myController = function ($scope) &#123;</span><br><span class=\"line\">\t$scope.message = &quot;Hello world..&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>!! $scope is NOT model. The data attached is the model.</p>\n<h3 id=\"Demo-1\"><a href=\"#Demo-1\" class=\"headerlink\" title=\"Demo\"></a>Demo</h3><ul>\n<li><p>script.js</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular.module(&quot;myModule&quot;,[]);\t// 1. create module</span><br><span class=\"line\"></span><br><span class=\"line\">myApp.controller(&quot;myController&quot;, function ($scope) &#123;\t// 2. create controller</span><br><span class=\"line\">\t$scope.message = &quot;Hello world..&quot;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>index.html</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">\t&lt;script src=&quot;scripts/script.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body ng-app=&quot;myModule&quot;&gt;</span><br><span class=\"line\">\t&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t\t&#123;&#123; message &#125;&#125;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"3-Controllers-cont\"><a href=\"#3-Controllers-cont\" class=\"headerlink\" title=\"3. Controllers - cont\"></a>3. Controllers - cont</h2><h3 id=\"Attach-a-complex-object-to-the-scope\"><a href=\"#Attach-a-complex-object-to-the-scope\" class=\"headerlink\" title=\"Attach a complex object to the scope\"></a>Attach a complex object to the scope</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myApp.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tvar customer = &#123;</span><br><span class=\"line\">\t\tfirstName: &quot;ryan&quot;,</span><br><span class=\"line\">\t\tlastName: &quot;luo&quot;,</span><br><span class=\"line\">\t\tgender: &quot;male&quot;</span><br><span class=\"line\">\t&#125;;\t\t\t\t// create object</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t$scope.customer = customer;\t// attach object to scope</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"In-the-view\"><a href=\"#In-the-view\" class=\"headerlink\" title=\"In the view:\"></a>In the view:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body ng-app=&quot;myModule&quot;&gt;</span><br><span class=\"line\">\t&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;div&gt;first name: &#123;&#123; customer.firstName &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div&gt;last name: &#123;&#123; customer.lastName &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div&gt;gender: &#123;&#123; customer.gender &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>misspell controller -&gt; Error</li>\n<li>misspell object property -&gt; Null</li>\n</ul>\n<h3 id=\"Method-chaining-to-combine-controller-into-module\"><a href=\"#Method-chaining-to-combine-controller-into-module\" class=\"headerlink\" title=\"Method chaining to combine controller into module:\"></a>Method chaining to combine controller into module:</h3><ul>\n<li><p>Module:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular.module(&quot;myModule&quot;,[]);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Controller:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myApp.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvar customer = &#123;</span><br><span class=\"line\">\t\tfirstName: &quot;ryan&quot;,</span><br><span class=\"line\">\t\tlastName: &quot;luo&quot;,</span><br><span class=\"line\">\t\tgender: &quot;male&quot;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\t$scope.customer = customer;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Combine:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular</span><br><span class=\"line\">\t\t.module(&quot;myModule&quot;,[])</span><br><span class=\"line\">\t\t.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t\t\tvar customer = &#123;\t\t</span><br><span class=\"line\">\t\t\t\tfirstName: &quot;ryan&quot;,</span><br><span class=\"line\">\t\t\t\tlastName: &quot;luo&quot;,</span><br><span class=\"line\">\t\t\t\tgender: &quot;male&quot;</span><br><span class=\"line\">\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t$scope.customer = customer;</span><br><span class=\"line\">\t\t&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"4-Directive-ng-src\"><a href=\"#4-Directive-ng-src\" class=\"headerlink\" title=\"4. Directive: ng-src\"></a>4. Directive: ng-src</h2><ul>\n<li>add <code>image</code> folder to project with an image</li>\n<li>use <code>ng-scr</code> to ensure a request is issued only after NG has evaluated.</li>\n<li>no 404 error</li>\n</ul>\n<h3 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular</span><br><span class=\"line\">\t\t.module(&quot;myModule&quot;,[])</span><br><span class=\"line\">\t\t.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t\t\tvar topic = &#123;\t\t</span><br><span class=\"line\">\t\t\t\tname: &quot;Git&quot;,\t\t\t\t</span><br><span class=\"line\">\t\t\t\tpicture: &quot;image/Git-Cycle1.png&quot;\t\t#source-path</span><br><span class=\"line\">\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t$scope.topic = topic;</span><br><span class=\"line\">\t\t&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;div&gt;</span><br><span class=\"line\">\t\tTopic : &#123;&#123; topic.name &#125;&#125;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;img ng-src=&quot;&#123;&#123; topic.picture &#125;&#125;&quot; \t\t#dynamic</span><br><span class=\"line\">\t\talt=&quot;&#123;&#123; topic.name + &apos; picture&apos; &#125;&#125;&quot;\t\t\t</span><br><span class=\"line\">\t\tstyle=&quot;height:300px; width:400px&quot;/&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-Two-way-DataBinding-amp-ng-model\"><a href=\"#5-Two-way-DataBinding-amp-ng-model\" class=\"headerlink\" title=\"5. Two-way DataBinding &amp; ng-model\"></a>5. Two-way DataBinding &amp; ng-model</h2><h3 id=\"Two-way-data-binding\"><a href=\"#Two-way-data-binding\" class=\"headerlink\" title=\"Two-way data binding\"></a>Two-way data binding</h3><ul>\n<li>keep model and view in sync at all time</li>\n<li><code>$scope.message</code> won’t change</li>\n<li><code>ng-model=&quot;message&quot;</code> and <code></code> will keep the same</li>\n<li>model takes value from js initially. Once change, model value changes. </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myApp = angular</span><br><span class=\"line\">\t\t.module(&quot;myModule&quot;,[])</span><br><span class=\"line\">\t\t.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t\t$scope.message = &quot;Hello World..&quot;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&#125;); </span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;input type=&quot;text&quot; ng-model=&quot;message&quot;/&gt;</span><br><span class=\"line\">\t&lt;br/&gt;&lt;br/&gt;\t</span><br><span class=\"line\">\t&#123;&#123; message &#125;&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"ng-model\"><a href=\"#ng-model\" class=\"headerlink\" title=\"ng-model\"></a>ng-model</h3><p>used for</p>\n<ul>\n<li>input</li>\n<li>select</li>\n<li>textarea</li>\n</ul>\n<h3 id=\"Demo-2\"><a href=\"#Demo-2\" class=\"headerlink\" title=\"Demo\"></a>Demo</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># JS</span><br><span class=\"line\">var myApp = angular</span><br><span class=\"line\">\t\t.module(&quot;myModule&quot;,[])</span><br><span class=\"line\">\t\t.controller(&quot;myController&quot;, function ($scope) &#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\tvar customer = &#123;</span><br><span class=\"line\">\t\t\t\t\tname: &quot;ryan&quot;,</span><br><span class=\"line\">\t\t\t\t\tage: &quot;29&quot;</span><br><span class=\"line\">\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t$scope.customer = customer;</span><br><span class=\"line\">\t\t&#125;); </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># HTML</span><br><span class=\"line\">&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">\t&lt;table&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;Name&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;&lt;input type=&quot;text&quot; ng-model=&quot;customer.name&quot;/&gt;&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;Age&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;&lt;input type=&quot;text&quot; ng-model=&quot;customer.age&quot;/&gt;&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;/table&gt;</span><br><span class=\"line\">\t&lt;br/&gt;</span><br><span class=\"line\">\t&lt;table&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;Name&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;&#123;&#123; customer.name &#125;&#125;&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;Age&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;&#123;&#123; customer.age &#125;&#125;&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;/table&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>Result:<br><img src=\"/images/ng-model.png\" alt=\"ng-model\"></p>"},{"title":"Hexo-Next 添加 Gitment 评论系统","date":"2017-11-27T15:05:32.000Z","_content":"\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n网上关于添加 Gitment 的博客不少，但是互相有些出入。\n由于 Next 更新，Gitment 已经预置了，所以不需要自己再添加代码。\n这里分享我自己的设置经过，参考的文章在文末。\n\n## 注册 OAuth Application ##\n\n1. 登录 Github。\n2. 前往 https://github.com/settings/profile\n3. 点击左侧下方的 ` Developer settings` \n4. 点击绿色 `Register a new application`\n5. 填写以下内容：\n\t```\n\tApplication name：Gitment\n\tHomepage URL：https://ryanluoxu.github.io/\n\tApplication description：Blog comment system\n\tAuthorization callback URL：https://ryanluoxu.github.io/\n\t```\n6. 点击 `Register application`\n7. 得到：\n\t```\n\tClient ID:\n\tClient Secret:\n\t```\n<!--more-->\n## 创建存放 gitment-comments 的 repository ##\n\n1. 创建 repository。 Repository name 为 gitment-comments\n2. 地址：https://github.com/Ryanluoxu/gitment-comments.git\n3. 但是稍后填的是 `gitment-comments`，不是地址。\n\n## 添加 Gitment 到博客 ##\n\n1. 打开 D:\\blog\\themes\\next\\_config.yml\n2. 找到 `Gitment`\n3. 如下修改：\n```\ngitment:\n  enable: true\n  mint: true \t\t# RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway\n  count: true \t\t# Show comments count in post meta area\n  lazy: false \t\t# Comments lazy loading with a button\n  cleanly: false \t# Hide 'Powered by ...' on footer, and more\n  language: \t\t# Force language, or auto switch by theme\n  github_user: ryanluoxu \t# 此处 - Your Github ID\n  github_repo: gitment-comments # 此处注意 - The repo you use to store Gitment comments\n  client_id: xxxxxxxxxxxxxxxxxx # 此处 - Github client id for the Gitment\n  client_secret: xxxxxxxxxxxxx # 此处 - Github access secret token for the Gitment\n  proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect\n  redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled\n\n```\n4. 之后生成并且部署才会生效，本地有时没有效果 \n```\nhexo g -d\n``` \n\t部署之后，有可能碰到 `Not Found Error`，先不要着急，等一段时间再看看。\n5. 之后文章底部会出现 `初始化本文的评论页`，点击初始化。\n\n## 参考 ##\n\n[Gitment：使用 GitHub Issues 搭建评论系统](https://imsun.net/posts/gitment-introduction/)\n[hexo next主题集成gitment评论系统](http://yangq.me/post/ab9bb85a.html)\n[Hexo Next 主题博客添加gitment评论功能](https://icessun.github.io/Hexo-Next-%E4%B8%BB%E9%A2%98%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0gitment%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD.html)\n[为 hexo NexT 添加 Gitment 评论插件](https://meesong.github.io/StaticBlog/2017/NexT+Gitment/)\n","source":"_posts/Hexo-Next-添加-Gitment-评论系统.md","raw":"---\ntitle: Hexo-Next 添加 Gitment 评论系统\ndate: 2017-11-27 23:05:32\ncategories: 搭建博客\ntags: [Hexo, Next, 博客, 主题优化, 评论, Gitment]\n---\n\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n网上关于添加 Gitment 的博客不少，但是互相有些出入。\n由于 Next 更新，Gitment 已经预置了，所以不需要自己再添加代码。\n这里分享我自己的设置经过，参考的文章在文末。\n\n## 注册 OAuth Application ##\n\n1. 登录 Github。\n2. 前往 https://github.com/settings/profile\n3. 点击左侧下方的 ` Developer settings` \n4. 点击绿色 `Register a new application`\n5. 填写以下内容：\n\t```\n\tApplication name：Gitment\n\tHomepage URL：https://ryanluoxu.github.io/\n\tApplication description：Blog comment system\n\tAuthorization callback URL：https://ryanluoxu.github.io/\n\t```\n6. 点击 `Register application`\n7. 得到：\n\t```\n\tClient ID:\n\tClient Secret:\n\t```\n<!--more-->\n## 创建存放 gitment-comments 的 repository ##\n\n1. 创建 repository。 Repository name 为 gitment-comments\n2. 地址：https://github.com/Ryanluoxu/gitment-comments.git\n3. 但是稍后填的是 `gitment-comments`，不是地址。\n\n## 添加 Gitment 到博客 ##\n\n1. 打开 D:\\blog\\themes\\next\\_config.yml\n2. 找到 `Gitment`\n3. 如下修改：\n```\ngitment:\n  enable: true\n  mint: true \t\t# RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway\n  count: true \t\t# Show comments count in post meta area\n  lazy: false \t\t# Comments lazy loading with a button\n  cleanly: false \t# Hide 'Powered by ...' on footer, and more\n  language: \t\t# Force language, or auto switch by theme\n  github_user: ryanluoxu \t# 此处 - Your Github ID\n  github_repo: gitment-comments # 此处注意 - The repo you use to store Gitment comments\n  client_id: xxxxxxxxxxxxxxxxxx # 此处 - Github client id for the Gitment\n  client_secret: xxxxxxxxxxxxx # 此处 - Github access secret token for the Gitment\n  proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect\n  redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled\n\n```\n4. 之后生成并且部署才会生效，本地有时没有效果 \n```\nhexo g -d\n``` \n\t部署之后，有可能碰到 `Not Found Error`，先不要着急，等一段时间再看看。\n5. 之后文章底部会出现 `初始化本文的评论页`，点击初始化。\n\n## 参考 ##\n\n[Gitment：使用 GitHub Issues 搭建评论系统](https://imsun.net/posts/gitment-introduction/)\n[hexo next主题集成gitment评论系统](http://yangq.me/post/ab9bb85a.html)\n[Hexo Next 主题博客添加gitment评论功能](https://icessun.github.io/Hexo-Next-%E4%B8%BB%E9%A2%98%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0gitment%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD.html)\n[为 hexo NexT 添加 Gitment 评论插件](https://meesong.github.io/StaticBlog/2017/NexT+Gitment/)\n","slug":"Hexo-Next-添加-Gitment-评论系统","published":1,"updated":"2017-12-10T12:55:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbiug0i70009vwv4ztcfelag","content":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>网上关于添加 Gitment 的博客不少，但是互相有些出入。<br>由于 Next 更新，Gitment 已经预置了，所以不需要自己再添加代码。<br>这里分享我自己的设置经过，参考的文章在文末。</p>\n<h2 id=\"注册-OAuth-Application\"><a href=\"#注册-OAuth-Application\" class=\"headerlink\" title=\"注册 OAuth Application\"></a>注册 OAuth Application</h2><ol>\n<li>登录 Github。</li>\n<li>前往 <a href=\"https://github.com/settings/profile\" target=\"_blank\" rel=\"noopener\">https://github.com/settings/profile</a></li>\n<li>点击左侧下方的 <code>Developer settings</code> </li>\n<li>点击绿色 <code>Register a new application</code></li>\n<li><p>填写以下内容：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Application name：Gitment</span><br><span class=\"line\">Homepage URL：https://ryanluoxu.github.io/</span><br><span class=\"line\">Application description：Blog comment system</span><br><span class=\"line\">Authorization callback URL：https://ryanluoxu.github.io/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>点击 <code>Register application</code></p>\n</li>\n<li>得到： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client ID:</span><br><span class=\"line\">Client Secret:</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<a id=\"more\"></a>\n<h2 id=\"创建存放-gitment-comments-的-repository\"><a href=\"#创建存放-gitment-comments-的-repository\" class=\"headerlink\" title=\"创建存放 gitment-comments 的 repository\"></a>创建存放 gitment-comments 的 repository</h2><ol>\n<li>创建 repository。 Repository name 为 gitment-comments</li>\n<li>地址：<a href=\"https://github.com/Ryanluoxu/gitment-comments.git\" target=\"_blank\" rel=\"noopener\">https://github.com/Ryanluoxu/gitment-comments.git</a></li>\n<li>但是稍后填的是 <code>gitment-comments</code>，不是地址。</li>\n</ol>\n<h2 id=\"添加-Gitment-到博客\"><a href=\"#添加-Gitment-到博客\" class=\"headerlink\" title=\"添加 Gitment 到博客\"></a>添加 Gitment 到博客</h2><ol>\n<li>打开 D:\\blog\\themes\\next_config.yml</li>\n<li>找到 <code>Gitment</code></li>\n<li><p>如下修改：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitment:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  mint: true \t\t# RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway</span><br><span class=\"line\">  count: true \t\t# Show comments count in post meta area</span><br><span class=\"line\">  lazy: false \t\t# Comments lazy loading with a button</span><br><span class=\"line\">  cleanly: false \t# Hide &apos;Powered by ...&apos; on footer, and more</span><br><span class=\"line\">  language: \t\t# Force language, or auto switch by theme</span><br><span class=\"line\">  github_user: ryanluoxu \t# 此处 - Your Github ID</span><br><span class=\"line\">  github_repo: gitment-comments # 此处注意 - The repo you use to store Gitment comments</span><br><span class=\"line\">  client_id: xxxxxxxxxxxxxxxxxx # 此处 - Github client id for the Gitment</span><br><span class=\"line\">  client_secret: xxxxxxxxxxxxx # 此处 - Github access secret token for the Gitment</span><br><span class=\"line\">  proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect</span><br><span class=\"line\">  redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>之后生成并且部署才会生效，本地有时没有效果 </p>\n<pre><code>hexo g -d\n</code></pre><p> 部署之后，有可能碰到 <code>Not Found Error</code>，先不要着急，等一段时间再看看。</p>\n</li>\n<li>之后文章底部会出现 <code>初始化本文的评论页</code>，点击初始化。</li>\n</ol>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://imsun.net/posts/gitment-introduction/\" target=\"_blank\" rel=\"noopener\">Gitment：使用 GitHub Issues 搭建评论系统</a><br><a href=\"http://yangq.me/post/ab9bb85a.html\" target=\"_blank\" rel=\"noopener\">hexo next主题集成gitment评论系统</a><br><a href=\"https://icessun.github.io/Hexo-Next-%E4%B8%BB%E9%A2%98%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0gitment%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD.html\" target=\"_blank\" rel=\"noopener\">Hexo Next 主题博客添加gitment评论功能</a><br><a href=\"https://meesong.github.io/StaticBlog/2017/NexT+Gitment/\" target=\"_blank\" rel=\"noopener\">为 hexo NexT 添加 Gitment 评论插件</a></p>\n","site":{"data":{}},"excerpt":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>网上关于添加 Gitment 的博客不少，但是互相有些出入。<br>由于 Next 更新，Gitment 已经预置了，所以不需要自己再添加代码。<br>这里分享我自己的设置经过，参考的文章在文末。</p>\n<h2 id=\"注册-OAuth-Application\"><a href=\"#注册-OAuth-Application\" class=\"headerlink\" title=\"注册 OAuth Application\"></a>注册 OAuth Application</h2><ol>\n<li>登录 Github。</li>\n<li>前往 <a href=\"https://github.com/settings/profile\" target=\"_blank\" rel=\"noopener\">https://github.com/settings/profile</a></li>\n<li>点击左侧下方的 <code>Developer settings</code> </li>\n<li>点击绿色 <code>Register a new application</code></li>\n<li><p>填写以下内容：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Application name：Gitment</span><br><span class=\"line\">Homepage URL：https://ryanluoxu.github.io/</span><br><span class=\"line\">Application description：Blog comment system</span><br><span class=\"line\">Authorization callback URL：https://ryanluoxu.github.io/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>点击 <code>Register application</code></p>\n</li>\n<li>得到： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client ID:</span><br><span class=\"line\">Client Secret:</span><br></pre></td></tr></table></figure>\n</li>\n</ol>","more":"<h2 id=\"创建存放-gitment-comments-的-repository\"><a href=\"#创建存放-gitment-comments-的-repository\" class=\"headerlink\" title=\"创建存放 gitment-comments 的 repository\"></a>创建存放 gitment-comments 的 repository</h2><ol>\n<li>创建 repository。 Repository name 为 gitment-comments</li>\n<li>地址：<a href=\"https://github.com/Ryanluoxu/gitment-comments.git\" target=\"_blank\" rel=\"noopener\">https://github.com/Ryanluoxu/gitment-comments.git</a></li>\n<li>但是稍后填的是 <code>gitment-comments</code>，不是地址。</li>\n</ol>\n<h2 id=\"添加-Gitment-到博客\"><a href=\"#添加-Gitment-到博客\" class=\"headerlink\" title=\"添加 Gitment 到博客\"></a>添加 Gitment 到博客</h2><ol>\n<li>打开 D:\\blog\\themes\\next_config.yml</li>\n<li>找到 <code>Gitment</code></li>\n<li><p>如下修改：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitment:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  mint: true \t\t# RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway</span><br><span class=\"line\">  count: true \t\t# Show comments count in post meta area</span><br><span class=\"line\">  lazy: false \t\t# Comments lazy loading with a button</span><br><span class=\"line\">  cleanly: false \t# Hide &apos;Powered by ...&apos; on footer, and more</span><br><span class=\"line\">  language: \t\t# Force language, or auto switch by theme</span><br><span class=\"line\">  github_user: ryanluoxu \t# 此处 - Your Github ID</span><br><span class=\"line\">  github_repo: gitment-comments # 此处注意 - The repo you use to store Gitment comments</span><br><span class=\"line\">  client_id: xxxxxxxxxxxxxxxxxx # 此处 - Github client id for the Gitment</span><br><span class=\"line\">  client_secret: xxxxxxxxxxxxx # 此处 - Github access secret token for the Gitment</span><br><span class=\"line\">  proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect</span><br><span class=\"line\">  redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>之后生成并且部署才会生效，本地有时没有效果 </p>\n<pre><code>hexo g -d\n</code></pre><p> 部署之后，有可能碰到 <code>Not Found Error</code>，先不要着急，等一段时间再看看。</p>\n</li>\n<li>之后文章底部会出现 <code>初始化本文的评论页</code>，点击初始化。</li>\n</ol>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://imsun.net/posts/gitment-introduction/\" target=\"_blank\" rel=\"noopener\">Gitment：使用 GitHub Issues 搭建评论系统</a><br><a href=\"http://yangq.me/post/ab9bb85a.html\" target=\"_blank\" rel=\"noopener\">hexo next主题集成gitment评论系统</a><br><a href=\"https://icessun.github.io/Hexo-Next-%E4%B8%BB%E9%A2%98%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0gitment%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD.html\" target=\"_blank\" rel=\"noopener\">Hexo Next 主题博客添加gitment评论功能</a><br><a href=\"https://meesong.github.io/StaticBlog/2017/NexT+Gitment/\" target=\"_blank\" rel=\"noopener\">为 hexo NexT 添加 Gitment 评论插件</a></p>"},{"title":"Github Learning","date":"2017-12-07T06:45:54.000Z","_content":"\n## Switching remote URLs between SSH and HTTPS\nCheck existing remote:\n- If SSH:\n```bash\n$ git remote -v\norigin  git@github.com:USERNAME/REPOSITORY.git (fetch)\norigin  git@github.com:USERNAME/REPOSITORY.git (push)\n```\n- If HTTPS:\n```bash\n$ git remote -v\norigin  https://github.com/USERNAME/REPOSITORY.git (fetch)\norigin  https://github.com/USERNAME/REPOSITORY.git (push)\n```\n<!--more-->\nChange your remote's URL from SSH to HTTPS\n```bash\n$ git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\n```\nChange your remote's URL from HTTPS to SSH \n```bash\n$ git remote set-url origin git@github.com:USERNAME/REPOSITORY.git\n```\nReference: https://help.github.com/articles/changing-a-remote-s-url/\n\n## git push without entering username & password\n\n### HTTPS\nFor the repo which is cloned from GitHub using HTTPS, use a credential helper to remember username and password.\n\nWith Git for Windows, run the following commands to store credentials:\n```bash\ngit config --global credential.helper wincred\n```\n\n### SSH\nFor the repo which is cloned from GitHub using SSH, use SSH keys. -> [Generating an SSH Key](https://help.github.com/articles/generating-an-ssh-key)\n\nReference:[Caching your GitHub password in Git](https://help.github.com/articles/caching-your-github-password-in-git/#platform-windows)\n","source":"_posts/Github-Learning.md","raw":"---\ntitle: Github Learning\ndate: 2017-12-07 14:45:54\ncategories: Git\ntags: [github, git, notes]\n---\n\n## Switching remote URLs between SSH and HTTPS\nCheck existing remote:\n- If SSH:\n```bash\n$ git remote -v\norigin  git@github.com:USERNAME/REPOSITORY.git (fetch)\norigin  git@github.com:USERNAME/REPOSITORY.git (push)\n```\n- If HTTPS:\n```bash\n$ git remote -v\norigin  https://github.com/USERNAME/REPOSITORY.git (fetch)\norigin  https://github.com/USERNAME/REPOSITORY.git (push)\n```\n<!--more-->\nChange your remote's URL from SSH to HTTPS\n```bash\n$ git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\n```\nChange your remote's URL from HTTPS to SSH \n```bash\n$ git remote set-url origin git@github.com:USERNAME/REPOSITORY.git\n```\nReference: https://help.github.com/articles/changing-a-remote-s-url/\n\n## git push without entering username & password\n\n### HTTPS\nFor the repo which is cloned from GitHub using HTTPS, use a credential helper to remember username and password.\n\nWith Git for Windows, run the following commands to store credentials:\n```bash\ngit config --global credential.helper wincred\n```\n\n### SSH\nFor the repo which is cloned from GitHub using SSH, use SSH keys. -> [Generating an SSH Key](https://help.github.com/articles/generating-an-ssh-key)\n\nReference:[Caching your GitHub password in Git](https://help.github.com/articles/caching-your-github-password-in-git/#platform-windows)\n","slug":"Github-Learning","published":1,"updated":"2017-12-09T09:19:36.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbiug0i9000cvwv4106x7m1a","content":"<h2 id=\"Switching-remote-URLs-between-SSH-and-HTTPS\"><a href=\"#Switching-remote-URLs-between-SSH-and-HTTPS\" class=\"headerlink\" title=\"Switching remote URLs between SSH and HTTPS\"></a>Switching remote URLs between SSH and HTTPS</h2><p>Check existing remote:</p>\n<ul>\n<li><p>If SSH:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote -v</span><br><span class=\"line\">origin  git@github.com:USERNAME/REPOSITORY.git (fetch)</span><br><span class=\"line\">origin  git@github.com:USERNAME/REPOSITORY.git (push)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>If HTTPS:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote -v</span><br><span class=\"line\">origin  https://github.com/USERNAME/REPOSITORY.git (fetch)</span><br><span class=\"line\">origin  https://github.com/USERNAME/REPOSITORY.git (push)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<a id=\"more\"></a>\n<p>Change your remote’s URL from SSH to HTTPS<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote <span class=\"built_in\">set</span>-url origin https://github.com/USERNAME/REPOSITORY.git</span><br></pre></td></tr></table></figure></p>\n<p>Change your remote’s URL from HTTPS to SSH<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote <span class=\"built_in\">set</span>-url origin git@github.com:USERNAME/REPOSITORY.git</span><br></pre></td></tr></table></figure></p>\n<p>Reference: <a href=\"https://help.github.com/articles/changing-a-remote-s-url/\" target=\"_blank\" rel=\"noopener\">https://help.github.com/articles/changing-a-remote-s-url/</a></p>\n<h2 id=\"git-push-without-entering-username-amp-password\"><a href=\"#git-push-without-entering-username-amp-password\" class=\"headerlink\" title=\"git push without entering username &amp; password\"></a>git push without entering username &amp; password</h2><h3 id=\"HTTPS\"><a href=\"#HTTPS\" class=\"headerlink\" title=\"HTTPS\"></a>HTTPS</h3><p>For the repo which is cloned from GitHub using HTTPS, use a credential helper to remember username and password.</p>\n<p>With Git for Windows, run the following commands to store credentials:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global credential.helper wincred</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"SSH\"><a href=\"#SSH\" class=\"headerlink\" title=\"SSH\"></a>SSH</h3><p>For the repo which is cloned from GitHub using SSH, use SSH keys. -&gt; <a href=\"https://help.github.com/articles/generating-an-ssh-key\" target=\"_blank\" rel=\"noopener\">Generating an SSH Key</a></p>\n<p>Reference:<a href=\"https://help.github.com/articles/caching-your-github-password-in-git/#platform-windows\" target=\"_blank\" rel=\"noopener\">Caching your GitHub password in Git</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"Switching-remote-URLs-between-SSH-and-HTTPS\"><a href=\"#Switching-remote-URLs-between-SSH-and-HTTPS\" class=\"headerlink\" title=\"Switching remote URLs between SSH and HTTPS\"></a>Switching remote URLs between SSH and HTTPS</h2><p>Check existing remote:</p>\n<ul>\n<li><p>If SSH:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote -v</span><br><span class=\"line\">origin  git@github.com:USERNAME/REPOSITORY.git (fetch)</span><br><span class=\"line\">origin  git@github.com:USERNAME/REPOSITORY.git (push)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>If HTTPS:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote -v</span><br><span class=\"line\">origin  https://github.com/USERNAME/REPOSITORY.git (fetch)</span><br><span class=\"line\">origin  https://github.com/USERNAME/REPOSITORY.git (push)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>","more":"<p>Change your remote’s URL from SSH to HTTPS<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote <span class=\"built_in\">set</span>-url origin https://github.com/USERNAME/REPOSITORY.git</span><br></pre></td></tr></table></figure></p>\n<p>Change your remote’s URL from HTTPS to SSH<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote <span class=\"built_in\">set</span>-url origin git@github.com:USERNAME/REPOSITORY.git</span><br></pre></td></tr></table></figure></p>\n<p>Reference: <a href=\"https://help.github.com/articles/changing-a-remote-s-url/\" target=\"_blank\" rel=\"noopener\">https://help.github.com/articles/changing-a-remote-s-url/</a></p>\n<h2 id=\"git-push-without-entering-username-amp-password\"><a href=\"#git-push-without-entering-username-amp-password\" class=\"headerlink\" title=\"git push without entering username &amp; password\"></a>git push without entering username &amp; password</h2><h3 id=\"HTTPS\"><a href=\"#HTTPS\" class=\"headerlink\" title=\"HTTPS\"></a>HTTPS</h3><p>For the repo which is cloned from GitHub using HTTPS, use a credential helper to remember username and password.</p>\n<p>With Git for Windows, run the following commands to store credentials:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global credential.helper wincred</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"SSH\"><a href=\"#SSH\" class=\"headerlink\" title=\"SSH\"></a>SSH</h3><p>For the repo which is cloned from GitHub using SSH, use SSH keys. -&gt; <a href=\"https://help.github.com/articles/generating-an-ssh-key\" target=\"_blank\" rel=\"noopener\">Generating an SSH Key</a></p>\n<p>Reference:<a href=\"https://help.github.com/articles/caching-your-github-password-in-git/#platform-windows\" target=\"_blank\" rel=\"noopener\">Caching your GitHub password in Git</a></p>"},{"title":"Hexo 的 Next 主题优化","date":"2017-11-26T05:49:21.000Z","_content":"\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n这篇博客用来记录和分享我对博客优化的过程，均为实际经历。欢迎纠正，与君共勉。\n\n## 修改 Next 主题的 Scheme ##\n\nNext 默认的风格是 Muse。现有的四个风格里，我最喜欢 Gemini。\n因为此风格的博客首页里，每篇博客有明显的分割。菜单在左侧，方便访问时转到别的页面。  \n\n**操作如下：**\n1. 打开 D:\\blog\\themes\\next\\_config.yml\n2. 找到 `Scheme Settings`\n3. 去掉 `Gemini` 前面的 `#`。 \n```\n# Schemes\n#scheme: Muse\n#scheme: Mist\n#scheme: Pisces\nscheme: Gemini\n```\n\n## 添加访问统计 ##\n\n开始时尝试用 LeanCloud，尝试数次无果，一直得不到访问数据。\n改用 BuSuanZi，效果显著！\n\n博客主页效果：\n\n![博客主页下方访问量](/images/博客主页下方访问量.png)\n\n<!--more-->\n\n文章页面效果：\n\n![文章页面访问量](/images/文章页面访问量.png)\n\n\n**操作如下：**\n1. 打开 D:\\blog\\themes\\next\\_config.yml\n2. 找到 `busuanzi_count`\n3. 如下修改： \n```\nbusuanzi_count:\n  # count values only if the other configs are false\n  enable: true\t// 此处\n  # custom uv span for the whole site\n  site_uv: true\n  site_uv_header: <i class=\"fa fa-user\"></i> Visitor // 此处\n  site_uv_footer:\n  # custom pv span for the whole site\n  site_pv: true\n  site_pv_header: <i class=\"fa fa-eye\"></i> Total Visit // 此处\n  site_pv_footer:\n  # custom pv span for one page only\n  page_pv: true\n  page_pv_header: <i class=\"fa fa-file-o\"></i> View // 此处\n  page_pv_footer:\n```\n\n## 添加头像 ##\n\n\n**操作如下：**\n1. 将头像照片 `头像1.jpg` 保存到 D:\\blog\\themes\\next\\source\\images 路径下。\n2. 打开 D:\\blog\\themes\\next\\_config.yml\n3. 找到 `Sidebar Avatar`\n4. 如下修改： \n```\n# Sidebar Avatar\n# in theme directory(source/images): /images/avatar.gif\n# in site  directory(source/uploads): /uploads/avatar.gif\navatar: /images/avatar1.JPG\n```\n\n<a name=\"添加页面\"></a>\n## 添加 About 等页面 ##\n\n前后效果对比：\n\n![添加页面之前](/images/添加页面之前.png)\n\n![添加页面之后](/images/添加页面之后.png)\n\n**操作如下：**\n1. 打开 Git Bash：\n``` bash\ncd /d/blog // 进入到 blog 所在文件夹\nhexo new page \"about\" \n```\n2. 打开 D:\\blog\\themes\\next\\_config.yml\n3. 找到 `Menu Settings`\n4. 如下修改： \n```\nmenu:\n  home: / || home\n  about: /about/ || user  // 此处\n  #tags: /tags/ || tags\n  #categories: /categories/ || th\n  archives: /archives/ || archive\n  #schedule: /schedule/ || calendar\n```\n\n\n## 侧边栏的分类和标签页面 ##\n\n侧边栏有三个数字，分别对应文章，分类和标签。其中点击文章，可以到文章列表页面。但是分类和标签无法点击。\n这里很有必要激活这个功能。 在此之前需要已经存在这两个页面。 参考[添加页面](#添加页面)进行添加。\n```\nhexo new page \"categories\"\nhexo new page \"tags\"\n```\n\n**操作如下：**\n1. 打开 D:\\blog\\themes\\next\\layout\\_macro/sidebar.swig\n2. 找到下面代码：\n```\n{% if site.categories.length > 0 %}\n  {% set categoriesPageQuery = site.pages.find({type: 'categories'}, {lean: true}) %}\n  {% set hasCategoriesPage = categoriesPageQuery.length > 0 %}\n  <div class=\"site-state-item site-state-categories\">\n    {% if hasCategoriesPage %}<a href=\"{{ url_for(categoriesPageQuery[0].path) }}\">{% endif %}\n      <span class=\"site-state-item-count\">{{ site.categories.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.categories') }}</span>\n    {% if hasCategoriesPage %}</a>{% endif %}\n  </div>\n{% endif %}\n\n{% if site.tags.length > 0 %}\n  {% set tagsPageQuery = site.pages.find({type: 'tags'}, {lean: true}) %}\n  {% set hasTagsPage = tagsPageQuery.length > 0 %}\n  <div class=\"site-state-item site-state-tags\">\n    {% if hasTagsPage %}<a href=\"{{ url_for(tagsPageQuery[0].path) }}\">{% endif %}\n      <span class=\"site-state-item-count\">{{ site.tags.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.tags') }}</span>\n    {% if hasTagsPage %}</a>{% endif %}\n  </div>\n{% endif %}\n```\n3. 替换成下面代码：\n```\n{% if site.categories.length > 0 %}\n  {% set categoriesPageQuery = site.pages.find({type: 'categories'}, {lean: true}) %}\n  {% set hasCategoriesPage = categoriesPageQuery.length > 0 %}\n  <div class=\"site-state-item site-state-categories\">\n    {% if hasCategoriesPage %}\n\t  <a href=\"{{ url_for(categoriesPageQuery[0].path) }}\">\n\t{% else %}\n      <a href=\"{{ url_for(theme.menu.categories).split('||')[0] | trim }}\">\n\t{% endif %}\n      <span class=\"site-state-item-count\">{{ site.categories.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.categories') }}</span>\n    </a>\n  </div>\n{% endif %}\n\n{% if site.tags.length > 0 %}\n  {% set tagsPageQuery = site.pages.find({type: 'tags'}, {lean: true}) %}\n  {% set hasTagsPage = tagsPageQuery.length > 0 %}\n  <div class=\"site-state-item site-state-tags\">\n    {% if hasTagsPage %}\n\t  <a href=\"{{ url_for(tagsPageQuery[0].path) }}\">\n\t{% else %}\n      <a href=\"{{ url_for(theme.menu.tags).split('||')[0] | trim }}\">  \n\t{% endif %}\n      <span class=\"site-state-item-count\">{{ site.tags.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.tags') }}</span>\n    </a>\n  </div>\n{% endif %}\n```\n\n没有深入研究，但应该是 `hasTagsPage` 没有实现，所以总是没有链接效果。所以给它加了一个 `else`   条件。就可以了。 \n\n\n## 分类和标签页面的自动生成 categories & tags ##\n\n一开始我自己手动添加了这两个页面的内容，后来无意看到了正确的打开方式：[主题配置](http://theme-next.iissnan.com/theme-settings.html)\n很简单，分别加上 type 就可以了。\n\n**分类页面：**\n1. 打开 D:\\blog\\source\\categories\\index.md\n2. 内容如下：\n```\n---\ntitle: categories\ndate: 2017-11-26 18:38:13\ntype: \"categories\"\n---\n```\n\n**标签页面：**\n1. 打开 D:\\blog\\source\\tags\\index.md\n2. 内容如下：\n```\n---\ntitle: tags\ndate: 2017-11-26 18:38:13\ntype: \"tags\"\n---\n```\n\n标签页面的效果特别好，对应文章数量多的标签会比较大。效果: [tags页面](https://ryanluoxu.github.io/tags/)\n\n\n## 设置侧边栏社交链接 ##\n\n官方文档：[设置侧边栏社交链接](https://github.com/iissnan/hexo-theme-next/wiki/%E8%AE%BE%E7%BD%AE%E4%BE%A7%E8%BE%B9%E6%A0%8F%E7%A4%BE%E4%BA%A4%E9%93%BE%E6%8E%A5)\n\n但是内容好像没有更新。配置文件已经有，不需要新增。\n\n**操作如下：**\n\n1. 打开 D:\\blog\\themes\\next\\_config.yml\n2. 找到 `Social Links.`\n3. 修改如下：\n```\nsocial:\n  GitHub: https://github.com/Ryanluoxu || github\n  Linkedin: https://www.linkedin.com/in/luo-xu-ryan-675a8041/ ||  linkedin\n  ZhiHu: https://www.zhihu.com/people/luojiuri/activities || \n  #StackOverflow: https://stackoverflow.com/users/7640451/ryan-l || stack-overflow\n  E-Mail: mailto:luoxu2011@gmail.com || envelope\n  #右键复制: mailto:luoxu2011@gmail.com || envelope\n  #Google: https://plus.google.com/yourname || google\n  #Twitter: https://twitter.com/yourname || twitter\n  #FB Page: https://www.facebook.com/yourname || facebook\n  #VK Group: https://vk.com/yourname || vk\n  #YouTube: https://youtube.com/yourname || youtube\n  #Instagram: https://instagram.com/yourname || instagram\n  #Skype: skype:yourname?call|chat || skype\n\nsocial_icons:\n  enable: true\n  icons_only: false\n  transition: false\n  GitHub: github\n  Linkedin: linkedin \n```\n\n## 设置侧边栏社交链接 ##\n\n参考 [Hexo+Next主题优化](https://zhuanlan.zhihu.com/p/30836436) 的 10. 自定义文章底部版权声明\n\n## 参考 ##\n\n[NexT主题个性化修改与调试方案](http://blog.junyu.io/posts/0009-hexo-next-theme-modify.html)\n\n","source":"_posts/Hexo-的-Next-主题优化.md","raw":"---\ntitle: Hexo 的 Next 主题优化\ndate: 2017-11-26 13:49:21\ncategories: 搭建博客\ntags: [Hexo, Next, 博客, 主题优化]\n---\n\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n这篇博客用来记录和分享我对博客优化的过程，均为实际经历。欢迎纠正，与君共勉。\n\n## 修改 Next 主题的 Scheme ##\n\nNext 默认的风格是 Muse。现有的四个风格里，我最喜欢 Gemini。\n因为此风格的博客首页里，每篇博客有明显的分割。菜单在左侧，方便访问时转到别的页面。  \n\n**操作如下：**\n1. 打开 D:\\blog\\themes\\next\\_config.yml\n2. 找到 `Scheme Settings`\n3. 去掉 `Gemini` 前面的 `#`。 \n```\n# Schemes\n#scheme: Muse\n#scheme: Mist\n#scheme: Pisces\nscheme: Gemini\n```\n\n## 添加访问统计 ##\n\n开始时尝试用 LeanCloud，尝试数次无果，一直得不到访问数据。\n改用 BuSuanZi，效果显著！\n\n博客主页效果：\n\n![博客主页下方访问量](/images/博客主页下方访问量.png)\n\n<!--more-->\n\n文章页面效果：\n\n![文章页面访问量](/images/文章页面访问量.png)\n\n\n**操作如下：**\n1. 打开 D:\\blog\\themes\\next\\_config.yml\n2. 找到 `busuanzi_count`\n3. 如下修改： \n```\nbusuanzi_count:\n  # count values only if the other configs are false\n  enable: true\t// 此处\n  # custom uv span for the whole site\n  site_uv: true\n  site_uv_header: <i class=\"fa fa-user\"></i> Visitor // 此处\n  site_uv_footer:\n  # custom pv span for the whole site\n  site_pv: true\n  site_pv_header: <i class=\"fa fa-eye\"></i> Total Visit // 此处\n  site_pv_footer:\n  # custom pv span for one page only\n  page_pv: true\n  page_pv_header: <i class=\"fa fa-file-o\"></i> View // 此处\n  page_pv_footer:\n```\n\n## 添加头像 ##\n\n\n**操作如下：**\n1. 将头像照片 `头像1.jpg` 保存到 D:\\blog\\themes\\next\\source\\images 路径下。\n2. 打开 D:\\blog\\themes\\next\\_config.yml\n3. 找到 `Sidebar Avatar`\n4. 如下修改： \n```\n# Sidebar Avatar\n# in theme directory(source/images): /images/avatar.gif\n# in site  directory(source/uploads): /uploads/avatar.gif\navatar: /images/avatar1.JPG\n```\n\n<a name=\"添加页面\"></a>\n## 添加 About 等页面 ##\n\n前后效果对比：\n\n![添加页面之前](/images/添加页面之前.png)\n\n![添加页面之后](/images/添加页面之后.png)\n\n**操作如下：**\n1. 打开 Git Bash：\n``` bash\ncd /d/blog // 进入到 blog 所在文件夹\nhexo new page \"about\" \n```\n2. 打开 D:\\blog\\themes\\next\\_config.yml\n3. 找到 `Menu Settings`\n4. 如下修改： \n```\nmenu:\n  home: / || home\n  about: /about/ || user  // 此处\n  #tags: /tags/ || tags\n  #categories: /categories/ || th\n  archives: /archives/ || archive\n  #schedule: /schedule/ || calendar\n```\n\n\n## 侧边栏的分类和标签页面 ##\n\n侧边栏有三个数字，分别对应文章，分类和标签。其中点击文章，可以到文章列表页面。但是分类和标签无法点击。\n这里很有必要激活这个功能。 在此之前需要已经存在这两个页面。 参考[添加页面](#添加页面)进行添加。\n```\nhexo new page \"categories\"\nhexo new page \"tags\"\n```\n\n**操作如下：**\n1. 打开 D:\\blog\\themes\\next\\layout\\_macro/sidebar.swig\n2. 找到下面代码：\n```\n{% if site.categories.length > 0 %}\n  {% set categoriesPageQuery = site.pages.find({type: 'categories'}, {lean: true}) %}\n  {% set hasCategoriesPage = categoriesPageQuery.length > 0 %}\n  <div class=\"site-state-item site-state-categories\">\n    {% if hasCategoriesPage %}<a href=\"{{ url_for(categoriesPageQuery[0].path) }}\">{% endif %}\n      <span class=\"site-state-item-count\">{{ site.categories.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.categories') }}</span>\n    {% if hasCategoriesPage %}</a>{% endif %}\n  </div>\n{% endif %}\n\n{% if site.tags.length > 0 %}\n  {% set tagsPageQuery = site.pages.find({type: 'tags'}, {lean: true}) %}\n  {% set hasTagsPage = tagsPageQuery.length > 0 %}\n  <div class=\"site-state-item site-state-tags\">\n    {% if hasTagsPage %}<a href=\"{{ url_for(tagsPageQuery[0].path) }}\">{% endif %}\n      <span class=\"site-state-item-count\">{{ site.tags.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.tags') }}</span>\n    {% if hasTagsPage %}</a>{% endif %}\n  </div>\n{% endif %}\n```\n3. 替换成下面代码：\n```\n{% if site.categories.length > 0 %}\n  {% set categoriesPageQuery = site.pages.find({type: 'categories'}, {lean: true}) %}\n  {% set hasCategoriesPage = categoriesPageQuery.length > 0 %}\n  <div class=\"site-state-item site-state-categories\">\n    {% if hasCategoriesPage %}\n\t  <a href=\"{{ url_for(categoriesPageQuery[0].path) }}\">\n\t{% else %}\n      <a href=\"{{ url_for(theme.menu.categories).split('||')[0] | trim }}\">\n\t{% endif %}\n      <span class=\"site-state-item-count\">{{ site.categories.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.categories') }}</span>\n    </a>\n  </div>\n{% endif %}\n\n{% if site.tags.length > 0 %}\n  {% set tagsPageQuery = site.pages.find({type: 'tags'}, {lean: true}) %}\n  {% set hasTagsPage = tagsPageQuery.length > 0 %}\n  <div class=\"site-state-item site-state-tags\">\n    {% if hasTagsPage %}\n\t  <a href=\"{{ url_for(tagsPageQuery[0].path) }}\">\n\t{% else %}\n      <a href=\"{{ url_for(theme.menu.tags).split('||')[0] | trim }}\">  \n\t{% endif %}\n      <span class=\"site-state-item-count\">{{ site.tags.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.tags') }}</span>\n    </a>\n  </div>\n{% endif %}\n```\n\n没有深入研究，但应该是 `hasTagsPage` 没有实现，所以总是没有链接效果。所以给它加了一个 `else`   条件。就可以了。 \n\n\n## 分类和标签页面的自动生成 categories & tags ##\n\n一开始我自己手动添加了这两个页面的内容，后来无意看到了正确的打开方式：[主题配置](http://theme-next.iissnan.com/theme-settings.html)\n很简单，分别加上 type 就可以了。\n\n**分类页面：**\n1. 打开 D:\\blog\\source\\categories\\index.md\n2. 内容如下：\n```\n---\ntitle: categories\ndate: 2017-11-26 18:38:13\ntype: \"categories\"\n---\n```\n\n**标签页面：**\n1. 打开 D:\\blog\\source\\tags\\index.md\n2. 内容如下：\n```\n---\ntitle: tags\ndate: 2017-11-26 18:38:13\ntype: \"tags\"\n---\n```\n\n标签页面的效果特别好，对应文章数量多的标签会比较大。效果: [tags页面](https://ryanluoxu.github.io/tags/)\n\n\n## 设置侧边栏社交链接 ##\n\n官方文档：[设置侧边栏社交链接](https://github.com/iissnan/hexo-theme-next/wiki/%E8%AE%BE%E7%BD%AE%E4%BE%A7%E8%BE%B9%E6%A0%8F%E7%A4%BE%E4%BA%A4%E9%93%BE%E6%8E%A5)\n\n但是内容好像没有更新。配置文件已经有，不需要新增。\n\n**操作如下：**\n\n1. 打开 D:\\blog\\themes\\next\\_config.yml\n2. 找到 `Social Links.`\n3. 修改如下：\n```\nsocial:\n  GitHub: https://github.com/Ryanluoxu || github\n  Linkedin: https://www.linkedin.com/in/luo-xu-ryan-675a8041/ ||  linkedin\n  ZhiHu: https://www.zhihu.com/people/luojiuri/activities || \n  #StackOverflow: https://stackoverflow.com/users/7640451/ryan-l || stack-overflow\n  E-Mail: mailto:luoxu2011@gmail.com || envelope\n  #右键复制: mailto:luoxu2011@gmail.com || envelope\n  #Google: https://plus.google.com/yourname || google\n  #Twitter: https://twitter.com/yourname || twitter\n  #FB Page: https://www.facebook.com/yourname || facebook\n  #VK Group: https://vk.com/yourname || vk\n  #YouTube: https://youtube.com/yourname || youtube\n  #Instagram: https://instagram.com/yourname || instagram\n  #Skype: skype:yourname?call|chat || skype\n\nsocial_icons:\n  enable: true\n  icons_only: false\n  transition: false\n  GitHub: github\n  Linkedin: linkedin \n```\n\n## 设置侧边栏社交链接 ##\n\n参考 [Hexo+Next主题优化](https://zhuanlan.zhihu.com/p/30836436) 的 10. 自定义文章底部版权声明\n\n## 参考 ##\n\n[NexT主题个性化修改与调试方案](http://blog.junyu.io/posts/0009-hexo-next-theme-modify.html)\n\n","slug":"Hexo-的-Next-主题优化","published":1,"updated":"2017-12-10T12:55:13.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbiug0ia000dvwv421e9vmdv","content":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>这篇博客用来记录和分享我对博客优化的过程，均为实际经历。欢迎纠正，与君共勉。</p>\n<h2 id=\"修改-Next-主题的-Scheme\"><a href=\"#修改-Next-主题的-Scheme\" class=\"headerlink\" title=\"修改 Next 主题的 Scheme\"></a>修改 Next 主题的 Scheme</h2><p>Next 默认的风格是 Muse。现有的四个风格里，我最喜欢 Gemini。<br>因为此风格的博客首页里，每篇博客有明显的分割。菜单在左侧，方便访问时转到别的页面。  </p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li>打开 D:\\blog\\themes\\next_config.yml</li>\n<li>找到 <code>Scheme Settings</code></li>\n<li>去掉 <code>Gemini</code> 前面的 <code>#</code>。 <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Schemes</span><br><span class=\"line\">#scheme: Muse</span><br><span class=\"line\">#scheme: Mist</span><br><span class=\"line\">#scheme: Pisces</span><br><span class=\"line\">scheme: Gemini</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"添加访问统计\"><a href=\"#添加访问统计\" class=\"headerlink\" title=\"添加访问统计\"></a>添加访问统计</h2><p>开始时尝试用 LeanCloud，尝试数次无果，一直得不到访问数据。<br>改用 BuSuanZi，效果显著！</p>\n<p>博客主页效果：</p>\n<p><img src=\"/images/博客主页下方访问量.png\" alt=\"博客主页下方访问量\"></p>\n<a id=\"more\"></a>\n<p>文章页面效果：</p>\n<p><img src=\"/images/文章页面访问量.png\" alt=\"文章页面访问量\"></p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li>打开 D:\\blog\\themes\\next_config.yml</li>\n<li>找到 <code>busuanzi_count</code></li>\n<li>如下修改： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">busuanzi_count:</span><br><span class=\"line\">  # count values only if the other configs are false</span><br><span class=\"line\">  enable: true\t// 此处</span><br><span class=\"line\">  # custom uv span for the whole site</span><br><span class=\"line\">  site_uv: true</span><br><span class=\"line\">  site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt; Visitor // 此处</span><br><span class=\"line\">  site_uv_footer:</span><br><span class=\"line\">  # custom pv span for the whole site</span><br><span class=\"line\">  site_pv: true</span><br><span class=\"line\">  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt; Total Visit // 此处</span><br><span class=\"line\">  site_pv_footer:</span><br><span class=\"line\">  # custom pv span for one page only</span><br><span class=\"line\">  page_pv: true</span><br><span class=\"line\">  page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt; View // 此处</span><br><span class=\"line\">  page_pv_footer:</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"添加头像\"><a href=\"#添加头像\" class=\"headerlink\" title=\"添加头像\"></a>添加头像</h2><p><strong>操作如下：</strong></p>\n<ol>\n<li>将头像照片 <code>头像1.jpg</code> 保存到 D:\\blog\\themes\\next\\source\\images 路径下。</li>\n<li>打开 D:\\blog\\themes\\next_config.yml</li>\n<li>找到 <code>Sidebar Avatar</code></li>\n<li>如下修改： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Sidebar Avatar</span><br><span class=\"line\"># in theme directory(source/images): /images/avatar.gif</span><br><span class=\"line\"># in site  directory(source/uploads): /uploads/avatar.gif</span><br><span class=\"line\">avatar: /images/avatar1.JPG</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><a name=\"添加页面\"></a></p>\n<h2 id=\"添加-About-等页面\"><a href=\"#添加-About-等页面\" class=\"headerlink\" title=\"添加 About 等页面\"></a>添加 About 等页面</h2><p>前后效果对比：</p>\n<p><img src=\"/images/添加页面之前.png\" alt=\"添加页面之前\"></p>\n<p><img src=\"/images/添加页面之后.png\" alt=\"添加页面之后\"></p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li><p>打开 Git Bash：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /d/blog // 进入到 blog 所在文件夹</span><br><span class=\"line\">hexo new page <span class=\"string\">\"about\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开 D:\\blog\\themes\\next_config.yml</p>\n</li>\n<li>找到 <code>Menu Settings</code></li>\n<li>如下修改： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: / || home</span><br><span class=\"line\">  about: /about/ || user  // 此处</span><br><span class=\"line\">  #tags: /tags/ || tags</span><br><span class=\"line\">  #categories: /categories/ || th</span><br><span class=\"line\">  archives: /archives/ || archive</span><br><span class=\"line\">  #schedule: /schedule/ || calendar</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"侧边栏的分类和标签页面\"><a href=\"#侧边栏的分类和标签页面\" class=\"headerlink\" title=\"侧边栏的分类和标签页面\"></a>侧边栏的分类和标签页面</h2><p>侧边栏有三个数字，分别对应文章，分类和标签。其中点击文章，可以到文章列表页面。但是分类和标签无法点击。<br>这里很有必要激活这个功能。 在此之前需要已经存在这两个页面。 参考<a href=\"#添加页面\">添加页面</a>进行添加。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page &quot;categories&quot;</span><br><span class=\"line\">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure></p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li>打开 D:\\blog\\themes\\next\\layout_macro/sidebar.swig</li>\n<li><p>找到下面代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if site.categories.length &gt; 0 %&#125;</span><br><span class=\"line\">  &#123;% set categoriesPageQuery = site.pages.find(&#123;type: &apos;categories&apos;&#125;, &#123;lean: true&#125;) %&#125;</span><br><span class=\"line\">  &#123;% set hasCategoriesPage = categoriesPageQuery.length &gt; 0 %&#125;</span><br><span class=\"line\">  &lt;div class=&quot;site-state-item site-state-categories&quot;&gt;</span><br><span class=\"line\">    &#123;% if hasCategoriesPage %&#125;&lt;a href=&quot;&#123;&#123; url_for(categoriesPageQuery[0].path) &#125;&#125;&quot;&gt;&#123;% endif %&#125;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-count&quot;&gt;&#123;&#123; site.categories.length &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-name&quot;&gt;&#123;&#123; __(&apos;state.categories&apos;) &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">    &#123;% if hasCategoriesPage %&#125;&lt;/a&gt;&#123;% endif %&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% if site.tags.length &gt; 0 %&#125;</span><br><span class=\"line\">  &#123;% set tagsPageQuery = site.pages.find(&#123;type: &apos;tags&apos;&#125;, &#123;lean: true&#125;) %&#125;</span><br><span class=\"line\">  &#123;% set hasTagsPage = tagsPageQuery.length &gt; 0 %&#125;</span><br><span class=\"line\">  &lt;div class=&quot;site-state-item site-state-tags&quot;&gt;</span><br><span class=\"line\">    &#123;% if hasTagsPage %&#125;&lt;a href=&quot;&#123;&#123; url_for(tagsPageQuery[0].path) &#125;&#125;&quot;&gt;&#123;% endif %&#125;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-count&quot;&gt;&#123;&#123; site.tags.length &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-name&quot;&gt;&#123;&#123; __(&apos;state.tags&apos;) &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">    &#123;% if hasTagsPage %&#125;&lt;/a&gt;&#123;% endif %&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>替换成下面代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if site.categories.length &gt; 0 %&#125;</span><br><span class=\"line\">  &#123;% set categoriesPageQuery = site.pages.find(&#123;type: &apos;categories&apos;&#125;, &#123;lean: true&#125;) %&#125;</span><br><span class=\"line\">  &#123;% set hasCategoriesPage = categoriesPageQuery.length &gt; 0 %&#125;</span><br><span class=\"line\">  &lt;div class=&quot;site-state-item site-state-categories&quot;&gt;</span><br><span class=\"line\">    &#123;% if hasCategoriesPage %&#125;</span><br><span class=\"line\">\t  &lt;a href=&quot;&#123;&#123; url_for(categoriesPageQuery[0].path) &#125;&#125;&quot;&gt;</span><br><span class=\"line\">\t&#123;% else %&#125;</span><br><span class=\"line\">      &lt;a href=&quot;&#123;&#123; url_for(theme.menu.categories).split(&apos;||&apos;)[0] | trim &#125;&#125;&quot;&gt;</span><br><span class=\"line\">\t&#123;% endif %&#125;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-count&quot;&gt;&#123;&#123; site.categories.length &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-name&quot;&gt;&#123;&#123; __(&apos;state.categories&apos;) &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">    &lt;/a&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% if site.tags.length &gt; 0 %&#125;</span><br><span class=\"line\">  &#123;% set tagsPageQuery = site.pages.find(&#123;type: &apos;tags&apos;&#125;, &#123;lean: true&#125;) %&#125;</span><br><span class=\"line\">  &#123;% set hasTagsPage = tagsPageQuery.length &gt; 0 %&#125;</span><br><span class=\"line\">  &lt;div class=&quot;site-state-item site-state-tags&quot;&gt;</span><br><span class=\"line\">    &#123;% if hasTagsPage %&#125;</span><br><span class=\"line\">\t  &lt;a href=&quot;&#123;&#123; url_for(tagsPageQuery[0].path) &#125;&#125;&quot;&gt;</span><br><span class=\"line\">\t&#123;% else %&#125;</span><br><span class=\"line\">      &lt;a href=&quot;&#123;&#123; url_for(theme.menu.tags).split(&apos;||&apos;)[0] | trim &#125;&#125;&quot;&gt;  </span><br><span class=\"line\">\t&#123;% endif %&#125;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-count&quot;&gt;&#123;&#123; site.tags.length &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-name&quot;&gt;&#123;&#123; __(&apos;state.tags&apos;) &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">    &lt;/a&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>没有深入研究，但应该是 <code>hasTagsPage</code> 没有实现，所以总是没有链接效果。所以给它加了一个 <code>else</code>   条件。就可以了。 </p>\n<h2 id=\"分类和标签页面的自动生成-categories-amp-tags\"><a href=\"#分类和标签页面的自动生成-categories-amp-tags\" class=\"headerlink\" title=\"分类和标签页面的自动生成 categories &amp; tags\"></a>分类和标签页面的自动生成 categories &amp; tags</h2><p>一开始我自己手动添加了这两个页面的内容，后来无意看到了正确的打开方式：<a href=\"http://theme-next.iissnan.com/theme-settings.html\" target=\"_blank\" rel=\"noopener\">主题配置</a><br>很简单，分别加上 type 就可以了。</p>\n<p><strong>分类页面：</strong></p>\n<ol>\n<li>打开 D:\\blog\\source\\categories\\index.md</li>\n<li>内容如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: categories</span><br><span class=\"line\">date: 2017-11-26 18:38:13</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>标签页面：</strong></p>\n<ol>\n<li>打开 D:\\blog\\source\\tags\\index.md</li>\n<li>内容如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2017-11-26 18:38:13</span><br><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>标签页面的效果特别好，对应文章数量多的标签会比较大。效果: <a href=\"https://ryanluoxu.github.io/tags/\">tags页面</a></p>\n<h2 id=\"设置侧边栏社交链接\"><a href=\"#设置侧边栏社交链接\" class=\"headerlink\" title=\"设置侧边栏社交链接\"></a>设置侧边栏社交链接</h2><p>官方文档：<a href=\"https://github.com/iissnan/hexo-theme-next/wiki/%E8%AE%BE%E7%BD%AE%E4%BE%A7%E8%BE%B9%E6%A0%8F%E7%A4%BE%E4%BA%A4%E9%93%BE%E6%8E%A5\" target=\"_blank\" rel=\"noopener\">设置侧边栏社交链接</a></p>\n<p>但是内容好像没有更新。配置文件已经有，不需要新增。</p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li>打开 D:\\blog\\themes\\next_config.yml</li>\n<li>找到 <code>Social Links.</code></li>\n<li>修改如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">social:</span><br><span class=\"line\">  GitHub: https://github.com/Ryanluoxu || github</span><br><span class=\"line\">  Linkedin: https://www.linkedin.com/in/luo-xu-ryan-675a8041/ ||  linkedin</span><br><span class=\"line\">  ZhiHu: https://www.zhihu.com/people/luojiuri/activities || </span><br><span class=\"line\">  #StackOverflow: https://stackoverflow.com/users/7640451/ryan-l || stack-overflow</span><br><span class=\"line\">  E-Mail: mailto:luoxu2011@gmail.com || envelope</span><br><span class=\"line\">  #右键复制: mailto:luoxu2011@gmail.com || envelope</span><br><span class=\"line\">  #Google: https://plus.google.com/yourname || google</span><br><span class=\"line\">  #Twitter: https://twitter.com/yourname || twitter</span><br><span class=\"line\">  #FB Page: https://www.facebook.com/yourname || facebook</span><br><span class=\"line\">  #VK Group: https://vk.com/yourname || vk</span><br><span class=\"line\">  #YouTube: https://youtube.com/yourname || youtube</span><br><span class=\"line\">  #Instagram: https://instagram.com/yourname || instagram</span><br><span class=\"line\">  #Skype: skype:yourname?call|chat || skype</span><br><span class=\"line\"></span><br><span class=\"line\">social_icons:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  icons_only: false</span><br><span class=\"line\">  transition: false</span><br><span class=\"line\">  GitHub: github</span><br><span class=\"line\">  Linkedin: linkedin</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"设置侧边栏社交链接-1\"><a href=\"#设置侧边栏社交链接-1\" class=\"headerlink\" title=\"设置侧边栏社交链接\"></a>设置侧边栏社交链接</h2><p>参考 <a href=\"https://zhuanlan.zhihu.com/p/30836436\" target=\"_blank\" rel=\"noopener\">Hexo+Next主题优化</a> 的 10. 自定义文章底部版权声明</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://blog.junyu.io/posts/0009-hexo-next-theme-modify.html\" target=\"_blank\" rel=\"noopener\">NexT主题个性化修改与调试方案</a></p>\n","site":{"data":{}},"excerpt":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>这篇博客用来记录和分享我对博客优化的过程，均为实际经历。欢迎纠正，与君共勉。</p>\n<h2 id=\"修改-Next-主题的-Scheme\"><a href=\"#修改-Next-主题的-Scheme\" class=\"headerlink\" title=\"修改 Next 主题的 Scheme\"></a>修改 Next 主题的 Scheme</h2><p>Next 默认的风格是 Muse。现有的四个风格里，我最喜欢 Gemini。<br>因为此风格的博客首页里，每篇博客有明显的分割。菜单在左侧，方便访问时转到别的页面。  </p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li>打开 D:\\blog\\themes\\next_config.yml</li>\n<li>找到 <code>Scheme Settings</code></li>\n<li>去掉 <code>Gemini</code> 前面的 <code>#</code>。 <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Schemes</span><br><span class=\"line\">#scheme: Muse</span><br><span class=\"line\">#scheme: Mist</span><br><span class=\"line\">#scheme: Pisces</span><br><span class=\"line\">scheme: Gemini</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"添加访问统计\"><a href=\"#添加访问统计\" class=\"headerlink\" title=\"添加访问统计\"></a>添加访问统计</h2><p>开始时尝试用 LeanCloud，尝试数次无果，一直得不到访问数据。<br>改用 BuSuanZi，效果显著！</p>\n<p>博客主页效果：</p>\n<p><img src=\"/images/博客主页下方访问量.png\" alt=\"博客主页下方访问量\"></p>","more":"<p>文章页面效果：</p>\n<p><img src=\"/images/文章页面访问量.png\" alt=\"文章页面访问量\"></p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li>打开 D:\\blog\\themes\\next_config.yml</li>\n<li>找到 <code>busuanzi_count</code></li>\n<li>如下修改： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">busuanzi_count:</span><br><span class=\"line\">  # count values only if the other configs are false</span><br><span class=\"line\">  enable: true\t// 此处</span><br><span class=\"line\">  # custom uv span for the whole site</span><br><span class=\"line\">  site_uv: true</span><br><span class=\"line\">  site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt; Visitor // 此处</span><br><span class=\"line\">  site_uv_footer:</span><br><span class=\"line\">  # custom pv span for the whole site</span><br><span class=\"line\">  site_pv: true</span><br><span class=\"line\">  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt; Total Visit // 此处</span><br><span class=\"line\">  site_pv_footer:</span><br><span class=\"line\">  # custom pv span for one page only</span><br><span class=\"line\">  page_pv: true</span><br><span class=\"line\">  page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt; View // 此处</span><br><span class=\"line\">  page_pv_footer:</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"添加头像\"><a href=\"#添加头像\" class=\"headerlink\" title=\"添加头像\"></a>添加头像</h2><p><strong>操作如下：</strong></p>\n<ol>\n<li>将头像照片 <code>头像1.jpg</code> 保存到 D:\\blog\\themes\\next\\source\\images 路径下。</li>\n<li>打开 D:\\blog\\themes\\next_config.yml</li>\n<li>找到 <code>Sidebar Avatar</code></li>\n<li>如下修改： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Sidebar Avatar</span><br><span class=\"line\"># in theme directory(source/images): /images/avatar.gif</span><br><span class=\"line\"># in site  directory(source/uploads): /uploads/avatar.gif</span><br><span class=\"line\">avatar: /images/avatar1.JPG</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><a name=\"添加页面\"></a></p>\n<h2 id=\"添加-About-等页面\"><a href=\"#添加-About-等页面\" class=\"headerlink\" title=\"添加 About 等页面\"></a>添加 About 等页面</h2><p>前后效果对比：</p>\n<p><img src=\"/images/添加页面之前.png\" alt=\"添加页面之前\"></p>\n<p><img src=\"/images/添加页面之后.png\" alt=\"添加页面之后\"></p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li><p>打开 Git Bash：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /d/blog // 进入到 blog 所在文件夹</span><br><span class=\"line\">hexo new page <span class=\"string\">\"about\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开 D:\\blog\\themes\\next_config.yml</p>\n</li>\n<li>找到 <code>Menu Settings</code></li>\n<li>如下修改： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: / || home</span><br><span class=\"line\">  about: /about/ || user  // 此处</span><br><span class=\"line\">  #tags: /tags/ || tags</span><br><span class=\"line\">  #categories: /categories/ || th</span><br><span class=\"line\">  archives: /archives/ || archive</span><br><span class=\"line\">  #schedule: /schedule/ || calendar</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"侧边栏的分类和标签页面\"><a href=\"#侧边栏的分类和标签页面\" class=\"headerlink\" title=\"侧边栏的分类和标签页面\"></a>侧边栏的分类和标签页面</h2><p>侧边栏有三个数字，分别对应文章，分类和标签。其中点击文章，可以到文章列表页面。但是分类和标签无法点击。<br>这里很有必要激活这个功能。 在此之前需要已经存在这两个页面。 参考<a href=\"#添加页面\">添加页面</a>进行添加。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page &quot;categories&quot;</span><br><span class=\"line\">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure></p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li>打开 D:\\blog\\themes\\next\\layout_macro/sidebar.swig</li>\n<li><p>找到下面代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if site.categories.length &gt; 0 %&#125;</span><br><span class=\"line\">  &#123;% set categoriesPageQuery = site.pages.find(&#123;type: &apos;categories&apos;&#125;, &#123;lean: true&#125;) %&#125;</span><br><span class=\"line\">  &#123;% set hasCategoriesPage = categoriesPageQuery.length &gt; 0 %&#125;</span><br><span class=\"line\">  &lt;div class=&quot;site-state-item site-state-categories&quot;&gt;</span><br><span class=\"line\">    &#123;% if hasCategoriesPage %&#125;&lt;a href=&quot;&#123;&#123; url_for(categoriesPageQuery[0].path) &#125;&#125;&quot;&gt;&#123;% endif %&#125;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-count&quot;&gt;&#123;&#123; site.categories.length &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-name&quot;&gt;&#123;&#123; __(&apos;state.categories&apos;) &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">    &#123;% if hasCategoriesPage %&#125;&lt;/a&gt;&#123;% endif %&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% if site.tags.length &gt; 0 %&#125;</span><br><span class=\"line\">  &#123;% set tagsPageQuery = site.pages.find(&#123;type: &apos;tags&apos;&#125;, &#123;lean: true&#125;) %&#125;</span><br><span class=\"line\">  &#123;% set hasTagsPage = tagsPageQuery.length &gt; 0 %&#125;</span><br><span class=\"line\">  &lt;div class=&quot;site-state-item site-state-tags&quot;&gt;</span><br><span class=\"line\">    &#123;% if hasTagsPage %&#125;&lt;a href=&quot;&#123;&#123; url_for(tagsPageQuery[0].path) &#125;&#125;&quot;&gt;&#123;% endif %&#125;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-count&quot;&gt;&#123;&#123; site.tags.length &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-name&quot;&gt;&#123;&#123; __(&apos;state.tags&apos;) &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">    &#123;% if hasTagsPage %&#125;&lt;/a&gt;&#123;% endif %&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>替换成下面代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if site.categories.length &gt; 0 %&#125;</span><br><span class=\"line\">  &#123;% set categoriesPageQuery = site.pages.find(&#123;type: &apos;categories&apos;&#125;, &#123;lean: true&#125;) %&#125;</span><br><span class=\"line\">  &#123;% set hasCategoriesPage = categoriesPageQuery.length &gt; 0 %&#125;</span><br><span class=\"line\">  &lt;div class=&quot;site-state-item site-state-categories&quot;&gt;</span><br><span class=\"line\">    &#123;% if hasCategoriesPage %&#125;</span><br><span class=\"line\">\t  &lt;a href=&quot;&#123;&#123; url_for(categoriesPageQuery[0].path) &#125;&#125;&quot;&gt;</span><br><span class=\"line\">\t&#123;% else %&#125;</span><br><span class=\"line\">      &lt;a href=&quot;&#123;&#123; url_for(theme.menu.categories).split(&apos;||&apos;)[0] | trim &#125;&#125;&quot;&gt;</span><br><span class=\"line\">\t&#123;% endif %&#125;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-count&quot;&gt;&#123;&#123; site.categories.length &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-name&quot;&gt;&#123;&#123; __(&apos;state.categories&apos;) &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">    &lt;/a&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% if site.tags.length &gt; 0 %&#125;</span><br><span class=\"line\">  &#123;% set tagsPageQuery = site.pages.find(&#123;type: &apos;tags&apos;&#125;, &#123;lean: true&#125;) %&#125;</span><br><span class=\"line\">  &#123;% set hasTagsPage = tagsPageQuery.length &gt; 0 %&#125;</span><br><span class=\"line\">  &lt;div class=&quot;site-state-item site-state-tags&quot;&gt;</span><br><span class=\"line\">    &#123;% if hasTagsPage %&#125;</span><br><span class=\"line\">\t  &lt;a href=&quot;&#123;&#123; url_for(tagsPageQuery[0].path) &#125;&#125;&quot;&gt;</span><br><span class=\"line\">\t&#123;% else %&#125;</span><br><span class=\"line\">      &lt;a href=&quot;&#123;&#123; url_for(theme.menu.tags).split(&apos;||&apos;)[0] | trim &#125;&#125;&quot;&gt;  </span><br><span class=\"line\">\t&#123;% endif %&#125;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-count&quot;&gt;&#123;&#123; site.tags.length &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">      &lt;span class=&quot;site-state-item-name&quot;&gt;&#123;&#123; __(&apos;state.tags&apos;) &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">    &lt;/a&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>没有深入研究，但应该是 <code>hasTagsPage</code> 没有实现，所以总是没有链接效果。所以给它加了一个 <code>else</code>   条件。就可以了。 </p>\n<h2 id=\"分类和标签页面的自动生成-categories-amp-tags\"><a href=\"#分类和标签页面的自动生成-categories-amp-tags\" class=\"headerlink\" title=\"分类和标签页面的自动生成 categories &amp; tags\"></a>分类和标签页面的自动生成 categories &amp; tags</h2><p>一开始我自己手动添加了这两个页面的内容，后来无意看到了正确的打开方式：<a href=\"http://theme-next.iissnan.com/theme-settings.html\" target=\"_blank\" rel=\"noopener\">主题配置</a><br>很简单，分别加上 type 就可以了。</p>\n<p><strong>分类页面：</strong></p>\n<ol>\n<li>打开 D:\\blog\\source\\categories\\index.md</li>\n<li>内容如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: categories</span><br><span class=\"line\">date: 2017-11-26 18:38:13</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>标签页面：</strong></p>\n<ol>\n<li>打开 D:\\blog\\source\\tags\\index.md</li>\n<li>内容如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2017-11-26 18:38:13</span><br><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>标签页面的效果特别好，对应文章数量多的标签会比较大。效果: <a href=\"https://ryanluoxu.github.io/tags/\">tags页面</a></p>\n<h2 id=\"设置侧边栏社交链接\"><a href=\"#设置侧边栏社交链接\" class=\"headerlink\" title=\"设置侧边栏社交链接\"></a>设置侧边栏社交链接</h2><p>官方文档：<a href=\"https://github.com/iissnan/hexo-theme-next/wiki/%E8%AE%BE%E7%BD%AE%E4%BE%A7%E8%BE%B9%E6%A0%8F%E7%A4%BE%E4%BA%A4%E9%93%BE%E6%8E%A5\" target=\"_blank\" rel=\"noopener\">设置侧边栏社交链接</a></p>\n<p>但是内容好像没有更新。配置文件已经有，不需要新增。</p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li>打开 D:\\blog\\themes\\next_config.yml</li>\n<li>找到 <code>Social Links.</code></li>\n<li>修改如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">social:</span><br><span class=\"line\">  GitHub: https://github.com/Ryanluoxu || github</span><br><span class=\"line\">  Linkedin: https://www.linkedin.com/in/luo-xu-ryan-675a8041/ ||  linkedin</span><br><span class=\"line\">  ZhiHu: https://www.zhihu.com/people/luojiuri/activities || </span><br><span class=\"line\">  #StackOverflow: https://stackoverflow.com/users/7640451/ryan-l || stack-overflow</span><br><span class=\"line\">  E-Mail: mailto:luoxu2011@gmail.com || envelope</span><br><span class=\"line\">  #右键复制: mailto:luoxu2011@gmail.com || envelope</span><br><span class=\"line\">  #Google: https://plus.google.com/yourname || google</span><br><span class=\"line\">  #Twitter: https://twitter.com/yourname || twitter</span><br><span class=\"line\">  #FB Page: https://www.facebook.com/yourname || facebook</span><br><span class=\"line\">  #VK Group: https://vk.com/yourname || vk</span><br><span class=\"line\">  #YouTube: https://youtube.com/yourname || youtube</span><br><span class=\"line\">  #Instagram: https://instagram.com/yourname || instagram</span><br><span class=\"line\">  #Skype: skype:yourname?call|chat || skype</span><br><span class=\"line\"></span><br><span class=\"line\">social_icons:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  icons_only: false</span><br><span class=\"line\">  transition: false</span><br><span class=\"line\">  GitHub: github</span><br><span class=\"line\">  Linkedin: linkedin</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"设置侧边栏社交链接-1\"><a href=\"#设置侧边栏社交链接-1\" class=\"headerlink\" title=\"设置侧边栏社交链接\"></a>设置侧边栏社交链接</h2><p>参考 <a href=\"https://zhuanlan.zhihu.com/p/30836436\" target=\"_blank\" rel=\"noopener\">Hexo+Next主题优化</a> 的 10. 自定义文章底部版权声明</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://blog.junyu.io/posts/0009-hexo-next-theme-modify.html\" target=\"_blank\" rel=\"noopener\">NexT主题个性化修改与调试方案</a></p>"},{"title":"Linux - SSH or SCP without password","date":"2017-11-28T15:24:20.000Z","_content":"\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n点这里跳过废话：[直奔主题 Show me the code](#直奔主题)\n\n有这样一个任务: 将同事发送的原始数据处理好之后，放进数据库。\n其中一个关键的步骤，就是原始数据的转移。\n\n通常我们有两个服务器，一个是 Public_Server，一个是 Private_Server。 \n公开 Public_Server 的用户名和密码，这样其他同事都可以自由地往里面存放数据。\n然后我们操作 Private_Server 来获取那些数据，再进一步处理。\n\n> 好处：\n> - 保护处理数据的程序和数据库\n> - 有时需要换服务器，避免通知所有人更新服务器的地址和登录信息\n> - Public_Server 就像一个保护屏，做了一个分割，提高了安全性。\n\n<!--more-->\n转移数据，作为整个工序里很小的一个步骤，通常我们会直接写进一个脚本里，这部分都会自动完成。\n但是在服务器之间做这个操作，会需要提供密码，此时，整个脚本程序就会停下来。如果需要人来输入密码，就失去了脚本的意义了。\n所以事先在两个服务器之间建立信任，这样，需要 SCP 或者 SSH 的时候，都不需要再输入密码。\n\n<a name=\"直奔主题\"/>\n**具体操作如下：**\n\n假设：\n\n- Public_Server: \n```\nIP： 199.99.999.99\nUserId: people \n```\n- Private_Server:\n```\nUserId: ryan\n```\n\n在 Private_Server 上操作：\n\n1. 创建钥匙。\n```bash\nssh-keygen -t rsa\n```\n\t一路回车之后，做了两个钥匙。自己的钥匙是这个：\n```bash\n/home/ryan/.ssh/id_rsa\n```\n\t公开的钥匙是这个：\n```bash\n/home/ryan/.ssh/id_rsa.pub\n```\n2. SSH 连接到 Public_Server, 并且创建 .ssh 文件夹\n```bash\nssh people@199.99.999.99\t# 输入密码，进入到 public server\ncd ~\t\t\t\t\t# 进入 people 用户的 Home\nmkdir .ssh\t\t\t\t# 创建 .ssh 文件夹(/home/people/.ssh)\nexit\t\t\t\t\t# 退出，回到 private server\n```\n3. 将公开的钥匙复制到 public server 的 .ssh 文件夹里，命名为 authorized_keys，需要密码\n```bash\nscp /home/ryan/.ssh/id_rsa people@199.99.999.99:/home/people/.ssh/authorized_keys\n```\n4. 之后再进行 \n```bash\nssh people@199.99.999.99\n```\n\t或者\n```bash\nscp /home/ryan/anyfile.txt people@199.99.999.99:/home/people/\n```\n\t都不需要提供密码。","source":"_posts/Linux-SSH-or-SCP-without-password.md","raw":"---\ntitle: Linux - SSH or SCP without password\ndate: 2017-11-28 23:24:20\ncategories: Linux\ntags: [Linux, SSH, SCP, password, server]\n---\n\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n点这里跳过废话：[直奔主题 Show me the code](#直奔主题)\n\n有这样一个任务: 将同事发送的原始数据处理好之后，放进数据库。\n其中一个关键的步骤，就是原始数据的转移。\n\n通常我们有两个服务器，一个是 Public_Server，一个是 Private_Server。 \n公开 Public_Server 的用户名和密码，这样其他同事都可以自由地往里面存放数据。\n然后我们操作 Private_Server 来获取那些数据，再进一步处理。\n\n> 好处：\n> - 保护处理数据的程序和数据库\n> - 有时需要换服务器，避免通知所有人更新服务器的地址和登录信息\n> - Public_Server 就像一个保护屏，做了一个分割，提高了安全性。\n\n<!--more-->\n转移数据，作为整个工序里很小的一个步骤，通常我们会直接写进一个脚本里，这部分都会自动完成。\n但是在服务器之间做这个操作，会需要提供密码，此时，整个脚本程序就会停下来。如果需要人来输入密码，就失去了脚本的意义了。\n所以事先在两个服务器之间建立信任，这样，需要 SCP 或者 SSH 的时候，都不需要再输入密码。\n\n<a name=\"直奔主题\"/>\n**具体操作如下：**\n\n假设：\n\n- Public_Server: \n```\nIP： 199.99.999.99\nUserId: people \n```\n- Private_Server:\n```\nUserId: ryan\n```\n\n在 Private_Server 上操作：\n\n1. 创建钥匙。\n```bash\nssh-keygen -t rsa\n```\n\t一路回车之后，做了两个钥匙。自己的钥匙是这个：\n```bash\n/home/ryan/.ssh/id_rsa\n```\n\t公开的钥匙是这个：\n```bash\n/home/ryan/.ssh/id_rsa.pub\n```\n2. SSH 连接到 Public_Server, 并且创建 .ssh 文件夹\n```bash\nssh people@199.99.999.99\t# 输入密码，进入到 public server\ncd ~\t\t\t\t\t# 进入 people 用户的 Home\nmkdir .ssh\t\t\t\t# 创建 .ssh 文件夹(/home/people/.ssh)\nexit\t\t\t\t\t# 退出，回到 private server\n```\n3. 将公开的钥匙复制到 public server 的 .ssh 文件夹里，命名为 authorized_keys，需要密码\n```bash\nscp /home/ryan/.ssh/id_rsa people@199.99.999.99:/home/people/.ssh/authorized_keys\n```\n4. 之后再进行 \n```bash\nssh people@199.99.999.99\n```\n\t或者\n```bash\nscp /home/ryan/anyfile.txt people@199.99.999.99:/home/people/\n```\n\t都不需要提供密码。","slug":"Linux-SSH-or-SCP-without-password","published":1,"updated":"2017-11-30T15:08:16.777Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbiug0ic000hvwv40xca1zsm","content":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>点这里跳过废话：<a href=\"#直奔主题\">直奔主题 Show me the code</a></p>\n<p>有这样一个任务: 将同事发送的原始数据处理好之后，放进数据库。<br>其中一个关键的步骤，就是原始数据的转移。</p>\n<p>通常我们有两个服务器，一个是 Public_Server，一个是 Private_Server。<br>公开 Public_Server 的用户名和密码，这样其他同事都可以自由地往里面存放数据。<br>然后我们操作 Private_Server 来获取那些数据，再进一步处理。</p>\n<blockquote>\n<p>好处：</p>\n<ul>\n<li>保护处理数据的程序和数据库</li>\n<li>有时需要换服务器，避免通知所有人更新服务器的地址和登录信息</li>\n<li>Public_Server 就像一个保护屏，做了一个分割，提高了安全性。</li>\n</ul>\n</blockquote>\n<a id=\"more\"></a>\n<p>转移数据，作为整个工序里很小的一个步骤，通常我们会直接写进一个脚本里，这部分都会自动完成。<br>但是在服务器之间做这个操作，会需要提供密码，此时，整个脚本程序就会停下来。如果需要人来输入密码，就失去了脚本的意义了。<br>所以事先在两个服务器之间建立信任，这样，需要 SCP 或者 SSH 的时候，都不需要再输入密码。</p>\n<p><a name=\"直奔主题\"><br><strong>具体操作如下：</strong></a></p>\n<p>假设：</p>\n<ul>\n<li><p>Public_Server: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IP： 199.99.999.99</span><br><span class=\"line\">UserId: people</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Private_Server:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UserId: ryan</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>在 Private_Server 上操作：</p>\n<ol>\n<li><p>创建钥匙。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>\n<p> 一路回车之后，做了两个钥匙。自己的钥匙是这个：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/home/ryan/.ssh/id_rsa</span><br></pre></td></tr></table></figure>\n<p> 公开的钥匙是这个：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/home/ryan/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>SSH 连接到 Public_Server, 并且创建 .ssh 文件夹</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh people@199.99.999.99\t<span class=\"comment\"># 输入密码，进入到 public server</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~\t\t\t\t\t<span class=\"comment\"># 进入 people 用户的 Home</span></span><br><span class=\"line\">mkdir .ssh\t\t\t\t<span class=\"comment\"># 创建 .ssh 文件夹(/home/people/.ssh)</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span>\t\t\t\t\t<span class=\"comment\"># 退出，回到 private server</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将公开的钥匙复制到 public server 的 .ssh 文件夹里，命名为 authorized_keys，需要密码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp /home/ryan/.ssh/id_rsa people@199.99.999.99:/home/people/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>之后再进行 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh people@199.99.999.99</span><br></pre></td></tr></table></figure>\n<p> 或者</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp /home/ryan/anyfile.txt people@199.99.999.99:/home/people/</span><br></pre></td></tr></table></figure>\n<p> 都不需要提供密码。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>点这里跳过废话：<a href=\"#直奔主题\">直奔主题 Show me the code</a></p>\n<p>有这样一个任务: 将同事发送的原始数据处理好之后，放进数据库。<br>其中一个关键的步骤，就是原始数据的转移。</p>\n<p>通常我们有两个服务器，一个是 Public_Server，一个是 Private_Server。<br>公开 Public_Server 的用户名和密码，这样其他同事都可以自由地往里面存放数据。<br>然后我们操作 Private_Server 来获取那些数据，再进一步处理。</p>\n<blockquote>\n<p>好处：</p>\n<ul>\n<li>保护处理数据的程序和数据库</li>\n<li>有时需要换服务器，避免通知所有人更新服务器的地址和登录信息</li>\n<li>Public_Server 就像一个保护屏，做了一个分割，提高了安全性。</li>\n</ul>\n</blockquote>","more":"<p>转移数据，作为整个工序里很小的一个步骤，通常我们会直接写进一个脚本里，这部分都会自动完成。<br>但是在服务器之间做这个操作，会需要提供密码，此时，整个脚本程序就会停下来。如果需要人来输入密码，就失去了脚本的意义了。<br>所以事先在两个服务器之间建立信任，这样，需要 SCP 或者 SSH 的时候，都不需要再输入密码。</p>\n<p><a name=\"直奔主题\"><br><strong>具体操作如下：</strong></a></p>\n<p>假设：</p>\n<ul>\n<li><p>Public_Server: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IP： 199.99.999.99</span><br><span class=\"line\">UserId: people</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Private_Server:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UserId: ryan</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>在 Private_Server 上操作：</p>\n<ol>\n<li><p>创建钥匙。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>\n<p> 一路回车之后，做了两个钥匙。自己的钥匙是这个：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/home/ryan/.ssh/id_rsa</span><br></pre></td></tr></table></figure>\n<p> 公开的钥匙是这个：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/home/ryan/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>SSH 连接到 Public_Server, 并且创建 .ssh 文件夹</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh people@199.99.999.99\t<span class=\"comment\"># 输入密码，进入到 public server</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~\t\t\t\t\t<span class=\"comment\"># 进入 people 用户的 Home</span></span><br><span class=\"line\">mkdir .ssh\t\t\t\t<span class=\"comment\"># 创建 .ssh 文件夹(/home/people/.ssh)</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span>\t\t\t\t\t<span class=\"comment\"># 退出，回到 private server</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将公开的钥匙复制到 public server 的 .ssh 文件夹里，命名为 authorized_keys，需要密码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp /home/ryan/.ssh/id_rsa people@199.99.999.99:/home/people/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>之后再进行 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh people@199.99.999.99</span><br></pre></td></tr></table></figure>\n<p> 或者</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp /home/ryan/anyfile.txt people@199.99.999.99:/home/people/</span><br></pre></td></tr></table></figure>\n<p> 都不需要提供密码。</p>\n</li>\n</ol>"},{"title":"Linux - Script - Menu Template","date":"2017-12-09T11:02:39.000Z","_content":"- menu always in the center of prompt window\n- pre-define methods\n\t- print line\n\t- make choice\n\t- see you\n\t- press to continue\n\n```bash\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"|        See you next time..       |\"\n\tprintLine \"+----------------------------------+\"\n```\n\n<!--more-->\n```bash\n#!/bin/ksh\n\n#Head\noption=0\nerrMsg=\"\"\ncolumn=$(tput cols)\nx=0\nwidth=36\ny=$((($column-$width)/2))\nnextionAction=~/xxx.sh\n\nprintLine(){\n\t((x++))\n\ttput cup $x $y\n\techo $1\n}\n\nmakeChoice(){\n\t((x++))\n\ttput cup $x $y\n\techo -n \"Please choose (0-exit): \"\n\tread option\n}\n\nseeYou(){\n\t((x++))\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"|        See you next time..       |\"\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"\"\n}\n\nPressContinue(){\n\t((x++))\n\ttput cup $x $y\n\techo -n \"Press to continue.. \"\n\tread q\n}\n\n#Body\nclear\n\nwhile :\ndo\n\t#If error exists, display it\n\tif [$errMsg!=\"\"]; then\n\t\tprintLine \"$errMsg\"\n\tfi\n\n\t#show menu\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"|               Menu               |\"\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"|                                  |\"\n\tprintLine \"|            1. xxx                |\"\n\tprintLine \"|                                  |\"\n\tprintLine \"|            2. xxxxxx             |\"\n\tprintLine \"|                                  |\"\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"\"\n\n\tmakeChoice\n\n\t#clear the error message\n\terrMsg=\"\"\n\n\t#logic\n\tcase $option in\n\t\t0) seeYou; exit ;;\n\t\t1) $nextAction para1 ;;\n\t\t2) $nextAction para2 ;;\n\t\t*) errMsg=\"Invalid option. Try again..\" ;;\n\tesac\n\n\t#set x back to 0 for next display\n\tx=0\n\ndone\n\n```\n","source":"_posts/Linux-Script-Menu-Template.md","raw":"---\ntitle: Linux - Script - Menu Template\ndate: 2017-12-09 19:02:39\ncategories: Linux\ntags: [Linux, sh, script, template, menu, center]\n---\n- menu always in the center of prompt window\n- pre-define methods\n\t- print line\n\t- make choice\n\t- see you\n\t- press to continue\n\n```bash\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"|        See you next time..       |\"\n\tprintLine \"+----------------------------------+\"\n```\n\n<!--more-->\n```bash\n#!/bin/ksh\n\n#Head\noption=0\nerrMsg=\"\"\ncolumn=$(tput cols)\nx=0\nwidth=36\ny=$((($column-$width)/2))\nnextionAction=~/xxx.sh\n\nprintLine(){\n\t((x++))\n\ttput cup $x $y\n\techo $1\n}\n\nmakeChoice(){\n\t((x++))\n\ttput cup $x $y\n\techo -n \"Please choose (0-exit): \"\n\tread option\n}\n\nseeYou(){\n\t((x++))\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"|        See you next time..       |\"\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"\"\n}\n\nPressContinue(){\n\t((x++))\n\ttput cup $x $y\n\techo -n \"Press to continue.. \"\n\tread q\n}\n\n#Body\nclear\n\nwhile :\ndo\n\t#If error exists, display it\n\tif [$errMsg!=\"\"]; then\n\t\tprintLine \"$errMsg\"\n\tfi\n\n\t#show menu\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"|               Menu               |\"\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"|                                  |\"\n\tprintLine \"|            1. xxx                |\"\n\tprintLine \"|                                  |\"\n\tprintLine \"|            2. xxxxxx             |\"\n\tprintLine \"|                                  |\"\n\tprintLine \"+----------------------------------+\"\n\tprintLine \"\"\n\n\tmakeChoice\n\n\t#clear the error message\n\terrMsg=\"\"\n\n\t#logic\n\tcase $option in\n\t\t0) seeYou; exit ;;\n\t\t1) $nextAction para1 ;;\n\t\t2) $nextAction para2 ;;\n\t\t*) errMsg=\"Invalid option. Try again..\" ;;\n\tesac\n\n\t#set x back to 0 for next display\n\tx=0\n\ndone\n\n```\n","slug":"Linux-Script-Menu-Template","published":1,"updated":"2017-12-09T11:19:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbiug0ie000jvwv4xz4eiuf4","content":"<ul>\n<li>menu always in the center of prompt window</li>\n<li>pre-define methods<ul>\n<li>print line</li>\n<li>make choice</li>\n<li>see you</li>\n<li>press to continue</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">printLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">printLine <span class=\"string\">\"|        See you next time..       |\"</span></span><br><span class=\"line\">printLine <span class=\"string\">\"+----------------------------------+\"</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/ksh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Head</span></span><br><span class=\"line\">option=0</span><br><span class=\"line\">errMsg=<span class=\"string\">\"\"</span></span><br><span class=\"line\">column=$(tput cols)</span><br><span class=\"line\">x=0</span><br><span class=\"line\">width=36</span><br><span class=\"line\">y=$(((<span class=\"variable\">$column</span>-<span class=\"variable\">$width</span>)/2))</span><br><span class=\"line\">nextionAction=~/xxx.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">printLine</span></span>()&#123;</span><br><span class=\"line\">\t((x++))</span><br><span class=\"line\">\ttput cup <span class=\"variable\">$x</span> <span class=\"variable\">$y</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"variable\">$1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">makeChoice</span></span>()&#123;</span><br><span class=\"line\">\t((x++))</span><br><span class=\"line\">\ttput cup <span class=\"variable\">$x</span> <span class=\"variable\">$y</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> -n <span class=\"string\">\"Please choose (0-exit): \"</span></span><br><span class=\"line\">\t<span class=\"built_in\">read</span> option</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">seeYou</span></span>()&#123;</span><br><span class=\"line\">\t((x++))</span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|        See you next time..       |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">PressContinue</span></span>()&#123;</span><br><span class=\"line\">\t((x++))</span><br><span class=\"line\">\ttput cup <span class=\"variable\">$x</span> <span class=\"variable\">$y</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> -n <span class=\"string\">\"Press to continue.. \"</span></span><br><span class=\"line\">\t<span class=\"built_in\">read</span> q</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Body</span></span><br><span class=\"line\">clear</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> :</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"comment\">#If error exists, display it</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> [<span class=\"variable\">$errMsg</span>!=<span class=\"string\">\"\"</span>]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\tprintLine <span class=\"string\">\"<span class=\"variable\">$errMsg</span>\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">#show menu</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|               Menu               |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|                                  |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|            1. xxx                |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|                                  |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|            2. xxxxxx             |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|                                  |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tmakeChoice</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">#clear the error message</span></span><br><span class=\"line\">\terrMsg=<span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">#logic</span></span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"variable\">$option</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">\t\t0) seeYou; <span class=\"built_in\">exit</span> ;;</span><br><span class=\"line\">\t\t1) <span class=\"variable\">$nextAction</span> para1 ;;</span><br><span class=\"line\">\t\t2) <span class=\"variable\">$nextAction</span> para2 ;;</span><br><span class=\"line\">\t\t*) errMsg=<span class=\"string\">\"Invalid option. Try again..\"</span> ;;</span><br><span class=\"line\">\t<span class=\"keyword\">esac</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">#set x back to 0 for next display</span></span><br><span class=\"line\">\tx=0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<ul>\n<li>menu always in the center of prompt window</li>\n<li>pre-define methods<ul>\n<li>print line</li>\n<li>make choice</li>\n<li>see you</li>\n<li>press to continue</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">printLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">printLine <span class=\"string\">\"|        See you next time..       |\"</span></span><br><span class=\"line\">printLine <span class=\"string\">\"+----------------------------------+\"</span></span><br></pre></td></tr></table></figure>","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/ksh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Head</span></span><br><span class=\"line\">option=0</span><br><span class=\"line\">errMsg=<span class=\"string\">\"\"</span></span><br><span class=\"line\">column=$(tput cols)</span><br><span class=\"line\">x=0</span><br><span class=\"line\">width=36</span><br><span class=\"line\">y=$(((<span class=\"variable\">$column</span>-<span class=\"variable\">$width</span>)/2))</span><br><span class=\"line\">nextionAction=~/xxx.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">printLine</span></span>()&#123;</span><br><span class=\"line\">\t((x++))</span><br><span class=\"line\">\ttput cup <span class=\"variable\">$x</span> <span class=\"variable\">$y</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"variable\">$1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">makeChoice</span></span>()&#123;</span><br><span class=\"line\">\t((x++))</span><br><span class=\"line\">\ttput cup <span class=\"variable\">$x</span> <span class=\"variable\">$y</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> -n <span class=\"string\">\"Please choose (0-exit): \"</span></span><br><span class=\"line\">\t<span class=\"built_in\">read</span> option</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">seeYou</span></span>()&#123;</span><br><span class=\"line\">\t((x++))</span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|        See you next time..       |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">PressContinue</span></span>()&#123;</span><br><span class=\"line\">\t((x++))</span><br><span class=\"line\">\ttput cup <span class=\"variable\">$x</span> <span class=\"variable\">$y</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> -n <span class=\"string\">\"Press to continue.. \"</span></span><br><span class=\"line\">\t<span class=\"built_in\">read</span> q</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Body</span></span><br><span class=\"line\">clear</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> :</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"comment\">#If error exists, display it</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> [<span class=\"variable\">$errMsg</span>!=<span class=\"string\">\"\"</span>]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\tprintLine <span class=\"string\">\"<span class=\"variable\">$errMsg</span>\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">#show menu</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|               Menu               |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|                                  |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|            1. xxx                |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|                                  |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|            2. xxxxxx             |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"|                                  |\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"+----------------------------------+\"</span></span><br><span class=\"line\">\tprintLine <span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tmakeChoice</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">#clear the error message</span></span><br><span class=\"line\">\terrMsg=<span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">#logic</span></span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"variable\">$option</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">\t\t0) seeYou; <span class=\"built_in\">exit</span> ;;</span><br><span class=\"line\">\t\t1) <span class=\"variable\">$nextAction</span> para1 ;;</span><br><span class=\"line\">\t\t2) <span class=\"variable\">$nextAction</span> para2 ;;</span><br><span class=\"line\">\t\t*) errMsg=<span class=\"string\">\"Invalid option. Try again..\"</span> ;;</span><br><span class=\"line\">\t<span class=\"keyword\">esac</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">#set x back to 0 for next display</span></span><br><span class=\"line\">\tx=0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>"},{"title":"Linux - vi basic","date":"2017-12-01T19:50:28.000Z","_content":"\n\n## Basic Command ##\n\n### 打开文件 ###\n打开 /d/blog/_config.yml\n```bash\nvi /d/blog/_config.yml\n```\n\n### 搜索 ###\n搜索 theme: `/theme`\n回车，按 `n` 搜索下一个，直到搜索到目标。\n<!--more-->\n\n### 进入插入模式 ###\n按 `i` 进入插入模式。屏幕左下角会显示：\n```bash\n-- INSERT --\n```\n此时可以进行输入和删除。\n\n### 保存及退出 ###\n退出前，按 `esc` 离开插入模式。\n\n- 不保存，退出: `：q!`\n- 查看之后，没有做修改，直接退出: `:q`\n- 保存: `:w`\n- 保存修改，退出: `:wq` 或者 `ZZ`\n\n\n## 命令模式（非插入模式）下 ##\n\n### 移动 ###\n- 下一页：`ctrl+b`\n- 上一页：`ctrl+f`\n- 至屏幕顶行：`H` \n- 至屏幕中间行：`M` \n- 至屏幕最后行：`L`\n\n### 删除 ###\n- 删除所在行：`dd`\n\n### 复制，粘贴 ###\n- 复制所在行：`yy`\n- 复制以下#行（包括本行）：`#yy`\n- 粘贴：`p`\n\n\n","source":"_posts/Linux-vi-basic.md","raw":"---\ntitle: Linux - vi basic\ndate: 2017-12-02 03:50:28\ncategories: Linux\ntags: [Linux, vi, command]\n---\n\n\n## Basic Command ##\n\n### 打开文件 ###\n打开 /d/blog/_config.yml\n```bash\nvi /d/blog/_config.yml\n```\n\n### 搜索 ###\n搜索 theme: `/theme`\n回车，按 `n` 搜索下一个，直到搜索到目标。\n<!--more-->\n\n### 进入插入模式 ###\n按 `i` 进入插入模式。屏幕左下角会显示：\n```bash\n-- INSERT --\n```\n此时可以进行输入和删除。\n\n### 保存及退出 ###\n退出前，按 `esc` 离开插入模式。\n\n- 不保存，退出: `：q!`\n- 查看之后，没有做修改，直接退出: `:q`\n- 保存: `:w`\n- 保存修改，退出: `:wq` 或者 `ZZ`\n\n\n## 命令模式（非插入模式）下 ##\n\n### 移动 ###\n- 下一页：`ctrl+b`\n- 上一页：`ctrl+f`\n- 至屏幕顶行：`H` \n- 至屏幕中间行：`M` \n- 至屏幕最后行：`L`\n\n### 删除 ###\n- 删除所在行：`dd`\n\n### 复制，粘贴 ###\n- 复制所在行：`yy`\n- 复制以下#行（包括本行）：`#yy`\n- 粘贴：`p`\n\n\n","slug":"Linux-vi-basic","published":1,"updated":"2017-12-01T20:57:42.411Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbiug0if000nvwv4be3tf6v1","content":"<h2 id=\"Basic-Command\"><a href=\"#Basic-Command\" class=\"headerlink\" title=\"Basic Command\"></a>Basic Command</h2><h3 id=\"打开文件\"><a href=\"#打开文件\" class=\"headerlink\" title=\"打开文件\"></a>打开文件</h3><p>打开 /d/blog/_config.yml<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /d/blog/_config.yml</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h3><p>搜索 theme: <code>/theme</code><br>回车，按 <code>n</code> 搜索下一个，直到搜索到目标。<br><a id=\"more\"></a></p>\n<h3 id=\"进入插入模式\"><a href=\"#进入插入模式\" class=\"headerlink\" title=\"进入插入模式\"></a>进入插入模式</h3><p>按 <code>i</code> 进入插入模式。屏幕左下角会显示：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- INSERT --</span><br></pre></td></tr></table></figure></p>\n<p>此时可以进行输入和删除。</p>\n<h3 id=\"保存及退出\"><a href=\"#保存及退出\" class=\"headerlink\" title=\"保存及退出\"></a>保存及退出</h3><p>退出前，按 <code>esc</code> 离开插入模式。</p>\n<ul>\n<li>不保存，退出: <code>：q!</code></li>\n<li>查看之后，没有做修改，直接退出: <code>:q</code></li>\n<li>保存: <code>:w</code></li>\n<li>保存修改，退出: <code>:wq</code> 或者 <code>ZZ</code></li>\n</ul>\n<h2 id=\"命令模式（非插入模式）下\"><a href=\"#命令模式（非插入模式）下\" class=\"headerlink\" title=\"命令模式（非插入模式）下\"></a>命令模式（非插入模式）下</h2><h3 id=\"移动\"><a href=\"#移动\" class=\"headerlink\" title=\"移动\"></a>移动</h3><ul>\n<li>下一页：<code>ctrl+b</code></li>\n<li>上一页：<code>ctrl+f</code></li>\n<li>至屏幕顶行：<code>H</code> </li>\n<li>至屏幕中间行：<code>M</code> </li>\n<li>至屏幕最后行：<code>L</code></li>\n</ul>\n<h3 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h3><ul>\n<li>删除所在行：<code>dd</code></li>\n</ul>\n<h3 id=\"复制，粘贴\"><a href=\"#复制，粘贴\" class=\"headerlink\" title=\"复制，粘贴\"></a>复制，粘贴</h3><ul>\n<li>复制所在行：<code>yy</code></li>\n<li>复制以下#行（包括本行）：<code>#yy</code></li>\n<li>粘贴：<code>p</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h2 id=\"Basic-Command\"><a href=\"#Basic-Command\" class=\"headerlink\" title=\"Basic Command\"></a>Basic Command</h2><h3 id=\"打开文件\"><a href=\"#打开文件\" class=\"headerlink\" title=\"打开文件\"></a>打开文件</h3><p>打开 /d/blog/_config.yml<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /d/blog/_config.yml</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h3><p>搜索 theme: <code>/theme</code><br>回车，按 <code>n</code> 搜索下一个，直到搜索到目标。<br>","more":"</p>\n<h3 id=\"进入插入模式\"><a href=\"#进入插入模式\" class=\"headerlink\" title=\"进入插入模式\"></a>进入插入模式</h3><p>按 <code>i</code> 进入插入模式。屏幕左下角会显示：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- INSERT --</span><br></pre></td></tr></table></figure></p>\n<p>此时可以进行输入和删除。</p>\n<h3 id=\"保存及退出\"><a href=\"#保存及退出\" class=\"headerlink\" title=\"保存及退出\"></a>保存及退出</h3><p>退出前，按 <code>esc</code> 离开插入模式。</p>\n<ul>\n<li>不保存，退出: <code>：q!</code></li>\n<li>查看之后，没有做修改，直接退出: <code>:q</code></li>\n<li>保存: <code>:w</code></li>\n<li>保存修改，退出: <code>:wq</code> 或者 <code>ZZ</code></li>\n</ul>\n<h2 id=\"命令模式（非插入模式）下\"><a href=\"#命令模式（非插入模式）下\" class=\"headerlink\" title=\"命令模式（非插入模式）下\"></a>命令模式（非插入模式）下</h2><h3 id=\"移动\"><a href=\"#移动\" class=\"headerlink\" title=\"移动\"></a>移动</h3><ul>\n<li>下一页：<code>ctrl+b</code></li>\n<li>上一页：<code>ctrl+f</code></li>\n<li>至屏幕顶行：<code>H</code> </li>\n<li>至屏幕中间行：<code>M</code> </li>\n<li>至屏幕最后行：<code>L</code></li>\n</ul>\n<h3 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h3><ul>\n<li>删除所在行：<code>dd</code></li>\n</ul>\n<h3 id=\"复制，粘贴\"><a href=\"#复制，粘贴\" class=\"headerlink\" title=\"复制，粘贴\"></a>复制，粘贴</h3><ul>\n<li>复制所在行：<code>yy</code></li>\n<li>复制以下#行（包括本行）：<code>#yy</code></li>\n<li>粘贴：<code>p</code></li>\n</ul>"},{"title":"Linux Command","date":"2017-12-05T06:22:02.000Z","_content":"\n## User & Password ##\nWe have below users and their password:\n- root\n- ryan (sudoer)\n- grace\nLogin as ryan:\n\n- check password expiration\n```bash\nchage -1 ryan\t# number 1\n```\n<!--more-->\n- change password\n```bash\npasswd\t\t\t# for user self\n```\n- login as `root`\n```bash\nsu - root\n```\n- change password for `grace`\n```bash\npasswd grace\n```\n- login as `grace`\n```bash\nsu grace\n```\n- become `root`\n```bash\nsudo su - root\n```\n- set password never expire, must done by root\n```bash\nchage ryan\n\t\n\tMinimum password age:0\n\tMaximum password age:99999\n\tLast password change: enter\n\tExpiration warning: enter\n\tPassword Inactive: enter\n\tAccount expiration date: -1\n```\n\n## File & Directory ##\n\n- check directory size\n```bash\ndu -sh <path>\n```\n- monitor log\n```bash\ntail -100f <file>\n```\n- monitor log and catch specific content\n```bash\ntail -100f <file> | grep \"<content>\"\n```\n- change file modified time\n```\ntouch  -d 20170101 <file>\n```\n- delete files that mtime > 7\n```\nfind $dir -type f -mtime +7 -name '*.txt' -execdir rm -- '{}' \\;\n```\n\t1209-16:32  will delete files before 1201-16:32. Completed data for 7 days from 1202 to 1208\n- copy and move\n```\n[cp / scp / mv] <originFile> <targetFile> / <targetDir>\nscp ryan@IP:~/test.txt ~\n```\n- create file\n```\ntouch <file>\n```\n- remove\n```\nrm <file>\nrm -r <dir> # delete all the files and dirs in this dir (include)\n```\n- count number of files\n```\nfileNumber=`ls -1R <dir> | wc -l`\n```\n- zip and unzip\n```\ngzip <file>\ngunzip *.gz\n```\n- permission\n```\nchmod 755 <file>\n```\n\n## Run Program ##\n- nohup\n```\ncd ~/myApp\nnohup ./runApp.sh &\n```\n\t-1- runApp will be kept running at the background\n\t-2- the output like echo will be put into `~/myApp/nohup.out`\n- job process id\n```\njobPid=\"$(ps -ef | grep ksh | grep runApp.sh | awk '{print $2}')\"\n```\n- kill job\n```\nkill -9 <jobPid>\n```\n- pass parameter\n```\nrunApp.sh xyz\t# so in runApp.sh, $1=\"xyz\"\n```\n\n## Operation ##\n- if else\n```\nif [\"\"=\"\"]; then\n\taction\nelse\n\taction\nfi\n```\n\n## Compile / Build Java Program ##\n```bash\nreleasePath=~/myApp\nbuildPath=$releasePath/application\n~/apache-ant/bin/ant -Dreleasepath=$releasePath -Dbuildpath=$buildPath -Dant.project=<appName> -Dlibpath=$releasePath/lib\n\nstatus=$?\nif [$status -eq 0]; then\n\techo \"compilation is successful..\"\nelse\n\techo \"compilation is unsuccessful..\"\nfi\n```\n\n\n## Others ##\n- press to continue\n```\necho \"Press to continue..\"\nread q\n```\n\n","source":"_posts/Linux-Command.md","raw":"---\ntitle: Linux Command\ndate: 2017-12-05 14:22:02\ncategories: Linux\ntags: [Linux, command, shell]\n---\n\n## User & Password ##\nWe have below users and their password:\n- root\n- ryan (sudoer)\n- grace\nLogin as ryan:\n\n- check password expiration\n```bash\nchage -1 ryan\t# number 1\n```\n<!--more-->\n- change password\n```bash\npasswd\t\t\t# for user self\n```\n- login as `root`\n```bash\nsu - root\n```\n- change password for `grace`\n```bash\npasswd grace\n```\n- login as `grace`\n```bash\nsu grace\n```\n- become `root`\n```bash\nsudo su - root\n```\n- set password never expire, must done by root\n```bash\nchage ryan\n\t\n\tMinimum password age:0\n\tMaximum password age:99999\n\tLast password change: enter\n\tExpiration warning: enter\n\tPassword Inactive: enter\n\tAccount expiration date: -1\n```\n\n## File & Directory ##\n\n- check directory size\n```bash\ndu -sh <path>\n```\n- monitor log\n```bash\ntail -100f <file>\n```\n- monitor log and catch specific content\n```bash\ntail -100f <file> | grep \"<content>\"\n```\n- change file modified time\n```\ntouch  -d 20170101 <file>\n```\n- delete files that mtime > 7\n```\nfind $dir -type f -mtime +7 -name '*.txt' -execdir rm -- '{}' \\;\n```\n\t1209-16:32  will delete files before 1201-16:32. Completed data for 7 days from 1202 to 1208\n- copy and move\n```\n[cp / scp / mv] <originFile> <targetFile> / <targetDir>\nscp ryan@IP:~/test.txt ~\n```\n- create file\n```\ntouch <file>\n```\n- remove\n```\nrm <file>\nrm -r <dir> # delete all the files and dirs in this dir (include)\n```\n- count number of files\n```\nfileNumber=`ls -1R <dir> | wc -l`\n```\n- zip and unzip\n```\ngzip <file>\ngunzip *.gz\n```\n- permission\n```\nchmod 755 <file>\n```\n\n## Run Program ##\n- nohup\n```\ncd ~/myApp\nnohup ./runApp.sh &\n```\n\t-1- runApp will be kept running at the background\n\t-2- the output like echo will be put into `~/myApp/nohup.out`\n- job process id\n```\njobPid=\"$(ps -ef | grep ksh | grep runApp.sh | awk '{print $2}')\"\n```\n- kill job\n```\nkill -9 <jobPid>\n```\n- pass parameter\n```\nrunApp.sh xyz\t# so in runApp.sh, $1=\"xyz\"\n```\n\n## Operation ##\n- if else\n```\nif [\"\"=\"\"]; then\n\taction\nelse\n\taction\nfi\n```\n\n## Compile / Build Java Program ##\n```bash\nreleasePath=~/myApp\nbuildPath=$releasePath/application\n~/apache-ant/bin/ant -Dreleasepath=$releasePath -Dbuildpath=$buildPath -Dant.project=<appName> -Dlibpath=$releasePath/lib\n\nstatus=$?\nif [$status -eq 0]; then\n\techo \"compilation is successful..\"\nelse\n\techo \"compilation is unsuccessful..\"\nfi\n```\n\n\n## Others ##\n- press to continue\n```\necho \"Press to continue..\"\nread q\n```\n\n","slug":"Linux-Command","published":1,"updated":"2017-12-09T11:04:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbiug0ig000pvwv4r98hdowi","content":"<h2 id=\"User-amp-Password\"><a href=\"#User-amp-Password\" class=\"headerlink\" title=\"User &amp; Password\"></a>User &amp; Password</h2><p>We have below users and their password:</p>\n<ul>\n<li>root</li>\n<li>ryan (sudoer)</li>\n<li><p>grace<br>Login as ryan:</p>\n</li>\n<li><p>check password expiration</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chage -1 ryan\t<span class=\"comment\"># number 1</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<a id=\"more\"></a>\n<ul>\n<li><p>change password</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwd\t\t\t<span class=\"comment\"># for user self</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>login as <code>root</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su - root</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>change password for <code>grace</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwd grace</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>login as <code>grace</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su grace</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>become <code>root</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su - root</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>set password never expire, must done by root</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chage ryan</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tMinimum password age:0</span><br><span class=\"line\">\tMaximum password age:99999</span><br><span class=\"line\">\tLast password change: enter</span><br><span class=\"line\">\tExpiration warning: enter</span><br><span class=\"line\">\tPassword Inactive: enter</span><br><span class=\"line\">\tAccount expiration date: -1</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"File-amp-Directory\"><a href=\"#File-amp-Directory\" class=\"headerlink\" title=\"File &amp; Directory\"></a>File &amp; Directory</h2><ul>\n<li><p>check directory size</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">du -sh &lt;path&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>monitor log</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tail -100f &lt;file&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>monitor log and catch specific content</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tail -100f &lt;file&gt; | grep <span class=\"string\">\"&lt;content&gt;\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>change file modified time</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch  -d 20170101 &lt;file&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>delete files that mtime &gt; 7</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find $dir -type f -mtime +7 -name &apos;*.txt&apos; -execdir rm -- &apos;&#123;&#125;&apos; \\;</span><br></pre></td></tr></table></figure>\n<p>  1209-16:32  will delete files before 1201-16:32. Completed data for 7 days from 1202 to 1208</p>\n</li>\n<li><p>copy and move</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[cp / scp / mv] &lt;originFile&gt; &lt;targetFile&gt; / &lt;targetDir&gt;</span><br><span class=\"line\">scp ryan@IP:~/test.txt ~</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>create file</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch &lt;file&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>remove</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm &lt;file&gt;</span><br><span class=\"line\">rm -r &lt;dir&gt; # delete all the files and dirs in this dir (include)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>count number of files</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fileNumber=`ls -1R &lt;dir&gt; | wc -l`</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>zip and unzip</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gzip &lt;file&gt;</span><br><span class=\"line\">gunzip *.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>permission</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 755 &lt;file&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Run-Program\"><a href=\"#Run-Program\" class=\"headerlink\" title=\"Run Program\"></a>Run Program</h2><ul>\n<li><p>nohup</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/myApp</span><br><span class=\"line\">nohup ./runApp.sh &amp;</span><br></pre></td></tr></table></figure>\n<p>  -1- runApp will be kept running at the background<br>  -2- the output like echo will be put into <code>~/myApp/nohup.out</code></p>\n</li>\n<li><p>job process id</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jobPid=&quot;$(ps -ef | grep ksh | grep runApp.sh | awk &apos;&#123;print $2&#125;&apos;)&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>kill job</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kill -9 &lt;jobPid&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>pass parameter</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">runApp.sh xyz\t# so in runApp.sh, $1=&quot;xyz&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Operation\"><a href=\"#Operation\" class=\"headerlink\" title=\"Operation\"></a>Operation</h2><ul>\n<li>if else<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [&quot;&quot;=&quot;&quot;]; then</span><br><span class=\"line\">\taction</span><br><span class=\"line\">else</span><br><span class=\"line\">\taction</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Compile-Build-Java-Program\"><a href=\"#Compile-Build-Java-Program\" class=\"headerlink\" title=\"Compile / Build Java Program\"></a>Compile / Build Java Program</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">releasePath=~/myApp</span><br><span class=\"line\">buildPath=<span class=\"variable\">$releasePath</span>/application</span><br><span class=\"line\">~/apache-ant/bin/ant -Dreleasepath=<span class=\"variable\">$releasePath</span> -Dbuildpath=<span class=\"variable\">$buildPath</span> -Dant.project=&lt;appName&gt; -Dlibpath=<span class=\"variable\">$releasePath</span>/lib</span><br><span class=\"line\"></span><br><span class=\"line\">status=$?</span><br><span class=\"line\"><span class=\"keyword\">if</span> [<span class=\"variable\">$status</span> -eq 0]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"compilation is successful..\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"compilation is unsuccessful..\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Others\"><a href=\"#Others\" class=\"headerlink\" title=\"Others\"></a>Others</h2><ul>\n<li>press to continue<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;Press to continue..&quot;</span><br><span class=\"line\">read q</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h2 id=\"User-amp-Password\"><a href=\"#User-amp-Password\" class=\"headerlink\" title=\"User &amp; Password\"></a>User &amp; Password</h2><p>We have below users and their password:</p>\n<ul>\n<li>root</li>\n<li>ryan (sudoer)</li>\n<li><p>grace<br>Login as ryan:</p>\n</li>\n<li><p>check password expiration</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chage -1 ryan\t<span class=\"comment\"># number 1</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>","more":"<ul>\n<li><p>change password</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwd\t\t\t<span class=\"comment\"># for user self</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>login as <code>root</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su - root</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>change password for <code>grace</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwd grace</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>login as <code>grace</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su grace</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>become <code>root</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su - root</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>set password never expire, must done by root</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chage ryan</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tMinimum password age:0</span><br><span class=\"line\">\tMaximum password age:99999</span><br><span class=\"line\">\tLast password change: enter</span><br><span class=\"line\">\tExpiration warning: enter</span><br><span class=\"line\">\tPassword Inactive: enter</span><br><span class=\"line\">\tAccount expiration date: -1</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"File-amp-Directory\"><a href=\"#File-amp-Directory\" class=\"headerlink\" title=\"File &amp; Directory\"></a>File &amp; Directory</h2><ul>\n<li><p>check directory size</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">du -sh &lt;path&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>monitor log</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tail -100f &lt;file&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>monitor log and catch specific content</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tail -100f &lt;file&gt; | grep <span class=\"string\">\"&lt;content&gt;\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>change file modified time</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch  -d 20170101 &lt;file&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>delete files that mtime &gt; 7</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find $dir -type f -mtime +7 -name &apos;*.txt&apos; -execdir rm -- &apos;&#123;&#125;&apos; \\;</span><br></pre></td></tr></table></figure>\n<p>  1209-16:32  will delete files before 1201-16:32. Completed data for 7 days from 1202 to 1208</p>\n</li>\n<li><p>copy and move</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[cp / scp / mv] &lt;originFile&gt; &lt;targetFile&gt; / &lt;targetDir&gt;</span><br><span class=\"line\">scp ryan@IP:~/test.txt ~</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>create file</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch &lt;file&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>remove</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm &lt;file&gt;</span><br><span class=\"line\">rm -r &lt;dir&gt; # delete all the files and dirs in this dir (include)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>count number of files</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fileNumber=`ls -1R &lt;dir&gt; | wc -l`</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>zip and unzip</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gzip &lt;file&gt;</span><br><span class=\"line\">gunzip *.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>permission</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 755 &lt;file&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Run-Program\"><a href=\"#Run-Program\" class=\"headerlink\" title=\"Run Program\"></a>Run Program</h2><ul>\n<li><p>nohup</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/myApp</span><br><span class=\"line\">nohup ./runApp.sh &amp;</span><br></pre></td></tr></table></figure>\n<p>  -1- runApp will be kept running at the background<br>  -2- the output like echo will be put into <code>~/myApp/nohup.out</code></p>\n</li>\n<li><p>job process id</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jobPid=&quot;$(ps -ef | grep ksh | grep runApp.sh | awk &apos;&#123;print $2&#125;&apos;)&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>kill job</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kill -9 &lt;jobPid&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>pass parameter</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">runApp.sh xyz\t# so in runApp.sh, $1=&quot;xyz&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Operation\"><a href=\"#Operation\" class=\"headerlink\" title=\"Operation\"></a>Operation</h2><ul>\n<li>if else<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [&quot;&quot;=&quot;&quot;]; then</span><br><span class=\"line\">\taction</span><br><span class=\"line\">else</span><br><span class=\"line\">\taction</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Compile-Build-Java-Program\"><a href=\"#Compile-Build-Java-Program\" class=\"headerlink\" title=\"Compile / Build Java Program\"></a>Compile / Build Java Program</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">releasePath=~/myApp</span><br><span class=\"line\">buildPath=<span class=\"variable\">$releasePath</span>/application</span><br><span class=\"line\">~/apache-ant/bin/ant -Dreleasepath=<span class=\"variable\">$releasePath</span> -Dbuildpath=<span class=\"variable\">$buildPath</span> -Dant.project=&lt;appName&gt; -Dlibpath=<span class=\"variable\">$releasePath</span>/lib</span><br><span class=\"line\"></span><br><span class=\"line\">status=$?</span><br><span class=\"line\"><span class=\"keyword\">if</span> [<span class=\"variable\">$status</span> -eq 0]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"compilation is successful..\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"compilation is unsuccessful..\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Others\"><a href=\"#Others\" class=\"headerlink\" title=\"Others\"></a>Others</h2><ul>\n<li>press to continue<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;Press to continue..&quot;</span><br><span class=\"line\">read q</span><br></pre></td></tr></table></figure>\n</li>\n</ul>"},{"title":"Hello World","date":"2017-11-23T16:00:00.000Z","_content":"\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n<!--more-->\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n\n## Anything ##\n\n### Log ###\n\n- Create Hexo blog\n- Change to Next\n- Add photo\n- Add social link\n- Add About, Tags and Categories\n- Add gitment\n- Add copyright post\n- Add donate\n- Add Commonweal 404\n\n### toDo ###\n\n### Doing ###\n- Pro Git\n\n\n### Done ###\n\n## Tips for blog ##\n\n### Read more >> ###\n\nFrom: http://www.jianshu.com/p/c07ccdfba068\n\n\tcategories: blog #文章文类\n\ttags: [博客，文章] #文章标签，只有一项时 tags: blog\n\t---\n\t\n\t这段文字会显示在首页。\n\t<!--more-->\n\t这些内容会被隐藏，点击 Read more 才能看到。\n\n### Code ###\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\n```\n$ hexo new \"My New Post\"\n```\n\n    $ hexo new \"My New Post\"\n\n\n\n\n\n\n### ZA WU ###\n---\ntitle: \"RESTful Web Service with AngularJS\"\ndate: 2017-12-17 22:10:18\ncategories: Rest\ntags: [Rest, Web Service, AngularJS, Spring]\n---\n\n[Building a RESTful Web Service](https://spring.io/guides/gs/rest-service/)\n\n[Building REST services with Spring](https://spring.io/guides/tutorials/bookmarks/)\n\n[Understanding REST](https://spring.io/understanding/REST)\n\n[Consuming a RESTful Web Service with AngularJS](https://spring.io/guides/gs/consuming-rest-angularjs/)\n\n[使用Spring Boot和Gradle创建AngularJS项目](http://blog.javachen.com/2015/01/06/build-app-with-spring-boot-and-gradle.html)\n\n\n# Spring Boot & AngularJS\n\nReference: [使用Spring Boot和Gradle创建AngularJS项目](http://blog.javachen.com/2015/01/06/build-app-with-spring-boot-and-gradle.html)\n\n1. Generate Project\n\t- http://start.spring.io/\n\t- GroupId: com.demo\n\t- Artifact: ng-spring-boot\n\nStructure:\n![Project Structure](/images/ngspringboot-structure.png)\n\n修改 main 方法，获取 ApplicationContext 信息。\n\n\n====\nTemp:\n\nTake from ZhiHu, will delete soon.\n\nURL定位资源，用HTTP动词（GET,POST,DELETE,DETC）描述操作。\n\n1. REST描述的是在网络中client和server的一种交互形式\n\n2. Server 提供的 RESTful API中，URL中只使用名词来指定资源，原则上不使用动词。\n“资源”是REST架构或者说整个网络处理的核心。\n比如：\nhttp://api.qc.com/v1/newsfeed: 获取某人的新鲜; \nhttp://api.qc.com/v1/friends: 获取某人的好友列表;\nhttp://api.qc.com/v1/profile: 获取某人的详细信息;\n\n\n3. 用HTTP协议里的动词来实现资源的添加，修改，删除等操作。\n\n即通过HTTP动词来实现资源的状态扭转：\nGET 用来获取资源\nPOST 用来新建资源（也可以用于更新资源）\nPUT 用来更新资源，DELETE 用来删除资源\n\n比如：\nGET /products : will return the list of all products\nPOST /products : will add a product to the collection\nGET /products/4 : will retrieve product #4\nPUT /products/4 : will update product #4\n\n4. Server和Client之间传递某资源的一个表现形式，\n比如用JSON，XML传输文本，或者用JPG，WebP传输图片等。当然还可以压缩HTTP传输时的数据（on-wire data compression）。\n\n5. 用 HTTP Status Code传递Server的状态信息。\n比如最常用的 200 表示成功，500 表示Server内部错误等。\n\nWeb端和Server只使用上述定义的API来传递数据和改变数据状态。\n格式一般是JSON。\n\n\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2017-11-24 00:00:00\ncategories: Note\n---\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n<!--more-->\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n\n## Anything ##\n\n### Log ###\n\n- Create Hexo blog\n- Change to Next\n- Add photo\n- Add social link\n- Add About, Tags and Categories\n- Add gitment\n- Add copyright post\n- Add donate\n- Add Commonweal 404\n\n### toDo ###\n\n### Doing ###\n- Pro Git\n\n\n### Done ###\n\n## Tips for blog ##\n\n### Read more >> ###\n\nFrom: http://www.jianshu.com/p/c07ccdfba068\n\n\tcategories: blog #文章文类\n\ttags: [博客，文章] #文章标签，只有一项时 tags: blog\n\t---\n\t\n\t这段文字会显示在首页。\n\t<!--more-->\n\t这些内容会被隐藏，点击 Read more 才能看到。\n\n### Code ###\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\n```\n$ hexo new \"My New Post\"\n```\n\n    $ hexo new \"My New Post\"\n\n\n\n\n\n\n### ZA WU ###\n---\ntitle: \"RESTful Web Service with AngularJS\"\ndate: 2017-12-17 22:10:18\ncategories: Rest\ntags: [Rest, Web Service, AngularJS, Spring]\n---\n\n[Building a RESTful Web Service](https://spring.io/guides/gs/rest-service/)\n\n[Building REST services with Spring](https://spring.io/guides/tutorials/bookmarks/)\n\n[Understanding REST](https://spring.io/understanding/REST)\n\n[Consuming a RESTful Web Service with AngularJS](https://spring.io/guides/gs/consuming-rest-angularjs/)\n\n[使用Spring Boot和Gradle创建AngularJS项目](http://blog.javachen.com/2015/01/06/build-app-with-spring-boot-and-gradle.html)\n\n\n# Spring Boot & AngularJS\n\nReference: [使用Spring Boot和Gradle创建AngularJS项目](http://blog.javachen.com/2015/01/06/build-app-with-spring-boot-and-gradle.html)\n\n1. Generate Project\n\t- http://start.spring.io/\n\t- GroupId: com.demo\n\t- Artifact: ng-spring-boot\n\nStructure:\n![Project Structure](/images/ngspringboot-structure.png)\n\n修改 main 方法，获取 ApplicationContext 信息。\n\n\n====\nTemp:\n\nTake from ZhiHu, will delete soon.\n\nURL定位资源，用HTTP动词（GET,POST,DELETE,DETC）描述操作。\n\n1. REST描述的是在网络中client和server的一种交互形式\n\n2. Server 提供的 RESTful API中，URL中只使用名词来指定资源，原则上不使用动词。\n“资源”是REST架构或者说整个网络处理的核心。\n比如：\nhttp://api.qc.com/v1/newsfeed: 获取某人的新鲜; \nhttp://api.qc.com/v1/friends: 获取某人的好友列表;\nhttp://api.qc.com/v1/profile: 获取某人的详细信息;\n\n\n3. 用HTTP协议里的动词来实现资源的添加，修改，删除等操作。\n\n即通过HTTP动词来实现资源的状态扭转：\nGET 用来获取资源\nPOST 用来新建资源（也可以用于更新资源）\nPUT 用来更新资源，DELETE 用来删除资源\n\n比如：\nGET /products : will return the list of all products\nPOST /products : will add a product to the collection\nGET /products/4 : will retrieve product #4\nPUT /products/4 : will update product #4\n\n4. Server和Client之间传递某资源的一个表现形式，\n比如用JSON，XML传输文本，或者用JPG，WebP传输图片等。当然还可以压缩HTTP传输时的数据（on-wire data compression）。\n\n5. 用 HTTP Status Code传递Server的状态信息。\n比如最常用的 200 表示成功，500 表示Server内部错误等。\n\nWeb端和Server只使用上述定义的API来传递数据和改变数据状态。\n格式一般是JSON。\n\n\n","slug":"hello-world","published":1,"updated":"2017-12-22T09:04:15.606Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbiug0ih000tvwv4lk3cq2j7","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><a id=\"more\"></a>\n<h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<h2 id=\"Anything\"><a href=\"#Anything\" class=\"headerlink\" title=\"Anything\"></a>Anything</h2><h3 id=\"Log\"><a href=\"#Log\" class=\"headerlink\" title=\"Log\"></a>Log</h3><ul>\n<li>Create Hexo blog</li>\n<li>Change to Next</li>\n<li>Add photo</li>\n<li>Add social link</li>\n<li>Add About, Tags and Categories</li>\n<li>Add gitment</li>\n<li>Add copyright post</li>\n<li>Add donate</li>\n<li>Add Commonweal 404</li>\n</ul>\n<h3 id=\"toDo\"><a href=\"#toDo\" class=\"headerlink\" title=\"toDo\"></a>toDo</h3><h3 id=\"Doing\"><a href=\"#Doing\" class=\"headerlink\" title=\"Doing\"></a>Doing</h3><ul>\n<li>Pro Git</li>\n</ul>\n<h3 id=\"Done\"><a href=\"#Done\" class=\"headerlink\" title=\"Done\"></a>Done</h3><h2 id=\"Tips-for-blog\"><a href=\"#Tips-for-blog\" class=\"headerlink\" title=\"Tips for blog\"></a>Tips for blog</h2><h3 id=\"Read-more-gt-gt\"><a href=\"#Read-more-gt-gt\" class=\"headerlink\" title=\"Read more &gt;&gt;\"></a>Read more &gt;&gt;</h3><p>From: <a href=\"http://www.jianshu.com/p/c07ccdfba068\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/c07ccdfba068</a></p>\n<pre><code>categories: blog #文章文类\ntags: [博客，文章] #文章标签，只有一项时 tags: blog\n---\n\n这段文字会显示在首页。\n&lt;!--more--&gt;\n这些内容会被隐藏，点击 Read more 才能看到。\n</code></pre><h3 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new &quot;My New Post&quot;</span><br></pre></td></tr></table></figure>\n<pre><code>$ hexo new &quot;My New Post&quot;\n</code></pre><h3 id=\"ZA-WU\"><a href=\"#ZA-WU\" class=\"headerlink\" title=\"ZA WU\"></a>ZA WU</h3><hr>\n<p>title: “RESTful Web Service with AngularJS”<br>date: 2017-12-17 22:10:18<br>categories: Rest</p>\n<h2 id=\"tags-Rest-Web-Service-AngularJS-Spring\"><a href=\"#tags-Rest-Web-Service-AngularJS-Spring\" class=\"headerlink\" title=\"tags: [Rest, Web Service, AngularJS, Spring]\"></a>tags: [Rest, Web Service, AngularJS, Spring]</h2><p><a href=\"https://spring.io/guides/gs/rest-service/\" target=\"_blank\" rel=\"noopener\">Building a RESTful Web Service</a></p>\n<p><a href=\"https://spring.io/guides/tutorials/bookmarks/\" target=\"_blank\" rel=\"noopener\">Building REST services with Spring</a></p>\n<p><a href=\"https://spring.io/understanding/REST\" target=\"_blank\" rel=\"noopener\">Understanding REST</a></p>\n<p><a href=\"https://spring.io/guides/gs/consuming-rest-angularjs/\" target=\"_blank\" rel=\"noopener\">Consuming a RESTful Web Service with AngularJS</a></p>\n<p><a href=\"http://blog.javachen.com/2015/01/06/build-app-with-spring-boot-and-gradle.html\" target=\"_blank\" rel=\"noopener\">使用Spring Boot和Gradle创建AngularJS项目</a></p>\n<h1 id=\"Spring-Boot-amp-AngularJS\"><a href=\"#Spring-Boot-amp-AngularJS\" class=\"headerlink\" title=\"Spring Boot &amp; AngularJS\"></a>Spring Boot &amp; AngularJS</h1><p>Reference: <a href=\"http://blog.javachen.com/2015/01/06/build-app-with-spring-boot-and-gradle.html\" target=\"_blank\" rel=\"noopener\">使用Spring Boot和Gradle创建AngularJS项目</a></p>\n<ol>\n<li>Generate Project<ul>\n<li><a href=\"http://start.spring.io/\" target=\"_blank\" rel=\"noopener\">http://start.spring.io/</a></li>\n<li>GroupId: com.demo</li>\n<li>Artifact: ng-spring-boot</li>\n</ul>\n</li>\n</ol>\n<p>Structure:<br><img src=\"/images/ngspringboot-structure.png\" alt=\"Project Structure\"></p>\n<p>修改 main 方法，获取 ApplicationContext 信息。</p>\n<p>====<br>Temp:</p>\n<p>Take from ZhiHu, will delete soon.</p>\n<p>URL定位资源，用HTTP动词（GET,POST,DELETE,DETC）描述操作。</p>\n<ol>\n<li><p>REST描述的是在网络中client和server的一种交互形式</p>\n</li>\n<li><p>Server 提供的 RESTful API中，URL中只使用名词来指定资源，原则上不使用动词。<br>“资源”是REST架构或者说整个网络处理的核心。<br>比如：<br><a href=\"http://api.qc.com/v1/newsfeed\" target=\"_blank\" rel=\"noopener\">http://api.qc.com/v1/newsfeed</a>: 获取某人的新鲜;<br><a href=\"http://api.qc.com/v1/friends\" target=\"_blank\" rel=\"noopener\">http://api.qc.com/v1/friends</a>: 获取某人的好友列表;<br><a href=\"http://api.qc.com/v1/profile\" target=\"_blank\" rel=\"noopener\">http://api.qc.com/v1/profile</a>: 获取某人的详细信息;</p>\n</li>\n</ol>\n<ol>\n<li>用HTTP协议里的动词来实现资源的添加，修改，删除等操作。</li>\n</ol>\n<p>即通过HTTP动词来实现资源的状态扭转：<br>GET 用来获取资源<br>POST 用来新建资源（也可以用于更新资源）<br>PUT 用来更新资源，DELETE 用来删除资源</p>\n<p>比如：<br>GET /products : will return the list of all products<br>POST /products : will add a product to the collection<br>GET /products/4 : will retrieve product #4<br>PUT /products/4 : will update product #4</p>\n<ol>\n<li><p>Server和Client之间传递某资源的一个表现形式，<br>比如用JSON，XML传输文本，或者用JPG，WebP传输图片等。当然还可以压缩HTTP传输时的数据（on-wire data compression）。</p>\n</li>\n<li><p>用 HTTP Status Code传递Server的状态信息。<br>比如最常用的 200 表示成功，500 表示Server内部错误等。</p>\n</li>\n</ol>\n<p>Web端和Server只使用上述定义的API来传递数据和改变数据状态。<br>格式一般是JSON。</p>\n","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2>","more":"<h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<h2 id=\"Anything\"><a href=\"#Anything\" class=\"headerlink\" title=\"Anything\"></a>Anything</h2><h3 id=\"Log\"><a href=\"#Log\" class=\"headerlink\" title=\"Log\"></a>Log</h3><ul>\n<li>Create Hexo blog</li>\n<li>Change to Next</li>\n<li>Add photo</li>\n<li>Add social link</li>\n<li>Add About, Tags and Categories</li>\n<li>Add gitment</li>\n<li>Add copyright post</li>\n<li>Add donate</li>\n<li>Add Commonweal 404</li>\n</ul>\n<h3 id=\"toDo\"><a href=\"#toDo\" class=\"headerlink\" title=\"toDo\"></a>toDo</h3><h3 id=\"Doing\"><a href=\"#Doing\" class=\"headerlink\" title=\"Doing\"></a>Doing</h3><ul>\n<li>Pro Git</li>\n</ul>\n<h3 id=\"Done\"><a href=\"#Done\" class=\"headerlink\" title=\"Done\"></a>Done</h3><h2 id=\"Tips-for-blog\"><a href=\"#Tips-for-blog\" class=\"headerlink\" title=\"Tips for blog\"></a>Tips for blog</h2><h3 id=\"Read-more-gt-gt\"><a href=\"#Read-more-gt-gt\" class=\"headerlink\" title=\"Read more &gt;&gt;\"></a>Read more &gt;&gt;</h3><p>From: <a href=\"http://www.jianshu.com/p/c07ccdfba068\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/c07ccdfba068</a></p>\n<pre><code>categories: blog #文章文类\ntags: [博客，文章] #文章标签，只有一项时 tags: blog\n---\n\n这段文字会显示在首页。\n&lt;!--more--&gt;\n这些内容会被隐藏，点击 Read more 才能看到。\n</code></pre><h3 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new &quot;My New Post&quot;</span><br></pre></td></tr></table></figure>\n<pre><code>$ hexo new &quot;My New Post&quot;\n</code></pre><h3 id=\"ZA-WU\"><a href=\"#ZA-WU\" class=\"headerlink\" title=\"ZA WU\"></a>ZA WU</h3><hr>\n<p>title: “RESTful Web Service with AngularJS”<br>date: 2017-12-17 22:10:18<br>categories: Rest</p>\n<h2 id=\"tags-Rest-Web-Service-AngularJS-Spring\"><a href=\"#tags-Rest-Web-Service-AngularJS-Spring\" class=\"headerlink\" title=\"tags: [Rest, Web Service, AngularJS, Spring]\"></a>tags: [Rest, Web Service, AngularJS, Spring]</h2><p><a href=\"https://spring.io/guides/gs/rest-service/\" target=\"_blank\" rel=\"noopener\">Building a RESTful Web Service</a></p>\n<p><a href=\"https://spring.io/guides/tutorials/bookmarks/\" target=\"_blank\" rel=\"noopener\">Building REST services with Spring</a></p>\n<p><a href=\"https://spring.io/understanding/REST\" target=\"_blank\" rel=\"noopener\">Understanding REST</a></p>\n<p><a href=\"https://spring.io/guides/gs/consuming-rest-angularjs/\" target=\"_blank\" rel=\"noopener\">Consuming a RESTful Web Service with AngularJS</a></p>\n<p><a href=\"http://blog.javachen.com/2015/01/06/build-app-with-spring-boot-and-gradle.html\" target=\"_blank\" rel=\"noopener\">使用Spring Boot和Gradle创建AngularJS项目</a></p>\n<h1 id=\"Spring-Boot-amp-AngularJS\"><a href=\"#Spring-Boot-amp-AngularJS\" class=\"headerlink\" title=\"Spring Boot &amp; AngularJS\"></a>Spring Boot &amp; AngularJS</h1><p>Reference: <a href=\"http://blog.javachen.com/2015/01/06/build-app-with-spring-boot-and-gradle.html\" target=\"_blank\" rel=\"noopener\">使用Spring Boot和Gradle创建AngularJS项目</a></p>\n<ol>\n<li>Generate Project<ul>\n<li><a href=\"http://start.spring.io/\" target=\"_blank\" rel=\"noopener\">http://start.spring.io/</a></li>\n<li>GroupId: com.demo</li>\n<li>Artifact: ng-spring-boot</li>\n</ul>\n</li>\n</ol>\n<p>Structure:<br><img src=\"/images/ngspringboot-structure.png\" alt=\"Project Structure\"></p>\n<p>修改 main 方法，获取 ApplicationContext 信息。</p>\n<p>====<br>Temp:</p>\n<p>Take from ZhiHu, will delete soon.</p>\n<p>URL定位资源，用HTTP动词（GET,POST,DELETE,DETC）描述操作。</p>\n<ol>\n<li><p>REST描述的是在网络中client和server的一种交互形式</p>\n</li>\n<li><p>Server 提供的 RESTful API中，URL中只使用名词来指定资源，原则上不使用动词。<br>“资源”是REST架构或者说整个网络处理的核心。<br>比如：<br><a href=\"http://api.qc.com/v1/newsfeed\" target=\"_blank\" rel=\"noopener\">http://api.qc.com/v1/newsfeed</a>: 获取某人的新鲜;<br><a href=\"http://api.qc.com/v1/friends\" target=\"_blank\" rel=\"noopener\">http://api.qc.com/v1/friends</a>: 获取某人的好友列表;<br><a href=\"http://api.qc.com/v1/profile\" target=\"_blank\" rel=\"noopener\">http://api.qc.com/v1/profile</a>: 获取某人的详细信息;</p>\n</li>\n</ol>\n<ol>\n<li>用HTTP协议里的动词来实现资源的添加，修改，删除等操作。</li>\n</ol>\n<p>即通过HTTP动词来实现资源的状态扭转：<br>GET 用来获取资源<br>POST 用来新建资源（也可以用于更新资源）<br>PUT 用来更新资源，DELETE 用来删除资源</p>\n<p>比如：<br>GET /products : will return the list of all products<br>POST /products : will add a product to the collection<br>GET /products/4 : will retrieve product #4<br>PUT /products/4 : will update product #4</p>\n<ol>\n<li><p>Server和Client之间传递某资源的一个表现形式，<br>比如用JSON，XML传输文本，或者用JPG，WebP传输图片等。当然还可以压缩HTTP传输时的数据（on-wire data compression）。</p>\n</li>\n<li><p>用 HTTP Status Code传递Server的状态信息。<br>比如最常用的 200 表示成功，500 表示Server内部错误等。</p>\n</li>\n</ol>\n<p>Web端和Server只使用上述定义的API来传递数据和改变数据状态。<br>格式一般是JSON。</p>"},{"title":"用 Hexo 和 GitHub Pages 搭建博客","date":"2017-11-23T16:50:05.000Z","_content":"\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n搭建这个博客走了许多弯路。在这里分享总结之后的思路和简化步骤。\n\n- Github Pages\n- Hexo 博客框架\n- 部署\n- Next 主题\n\n## Github Pages ##\n\nGithub Pages 其实本身就是 Github 提供的博客服务。 我们在 Github 中创建一个特定格式的 Repository，Github Pages 就会将里面的信息生成一个网页，展示出来。\n\n**操作如下：**\n<!--more-->\n\n1. 注册 Github 账号，然后在 Github 中创建一个以 .github.io 结尾的 Repository。 \n\t1. Repository name: ryanluoxu.github.io\n\t2. 勾选 Initialize this repository with a README\n\t3. Create repository\n2.  简单地编辑一下 README.md 这个文档。 比如添加：I am trying to create my own blog.. 保存(Commit changes)。\n3.  打开网页：ryanluoxu.github.io 这里就可以看到 README.md 里的内容了。\n\n如果没有太多的要求，其实直接用 README.md 来写博客也是不错的。 \n\n这个生成好的 Repository 就是用来存放博客内容的地方，也只有这个仓库里的内容，才会被 ryanluoxu.github.io 这个网页显示出来。 \n\n## Hexo ##\n\nHexo 是一个博客框架。它把本地文件里的信息生成一个网页。如果不需要放在网上给别人看，就没 Github Pages 什么事了。\n\n使用 Hexo 之前，需要先安装 Node.js 和 Git。\n\n**操作如下：**\n\n1. 安装 Node.js\n\t- 前往 https://nodejs.org/en/\n\t- 点击 8.9.1 LTS 下载\n\t- 安装\n\t- 打开 Command Prompt， 输入 `node -v`\n\t- 得到：v8.9.1\n\n\t安装成功\t\n\t\n2. 安装 Git\n\t- 前往 https://git-scm.com/\n\t- 点击 Downloads\n\t- 点击 Windows\n\t- 一般情况，下载会自动开始。如果没有，就点击 click here to download manually\n\t- 安装\n\t- 打开 Command Prompt， 输入 `git --version`\n\t- 得到：git version 2.15.0.windows.1\n\t\n\t安装成功\n\t\n\t额外说明：如果 Git --version 指令不管用，可能需要到 Environment Variable 那里添加 Path。\n\t\t\n3. 安装 Hexo \n\t- 打开 Command Prompt\n\t- 输入 `npm install -g hexo-cli`\n\t- 回车开始安装\n\t- 输入 `hexo -v` \n\t- 得到 hexo-cli: 1.0.4 等一串数据\n\n\t安装成功\n\n4. 创建本地博客\n\t- 在D盘下创建文件夹 blog\n\t- 鼠标右键 blog，选择 Git Bash Here。 如果没有安装 Git，就不会有这个选项。\n\t- Git Bash 打开之后，所在的位置就是 blog 这个文件夹的位置。（/d/blog）\n\t- 输入 `hexo init` 将 blog 文件夹初始化成一个博客文件夹。\n\t- 输入 `npm install` 安装依赖包。\n\t- 输入 `hexo g` 生成（generate）网页。 由于我们还没创建任何博客，生成的网页会展示 Hexo 里面自带了一个 Hello World 的博客。\n\t- 输入 `hexo s` 将生成的网页放在了本地服务器（server）。  \n\t- 浏览器里输入 http://localhost:4000/ 。 就可以看到刚才的成果了。\n\t- 回到 Git Bash，按 Ctrl+C 结束。\n\n\t此时再看 http://localhost:4000/ 就是无法访问了。\n\n5. 发布一篇博客\n\t- 继续在 Git Bash 里，所在路径还是 /d/blog。输入 `hexo new \"My First Post\"`\n\t- 在 D:\\blog\\source\\_posts 路径下，会有一个 My-First-Post.md 的文件。 编辑这个文件，然后保存。\n\t- 回到 Git Bash，输入 `hexo g`\n\t- 输入 `hexo s`\n\t- 前往 http://localhost:4000/ 查看成果。\n\t- 回到 Git Bash，按 Ctrl+C 结束。\n\n## 将本地 Hexo 博客部署在 Github 上 ##\n\n前面两个部分，我们已经有了本地博客，和一个能托管这些资料的线上仓库。只要把本地博客部署（deploy）在我们的 Github 对应的 Repository 就可以了。 \n\n**操作如下：**\n\n1. 获取 Github 对应的 Repository 的链接。\n\t- 登陆 Github，进入到 ryanluoxu.github.io\n\t- 点击 Clone or download\n\t- 复制 URL 待用\n\n\t我的是 `https://github.com/Ryanluoxu/ryanluoxu.github.io.git`\n\n2. 修改博客的配置文件 \n\t- 打开配置文件 /d/blog/_config.yml （使用 bash 里的 vi 或者 notepad++）\n\t- 找到 `#Deployment`，填入以下内容：\n```\ndeploy:  \n\t  type: git  \n\t  repository: https://github.com/Ryanluoxu/ryanluoxu.github.io.git  \n\t  branch: master \n```\n3. 部署\n\t- 回到 Git Bash\n\t- 输入 `npm install hexo-deployer-git --save` 安装 hexo-deployer-git 此步骤只需要做一次。\n\t- 输入 `hexo d`\n\t- 得到 `INFO  Deploy done: git` 即为部署成功\n\n\t之前我们创建的 ReadMe.md 会被自动覆盖掉。\n\n4. 查看成果\n\t\n\t前往 ryanluoxu.github.io 即可。\n\n\n## 使用 Next 主题 ##\n\n[更多 Hexo 的主题看这里](https://hexo.io/themes/)  \n\n这里以 Next 为例。 大概思路就是把整个主题的文件克隆到我们的主题文件夹中。在配置文件中注明使用该主题。\n\n**操作如下：**\n\n1. 还是回到 Git Bash。 输入 `git clone https://github.com/iissnan/hexo-theme-next themes/next`\n\n\t这样，该主题的文件就全部克隆到 D:\\blog\\themes\\next 下面。\n\n2. 修改博客配置文件\n\t- 打开 D:\\blog\\_config.yml\n\t- 找到 `theme:` \n\t- 把 Hexo 默认的 lanscape 修改成 next。 即 `theme: next`\n\t- 找到 `# Site`，添加博客名称，作者名字等。\n\t- 在 `language` 后面填入 en 或者 zh-Hans，选择英文或者中文。\n\t- 找到 `# URL`, 填入 url。比如 `url: https://ryanluoxu.github.io`\n\t\n\t填入名字后会有很风骚的 © 2017  Ryan Luo Xu 的字样出现在博客底部。\n      \n3. 重新生成部署即可\n\t- 回到 Git Bash。输入 `hexo g -d`就可以了。\n\n\t先把修改的内容生成网页，再部署。\n\n4. 查看成果\n\t\n\t前往 ryanluoxu.github.io 即可。\n\n\n","source":"_posts/用-Hexo-和-GitHub-Pages-搭建博客.md","raw":"---\ntitle: 用 Hexo 和 GitHub Pages 搭建博客\ndate: 2017-11-24 00:50:05\ncategories: 搭建博客\ntags: [Hexo, GitHub Pages, 博客, next]\n---\n\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n搭建这个博客走了许多弯路。在这里分享总结之后的思路和简化步骤。\n\n- Github Pages\n- Hexo 博客框架\n- 部署\n- Next 主题\n\n## Github Pages ##\n\nGithub Pages 其实本身就是 Github 提供的博客服务。 我们在 Github 中创建一个特定格式的 Repository，Github Pages 就会将里面的信息生成一个网页，展示出来。\n\n**操作如下：**\n<!--more-->\n\n1. 注册 Github 账号，然后在 Github 中创建一个以 .github.io 结尾的 Repository。 \n\t1. Repository name: ryanluoxu.github.io\n\t2. 勾选 Initialize this repository with a README\n\t3. Create repository\n2.  简单地编辑一下 README.md 这个文档。 比如添加：I am trying to create my own blog.. 保存(Commit changes)。\n3.  打开网页：ryanluoxu.github.io 这里就可以看到 README.md 里的内容了。\n\n如果没有太多的要求，其实直接用 README.md 来写博客也是不错的。 \n\n这个生成好的 Repository 就是用来存放博客内容的地方，也只有这个仓库里的内容，才会被 ryanluoxu.github.io 这个网页显示出来。 \n\n## Hexo ##\n\nHexo 是一个博客框架。它把本地文件里的信息生成一个网页。如果不需要放在网上给别人看，就没 Github Pages 什么事了。\n\n使用 Hexo 之前，需要先安装 Node.js 和 Git。\n\n**操作如下：**\n\n1. 安装 Node.js\n\t- 前往 https://nodejs.org/en/\n\t- 点击 8.9.1 LTS 下载\n\t- 安装\n\t- 打开 Command Prompt， 输入 `node -v`\n\t- 得到：v8.9.1\n\n\t安装成功\t\n\t\n2. 安装 Git\n\t- 前往 https://git-scm.com/\n\t- 点击 Downloads\n\t- 点击 Windows\n\t- 一般情况，下载会自动开始。如果没有，就点击 click here to download manually\n\t- 安装\n\t- 打开 Command Prompt， 输入 `git --version`\n\t- 得到：git version 2.15.0.windows.1\n\t\n\t安装成功\n\t\n\t额外说明：如果 Git --version 指令不管用，可能需要到 Environment Variable 那里添加 Path。\n\t\t\n3. 安装 Hexo \n\t- 打开 Command Prompt\n\t- 输入 `npm install -g hexo-cli`\n\t- 回车开始安装\n\t- 输入 `hexo -v` \n\t- 得到 hexo-cli: 1.0.4 等一串数据\n\n\t安装成功\n\n4. 创建本地博客\n\t- 在D盘下创建文件夹 blog\n\t- 鼠标右键 blog，选择 Git Bash Here。 如果没有安装 Git，就不会有这个选项。\n\t- Git Bash 打开之后，所在的位置就是 blog 这个文件夹的位置。（/d/blog）\n\t- 输入 `hexo init` 将 blog 文件夹初始化成一个博客文件夹。\n\t- 输入 `npm install` 安装依赖包。\n\t- 输入 `hexo g` 生成（generate）网页。 由于我们还没创建任何博客，生成的网页会展示 Hexo 里面自带了一个 Hello World 的博客。\n\t- 输入 `hexo s` 将生成的网页放在了本地服务器（server）。  \n\t- 浏览器里输入 http://localhost:4000/ 。 就可以看到刚才的成果了。\n\t- 回到 Git Bash，按 Ctrl+C 结束。\n\n\t此时再看 http://localhost:4000/ 就是无法访问了。\n\n5. 发布一篇博客\n\t- 继续在 Git Bash 里，所在路径还是 /d/blog。输入 `hexo new \"My First Post\"`\n\t- 在 D:\\blog\\source\\_posts 路径下，会有一个 My-First-Post.md 的文件。 编辑这个文件，然后保存。\n\t- 回到 Git Bash，输入 `hexo g`\n\t- 输入 `hexo s`\n\t- 前往 http://localhost:4000/ 查看成果。\n\t- 回到 Git Bash，按 Ctrl+C 结束。\n\n## 将本地 Hexo 博客部署在 Github 上 ##\n\n前面两个部分，我们已经有了本地博客，和一个能托管这些资料的线上仓库。只要把本地博客部署（deploy）在我们的 Github 对应的 Repository 就可以了。 \n\n**操作如下：**\n\n1. 获取 Github 对应的 Repository 的链接。\n\t- 登陆 Github，进入到 ryanluoxu.github.io\n\t- 点击 Clone or download\n\t- 复制 URL 待用\n\n\t我的是 `https://github.com/Ryanluoxu/ryanluoxu.github.io.git`\n\n2. 修改博客的配置文件 \n\t- 打开配置文件 /d/blog/_config.yml （使用 bash 里的 vi 或者 notepad++）\n\t- 找到 `#Deployment`，填入以下内容：\n```\ndeploy:  \n\t  type: git  \n\t  repository: https://github.com/Ryanluoxu/ryanluoxu.github.io.git  \n\t  branch: master \n```\n3. 部署\n\t- 回到 Git Bash\n\t- 输入 `npm install hexo-deployer-git --save` 安装 hexo-deployer-git 此步骤只需要做一次。\n\t- 输入 `hexo d`\n\t- 得到 `INFO  Deploy done: git` 即为部署成功\n\n\t之前我们创建的 ReadMe.md 会被自动覆盖掉。\n\n4. 查看成果\n\t\n\t前往 ryanluoxu.github.io 即可。\n\n\n## 使用 Next 主题 ##\n\n[更多 Hexo 的主题看这里](https://hexo.io/themes/)  \n\n这里以 Next 为例。 大概思路就是把整个主题的文件克隆到我们的主题文件夹中。在配置文件中注明使用该主题。\n\n**操作如下：**\n\n1. 还是回到 Git Bash。 输入 `git clone https://github.com/iissnan/hexo-theme-next themes/next`\n\n\t这样，该主题的文件就全部克隆到 D:\\blog\\themes\\next 下面。\n\n2. 修改博客配置文件\n\t- 打开 D:\\blog\\_config.yml\n\t- 找到 `theme:` \n\t- 把 Hexo 默认的 lanscape 修改成 next。 即 `theme: next`\n\t- 找到 `# Site`，添加博客名称，作者名字等。\n\t- 在 `language` 后面填入 en 或者 zh-Hans，选择英文或者中文。\n\t- 找到 `# URL`, 填入 url。比如 `url: https://ryanluoxu.github.io`\n\t\n\t填入名字后会有很风骚的 © 2017  Ryan Luo Xu 的字样出现在博客底部。\n      \n3. 重新生成部署即可\n\t- 回到 Git Bash。输入 `hexo g -d`就可以了。\n\n\t先把修改的内容生成网页，再部署。\n\n4. 查看成果\n\t\n\t前往 ryanluoxu.github.io 即可。\n\n\n","slug":"用-Hexo-和-GitHub-Pages-搭建博客","published":1,"updated":"2017-11-26T08:03:46.108Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbiug0ij000vvwv4032saw3i","content":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>搭建这个博客走了许多弯路。在这里分享总结之后的思路和简化步骤。</p>\n<ul>\n<li>Github Pages</li>\n<li>Hexo 博客框架</li>\n<li>部署</li>\n<li>Next 主题</li>\n</ul>\n<h2 id=\"Github-Pages\"><a href=\"#Github-Pages\" class=\"headerlink\" title=\"Github Pages\"></a>Github Pages</h2><p>Github Pages 其实本身就是 Github 提供的博客服务。 我们在 Github 中创建一个特定格式的 Repository，Github Pages 就会将里面的信息生成一个网页，展示出来。</p>\n<p><strong>操作如下：</strong><br><a id=\"more\"></a></p>\n<ol>\n<li>注册 Github 账号，然后在 Github 中创建一个以 .github.io 结尾的 Repository。 <ol>\n<li>Repository name: ryanluoxu.github.io</li>\n<li>勾选 Initialize this repository with a README</li>\n<li>Create repository</li>\n</ol>\n</li>\n<li>简单地编辑一下 README.md 这个文档。 比如添加：I am trying to create my own blog.. 保存(Commit changes)。</li>\n<li>打开网页：ryanluoxu.github.io 这里就可以看到 README.md 里的内容了。</li>\n</ol>\n<p>如果没有太多的要求，其实直接用 README.md 来写博客也是不错的。 </p>\n<p>这个生成好的 Repository 就是用来存放博客内容的地方，也只有这个仓库里的内容，才会被 ryanluoxu.github.io 这个网页显示出来。 </p>\n<h2 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h2><p>Hexo 是一个博客框架。它把本地文件里的信息生成一个网页。如果不需要放在网上给别人看，就没 Github Pages 什么事了。</p>\n<p>使用 Hexo 之前，需要先安装 Node.js 和 Git。</p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li><p>安装 Node.js</p>\n<ul>\n<li>前往 <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">https://nodejs.org/en/</a></li>\n<li>点击 8.9.1 LTS 下载</li>\n<li>安装</li>\n<li>打开 Command Prompt， 输入 <code>node -v</code></li>\n<li><p>得到：v8.9.1</p>\n<p>安装成功    </p>\n</li>\n</ul>\n</li>\n<li><p>安装 Git</p>\n<ul>\n<li>前往 <a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">https://git-scm.com/</a></li>\n<li>点击 Downloads</li>\n<li>点击 Windows</li>\n<li>一般情况，下载会自动开始。如果没有，就点击 click here to download manually</li>\n<li>安装</li>\n<li>打开 Command Prompt， 输入 <code>git --version</code></li>\n<li><p>得到：git version 2.15.0.windows.1</p>\n<p>安装成功</p>\n<p>额外说明：如果 Git –version 指令不管用，可能需要到 Environment Variable 那里添加 Path。</p>\n</li>\n</ul>\n</li>\n<li><p>安装 Hexo </p>\n<ul>\n<li>打开 Command Prompt</li>\n<li>输入 <code>npm install -g hexo-cli</code></li>\n<li>回车开始安装</li>\n<li>输入 <code>hexo -v</code> </li>\n<li><p>得到 hexo-cli: 1.0.4 等一串数据</p>\n<p>安装成功</p>\n</li>\n</ul>\n</li>\n<li><p>创建本地博客</p>\n<ul>\n<li>在D盘下创建文件夹 blog</li>\n<li>鼠标右键 blog，选择 Git Bash Here。 如果没有安装 Git，就不会有这个选项。</li>\n<li>Git Bash 打开之后，所在的位置就是 blog 这个文件夹的位置。（/d/blog）</li>\n<li>输入 <code>hexo init</code> 将 blog 文件夹初始化成一个博客文件夹。</li>\n<li>输入 <code>npm install</code> 安装依赖包。</li>\n<li>输入 <code>hexo g</code> 生成（generate）网页。 由于我们还没创建任何博客，生成的网页会展示 Hexo 里面自带了一个 Hello World 的博客。</li>\n<li>输入 <code>hexo s</code> 将生成的网页放在了本地服务器（server）。  </li>\n<li>浏览器里输入 <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a> 。 就可以看到刚才的成果了。</li>\n<li><p>回到 Git Bash，按 Ctrl+C 结束。</p>\n<p>此时再看 <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a> 就是无法访问了。</p>\n</li>\n</ul>\n</li>\n<li><p>发布一篇博客</p>\n<ul>\n<li>继续在 Git Bash 里，所在路径还是 /d/blog。输入 <code>hexo new &quot;My First Post&quot;</code></li>\n<li>在 D:\\blog\\source_posts 路径下，会有一个 My-First-Post.md 的文件。 编辑这个文件，然后保存。</li>\n<li>回到 Git Bash，输入 <code>hexo g</code></li>\n<li>输入 <code>hexo s</code></li>\n<li>前往 <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a> 查看成果。</li>\n<li>回到 Git Bash，按 Ctrl+C 结束。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"将本地-Hexo-博客部署在-Github-上\"><a href=\"#将本地-Hexo-博客部署在-Github-上\" class=\"headerlink\" title=\"将本地 Hexo 博客部署在 Github 上\"></a>将本地 Hexo 博客部署在 Github 上</h2><p>前面两个部分，我们已经有了本地博客，和一个能托管这些资料的线上仓库。只要把本地博客部署（deploy）在我们的 Github 对应的 Repository 就可以了。 </p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li><p>获取 Github 对应的 Repository 的链接。</p>\n<ul>\n<li>登陆 Github，进入到 ryanluoxu.github.io</li>\n<li>点击 Clone or download</li>\n<li><p>复制 URL 待用</p>\n<p>我的是 <code>https://github.com/Ryanluoxu/ryanluoxu.github.io.git</code></p>\n</li>\n</ul>\n</li>\n<li><p>修改博客的配置文件 </p>\n<ul>\n<li>打开配置文件 /d/blog/_config.yml （使用 bash 里的 vi 或者 notepad++）</li>\n<li>找到 <code>#Deployment</code>，填入以下内容：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">\t  type: git  </span><br><span class=\"line\">\t  repository: https://github.com/Ryanluoxu/ryanluoxu.github.io.git  </span><br><span class=\"line\">\t  branch: master</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>部署</p>\n<ul>\n<li>回到 Git Bash</li>\n<li>输入 <code>npm install hexo-deployer-git --save</code> 安装 hexo-deployer-git 此步骤只需要做一次。</li>\n<li>输入 <code>hexo d</code></li>\n<li><p>得到 <code>INFO  Deploy done: git</code> 即为部署成功</p>\n<p>之前我们创建的 ReadMe.md 会被自动覆盖掉。</p>\n</li>\n</ul>\n</li>\n<li><p>查看成果</p>\n<p> 前往 ryanluoxu.github.io 即可。</p>\n</li>\n</ol>\n<h2 id=\"使用-Next-主题\"><a href=\"#使用-Next-主题\" class=\"headerlink\" title=\"使用 Next 主题\"></a>使用 Next 主题</h2><p><a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">更多 Hexo 的主题看这里</a>  </p>\n<p>这里以 Next 为例。 大概思路就是把整个主题的文件克隆到我们的主题文件夹中。在配置文件中注明使用该主题。</p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li><p>还是回到 Git Bash。 输入 <code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></p>\n<p> 这样，该主题的文件就全部克隆到 D:\\blog\\themes\\next 下面。</p>\n</li>\n<li><p>修改博客配置文件</p>\n<ul>\n<li>打开 D:\\blog_config.yml</li>\n<li>找到 <code>theme:</code> </li>\n<li>把 Hexo 默认的 lanscape 修改成 next。 即 <code>theme: next</code></li>\n<li>找到 <code># Site</code>，添加博客名称，作者名字等。</li>\n<li>在 <code>language</code> 后面填入 en 或者 zh-Hans，选择英文或者中文。</li>\n<li><p>找到 <code># URL</code>, 填入 url。比如 <code>url: https://ryanluoxu.github.io</code></p>\n<p>填入名字后会有很风骚的 © 2017  Ryan Luo Xu 的字样出现在博客底部。</p>\n</li>\n</ul>\n</li>\n<li><p>重新生成部署即可</p>\n<ul>\n<li><p>回到 Git Bash。输入 <code>hexo g -d</code>就可以了。</p>\n<p>先把修改的内容生成网页，再部署。</p>\n</li>\n</ul>\n</li>\n<li><p>查看成果</p>\n<p> 前往 ryanluoxu.github.io 即可。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>搭建这个博客走了许多弯路。在这里分享总结之后的思路和简化步骤。</p>\n<ul>\n<li>Github Pages</li>\n<li>Hexo 博客框架</li>\n<li>部署</li>\n<li>Next 主题</li>\n</ul>\n<h2 id=\"Github-Pages\"><a href=\"#Github-Pages\" class=\"headerlink\" title=\"Github Pages\"></a>Github Pages</h2><p>Github Pages 其实本身就是 Github 提供的博客服务。 我们在 Github 中创建一个特定格式的 Repository，Github Pages 就会将里面的信息生成一个网页，展示出来。</p>\n<p><strong>操作如下：</strong><br>","more":"</p>\n<ol>\n<li>注册 Github 账号，然后在 Github 中创建一个以 .github.io 结尾的 Repository。 <ol>\n<li>Repository name: ryanluoxu.github.io</li>\n<li>勾选 Initialize this repository with a README</li>\n<li>Create repository</li>\n</ol>\n</li>\n<li>简单地编辑一下 README.md 这个文档。 比如添加：I am trying to create my own blog.. 保存(Commit changes)。</li>\n<li>打开网页：ryanluoxu.github.io 这里就可以看到 README.md 里的内容了。</li>\n</ol>\n<p>如果没有太多的要求，其实直接用 README.md 来写博客也是不错的。 </p>\n<p>这个生成好的 Repository 就是用来存放博客内容的地方，也只有这个仓库里的内容，才会被 ryanluoxu.github.io 这个网页显示出来。 </p>\n<h2 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h2><p>Hexo 是一个博客框架。它把本地文件里的信息生成一个网页。如果不需要放在网上给别人看，就没 Github Pages 什么事了。</p>\n<p>使用 Hexo 之前，需要先安装 Node.js 和 Git。</p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li><p>安装 Node.js</p>\n<ul>\n<li>前往 <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">https://nodejs.org/en/</a></li>\n<li>点击 8.9.1 LTS 下载</li>\n<li>安装</li>\n<li>打开 Command Prompt， 输入 <code>node -v</code></li>\n<li><p>得到：v8.9.1</p>\n<p>安装成功    </p>\n</li>\n</ul>\n</li>\n<li><p>安装 Git</p>\n<ul>\n<li>前往 <a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">https://git-scm.com/</a></li>\n<li>点击 Downloads</li>\n<li>点击 Windows</li>\n<li>一般情况，下载会自动开始。如果没有，就点击 click here to download manually</li>\n<li>安装</li>\n<li>打开 Command Prompt， 输入 <code>git --version</code></li>\n<li><p>得到：git version 2.15.0.windows.1</p>\n<p>安装成功</p>\n<p>额外说明：如果 Git –version 指令不管用，可能需要到 Environment Variable 那里添加 Path。</p>\n</li>\n</ul>\n</li>\n<li><p>安装 Hexo </p>\n<ul>\n<li>打开 Command Prompt</li>\n<li>输入 <code>npm install -g hexo-cli</code></li>\n<li>回车开始安装</li>\n<li>输入 <code>hexo -v</code> </li>\n<li><p>得到 hexo-cli: 1.0.4 等一串数据</p>\n<p>安装成功</p>\n</li>\n</ul>\n</li>\n<li><p>创建本地博客</p>\n<ul>\n<li>在D盘下创建文件夹 blog</li>\n<li>鼠标右键 blog，选择 Git Bash Here。 如果没有安装 Git，就不会有这个选项。</li>\n<li>Git Bash 打开之后，所在的位置就是 blog 这个文件夹的位置。（/d/blog）</li>\n<li>输入 <code>hexo init</code> 将 blog 文件夹初始化成一个博客文件夹。</li>\n<li>输入 <code>npm install</code> 安装依赖包。</li>\n<li>输入 <code>hexo g</code> 生成（generate）网页。 由于我们还没创建任何博客，生成的网页会展示 Hexo 里面自带了一个 Hello World 的博客。</li>\n<li>输入 <code>hexo s</code> 将生成的网页放在了本地服务器（server）。  </li>\n<li>浏览器里输入 <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a> 。 就可以看到刚才的成果了。</li>\n<li><p>回到 Git Bash，按 Ctrl+C 结束。</p>\n<p>此时再看 <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a> 就是无法访问了。</p>\n</li>\n</ul>\n</li>\n<li><p>发布一篇博客</p>\n<ul>\n<li>继续在 Git Bash 里，所在路径还是 /d/blog。输入 <code>hexo new &quot;My First Post&quot;</code></li>\n<li>在 D:\\blog\\source_posts 路径下，会有一个 My-First-Post.md 的文件。 编辑这个文件，然后保存。</li>\n<li>回到 Git Bash，输入 <code>hexo g</code></li>\n<li>输入 <code>hexo s</code></li>\n<li>前往 <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a> 查看成果。</li>\n<li>回到 Git Bash，按 Ctrl+C 结束。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"将本地-Hexo-博客部署在-Github-上\"><a href=\"#将本地-Hexo-博客部署在-Github-上\" class=\"headerlink\" title=\"将本地 Hexo 博客部署在 Github 上\"></a>将本地 Hexo 博客部署在 Github 上</h2><p>前面两个部分，我们已经有了本地博客，和一个能托管这些资料的线上仓库。只要把本地博客部署（deploy）在我们的 Github 对应的 Repository 就可以了。 </p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li><p>获取 Github 对应的 Repository 的链接。</p>\n<ul>\n<li>登陆 Github，进入到 ryanluoxu.github.io</li>\n<li>点击 Clone or download</li>\n<li><p>复制 URL 待用</p>\n<p>我的是 <code>https://github.com/Ryanluoxu/ryanluoxu.github.io.git</code></p>\n</li>\n</ul>\n</li>\n<li><p>修改博客的配置文件 </p>\n<ul>\n<li>打开配置文件 /d/blog/_config.yml （使用 bash 里的 vi 或者 notepad++）</li>\n<li>找到 <code>#Deployment</code>，填入以下内容：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">\t  type: git  </span><br><span class=\"line\">\t  repository: https://github.com/Ryanluoxu/ryanluoxu.github.io.git  </span><br><span class=\"line\">\t  branch: master</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>部署</p>\n<ul>\n<li>回到 Git Bash</li>\n<li>输入 <code>npm install hexo-deployer-git --save</code> 安装 hexo-deployer-git 此步骤只需要做一次。</li>\n<li>输入 <code>hexo d</code></li>\n<li><p>得到 <code>INFO  Deploy done: git</code> 即为部署成功</p>\n<p>之前我们创建的 ReadMe.md 会被自动覆盖掉。</p>\n</li>\n</ul>\n</li>\n<li><p>查看成果</p>\n<p> 前往 ryanluoxu.github.io 即可。</p>\n</li>\n</ol>\n<h2 id=\"使用-Next-主题\"><a href=\"#使用-Next-主题\" class=\"headerlink\" title=\"使用 Next 主题\"></a>使用 Next 主题</h2><p><a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">更多 Hexo 的主题看这里</a>  </p>\n<p>这里以 Next 为例。 大概思路就是把整个主题的文件克隆到我们的主题文件夹中。在配置文件中注明使用该主题。</p>\n<p><strong>操作如下：</strong></p>\n<ol>\n<li><p>还是回到 Git Bash。 输入 <code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></p>\n<p> 这样，该主题的文件就全部克隆到 D:\\blog\\themes\\next 下面。</p>\n</li>\n<li><p>修改博客配置文件</p>\n<ul>\n<li>打开 D:\\blog_config.yml</li>\n<li>找到 <code>theme:</code> </li>\n<li>把 Hexo 默认的 lanscape 修改成 next。 即 <code>theme: next</code></li>\n<li>找到 <code># Site</code>，添加博客名称，作者名字等。</li>\n<li>在 <code>language</code> 后面填入 en 或者 zh-Hans，选择英文或者中文。</li>\n<li><p>找到 <code># URL</code>, 填入 url。比如 <code>url: https://ryanluoxu.github.io</code></p>\n<p>填入名字后会有很风骚的 © 2017  Ryan Luo Xu 的字样出现在博客底部。</p>\n</li>\n</ul>\n</li>\n<li><p>重新生成部署即可</p>\n<ul>\n<li><p>回到 Git Bash。输入 <code>hexo g -d</code>就可以了。</p>\n<p>先把修改的内容生成网页，再部署。</p>\n</li>\n</ul>\n</li>\n<li><p>查看成果</p>\n<p> 前往 ryanluoxu.github.io 即可。</p>\n</li>\n</ol>"},{"title":"学习 Spring Boot - 1","date":"2017-12-22T21:28:24.000Z","_content":"\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n学习 Spring Boot 有一段时间，也看过很多人的教程，中途放弃了几次，又重新开始。\n需要很不负责地说，有些教程确实因为时间的关系，已经不适合用来学习参考了。\n\n这篇博客包括以下内容：\n1. 项目初始化\n\t- Maven 的作用\n\t- 内置 TomCat\n2. 运行项目，创建简单的 info 页面\n3. 添加如下 Web Service\n\t- GET 获得全部\n\t- GET 获得特定某个\n\t- POST 添加\n\t- PUT 更新某个\n\t- DELETE 删除某个\n\n<!--more-->\n\n# 项目初始化\n\nSpring Boot 常用的初始方式有三种：\n- Spring Initializer\n- Spring Boot CLI\n- Spring Tool Suite\n\n后两者需要额外安装，我比较推荐使用 Spring Initializer 初始化之后，再导入到 Eclipse 中。\n\n## 初始化操作\n\n1. Go to [https://start.spring.io/](https://start.spring.io/)\n2. 如图填写，在 `Search for dependencies` 下面填 `web` 之后选择，我们需要用到这个 Dependency。\n\t![spring-init](/images/spring-init.png)\n3. 点击 `Generate Project`，生成并且下载。 解压后放在 Eclipse 的 workspace 文件夹下面。\n4. 打开 `Eclipse`, 右键-`Import..`-`Existing Maven Projects`\n5. 选择刚才解压的项目文件夹。例如：D:\\workspace\\SpringBootDemo\n6. `Projects` 窗口中会出现 `pom.xml`，完成。\n\n可能碰到的问题：\n- 这里可能会出现 `Project build error`，到 pom.xml 里面，把 Parent 的版本改成 1.5.8 即可。 估计 1.5.9 以及以上的版本和我的 Maven 不合吧。\n- `Configuration is not up-to-date`： 右键项目-`Maven`-`Update Project`。\n\n效果如下：\n![springboot-structure](/images/springboot-structure.png)\n\n## Maven 的作用\n\n在我的理解中，Maven 主要的作用就是帮助管理 library。 作为一个框架，Spring 会用到很多其他的库，这些库也有自己的版本以及各种更新。 Maven 可以帮助节约大量的操作。\n\n比如`spring-boot-starter-web`, 用到几十个库，自己下载再添加，费时且可能出错。\n而在 Maven 的 pom.xml 文件中，输入下面这段代码：\n```\n<dependencies>\n\t...\n\t<dependency>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t</dependency>\n\t...\n</dependencies>\n```\n保存后，系统会自动添加 `Maven Dependencies`，里面会有所有相关的库。\n之后只需在 pom.xml 中修改，保存之后，系统会自动完成更新。\n\n## 内置的 TomCat\n\n这是一个困扰我很长一段时间的问题，程序开始工作，向外发布信息，需要在一个 Server 上运作。 所以一般的 Web Project，我们都会添加 TomCat 作为服务器，程序运行在 TomCat 上面。\n\n但是对于 Spring Boot 来说，就不需要了，在这里，其实它只是一个普通的 Java Project。 只是内置了 TomCat，可以在`Maven Dependencies`中找到`tomcat-embed-core-8.5.23.jar`等库，说明事实上程序运行依然是通过 TomCat 完成，内置的好处就是...有太多好处了。\n\n所以只需要按照普通的 Java 程序来运行即可。\n\n\n# 运行项目，创建简单的 info 页面\n\n## 运行项目\n\n打开 DemoApplication.java，如下代码已经自动生成：\n```\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class DemoApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(DemoApplication.class, args);\n\t}\n}\n```\n\n直接按照普通的程序运行即可。\n\nConsole 里面会得到 Spring 图标，以及几个关键提示：\n- Initializing Spring embedded WebApplicationContext\n- Tomcat started on port(s): 8080 (http)\n- Started DemoApplication in 1.509 seconds\n\n这样，程序已经开始在 TomCat 上运行了。\n\n打开 `http://localhost:8080/` 会得到 `Whitelabel Error Page`，因为我们还没有创建任何内容。\n下面我们添加一个 Controller，来显示一些内容。\n\n## 添加 info 页面\n1. 添加 package: `io.ryanluoxu.springboot.demo.controller`\n2. 在此 package 下面创建 InfoController.java, 如下：\n\t```\n\timport org.springframework.web.bind.annotation.RequestMapping;\n\timport org.springframework.web.bind.annotation.RestController;\n\t\n\t@RestController\n\tpublic class InfoController {\n\t\n\t\t@RequestMapping(\"/info\")\n\t\tpublic String showInfo() {\n\t\t\tString info = \"This is a Spring Boot Starter Project by RyanLuoXu..\";\n\t\t\treturn info;\n\t\t}\n\t\n\t}\n\t```\n这样，事实上已经创建了一个简单的 web service。\n运行程序，前往 http://localhost:8080/info 即可看到 info 的内容。\n\n这里我们只是返回了一个字符串，下面我们以 JSON 格式返回更多的信息。\n\n## 添加 moreinfo 页面\n1. 添加 package: io.ryanluoxu.springboot.demo.model\n2. 在此 package下面创建 Info.java，如下：\n\t```\n\tpublic class Info {\n\t\t\n\t\tprivate String description;\n\t\tprivate String startDate;\n\t\tprivate String author;\n\t\tprivate String framework;\n\t\tprivate String database;\n\t\t\n\t\t...setters and getters...\n\t}\n\n\t```\n3. 在 InfoController.java 中添加：\n\t```\n\t@RequestMapping(\"/moreinfo\")\n\tpublic Info showMoreInfo() {\n\t\tInfo info = new Info();\n\t\t\n\t\tinfo.setAuthor(\"RyanLuoXu\");\n\t\tinfo.setDatabase(\"PostgreSQL\");\n\t\tinfo.setDescription(\"This is a Spring Boot Starter Project\");\n\t\tinfo.setFramework(\"Spring Boot\");\n\t\tinfo.setStartDate(\"2017-12-23\");\n\t\t\n\t\treturn info;\n\t}\n\t```\n\t- 创建 info 为一个类\n\t- 然后在 showMoreInfo() 里面定义它的内容，并且返回含有多个信息的 info 对象\n\t- info 会被自动转成 JSON 格式\n\n运行程序，前往 http://localhost:8080/moreinfo 即可看到 info 的内容。 如下：\n\n\n>{\n  \"description\": \"This is a Spring Boot Starter Project\",\n  \"startDate\": \"2017-12-23\",\n  \"author\": \"RyanLuoXu\",\n  \"framework\": \"Spring Boot\",\n  \"database\": \"PostgreSQL\"\n}\n\n这里为了方便，我们把信息直接放在了 Controller 里面，事实上 Controller 是通过调用 Service 里的方法得到信息的。\n下面的例子会把这部分分离开来，并且创建几个常用的 web service。\n\n# 添加 Web Service : GET, POST, PUT & DELETE\n\n这部分，我们新添加一个 User 类，实现对 user 信息的获取，更新，修改和删除。\n\n## GET 获得全部\n1. 在 io.ryanluoxu.springboot.demo.model 下面，创建 User.java， 如下：\n\t```\n\tpublic class User {\n\t\n\t\tprivate String userName;\n\t\tprivate int age;\n\t\tprivate String nationality;\n\n\t\t...setters and getters...\t\t\n\t}\n\t```\n2. 添加 package: io.ryanluoxu.springboot.demo.service\n3. 在此 package 下面，创建 UserService.java, 如下：\n\t```\n\t@Service\n\tpublic class UserService {\n\t\t\n\t\tArrayList<User> userList = new ArrayList<>();\n\t\t\n\t\tpublic UserService() {\n\t\t\t\n\t\t\t// create fake database here\n\t\t\tUser user1 = new User();\n\t\t\tuser1.setUserName(\"Melvin\");\n\t\t\tuser1.setAge(30);\n\t\t\tuser1.setNationality(\"Singaporean\");\n\t\t\t\n\t\t\tUser user2 = new User();\n\t\t\tuser2.setUserName(\"Ryan\");\n\t\t\tuser2.setAge(36);\n\t\t\tuser2.setNationality(\"American\");\n\t\t\t\n\t\t\tUser user3 = new User();\n\t\t\tuser3.setUserName(\"Hazel\");\n\t\t\tuser3.setAge(26);\n\t\t\tuser3.setNationality(\"Chinese\");\n\t\t\t\n\t\t\tuserList.add(user1);\n\t\t\tuserList.add(user2);\n\t\t\tuserList.add(user3);\n\t\t}\n\t}\n\n\t// 一旦获取 UserService 类的对象，该对象中自带以上虚拟的信息\n\t// 后续可以连接数据库，用 DAO 来获取数据\n\t```\n4. 在 UserService.java 里，添加 getUserList()：\n\t```\n\tpublic ArrayList<User> getUserList(){\n\t\treturn userList;\n\t}\t\n\t```\n5. 在 io.ryanluoxu.springboot.demo.controller 下面，创建 UserController.java：\n\t```\n\t@RestController\n\tpublic class UserController {\n\t\t\n\t\t@Autowired\n\t\tprivate UserService userService;\t// get one time instance\n\t\t\n\t\t@RequestMapping(\"/users\")\t\t\t// default method = SET\n\t\tpublic ArrayList<User> getUserList(){\n\t\t\tArrayList<User> userList = userService.getUserList();\n\t\t\treturn userList;\n\t\t}\n\t}\n\t```\n\t- 这里获取了一个 userService 对象。 \n\t- 事实上是 Spring 巡视项目，根据 `@RestController` 和 `@Service` 创建了 userController 和 userService\n\t- 然后根据 `@Autowired` 将 userService 注入到 userController 中，所谓的依赖注入。\n\t- 当 ~/users 的 web service 被翻牌的时候，getUserList() 运行，通过 userService.getUserList() 得到信息，返回给呼叫该服务的前端。\n6. 运行程序, 前往 http://localhost:8080/users 得到：\n![get-uses](/images/get-uses.png)\n\n这里通过 URL，得到所有用户信息，下面获取特定某个人的信息。\n\n## GET 获得特定某个\n1. 在 UserService.java, 添加：\n\t```\n\tpublic User getUserByName(String name) {\n\t\tUser user  = userList.stream().filter(u -> u.getUserName().equals(name)).findFirst().get();\n\t\treturn user;\n\t}\n\t```\n2. 在 UserController.java, 添加：\n\t```\n\t@RequestMapping(\"/users/{name}\")\n\tpublic User getUserByName(@PathVariable String name) {\n\t\tUser user = userService.getUserByName(name);\n\t\treturn user;\n\t}\n\t// link {name} to name; {name1} X\n\t```\n\t- `@RequestMapping(\"/users/{name}\")`\n\t- `@PathVariable String name`\n3. controller 根据前端过来的 name 参数，呼叫 userService。\n4. userService 在用户列表里找到符合条件的信息，返回给 controller。\n5. controller 再以 JSON 格式返回给前端\n6. 运行程序, 前往 http://localhost:8080/users/Melvin, 得到：\n>{\n  \"userName\": \"Melvin\",\n  \"age\": 30,\n  \"nationality\": \"Singaporean\"\n}\n\n对于 GET 来说，都是获取信息，当 URL 直接在浏览器上输入时，都是默认 GET 方法。\n下面的添加，更新和删除需要借助额外的工具：PostMan。\n- https://www.getpostman.com/\n- 下载并安装\n\n## POST 添加\n\n1. 在 UserService.java, 添加：\n\t```\n\tpublic boolean addUser(User user) {\n\t\tboolean isSuccess = false;\n\t\t\n\t\ttry {\n\t\t\tisSuccess = userList.add(user);\t\t// add user may fail when connect to database\n\t\t\t\n\t\t} catch (Exception e) {\n\t\t\tSystem.err.println(\"Fail to add user..\");\n\t\t}\n\t\t\n\t\treturn isSuccess;\n\t}\n\t```\n2. 在 UserController.java, 添加：\n\t```\n\t@RequestMapping(method=RequestMethod.POST, value=\"/users\")\n\tpublic boolean addUser(@RequestBody User user) {\t// transfer RequestBody to User instance\n\t\tboolean isSuccess = userService.addUser(user);\n\t\treturn isSuccess;\n\t}\n\t```\n\t- `@RequestMapping(method=RequestMethod.POST, value=\"/users\")`\n\t- `@RequestBody User user`\n3. 对于前端来说：\n\t- 同样是 `http://localhost:8080/users/`，此时采用的是 POST 方法\n\t- POST 的同时需要将添加的信息，以 JSON 的格式传递到 Controller\n\t- Controller 再用 `@RequestBody User user` 传递给 Service\n\t- Service 添加成功，返回一个 True。\n4. 运行程序，用 PostMan 来测试。\n\n打开 PostMan：\n1. 选择 POST 作为方法，URL=http://localhost:8080/users/\n2. Headers：\n\t- Key: Content-Type\n\t- Value: application/json\n3. Body:\n\t- raw\n\t- JSON (application/json)\n\n如图：\n![post-add-user](/images/post-add-user.png)\n\n返回的结果得到 true。\n前往 http://localhost:8080/users 得到：\n![post-result](/images/post-result.png)\n\n## PUT 更新某个\n1. 在 UserService.java, 添加：\n\t```\n\tpublic boolean updateUserByName(User updatedUser, String name) {\n\t\tboolean isSuccess = false;\n\t\t\n\t\t// get user with request name and replace it\n\t\tfor (User currentUser : userList) {\n\t\t\tif (currentUser.getUserName().equals(name)) {\n\t\t\t\tint index = userList.indexOf(currentUser);\n\t\t\t\tuserList.set(index, updatedUser);\n\t\t\t\tisSuccess = true;\n\t\t\t} \n\t\t}\n\t\t\n\t\tif (!isSuccess) {\n\t\t\tSystem.err.println(\"There is no user called \" + name);\n\t\t}\n\t\t\n\t\treturn isSuccess;\n\t}\n\t```\n2. 在 UserController.java, 添加：\n\t```\n\t@RequestMapping(method=RequestMethod.PUT, value=\"/users/{name}\")\n\tpublic boolean updateUserByName(@RequestBody User user, @PathVariable String name) {\t\n\t\tboolean isSuccess = userService.updateUserByName(user, name);\n\t\treturn isSuccess;\n\t}\n\t```\n\t- `@RequestMapping(method=RequestMethod.PUT, value=\"/users/{name}\")`\n\t- `@RequestBody User user, @PathVariable String name`\n3. 用 name 来选中某个用户，用 user 来更新信息。 成功，返回 true。\n4. 运行程序，用 PostMan 来测试。\n\n打开 PostMan：\n1. 选择 PUT 作为方法, URL = http://localhost:8080/users/Melvin\n2. Headers：\n\t- Key: Content-Type\n\t- Value: application/json\n3. Body:\n\t- raw\n\t- JSON (application/json)\n\n如图：\n![put-update-user](/images/put-update-user.png)\n\n返回的结果得到 true。\n前往 http://localhost:8080/users 得到：\n![put-result](/images/put-result.png)\n\nMelvin 的信息已经被替换掉了。\n\n## DELETE 删除某个\n1. 在 UserService.java, 添加：\n\t```\n\tpublic boolean removeUserByName(String name) {\n\t\tboolean isSuccess = false;\n\t\ttry {\n\t\t\tisSuccess = userList.removeIf(user -> user.getUserName().equals(name));\n\t\t\tif (!isSuccess) {\n\t\t\t\tSystem.err.println(\"There is no user called \" + name);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tSystem.err.println(\"Fail to remove user called \" + name);\n\t\t}\n\t\t\n\t\treturn isSuccess;\n\t}\n\t```\n2. 在 UserController.java, 添加：\n\t```\n\t@RequestMapping(method=RequestMethod.DELETE, value=\"/users/{name}\")\n\tpublic boolean removeUserByName(@PathVariable String name) {\t\n\t\tboolean isSuccess = userService.removeUserByName(name);\n\t\treturn isSuccess;\n\t}\n\t```\n3. 用 name 来选中某个用户，删除成功，返回 true。\n4. 运行程序，用 PostMan 来测试。\n\n打开 PostMan：\n1. 选择 DELETE 作为方法, URL = http://localhost:8080/users/Grace\n2. 前往 http://localhost:8080/users 验证结果。\n\n\n# Web Application Layer\n\n\tHTML(view)\n\tcontroller.js\n\tservice.js \n\t===============\n\tcontroller.java\n\tservice.java\n\tDAO.java\n\t\t\t\n\n** 继续学习 -> [学习 Spring Boot - 2]()**","source":"_posts/学习-Spring-Boot-1.md","raw":"---\ntitle: 学习 Spring Boot - 1\ndate: 2017-12-23 05:28:24\ncategories: SpringBoot\ntags: [Spring, Spring Boot, beginner, Maven, Rest]\n---\n\n**声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。**\n\n学习 Spring Boot 有一段时间，也看过很多人的教程，中途放弃了几次，又重新开始。\n需要很不负责地说，有些教程确实因为时间的关系，已经不适合用来学习参考了。\n\n这篇博客包括以下内容：\n1. 项目初始化\n\t- Maven 的作用\n\t- 内置 TomCat\n2. 运行项目，创建简单的 info 页面\n3. 添加如下 Web Service\n\t- GET 获得全部\n\t- GET 获得特定某个\n\t- POST 添加\n\t- PUT 更新某个\n\t- DELETE 删除某个\n\n<!--more-->\n\n# 项目初始化\n\nSpring Boot 常用的初始方式有三种：\n- Spring Initializer\n- Spring Boot CLI\n- Spring Tool Suite\n\n后两者需要额外安装，我比较推荐使用 Spring Initializer 初始化之后，再导入到 Eclipse 中。\n\n## 初始化操作\n\n1. Go to [https://start.spring.io/](https://start.spring.io/)\n2. 如图填写，在 `Search for dependencies` 下面填 `web` 之后选择，我们需要用到这个 Dependency。\n\t![spring-init](/images/spring-init.png)\n3. 点击 `Generate Project`，生成并且下载。 解压后放在 Eclipse 的 workspace 文件夹下面。\n4. 打开 `Eclipse`, 右键-`Import..`-`Existing Maven Projects`\n5. 选择刚才解压的项目文件夹。例如：D:\\workspace\\SpringBootDemo\n6. `Projects` 窗口中会出现 `pom.xml`，完成。\n\n可能碰到的问题：\n- 这里可能会出现 `Project build error`，到 pom.xml 里面，把 Parent 的版本改成 1.5.8 即可。 估计 1.5.9 以及以上的版本和我的 Maven 不合吧。\n- `Configuration is not up-to-date`： 右键项目-`Maven`-`Update Project`。\n\n效果如下：\n![springboot-structure](/images/springboot-structure.png)\n\n## Maven 的作用\n\n在我的理解中，Maven 主要的作用就是帮助管理 library。 作为一个框架，Spring 会用到很多其他的库，这些库也有自己的版本以及各种更新。 Maven 可以帮助节约大量的操作。\n\n比如`spring-boot-starter-web`, 用到几十个库，自己下载再添加，费时且可能出错。\n而在 Maven 的 pom.xml 文件中，输入下面这段代码：\n```\n<dependencies>\n\t...\n\t<dependency>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t</dependency>\n\t...\n</dependencies>\n```\n保存后，系统会自动添加 `Maven Dependencies`，里面会有所有相关的库。\n之后只需在 pom.xml 中修改，保存之后，系统会自动完成更新。\n\n## 内置的 TomCat\n\n这是一个困扰我很长一段时间的问题，程序开始工作，向外发布信息，需要在一个 Server 上运作。 所以一般的 Web Project，我们都会添加 TomCat 作为服务器，程序运行在 TomCat 上面。\n\n但是对于 Spring Boot 来说，就不需要了，在这里，其实它只是一个普通的 Java Project。 只是内置了 TomCat，可以在`Maven Dependencies`中找到`tomcat-embed-core-8.5.23.jar`等库，说明事实上程序运行依然是通过 TomCat 完成，内置的好处就是...有太多好处了。\n\n所以只需要按照普通的 Java 程序来运行即可。\n\n\n# 运行项目，创建简单的 info 页面\n\n## 运行项目\n\n打开 DemoApplication.java，如下代码已经自动生成：\n```\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class DemoApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(DemoApplication.class, args);\n\t}\n}\n```\n\n直接按照普通的程序运行即可。\n\nConsole 里面会得到 Spring 图标，以及几个关键提示：\n- Initializing Spring embedded WebApplicationContext\n- Tomcat started on port(s): 8080 (http)\n- Started DemoApplication in 1.509 seconds\n\n这样，程序已经开始在 TomCat 上运行了。\n\n打开 `http://localhost:8080/` 会得到 `Whitelabel Error Page`，因为我们还没有创建任何内容。\n下面我们添加一个 Controller，来显示一些内容。\n\n## 添加 info 页面\n1. 添加 package: `io.ryanluoxu.springboot.demo.controller`\n2. 在此 package 下面创建 InfoController.java, 如下：\n\t```\n\timport org.springframework.web.bind.annotation.RequestMapping;\n\timport org.springframework.web.bind.annotation.RestController;\n\t\n\t@RestController\n\tpublic class InfoController {\n\t\n\t\t@RequestMapping(\"/info\")\n\t\tpublic String showInfo() {\n\t\t\tString info = \"This is a Spring Boot Starter Project by RyanLuoXu..\";\n\t\t\treturn info;\n\t\t}\n\t\n\t}\n\t```\n这样，事实上已经创建了一个简单的 web service。\n运行程序，前往 http://localhost:8080/info 即可看到 info 的内容。\n\n这里我们只是返回了一个字符串，下面我们以 JSON 格式返回更多的信息。\n\n## 添加 moreinfo 页面\n1. 添加 package: io.ryanluoxu.springboot.demo.model\n2. 在此 package下面创建 Info.java，如下：\n\t```\n\tpublic class Info {\n\t\t\n\t\tprivate String description;\n\t\tprivate String startDate;\n\t\tprivate String author;\n\t\tprivate String framework;\n\t\tprivate String database;\n\t\t\n\t\t...setters and getters...\n\t}\n\n\t```\n3. 在 InfoController.java 中添加：\n\t```\n\t@RequestMapping(\"/moreinfo\")\n\tpublic Info showMoreInfo() {\n\t\tInfo info = new Info();\n\t\t\n\t\tinfo.setAuthor(\"RyanLuoXu\");\n\t\tinfo.setDatabase(\"PostgreSQL\");\n\t\tinfo.setDescription(\"This is a Spring Boot Starter Project\");\n\t\tinfo.setFramework(\"Spring Boot\");\n\t\tinfo.setStartDate(\"2017-12-23\");\n\t\t\n\t\treturn info;\n\t}\n\t```\n\t- 创建 info 为一个类\n\t- 然后在 showMoreInfo() 里面定义它的内容，并且返回含有多个信息的 info 对象\n\t- info 会被自动转成 JSON 格式\n\n运行程序，前往 http://localhost:8080/moreinfo 即可看到 info 的内容。 如下：\n\n\n>{\n  \"description\": \"This is a Spring Boot Starter Project\",\n  \"startDate\": \"2017-12-23\",\n  \"author\": \"RyanLuoXu\",\n  \"framework\": \"Spring Boot\",\n  \"database\": \"PostgreSQL\"\n}\n\n这里为了方便，我们把信息直接放在了 Controller 里面，事实上 Controller 是通过调用 Service 里的方法得到信息的。\n下面的例子会把这部分分离开来，并且创建几个常用的 web service。\n\n# 添加 Web Service : GET, POST, PUT & DELETE\n\n这部分，我们新添加一个 User 类，实现对 user 信息的获取，更新，修改和删除。\n\n## GET 获得全部\n1. 在 io.ryanluoxu.springboot.demo.model 下面，创建 User.java， 如下：\n\t```\n\tpublic class User {\n\t\n\t\tprivate String userName;\n\t\tprivate int age;\n\t\tprivate String nationality;\n\n\t\t...setters and getters...\t\t\n\t}\n\t```\n2. 添加 package: io.ryanluoxu.springboot.demo.service\n3. 在此 package 下面，创建 UserService.java, 如下：\n\t```\n\t@Service\n\tpublic class UserService {\n\t\t\n\t\tArrayList<User> userList = new ArrayList<>();\n\t\t\n\t\tpublic UserService() {\n\t\t\t\n\t\t\t// create fake database here\n\t\t\tUser user1 = new User();\n\t\t\tuser1.setUserName(\"Melvin\");\n\t\t\tuser1.setAge(30);\n\t\t\tuser1.setNationality(\"Singaporean\");\n\t\t\t\n\t\t\tUser user2 = new User();\n\t\t\tuser2.setUserName(\"Ryan\");\n\t\t\tuser2.setAge(36);\n\t\t\tuser2.setNationality(\"American\");\n\t\t\t\n\t\t\tUser user3 = new User();\n\t\t\tuser3.setUserName(\"Hazel\");\n\t\t\tuser3.setAge(26);\n\t\t\tuser3.setNationality(\"Chinese\");\n\t\t\t\n\t\t\tuserList.add(user1);\n\t\t\tuserList.add(user2);\n\t\t\tuserList.add(user3);\n\t\t}\n\t}\n\n\t// 一旦获取 UserService 类的对象，该对象中自带以上虚拟的信息\n\t// 后续可以连接数据库，用 DAO 来获取数据\n\t```\n4. 在 UserService.java 里，添加 getUserList()：\n\t```\n\tpublic ArrayList<User> getUserList(){\n\t\treturn userList;\n\t}\t\n\t```\n5. 在 io.ryanluoxu.springboot.demo.controller 下面，创建 UserController.java：\n\t```\n\t@RestController\n\tpublic class UserController {\n\t\t\n\t\t@Autowired\n\t\tprivate UserService userService;\t// get one time instance\n\t\t\n\t\t@RequestMapping(\"/users\")\t\t\t// default method = SET\n\t\tpublic ArrayList<User> getUserList(){\n\t\t\tArrayList<User> userList = userService.getUserList();\n\t\t\treturn userList;\n\t\t}\n\t}\n\t```\n\t- 这里获取了一个 userService 对象。 \n\t- 事实上是 Spring 巡视项目，根据 `@RestController` 和 `@Service` 创建了 userController 和 userService\n\t- 然后根据 `@Autowired` 将 userService 注入到 userController 中，所谓的依赖注入。\n\t- 当 ~/users 的 web service 被翻牌的时候，getUserList() 运行，通过 userService.getUserList() 得到信息，返回给呼叫该服务的前端。\n6. 运行程序, 前往 http://localhost:8080/users 得到：\n![get-uses](/images/get-uses.png)\n\n这里通过 URL，得到所有用户信息，下面获取特定某个人的信息。\n\n## GET 获得特定某个\n1. 在 UserService.java, 添加：\n\t```\n\tpublic User getUserByName(String name) {\n\t\tUser user  = userList.stream().filter(u -> u.getUserName().equals(name)).findFirst().get();\n\t\treturn user;\n\t}\n\t```\n2. 在 UserController.java, 添加：\n\t```\n\t@RequestMapping(\"/users/{name}\")\n\tpublic User getUserByName(@PathVariable String name) {\n\t\tUser user = userService.getUserByName(name);\n\t\treturn user;\n\t}\n\t// link {name} to name; {name1} X\n\t```\n\t- `@RequestMapping(\"/users/{name}\")`\n\t- `@PathVariable String name`\n3. controller 根据前端过来的 name 参数，呼叫 userService。\n4. userService 在用户列表里找到符合条件的信息，返回给 controller。\n5. controller 再以 JSON 格式返回给前端\n6. 运行程序, 前往 http://localhost:8080/users/Melvin, 得到：\n>{\n  \"userName\": \"Melvin\",\n  \"age\": 30,\n  \"nationality\": \"Singaporean\"\n}\n\n对于 GET 来说，都是获取信息，当 URL 直接在浏览器上输入时，都是默认 GET 方法。\n下面的添加，更新和删除需要借助额外的工具：PostMan。\n- https://www.getpostman.com/\n- 下载并安装\n\n## POST 添加\n\n1. 在 UserService.java, 添加：\n\t```\n\tpublic boolean addUser(User user) {\n\t\tboolean isSuccess = false;\n\t\t\n\t\ttry {\n\t\t\tisSuccess = userList.add(user);\t\t// add user may fail when connect to database\n\t\t\t\n\t\t} catch (Exception e) {\n\t\t\tSystem.err.println(\"Fail to add user..\");\n\t\t}\n\t\t\n\t\treturn isSuccess;\n\t}\n\t```\n2. 在 UserController.java, 添加：\n\t```\n\t@RequestMapping(method=RequestMethod.POST, value=\"/users\")\n\tpublic boolean addUser(@RequestBody User user) {\t// transfer RequestBody to User instance\n\t\tboolean isSuccess = userService.addUser(user);\n\t\treturn isSuccess;\n\t}\n\t```\n\t- `@RequestMapping(method=RequestMethod.POST, value=\"/users\")`\n\t- `@RequestBody User user`\n3. 对于前端来说：\n\t- 同样是 `http://localhost:8080/users/`，此时采用的是 POST 方法\n\t- POST 的同时需要将添加的信息，以 JSON 的格式传递到 Controller\n\t- Controller 再用 `@RequestBody User user` 传递给 Service\n\t- Service 添加成功，返回一个 True。\n4. 运行程序，用 PostMan 来测试。\n\n打开 PostMan：\n1. 选择 POST 作为方法，URL=http://localhost:8080/users/\n2. Headers：\n\t- Key: Content-Type\n\t- Value: application/json\n3. Body:\n\t- raw\n\t- JSON (application/json)\n\n如图：\n![post-add-user](/images/post-add-user.png)\n\n返回的结果得到 true。\n前往 http://localhost:8080/users 得到：\n![post-result](/images/post-result.png)\n\n## PUT 更新某个\n1. 在 UserService.java, 添加：\n\t```\n\tpublic boolean updateUserByName(User updatedUser, String name) {\n\t\tboolean isSuccess = false;\n\t\t\n\t\t// get user with request name and replace it\n\t\tfor (User currentUser : userList) {\n\t\t\tif (currentUser.getUserName().equals(name)) {\n\t\t\t\tint index = userList.indexOf(currentUser);\n\t\t\t\tuserList.set(index, updatedUser);\n\t\t\t\tisSuccess = true;\n\t\t\t} \n\t\t}\n\t\t\n\t\tif (!isSuccess) {\n\t\t\tSystem.err.println(\"There is no user called \" + name);\n\t\t}\n\t\t\n\t\treturn isSuccess;\n\t}\n\t```\n2. 在 UserController.java, 添加：\n\t```\n\t@RequestMapping(method=RequestMethod.PUT, value=\"/users/{name}\")\n\tpublic boolean updateUserByName(@RequestBody User user, @PathVariable String name) {\t\n\t\tboolean isSuccess = userService.updateUserByName(user, name);\n\t\treturn isSuccess;\n\t}\n\t```\n\t- `@RequestMapping(method=RequestMethod.PUT, value=\"/users/{name}\")`\n\t- `@RequestBody User user, @PathVariable String name`\n3. 用 name 来选中某个用户，用 user 来更新信息。 成功，返回 true。\n4. 运行程序，用 PostMan 来测试。\n\n打开 PostMan：\n1. 选择 PUT 作为方法, URL = http://localhost:8080/users/Melvin\n2. Headers：\n\t- Key: Content-Type\n\t- Value: application/json\n3. Body:\n\t- raw\n\t- JSON (application/json)\n\n如图：\n![put-update-user](/images/put-update-user.png)\n\n返回的结果得到 true。\n前往 http://localhost:8080/users 得到：\n![put-result](/images/put-result.png)\n\nMelvin 的信息已经被替换掉了。\n\n## DELETE 删除某个\n1. 在 UserService.java, 添加：\n\t```\n\tpublic boolean removeUserByName(String name) {\n\t\tboolean isSuccess = false;\n\t\ttry {\n\t\t\tisSuccess = userList.removeIf(user -> user.getUserName().equals(name));\n\t\t\tif (!isSuccess) {\n\t\t\t\tSystem.err.println(\"There is no user called \" + name);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tSystem.err.println(\"Fail to remove user called \" + name);\n\t\t}\n\t\t\n\t\treturn isSuccess;\n\t}\n\t```\n2. 在 UserController.java, 添加：\n\t```\n\t@RequestMapping(method=RequestMethod.DELETE, value=\"/users/{name}\")\n\tpublic boolean removeUserByName(@PathVariable String name) {\t\n\t\tboolean isSuccess = userService.removeUserByName(name);\n\t\treturn isSuccess;\n\t}\n\t```\n3. 用 name 来选中某个用户，删除成功，返回 true。\n4. 运行程序，用 PostMan 来测试。\n\n打开 PostMan：\n1. 选择 DELETE 作为方法, URL = http://localhost:8080/users/Grace\n2. 前往 http://localhost:8080/users 验证结果。\n\n\n# Web Application Layer\n\n\tHTML(view)\n\tcontroller.js\n\tservice.js \n\t===============\n\tcontroller.java\n\tservice.java\n\tDAO.java\n\t\t\t\n\n** 继续学习 -> [学习 Spring Boot - 2]()**","slug":"学习-Spring-Boot-1","published":1,"updated":"2017-12-23T06:55:33.530Z","_id":"cjbiug0il000zvwv477im0wrj","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>学习 Spring Boot 有一段时间，也看过很多人的教程，中途放弃了几次，又重新开始。<br>需要很不负责地说，有些教程确实因为时间的关系，已经不适合用来学习参考了。</p>\n<p>这篇博客包括以下内容：</p>\n<ol>\n<li>项目初始化<ul>\n<li>Maven 的作用</li>\n<li>内置 TomCat</li>\n</ul>\n</li>\n<li>运行项目，创建简单的 info 页面</li>\n<li>添加如下 Web Service<ul>\n<li>GET 获得全部</li>\n<li>GET 获得特定某个</li>\n<li>POST 添加</li>\n<li>PUT 更新某个</li>\n<li>DELETE 删除某个</li>\n</ul>\n</li>\n</ol>\n<a id=\"more\"></a>\n<h1 id=\"项目初始化\"><a href=\"#项目初始化\" class=\"headerlink\" title=\"项目初始化\"></a>项目初始化</h1><p>Spring Boot 常用的初始方式有三种：</p>\n<ul>\n<li>Spring Initializer</li>\n<li>Spring Boot CLI</li>\n<li>Spring Tool Suite</li>\n</ul>\n<p>后两者需要额外安装，我比较推荐使用 Spring Initializer 初始化之后，再导入到 Eclipse 中。</p>\n<h2 id=\"初始化操作\"><a href=\"#初始化操作\" class=\"headerlink\" title=\"初始化操作\"></a>初始化操作</h2><ol>\n<li>Go to <a href=\"https://start.spring.io/\" target=\"_blank\" rel=\"noopener\">https://start.spring.io/</a></li>\n<li>如图填写，在 <code>Search for dependencies</code> 下面填 <code>web</code> 之后选择，我们需要用到这个 Dependency。<br> <img src=\"/images/spring-init.png\" alt=\"spring-init\"></li>\n<li>点击 <code>Generate Project</code>，生成并且下载。 解压后放在 Eclipse 的 workspace 文件夹下面。</li>\n<li>打开 <code>Eclipse</code>, 右键-<code>Import..</code>-<code>Existing Maven Projects</code></li>\n<li>选择刚才解压的项目文件夹。例如：D:\\workspace\\SpringBootDemo</li>\n<li><code>Projects</code> 窗口中会出现 <code>pom.xml</code>，完成。</li>\n</ol>\n<p>可能碰到的问题：</p>\n<ul>\n<li>这里可能会出现 <code>Project build error</code>，到 pom.xml 里面，把 Parent 的版本改成 1.5.8 即可。 估计 1.5.9 以及以上的版本和我的 Maven 不合吧。</li>\n<li><code>Configuration is not up-to-date</code>： 右键项目-<code>Maven</code>-<code>Update Project</code>。</li>\n</ul>\n<p>效果如下：<br><img src=\"/images/springboot-structure.png\" alt=\"springboot-structure\"></p>\n<h2 id=\"Maven-的作用\"><a href=\"#Maven-的作用\" class=\"headerlink\" title=\"Maven 的作用\"></a>Maven 的作用</h2><p>在我的理解中，Maven 主要的作用就是帮助管理 library。 作为一个框架，Spring 会用到很多其他的库，这些库也有自己的版本以及各种更新。 Maven 可以帮助节约大量的操作。</p>\n<p>比如<code>spring-boot-starter-web</code>, 用到几十个库，自己下载再添加，费时且可能出错。<br>而在 Maven 的 pom.xml 文件中，输入下面这段代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependencies&gt;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\t&lt;dependency&gt;</span><br><span class=\"line\">\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">\t\t&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class=\"line\">\t&lt;/dependency&gt;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure></p>\n<p>保存后，系统会自动添加 <code>Maven Dependencies</code>，里面会有所有相关的库。<br>之后只需在 pom.xml 中修改，保存之后，系统会自动完成更新。</p>\n<h2 id=\"内置的-TomCat\"><a href=\"#内置的-TomCat\" class=\"headerlink\" title=\"内置的 TomCat\"></a>内置的 TomCat</h2><p>这是一个困扰我很长一段时间的问题，程序开始工作，向外发布信息，需要在一个 Server 上运作。 所以一般的 Web Project，我们都会添加 TomCat 作为服务器，程序运行在 TomCat 上面。</p>\n<p>但是对于 Spring Boot 来说，就不需要了，在这里，其实它只是一个普通的 Java Project。 只是内置了 TomCat，可以在<code>Maven Dependencies</code>中找到<code>tomcat-embed-core-8.5.23.jar</code>等库，说明事实上程序运行依然是通过 TomCat 完成，内置的好处就是…有太多好处了。</p>\n<p>所以只需要按照普通的 Java 程序来运行即可。</p>\n<h1 id=\"运行项目，创建简单的-info-页面\"><a href=\"#运行项目，创建简单的-info-页面\" class=\"headerlink\" title=\"运行项目，创建简单的 info 页面\"></a>运行项目，创建简单的 info 页面</h1><h2 id=\"运行项目\"><a href=\"#运行项目\" class=\"headerlink\" title=\"运行项目\"></a>运行项目</h2><p>打开 DemoApplication.java，如下代码已经自动生成：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.boot.SpringApplication;</span><br><span class=\"line\">import org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\">@SpringBootApplication</span><br><span class=\"line\">public class DemoApplication &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\tSpringApplication.run(DemoApplication.class, args);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>直接按照普通的程序运行即可。</p>\n<p>Console 里面会得到 Spring 图标，以及几个关键提示：</p>\n<ul>\n<li>Initializing Spring embedded WebApplicationContext</li>\n<li>Tomcat started on port(s): 8080 (http)</li>\n<li>Started DemoApplication in 1.509 seconds</li>\n</ul>\n<p>这样，程序已经开始在 TomCat 上运行了。</p>\n<p>打开 <code>http://localhost:8080/</code> 会得到 <code>Whitelabel Error Page</code>，因为我们还没有创建任何内容。<br>下面我们添加一个 Controller，来显示一些内容。</p>\n<h2 id=\"添加-info-页面\"><a href=\"#添加-info-页面\" class=\"headerlink\" title=\"添加 info 页面\"></a>添加 info 页面</h2><ol>\n<li>添加 package: <code>io.ryanluoxu.springboot.demo.controller</code></li>\n<li>在此 package 下面创建 InfoController.java, 如下： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\">@RestController</span><br><span class=\"line\">public class InfoController &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@RequestMapping(&quot;/info&quot;)</span><br><span class=\"line\">\tpublic String showInfo() &#123;</span><br><span class=\"line\">\t\tString info = &quot;This is a Spring Boot Starter Project by RyanLuoXu..&quot;;</span><br><span class=\"line\">\t\treturn info;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>这样，事实上已经创建了一个简单的 web service。<br>运行程序，前往 <a href=\"http://localhost:8080/info\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/info</a> 即可看到 info 的内容。</p>\n<p>这里我们只是返回了一个字符串，下面我们以 JSON 格式返回更多的信息。</p>\n<h2 id=\"添加-moreinfo-页面\"><a href=\"#添加-moreinfo-页面\" class=\"headerlink\" title=\"添加 moreinfo 页面\"></a>添加 moreinfo 页面</h2><ol>\n<li>添加 package: io.ryanluoxu.springboot.demo.model</li>\n<li><p>在此 package下面创建 Info.java，如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Info &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tprivate String description;</span><br><span class=\"line\">\tprivate String startDate;</span><br><span class=\"line\">\tprivate String author;</span><br><span class=\"line\">\tprivate String framework;</span><br><span class=\"line\">\tprivate String database;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t...setters and getters...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 InfoController.java 中添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(&quot;/moreinfo&quot;)</span><br><span class=\"line\">public Info showMoreInfo() &#123;</span><br><span class=\"line\">\tInfo info = new Info();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tinfo.setAuthor(&quot;RyanLuoXu&quot;);</span><br><span class=\"line\">\tinfo.setDatabase(&quot;PostgreSQL&quot;);</span><br><span class=\"line\">\tinfo.setDescription(&quot;This is a Spring Boot Starter Project&quot;);</span><br><span class=\"line\">\tinfo.setFramework(&quot;Spring Boot&quot;);</span><br><span class=\"line\">\tinfo.setStartDate(&quot;2017-12-23&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\treturn info;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>创建 info 为一个类</li>\n<li>然后在 showMoreInfo() 里面定义它的内容，并且返回含有多个信息的 info 对象</li>\n<li>info 会被自动转成 JSON 格式</li>\n</ul>\n</li>\n</ol>\n<p>运行程序，前往 <a href=\"http://localhost:8080/moreinfo\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/moreinfo</a> 即可看到 info 的内容。 如下：</p>\n<blockquote>\n<p>{<br>  “description”: “This is a Spring Boot Starter Project”,<br>  “startDate”: “2017-12-23”,<br>  “author”: “RyanLuoXu”,<br>  “framework”: “Spring Boot”,<br>  “database”: “PostgreSQL”<br>}</p>\n</blockquote>\n<p>这里为了方便，我们把信息直接放在了 Controller 里面，事实上 Controller 是通过调用 Service 里的方法得到信息的。<br>下面的例子会把这部分分离开来，并且创建几个常用的 web service。</p>\n<h1 id=\"添加-Web-Service-GET-POST-PUT-amp-DELETE\"><a href=\"#添加-Web-Service-GET-POST-PUT-amp-DELETE\" class=\"headerlink\" title=\"添加 Web Service : GET, POST, PUT &amp; DELETE\"></a>添加 Web Service : GET, POST, PUT &amp; DELETE</h1><p>这部分，我们新添加一个 User 类，实现对 user 信息的获取，更新，修改和删除。</p>\n<h2 id=\"GET-获得全部\"><a href=\"#GET-获得全部\" class=\"headerlink\" title=\"GET 获得全部\"></a>GET 获得全部</h2><ol>\n<li><p>在 io.ryanluoxu.springboot.demo.model 下面，创建 User.java， 如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class User &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String userName;</span><br><span class=\"line\">\tprivate int age;</span><br><span class=\"line\">\tprivate String nationality;</span><br><span class=\"line\"></span><br><span class=\"line\">\t...setters and getters...\t\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加 package: io.ryanluoxu.springboot.demo.service</p>\n</li>\n<li><p>在此 package 下面，创建 UserService.java, 如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Service</span><br><span class=\"line\">public class UserService &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tArrayList&lt;User&gt; userList = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic UserService() &#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t// create fake database here</span><br><span class=\"line\">\t\tUser user1 = new User();</span><br><span class=\"line\">\t\tuser1.setUserName(&quot;Melvin&quot;);</span><br><span class=\"line\">\t\tuser1.setAge(30);</span><br><span class=\"line\">\t\tuser1.setNationality(&quot;Singaporean&quot;);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tUser user2 = new User();</span><br><span class=\"line\">\t\tuser2.setUserName(&quot;Ryan&quot;);</span><br><span class=\"line\">\t\tuser2.setAge(36);</span><br><span class=\"line\">\t\tuser2.setNationality(&quot;American&quot;);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tUser user3 = new User();</span><br><span class=\"line\">\t\tuser3.setUserName(&quot;Hazel&quot;);</span><br><span class=\"line\">\t\tuser3.setAge(26);</span><br><span class=\"line\">\t\tuser3.setNationality(&quot;Chinese&quot;);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tuserList.add(user1);</span><br><span class=\"line\">\t\tuserList.add(user2);</span><br><span class=\"line\">\t\tuserList.add(user3);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 一旦获取 UserService 类的对象，该对象中自带以上虚拟的信息</span><br><span class=\"line\">// 后续可以连接数据库，用 DAO 来获取数据</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserService.java 里，添加 getUserList()：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public ArrayList&lt;User&gt; getUserList()&#123;</span><br><span class=\"line\">\treturn userList;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 io.ryanluoxu.springboot.demo.controller 下面，创建 UserController.java：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RestController</span><br><span class=\"line\">public class UserController &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@Autowired</span><br><span class=\"line\">\tprivate UserService userService;\t// get one time instance</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@RequestMapping(&quot;/users&quot;)\t\t\t// default method = SET</span><br><span class=\"line\">\tpublic ArrayList&lt;User&gt; getUserList()&#123;</span><br><span class=\"line\">\t\tArrayList&lt;User&gt; userList = userService.getUserList();</span><br><span class=\"line\">\t\treturn userList;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>这里获取了一个 userService 对象。 </li>\n<li>事实上是 Spring 巡视项目，根据 <code>@RestController</code> 和 <code>@Service</code> 创建了 userController 和 userService</li>\n<li>然后根据 <code>@Autowired</code> 将 userService 注入到 userController 中，所谓的依赖注入。</li>\n<li>当 ~/users 的 web service 被翻牌的时候，getUserList() 运行，通过 userService.getUserList() 得到信息，返回给呼叫该服务的前端。</li>\n</ul>\n</li>\n<li>运行程序, 前往 <a href=\"http://localhost:8080/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users</a> 得到：<br><img src=\"/images/get-uses.png\" alt=\"get-uses\"></li>\n</ol>\n<p>这里通过 URL，得到所有用户信息，下面获取特定某个人的信息。</p>\n<h2 id=\"GET-获得特定某个\"><a href=\"#GET-获得特定某个\" class=\"headerlink\" title=\"GET 获得特定某个\"></a>GET 获得特定某个</h2><ol>\n<li><p>在 UserService.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public User getUserByName(String name) &#123;</span><br><span class=\"line\">\tUser user  = userList.stream().filter(u -&gt; u.getUserName().equals(name)).findFirst().get();</span><br><span class=\"line\">\treturn user;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserController.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(&quot;/users/&#123;name&#125;&quot;)</span><br><span class=\"line\">public User getUserByName(@PathVariable String name) &#123;</span><br><span class=\"line\">\tUser user = userService.getUserByName(name);</span><br><span class=\"line\">\treturn user;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// link &#123;name&#125; to name; &#123;name1&#125; X</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>@RequestMapping(&quot;/users/{name}&quot;)</code></li>\n<li><code>@PathVariable String name</code></li>\n</ul>\n</li>\n<li>controller 根据前端过来的 name 参数，呼叫 userService。</li>\n<li>userService 在用户列表里找到符合条件的信息，返回给 controller。</li>\n<li>controller 再以 JSON 格式返回给前端</li>\n<li>运行程序, 前往 <a href=\"http://localhost:8080/users/Melvin\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users/Melvin</a>, 得到：<blockquote>\n<p>{<br>“userName”: “Melvin”,<br>“age”: 30,<br>“nationality”: “Singaporean”<br>}</p>\n</blockquote>\n</li>\n</ol>\n<p>对于 GET 来说，都是获取信息，当 URL 直接在浏览器上输入时，都是默认 GET 方法。<br>下面的添加，更新和删除需要借助额外的工具：PostMan。</p>\n<ul>\n<li><a href=\"https://www.getpostman.com/\" target=\"_blank\" rel=\"noopener\">https://www.getpostman.com/</a></li>\n<li>下载并安装</li>\n</ul>\n<h2 id=\"POST-添加\"><a href=\"#POST-添加\" class=\"headerlink\" title=\"POST 添加\"></a>POST 添加</h2><ol>\n<li><p>在 UserService.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public boolean addUser(User user) &#123;</span><br><span class=\"line\">\tboolean isSuccess = false;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\ttry &#123;</span><br><span class=\"line\">\t\tisSuccess = userList.add(user);\t\t// add user may fail when connect to database</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\tSystem.err.println(&quot;Fail to add user..&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserController.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(method=RequestMethod.POST, value=&quot;/users&quot;)</span><br><span class=\"line\">public boolean addUser(@RequestBody User user) &#123;\t// transfer RequestBody to User instance</span><br><span class=\"line\">\tboolean isSuccess = userService.addUser(user);</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>@RequestMapping(method=RequestMethod.POST, value=&quot;/users&quot;)</code></li>\n<li><code>@RequestBody User user</code></li>\n</ul>\n</li>\n<li>对于前端来说：<ul>\n<li>同样是 <code>http://localhost:8080/users/</code>，此时采用的是 POST 方法</li>\n<li>POST 的同时需要将添加的信息，以 JSON 的格式传递到 Controller</li>\n<li>Controller 再用 <code>@RequestBody User user</code> 传递给 Service</li>\n<li>Service 添加成功，返回一个 True。</li>\n</ul>\n</li>\n<li>运行程序，用 PostMan 来测试。</li>\n</ol>\n<p>打开 PostMan：</p>\n<ol>\n<li>选择 POST 作为方法，URL=<a href=\"http://localhost:8080/users/\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users/</a></li>\n<li>Headers：<ul>\n<li>Key: Content-Type</li>\n<li>Value: application/json</li>\n</ul>\n</li>\n<li>Body:<ul>\n<li>raw</li>\n<li>JSON (application/json)</li>\n</ul>\n</li>\n</ol>\n<p>如图：<br><img src=\"/images/post-add-user.png\" alt=\"post-add-user\"></p>\n<p>返回的结果得到 true。<br>前往 <a href=\"http://localhost:8080/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users</a> 得到：<br><img src=\"/images/post-result.png\" alt=\"post-result\"></p>\n<h2 id=\"PUT-更新某个\"><a href=\"#PUT-更新某个\" class=\"headerlink\" title=\"PUT 更新某个\"></a>PUT 更新某个</h2><ol>\n<li><p>在 UserService.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public boolean updateUserByName(User updatedUser, String name) &#123;</span><br><span class=\"line\">\tboolean isSuccess = false;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t// get user with request name and replace it</span><br><span class=\"line\">\tfor (User currentUser : userList) &#123;</span><br><span class=\"line\">\t\tif (currentUser.getUserName().equals(name)) &#123;</span><br><span class=\"line\">\t\t\tint index = userList.indexOf(currentUser);</span><br><span class=\"line\">\t\t\tuserList.set(index, updatedUser);</span><br><span class=\"line\">\t\t\tisSuccess = true;</span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tif (!isSuccess) &#123;</span><br><span class=\"line\">\t\tSystem.err.println(&quot;There is no user called &quot; + name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserController.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(method=RequestMethod.PUT, value=&quot;/users/&#123;name&#125;&quot;)</span><br><span class=\"line\">public boolean updateUserByName(@RequestBody User user, @PathVariable String name) &#123;\t</span><br><span class=\"line\">\tboolean isSuccess = userService.updateUserByName(user, name);</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>@RequestMapping(method=RequestMethod.PUT, value=&quot;/users/{name}&quot;)</code></li>\n<li><code>@RequestBody User user, @PathVariable String name</code></li>\n</ul>\n</li>\n<li>用 name 来选中某个用户，用 user 来更新信息。 成功，返回 true。</li>\n<li>运行程序，用 PostMan 来测试。</li>\n</ol>\n<p>打开 PostMan：</p>\n<ol>\n<li>选择 PUT 作为方法, URL = <a href=\"http://localhost:8080/users/Melvin\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users/Melvin</a></li>\n<li>Headers：<ul>\n<li>Key: Content-Type</li>\n<li>Value: application/json</li>\n</ul>\n</li>\n<li>Body:<ul>\n<li>raw</li>\n<li>JSON (application/json)</li>\n</ul>\n</li>\n</ol>\n<p>如图：<br><img src=\"/images/put-update-user.png\" alt=\"put-update-user\"></p>\n<p>返回的结果得到 true。<br>前往 <a href=\"http://localhost:8080/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users</a> 得到：<br><img src=\"/images/put-result.png\" alt=\"put-result\"></p>\n<p>Melvin 的信息已经被替换掉了。</p>\n<h2 id=\"DELETE-删除某个\"><a href=\"#DELETE-删除某个\" class=\"headerlink\" title=\"DELETE 删除某个\"></a>DELETE 删除某个</h2><ol>\n<li><p>在 UserService.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public boolean removeUserByName(String name) &#123;</span><br><span class=\"line\">\tboolean isSuccess = false;</span><br><span class=\"line\">\ttry &#123;</span><br><span class=\"line\">\t\tisSuccess = userList.removeIf(user -&gt; user.getUserName().equals(name));</span><br><span class=\"line\">\t\tif (!isSuccess) &#123;</span><br><span class=\"line\">\t\t\tSystem.err.println(&quot;There is no user called &quot; + name);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\tSystem.err.println(&quot;Fail to remove user called &quot; + name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserController.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(method=RequestMethod.DELETE, value=&quot;/users/&#123;name&#125;&quot;)</span><br><span class=\"line\">public boolean removeUserByName(@PathVariable String name) &#123;\t</span><br><span class=\"line\">\tboolean isSuccess = userService.removeUserByName(name);</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>用 name 来选中某个用户，删除成功，返回 true。</p>\n</li>\n<li>运行程序，用 PostMan 来测试。</li>\n</ol>\n<p>打开 PostMan：</p>\n<ol>\n<li>选择 DELETE 作为方法, URL = <a href=\"http://localhost:8080/users/Grace\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users/Grace</a></li>\n<li>前往 <a href=\"http://localhost:8080/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users</a> 验证结果。</li>\n</ol>\n<h1 id=\"Web-Application-Layer\"><a href=\"#Web-Application-Layer\" class=\"headerlink\" title=\"Web Application Layer\"></a>Web Application Layer</h1><pre><code>HTML(view)\ncontroller.js\nservice.js \n===============\ncontroller.java\nservice.java\nDAO.java\n</code></pre><p><strong> 继续学习 -&gt; <a href=\"\">学习 Spring Boot - 2</a></strong></p>\n","site":{"data":{}},"excerpt":"<p><strong>声明：本文为 ryanluoxu 原创文章，欢迎转载，请在明显位置注明出处。</strong></p>\n<p>学习 Spring Boot 有一段时间，也看过很多人的教程，中途放弃了几次，又重新开始。<br>需要很不负责地说，有些教程确实因为时间的关系，已经不适合用来学习参考了。</p>\n<p>这篇博客包括以下内容：</p>\n<ol>\n<li>项目初始化<ul>\n<li>Maven 的作用</li>\n<li>内置 TomCat</li>\n</ul>\n</li>\n<li>运行项目，创建简单的 info 页面</li>\n<li>添加如下 Web Service<ul>\n<li>GET 获得全部</li>\n<li>GET 获得特定某个</li>\n<li>POST 添加</li>\n<li>PUT 更新某个</li>\n<li>DELETE 删除某个</li>\n</ul>\n</li>\n</ol>","more":"<h1 id=\"项目初始化\"><a href=\"#项目初始化\" class=\"headerlink\" title=\"项目初始化\"></a>项目初始化</h1><p>Spring Boot 常用的初始方式有三种：</p>\n<ul>\n<li>Spring Initializer</li>\n<li>Spring Boot CLI</li>\n<li>Spring Tool Suite</li>\n</ul>\n<p>后两者需要额外安装，我比较推荐使用 Spring Initializer 初始化之后，再导入到 Eclipse 中。</p>\n<h2 id=\"初始化操作\"><a href=\"#初始化操作\" class=\"headerlink\" title=\"初始化操作\"></a>初始化操作</h2><ol>\n<li>Go to <a href=\"https://start.spring.io/\" target=\"_blank\" rel=\"noopener\">https://start.spring.io/</a></li>\n<li>如图填写，在 <code>Search for dependencies</code> 下面填 <code>web</code> 之后选择，我们需要用到这个 Dependency。<br> <img src=\"/images/spring-init.png\" alt=\"spring-init\"></li>\n<li>点击 <code>Generate Project</code>，生成并且下载。 解压后放在 Eclipse 的 workspace 文件夹下面。</li>\n<li>打开 <code>Eclipse</code>, 右键-<code>Import..</code>-<code>Existing Maven Projects</code></li>\n<li>选择刚才解压的项目文件夹。例如：D:\\workspace\\SpringBootDemo</li>\n<li><code>Projects</code> 窗口中会出现 <code>pom.xml</code>，完成。</li>\n</ol>\n<p>可能碰到的问题：</p>\n<ul>\n<li>这里可能会出现 <code>Project build error</code>，到 pom.xml 里面，把 Parent 的版本改成 1.5.8 即可。 估计 1.5.9 以及以上的版本和我的 Maven 不合吧。</li>\n<li><code>Configuration is not up-to-date</code>： 右键项目-<code>Maven</code>-<code>Update Project</code>。</li>\n</ul>\n<p>效果如下：<br><img src=\"/images/springboot-structure.png\" alt=\"springboot-structure\"></p>\n<h2 id=\"Maven-的作用\"><a href=\"#Maven-的作用\" class=\"headerlink\" title=\"Maven 的作用\"></a>Maven 的作用</h2><p>在我的理解中，Maven 主要的作用就是帮助管理 library。 作为一个框架，Spring 会用到很多其他的库，这些库也有自己的版本以及各种更新。 Maven 可以帮助节约大量的操作。</p>\n<p>比如<code>spring-boot-starter-web</code>, 用到几十个库，自己下载再添加，费时且可能出错。<br>而在 Maven 的 pom.xml 文件中，输入下面这段代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependencies&gt;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\t&lt;dependency&gt;</span><br><span class=\"line\">\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">\t\t&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class=\"line\">\t&lt;/dependency&gt;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure></p>\n<p>保存后，系统会自动添加 <code>Maven Dependencies</code>，里面会有所有相关的库。<br>之后只需在 pom.xml 中修改，保存之后，系统会自动完成更新。</p>\n<h2 id=\"内置的-TomCat\"><a href=\"#内置的-TomCat\" class=\"headerlink\" title=\"内置的 TomCat\"></a>内置的 TomCat</h2><p>这是一个困扰我很长一段时间的问题，程序开始工作，向外发布信息，需要在一个 Server 上运作。 所以一般的 Web Project，我们都会添加 TomCat 作为服务器，程序运行在 TomCat 上面。</p>\n<p>但是对于 Spring Boot 来说，就不需要了，在这里，其实它只是一个普通的 Java Project。 只是内置了 TomCat，可以在<code>Maven Dependencies</code>中找到<code>tomcat-embed-core-8.5.23.jar</code>等库，说明事实上程序运行依然是通过 TomCat 完成，内置的好处就是…有太多好处了。</p>\n<p>所以只需要按照普通的 Java 程序来运行即可。</p>\n<h1 id=\"运行项目，创建简单的-info-页面\"><a href=\"#运行项目，创建简单的-info-页面\" class=\"headerlink\" title=\"运行项目，创建简单的 info 页面\"></a>运行项目，创建简单的 info 页面</h1><h2 id=\"运行项目\"><a href=\"#运行项目\" class=\"headerlink\" title=\"运行项目\"></a>运行项目</h2><p>打开 DemoApplication.java，如下代码已经自动生成：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.boot.SpringApplication;</span><br><span class=\"line\">import org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\">@SpringBootApplication</span><br><span class=\"line\">public class DemoApplication &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\tSpringApplication.run(DemoApplication.class, args);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>直接按照普通的程序运行即可。</p>\n<p>Console 里面会得到 Spring 图标，以及几个关键提示：</p>\n<ul>\n<li>Initializing Spring embedded WebApplicationContext</li>\n<li>Tomcat started on port(s): 8080 (http)</li>\n<li>Started DemoApplication in 1.509 seconds</li>\n</ul>\n<p>这样，程序已经开始在 TomCat 上运行了。</p>\n<p>打开 <code>http://localhost:8080/</code> 会得到 <code>Whitelabel Error Page</code>，因为我们还没有创建任何内容。<br>下面我们添加一个 Controller，来显示一些内容。</p>\n<h2 id=\"添加-info-页面\"><a href=\"#添加-info-页面\" class=\"headerlink\" title=\"添加 info 页面\"></a>添加 info 页面</h2><ol>\n<li>添加 package: <code>io.ryanluoxu.springboot.demo.controller</code></li>\n<li>在此 package 下面创建 InfoController.java, 如下： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\">@RestController</span><br><span class=\"line\">public class InfoController &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t@RequestMapping(&quot;/info&quot;)</span><br><span class=\"line\">\tpublic String showInfo() &#123;</span><br><span class=\"line\">\t\tString info = &quot;This is a Spring Boot Starter Project by RyanLuoXu..&quot;;</span><br><span class=\"line\">\t\treturn info;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>这样，事实上已经创建了一个简单的 web service。<br>运行程序，前往 <a href=\"http://localhost:8080/info\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/info</a> 即可看到 info 的内容。</p>\n<p>这里我们只是返回了一个字符串，下面我们以 JSON 格式返回更多的信息。</p>\n<h2 id=\"添加-moreinfo-页面\"><a href=\"#添加-moreinfo-页面\" class=\"headerlink\" title=\"添加 moreinfo 页面\"></a>添加 moreinfo 页面</h2><ol>\n<li>添加 package: io.ryanluoxu.springboot.demo.model</li>\n<li><p>在此 package下面创建 Info.java，如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Info &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tprivate String description;</span><br><span class=\"line\">\tprivate String startDate;</span><br><span class=\"line\">\tprivate String author;</span><br><span class=\"line\">\tprivate String framework;</span><br><span class=\"line\">\tprivate String database;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t...setters and getters...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 InfoController.java 中添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(&quot;/moreinfo&quot;)</span><br><span class=\"line\">public Info showMoreInfo() &#123;</span><br><span class=\"line\">\tInfo info = new Info();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tinfo.setAuthor(&quot;RyanLuoXu&quot;);</span><br><span class=\"line\">\tinfo.setDatabase(&quot;PostgreSQL&quot;);</span><br><span class=\"line\">\tinfo.setDescription(&quot;This is a Spring Boot Starter Project&quot;);</span><br><span class=\"line\">\tinfo.setFramework(&quot;Spring Boot&quot;);</span><br><span class=\"line\">\tinfo.setStartDate(&quot;2017-12-23&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\treturn info;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>创建 info 为一个类</li>\n<li>然后在 showMoreInfo() 里面定义它的内容，并且返回含有多个信息的 info 对象</li>\n<li>info 会被自动转成 JSON 格式</li>\n</ul>\n</li>\n</ol>\n<p>运行程序，前往 <a href=\"http://localhost:8080/moreinfo\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/moreinfo</a> 即可看到 info 的内容。 如下：</p>\n<blockquote>\n<p>{<br>  “description”: “This is a Spring Boot Starter Project”,<br>  “startDate”: “2017-12-23”,<br>  “author”: “RyanLuoXu”,<br>  “framework”: “Spring Boot”,<br>  “database”: “PostgreSQL”<br>}</p>\n</blockquote>\n<p>这里为了方便，我们把信息直接放在了 Controller 里面，事实上 Controller 是通过调用 Service 里的方法得到信息的。<br>下面的例子会把这部分分离开来，并且创建几个常用的 web service。</p>\n<h1 id=\"添加-Web-Service-GET-POST-PUT-amp-DELETE\"><a href=\"#添加-Web-Service-GET-POST-PUT-amp-DELETE\" class=\"headerlink\" title=\"添加 Web Service : GET, POST, PUT &amp; DELETE\"></a>添加 Web Service : GET, POST, PUT &amp; DELETE</h1><p>这部分，我们新添加一个 User 类，实现对 user 信息的获取，更新，修改和删除。</p>\n<h2 id=\"GET-获得全部\"><a href=\"#GET-获得全部\" class=\"headerlink\" title=\"GET 获得全部\"></a>GET 获得全部</h2><ol>\n<li><p>在 io.ryanluoxu.springboot.demo.model 下面，创建 User.java， 如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class User &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprivate String userName;</span><br><span class=\"line\">\tprivate int age;</span><br><span class=\"line\">\tprivate String nationality;</span><br><span class=\"line\"></span><br><span class=\"line\">\t...setters and getters...\t\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加 package: io.ryanluoxu.springboot.demo.service</p>\n</li>\n<li><p>在此 package 下面，创建 UserService.java, 如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Service</span><br><span class=\"line\">public class UserService &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tArrayList&lt;User&gt; userList = new ArrayList&lt;&gt;();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic UserService() &#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t// create fake database here</span><br><span class=\"line\">\t\tUser user1 = new User();</span><br><span class=\"line\">\t\tuser1.setUserName(&quot;Melvin&quot;);</span><br><span class=\"line\">\t\tuser1.setAge(30);</span><br><span class=\"line\">\t\tuser1.setNationality(&quot;Singaporean&quot;);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tUser user2 = new User();</span><br><span class=\"line\">\t\tuser2.setUserName(&quot;Ryan&quot;);</span><br><span class=\"line\">\t\tuser2.setAge(36);</span><br><span class=\"line\">\t\tuser2.setNationality(&quot;American&quot;);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tUser user3 = new User();</span><br><span class=\"line\">\t\tuser3.setUserName(&quot;Hazel&quot;);</span><br><span class=\"line\">\t\tuser3.setAge(26);</span><br><span class=\"line\">\t\tuser3.setNationality(&quot;Chinese&quot;);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tuserList.add(user1);</span><br><span class=\"line\">\t\tuserList.add(user2);</span><br><span class=\"line\">\t\tuserList.add(user3);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 一旦获取 UserService 类的对象，该对象中自带以上虚拟的信息</span><br><span class=\"line\">// 后续可以连接数据库，用 DAO 来获取数据</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserService.java 里，添加 getUserList()：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public ArrayList&lt;User&gt; getUserList()&#123;</span><br><span class=\"line\">\treturn userList;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 io.ryanluoxu.springboot.demo.controller 下面，创建 UserController.java：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RestController</span><br><span class=\"line\">public class UserController &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@Autowired</span><br><span class=\"line\">\tprivate UserService userService;\t// get one time instance</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t@RequestMapping(&quot;/users&quot;)\t\t\t// default method = SET</span><br><span class=\"line\">\tpublic ArrayList&lt;User&gt; getUserList()&#123;</span><br><span class=\"line\">\t\tArrayList&lt;User&gt; userList = userService.getUserList();</span><br><span class=\"line\">\t\treturn userList;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>这里获取了一个 userService 对象。 </li>\n<li>事实上是 Spring 巡视项目，根据 <code>@RestController</code> 和 <code>@Service</code> 创建了 userController 和 userService</li>\n<li>然后根据 <code>@Autowired</code> 将 userService 注入到 userController 中，所谓的依赖注入。</li>\n<li>当 ~/users 的 web service 被翻牌的时候，getUserList() 运行，通过 userService.getUserList() 得到信息，返回给呼叫该服务的前端。</li>\n</ul>\n</li>\n<li>运行程序, 前往 <a href=\"http://localhost:8080/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users</a> 得到：<br><img src=\"/images/get-uses.png\" alt=\"get-uses\"></li>\n</ol>\n<p>这里通过 URL，得到所有用户信息，下面获取特定某个人的信息。</p>\n<h2 id=\"GET-获得特定某个\"><a href=\"#GET-获得特定某个\" class=\"headerlink\" title=\"GET 获得特定某个\"></a>GET 获得特定某个</h2><ol>\n<li><p>在 UserService.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public User getUserByName(String name) &#123;</span><br><span class=\"line\">\tUser user  = userList.stream().filter(u -&gt; u.getUserName().equals(name)).findFirst().get();</span><br><span class=\"line\">\treturn user;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserController.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(&quot;/users/&#123;name&#125;&quot;)</span><br><span class=\"line\">public User getUserByName(@PathVariable String name) &#123;</span><br><span class=\"line\">\tUser user = userService.getUserByName(name);</span><br><span class=\"line\">\treturn user;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// link &#123;name&#125; to name; &#123;name1&#125; X</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>@RequestMapping(&quot;/users/{name}&quot;)</code></li>\n<li><code>@PathVariable String name</code></li>\n</ul>\n</li>\n<li>controller 根据前端过来的 name 参数，呼叫 userService。</li>\n<li>userService 在用户列表里找到符合条件的信息，返回给 controller。</li>\n<li>controller 再以 JSON 格式返回给前端</li>\n<li>运行程序, 前往 <a href=\"http://localhost:8080/users/Melvin\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users/Melvin</a>, 得到：<blockquote>\n<p>{<br>“userName”: “Melvin”,<br>“age”: 30,<br>“nationality”: “Singaporean”<br>}</p>\n</blockquote>\n</li>\n</ol>\n<p>对于 GET 来说，都是获取信息，当 URL 直接在浏览器上输入时，都是默认 GET 方法。<br>下面的添加，更新和删除需要借助额外的工具：PostMan。</p>\n<ul>\n<li><a href=\"https://www.getpostman.com/\" target=\"_blank\" rel=\"noopener\">https://www.getpostman.com/</a></li>\n<li>下载并安装</li>\n</ul>\n<h2 id=\"POST-添加\"><a href=\"#POST-添加\" class=\"headerlink\" title=\"POST 添加\"></a>POST 添加</h2><ol>\n<li><p>在 UserService.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public boolean addUser(User user) &#123;</span><br><span class=\"line\">\tboolean isSuccess = false;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\ttry &#123;</span><br><span class=\"line\">\t\tisSuccess = userList.add(user);\t\t// add user may fail when connect to database</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\tSystem.err.println(&quot;Fail to add user..&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserController.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(method=RequestMethod.POST, value=&quot;/users&quot;)</span><br><span class=\"line\">public boolean addUser(@RequestBody User user) &#123;\t// transfer RequestBody to User instance</span><br><span class=\"line\">\tboolean isSuccess = userService.addUser(user);</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>@RequestMapping(method=RequestMethod.POST, value=&quot;/users&quot;)</code></li>\n<li><code>@RequestBody User user</code></li>\n</ul>\n</li>\n<li>对于前端来说：<ul>\n<li>同样是 <code>http://localhost:8080/users/</code>，此时采用的是 POST 方法</li>\n<li>POST 的同时需要将添加的信息，以 JSON 的格式传递到 Controller</li>\n<li>Controller 再用 <code>@RequestBody User user</code> 传递给 Service</li>\n<li>Service 添加成功，返回一个 True。</li>\n</ul>\n</li>\n<li>运行程序，用 PostMan 来测试。</li>\n</ol>\n<p>打开 PostMan：</p>\n<ol>\n<li>选择 POST 作为方法，URL=<a href=\"http://localhost:8080/users/\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users/</a></li>\n<li>Headers：<ul>\n<li>Key: Content-Type</li>\n<li>Value: application/json</li>\n</ul>\n</li>\n<li>Body:<ul>\n<li>raw</li>\n<li>JSON (application/json)</li>\n</ul>\n</li>\n</ol>\n<p>如图：<br><img src=\"/images/post-add-user.png\" alt=\"post-add-user\"></p>\n<p>返回的结果得到 true。<br>前往 <a href=\"http://localhost:8080/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users</a> 得到：<br><img src=\"/images/post-result.png\" alt=\"post-result\"></p>\n<h2 id=\"PUT-更新某个\"><a href=\"#PUT-更新某个\" class=\"headerlink\" title=\"PUT 更新某个\"></a>PUT 更新某个</h2><ol>\n<li><p>在 UserService.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public boolean updateUserByName(User updatedUser, String name) &#123;</span><br><span class=\"line\">\tboolean isSuccess = false;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t// get user with request name and replace it</span><br><span class=\"line\">\tfor (User currentUser : userList) &#123;</span><br><span class=\"line\">\t\tif (currentUser.getUserName().equals(name)) &#123;</span><br><span class=\"line\">\t\t\tint index = userList.indexOf(currentUser);</span><br><span class=\"line\">\t\t\tuserList.set(index, updatedUser);</span><br><span class=\"line\">\t\t\tisSuccess = true;</span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tif (!isSuccess) &#123;</span><br><span class=\"line\">\t\tSystem.err.println(&quot;There is no user called &quot; + name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserController.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(method=RequestMethod.PUT, value=&quot;/users/&#123;name&#125;&quot;)</span><br><span class=\"line\">public boolean updateUserByName(@RequestBody User user, @PathVariable String name) &#123;\t</span><br><span class=\"line\">\tboolean isSuccess = userService.updateUserByName(user, name);</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>@RequestMapping(method=RequestMethod.PUT, value=&quot;/users/{name}&quot;)</code></li>\n<li><code>@RequestBody User user, @PathVariable String name</code></li>\n</ul>\n</li>\n<li>用 name 来选中某个用户，用 user 来更新信息。 成功，返回 true。</li>\n<li>运行程序，用 PostMan 来测试。</li>\n</ol>\n<p>打开 PostMan：</p>\n<ol>\n<li>选择 PUT 作为方法, URL = <a href=\"http://localhost:8080/users/Melvin\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users/Melvin</a></li>\n<li>Headers：<ul>\n<li>Key: Content-Type</li>\n<li>Value: application/json</li>\n</ul>\n</li>\n<li>Body:<ul>\n<li>raw</li>\n<li>JSON (application/json)</li>\n</ul>\n</li>\n</ol>\n<p>如图：<br><img src=\"/images/put-update-user.png\" alt=\"put-update-user\"></p>\n<p>返回的结果得到 true。<br>前往 <a href=\"http://localhost:8080/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users</a> 得到：<br><img src=\"/images/put-result.png\" alt=\"put-result\"></p>\n<p>Melvin 的信息已经被替换掉了。</p>\n<h2 id=\"DELETE-删除某个\"><a href=\"#DELETE-删除某个\" class=\"headerlink\" title=\"DELETE 删除某个\"></a>DELETE 删除某个</h2><ol>\n<li><p>在 UserService.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public boolean removeUserByName(String name) &#123;</span><br><span class=\"line\">\tboolean isSuccess = false;</span><br><span class=\"line\">\ttry &#123;</span><br><span class=\"line\">\t\tisSuccess = userList.removeIf(user -&gt; user.getUserName().equals(name));</span><br><span class=\"line\">\t\tif (!isSuccess) &#123;</span><br><span class=\"line\">\t\t\tSystem.err.println(&quot;There is no user called &quot; + name);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; catch (Exception e) &#123;</span><br><span class=\"line\">\t\tSystem.err.println(&quot;Fail to remove user called &quot; + name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 UserController.java, 添加：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RequestMapping(method=RequestMethod.DELETE, value=&quot;/users/&#123;name&#125;&quot;)</span><br><span class=\"line\">public boolean removeUserByName(@PathVariable String name) &#123;\t</span><br><span class=\"line\">\tboolean isSuccess = userService.removeUserByName(name);</span><br><span class=\"line\">\treturn isSuccess;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>用 name 来选中某个用户，删除成功，返回 true。</p>\n</li>\n<li>运行程序，用 PostMan 来测试。</li>\n</ol>\n<p>打开 PostMan：</p>\n<ol>\n<li>选择 DELETE 作为方法, URL = <a href=\"http://localhost:8080/users/Grace\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users/Grace</a></li>\n<li>前往 <a href=\"http://localhost:8080/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/users</a> 验证结果。</li>\n</ol>\n<h1 id=\"Web-Application-Layer\"><a href=\"#Web-Application-Layer\" class=\"headerlink\" title=\"Web Application Layer\"></a>Web Application Layer</h1><pre><code>HTML(view)\ncontroller.js\nservice.js \n===============\ncontroller.java\nservice.java\nDAO.java\n</code></pre><p><strong> 继续学习 -&gt; <a href=\"\">学习 Spring Boot - 2</a></strong></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjbiug0hw0000vwv40uh76uye","category_id":"cjbiug0i30004vwv4rzkqz3wf","_id":"cjbiug0ib000evwv4sl9glvvo"},{"post_id":"cjbiug0i70009vwv4ztcfelag","category_id":"cjbiug0i30004vwv4rzkqz3wf","_id":"cjbiug0id000ivwv4ask93ygz"},{"post_id":"cjbiug0i00002vwv4xszesd7n","category_id":"cjbiug0i7000avwv46p2v4usf","_id":"cjbiug0if000kvwv46hio4gkd"},{"post_id":"cjbiug0ia000dvwv421e9vmdv","category_id":"cjbiug0i30004vwv4rzkqz3wf","_id":"cjbiug0ig000ovwv4mod0vt45"},{"post_id":"cjbiug0i40006vwv4bh4rm6s5","category_id":"cjbiug0ic000fvwv4oo6kf3bt","_id":"cjbiug0ih000qvwv47jqjrkua"},{"post_id":"cjbiug0i60008vwv4iy276k48","category_id":"cjbiug0if000lvwv4b8znm3sh","_id":"cjbiug0il000yvwv4tht8mkio"},{"post_id":"cjbiug0i9000cvwv4106x7m1a","category_id":"cjbiug0ic000fvwv4oo6kf3bt","_id":"cjbiug0im0013vwv4x07lqmrz"},{"post_id":"cjbiug0ij000vvwv4032saw3i","category_id":"cjbiug0i30004vwv4rzkqz3wf","_id":"cjbiug0in0016vwv4h6gze6vs"},{"post_id":"cjbiug0ic000hvwv40xca1zsm","category_id":"cjbiug0ik000xvwv46ru05nwp","_id":"cjbiug0io0018vwv4n40os054"},{"post_id":"cjbiug0ie000jvwv4xz4eiuf4","category_id":"cjbiug0ik000xvwv46ru05nwp","_id":"cjbiug0io001bvwv48o53hkja"},{"post_id":"cjbiug0if000nvwv4be3tf6v1","category_id":"cjbiug0ik000xvwv46ru05nwp","_id":"cjbiug0ip001evwv4amxgifo9"},{"post_id":"cjbiug0ig000pvwv4r98hdowi","category_id":"cjbiug0ik000xvwv46ru05nwp","_id":"cjbiug0iq001hvwv4rml9addk"},{"post_id":"cjbiug0ih000tvwv4lk3cq2j7","category_id":"cjbiug0ip001dvwv4l0f0jgtt","_id":"cjbiug0ir001mvwv4sw11wcas"},{"post_id":"cjbiug0il000zvwv477im0wrj","category_id":"cjbiug0iq001ivwv4thrnx74z","_id":"cjbiug0is001qvwv4v4paxw5y"}],"PostTag":[{"post_id":"cjbiug0hw0000vwv40uh76uye","tag_id":"cjbiug0i40005vwv495m5jje6","_id":"cjbiug0ij000uvwv4dfi4rpvx"},{"post_id":"cjbiug0hw0000vwv40uh76uye","tag_id":"cjbiug0i8000bvwv4rrat9ha3","_id":"cjbiug0ik000wvwv4j390tooi"},{"post_id":"cjbiug0hw0000vwv40uh76uye","tag_id":"cjbiug0ic000gvwv48hzaqrb6","_id":"cjbiug0im0011vwv4shdgjmyi"},{"post_id":"cjbiug0hw0000vwv40uh76uye","tag_id":"cjbiug0if000mvwv4syk720ut","_id":"cjbiug0im0012vwv4s5zdrzln"},{"post_id":"cjbiug0i00002vwv4xszesd7n","tag_id":"cjbiug0ih000svwv4qh6yw4tp","_id":"cjbiug0iq001gvwv410jrdaui"},{"post_id":"cjbiug0i00002vwv4xszesd7n","tag_id":"cjbiug0il0010vwv4isv8uqzy","_id":"cjbiug0iq001jvwv42ci5qxx4"},{"post_id":"cjbiug0i00002vwv4xszesd7n","tag_id":"cjbiug0in0015vwv4twpqjmdb","_id":"cjbiug0ir001lvwv48udpbk99"},{"post_id":"cjbiug0i00002vwv4xszesd7n","tag_id":"cjbiug0io0019vwv4vkn97osd","_id":"cjbiug0is001nvwv4zgcri6q4"},{"post_id":"cjbiug0i00002vwv4xszesd7n","tag_id":"cjbiug0ip001cvwv4viccso2k","_id":"cjbiug0is001pvwv48zs7jpj3"},{"post_id":"cjbiug0i40006vwv4bh4rm6s5","tag_id":"cjbiug0iq001fvwv40j8jf4gl","_id":"cjbiug0it001rvwv4bb5my1bb"},{"post_id":"cjbiug0i40006vwv4bh4rm6s5","tag_id":"cjbiug0ir001kvwv4ytdnanqt","_id":"cjbiug0it001tvwv4t6lle0eu"},{"post_id":"cjbiug0i60008vwv4iy276k48","tag_id":"cjbiug0is001ovwv4c3rben5k","_id":"cjbiug0iu001vvwv42jjf9qcs"},{"post_id":"cjbiug0i60008vwv4iy276k48","tag_id":"cjbiug0it001svwv4lwra1o8e","_id":"cjbiug0iu001wvwv4p3teba5l"},{"post_id":"cjbiug0i70009vwv4ztcfelag","tag_id":"cjbiug0it001uvwv4w02jnkt0","_id":"cjbiug0ix0023vwv41zds8u4r"},{"post_id":"cjbiug0i70009vwv4ztcfelag","tag_id":"cjbiug0iu001xvwv4h4znr8u0","_id":"cjbiug0ix0024vwv47z2vvl6f"},{"post_id":"cjbiug0i70009vwv4ztcfelag","tag_id":"cjbiug0iv001yvwv4xblgvuk8","_id":"cjbiug0ix0026vwv48g06skhf"},{"post_id":"cjbiug0i70009vwv4ztcfelag","tag_id":"cjbiug0iv001zvwv465y3us9o","_id":"cjbiug0ix0027vwv4xxf28yam"},{"post_id":"cjbiug0i70009vwv4ztcfelag","tag_id":"cjbiug0iw0020vwv4la1nxxvw","_id":"cjbiug0ix0029vwv47knvzgk3"},{"post_id":"cjbiug0i70009vwv4ztcfelag","tag_id":"cjbiug0iw0021vwv4wzdrwfri","_id":"cjbiug0iy002avwv4pv4b8dme"},{"post_id":"cjbiug0i9000cvwv4106x7m1a","tag_id":"cjbiug0iw0022vwv4i2o6xsvp","_id":"cjbiug0iy002cvwv4wxtgu0ay"},{"post_id":"cjbiug0i9000cvwv4106x7m1a","tag_id":"cjbiug0ix0025vwv421f1tsuh","_id":"cjbiug0iy002dvwv4cue7o9bc"},{"post_id":"cjbiug0i9000cvwv4106x7m1a","tag_id":"cjbiug0it001svwv4lwra1o8e","_id":"cjbiug0iz002fvwv4magyhugs"},{"post_id":"cjbiug0ia000dvwv421e9vmdv","tag_id":"cjbiug0it001uvwv4w02jnkt0","_id":"cjbiug0j0002jvwv4e8mzyslr"},{"post_id":"cjbiug0ia000dvwv421e9vmdv","tag_id":"cjbiug0iu001xvwv4h4znr8u0","_id":"cjbiug0j0002kvwv4uo39leqv"},{"post_id":"cjbiug0ia000dvwv421e9vmdv","tag_id":"cjbiug0iv001yvwv4xblgvuk8","_id":"cjbiug0j0002mvwv43d0lpaqu"},{"post_id":"cjbiug0ia000dvwv421e9vmdv","tag_id":"cjbiug0iv001zvwv465y3us9o","_id":"cjbiug0j0002nvwv4sxkp3krg"},{"post_id":"cjbiug0ic000hvwv40xca1zsm","tag_id":"cjbiug0j0002ivwv448hmtrl3","_id":"cjbiug0j1002svwv47qiur2f8"},{"post_id":"cjbiug0ic000hvwv40xca1zsm","tag_id":"cjbiug0j0002lvwv48hbon3ln","_id":"cjbiug0j2002tvwv4952i1157"},{"post_id":"cjbiug0ic000hvwv40xca1zsm","tag_id":"cjbiug0j0002ovwv4czp6btja","_id":"cjbiug0j2002vvwv4s74mjjkc"},{"post_id":"cjbiug0ic000hvwv40xca1zsm","tag_id":"cjbiug0j1002pvwv4q043ghx5","_id":"cjbiug0j2002wvwv4qhukngjy"},{"post_id":"cjbiug0ic000hvwv40xca1zsm","tag_id":"cjbiug0j1002qvwv4gwlvtxd7","_id":"cjbiug0j2002yvwv4uk5ameca"},{"post_id":"cjbiug0ie000jvwv4xz4eiuf4","tag_id":"cjbiug0j0002ivwv448hmtrl3","_id":"cjbiug0j30033vwv4bdamingm"},{"post_id":"cjbiug0ie000jvwv4xz4eiuf4","tag_id":"cjbiug0j2002uvwv4nzy9innk","_id":"cjbiug0j40034vwv4d9yucj3o"},{"post_id":"cjbiug0ie000jvwv4xz4eiuf4","tag_id":"cjbiug0j2002xvwv4tg766t5b","_id":"cjbiug0j40036vwv4qiz8x8by"},{"post_id":"cjbiug0ie000jvwv4xz4eiuf4","tag_id":"cjbiug0j2002zvwv43oxq1k28","_id":"cjbiug0j40037vwv4uvrllpah"},{"post_id":"cjbiug0ie000jvwv4xz4eiuf4","tag_id":"cjbiug0j30030vwv431gn8n2q","_id":"cjbiug0j50039vwv44vlmgz1f"},{"post_id":"cjbiug0ie000jvwv4xz4eiuf4","tag_id":"cjbiug0j30031vwv4dcjooibu","_id":"cjbiug0j5003avwv4jlhtjw6b"},{"post_id":"cjbiug0if000nvwv4be3tf6v1","tag_id":"cjbiug0j0002ivwv448hmtrl3","_id":"cjbiug0j5003cvwv4jop8bn3i"},{"post_id":"cjbiug0if000nvwv4be3tf6v1","tag_id":"cjbiug0j40035vwv4jqf157gm","_id":"cjbiug0j5003dvwv4gpikgcyi"},{"post_id":"cjbiug0if000nvwv4be3tf6v1","tag_id":"cjbiug0j50038vwv4inrte2fw","_id":"cjbiug0j6003fvwv4fnlg2v3j"},{"post_id":"cjbiug0ig000pvwv4r98hdowi","tag_id":"cjbiug0j0002ivwv448hmtrl3","_id":"cjbiug0j7003ivwv4fck3b0iz"},{"post_id":"cjbiug0ig000pvwv4r98hdowi","tag_id":"cjbiug0j50038vwv4inrte2fw","_id":"cjbiug0j7003jvwv4ucd6efrd"},{"post_id":"cjbiug0ig000pvwv4r98hdowi","tag_id":"cjbiug0j6003gvwv4oddhlf68","_id":"cjbiug0j7003lvwv4su4r3n3b"},{"post_id":"cjbiug0ij000vvwv4032saw3i","tag_id":"cjbiug0it001uvwv4w02jnkt0","_id":"cjbiug0j8003pvwv4x4nsltwc"},{"post_id":"cjbiug0ij000vvwv4032saw3i","tag_id":"cjbiug0j7003kvwv4bkrqtox3","_id":"cjbiug0j8003qvwv4axqhem7s"},{"post_id":"cjbiug0ij000vvwv4032saw3i","tag_id":"cjbiug0iv001yvwv4xblgvuk8","_id":"cjbiug0j9003svwv4q8fw99ov"},{"post_id":"cjbiug0ij000vvwv4032saw3i","tag_id":"cjbiug0j8003nvwv43nvus9bd","_id":"cjbiug0j9003tvwv4vzfp69u1"},{"post_id":"cjbiug0il000zvwv477im0wrj","tag_id":"cjbiug0j8003ovwv4j7xu0jvj","_id":"cjbiug0ja003xvwv4i2zyoblx"},{"post_id":"cjbiug0il000zvwv477im0wrj","tag_id":"cjbiug0j8003rvwv41op470l9","_id":"cjbiug0ja003yvwv4yosgxb46"},{"post_id":"cjbiug0il000zvwv477im0wrj","tag_id":"cjbiug0j9003uvwv4idosjz9h","_id":"cjbiug0ja003zvwv4nn67zmhq"},{"post_id":"cjbiug0il000zvwv477im0wrj","tag_id":"cjbiug0j9003vvwv478d90gt7","_id":"cjbiug0ja0040vwv44qp1k1bk"},{"post_id":"cjbiug0il000zvwv477im0wrj","tag_id":"cjbiug0j9003wvwv4mex5hx06","_id":"cjbiug0ja0041vwv47jryjy1r"}],"Tag":[{"name":"blog","_id":"cjbiug0i40005vwv495m5jje6"},{"name":"hexo","_id":"cjbiug0i8000bvwv4rrat9ha3"},{"name":"ubuntu","_id":"cjbiug0ic000gvwv48hzaqrb6"},{"name":"migrate","_id":"cjbiug0if000mvwv4syk720ut"},{"name":"database","_id":"cjbiug0ih000svwv4qh6yw4tp"},{"name":"Postgres","_id":"cjbiug0il0010vwv4isv8uqzy"},{"name":"install","_id":"cjbiug0in0015vwv4twpqjmdb"},{"name":"setup","_id":"cjbiug0io0019vwv4vkn97osd"},{"name":"AWS","_id":"cjbiug0ip001cvwv4viccso2k"},{"name":"Git","_id":"cjbiug0iq001fvwv40j8jf4gl"},{"name":"学习笔记","_id":"cjbiug0ir001kvwv4ytdnanqt"},{"name":"AngularJS","_id":"cjbiug0is001ovwv4c3rben5k"},{"name":"notes","_id":"cjbiug0it001svwv4lwra1o8e"},{"name":"Hexo","_id":"cjbiug0it001uvwv4w02jnkt0"},{"name":"Next","_id":"cjbiug0iu001xvwv4h4znr8u0"},{"name":"博客","_id":"cjbiug0iv001yvwv4xblgvuk8"},{"name":"主题优化","_id":"cjbiug0iv001zvwv465y3us9o"},{"name":"评论","_id":"cjbiug0iw0020vwv4la1nxxvw"},{"name":"Gitment","_id":"cjbiug0iw0021vwv4wzdrwfri"},{"name":"github","_id":"cjbiug0iw0022vwv4i2o6xsvp"},{"name":"git","_id":"cjbiug0ix0025vwv421f1tsuh"},{"name":"Linux","_id":"cjbiug0j0002ivwv448hmtrl3"},{"name":"SSH","_id":"cjbiug0j0002lvwv48hbon3ln"},{"name":"SCP","_id":"cjbiug0j0002ovwv4czp6btja"},{"name":"password","_id":"cjbiug0j1002pvwv4q043ghx5"},{"name":"server","_id":"cjbiug0j1002qvwv4gwlvtxd7"},{"name":"sh","_id":"cjbiug0j2002uvwv4nzy9innk"},{"name":"script","_id":"cjbiug0j2002xvwv4tg766t5b"},{"name":"template","_id":"cjbiug0j2002zvwv43oxq1k28"},{"name":"menu","_id":"cjbiug0j30030vwv431gn8n2q"},{"name":"center","_id":"cjbiug0j30031vwv4dcjooibu"},{"name":"vi","_id":"cjbiug0j40035vwv4jqf157gm"},{"name":"command","_id":"cjbiug0j50038vwv4inrte2fw"},{"name":"shell","_id":"cjbiug0j6003gvwv4oddhlf68"},{"name":"GitHub Pages","_id":"cjbiug0j7003kvwv4bkrqtox3"},{"name":"next","_id":"cjbiug0j8003nvwv43nvus9bd"},{"name":"Spring","_id":"cjbiug0j8003ovwv4j7xu0jvj"},{"name":"Spring Boot","_id":"cjbiug0j8003rvwv41op470l9"},{"name":"beginner","_id":"cjbiug0j9003uvwv4idosjz9h"},{"name":"Maven","_id":"cjbiug0j9003vvwv478d90gt7"},{"name":"Rest","_id":"cjbiug0j9003wvwv4mex5hx06"}]}}